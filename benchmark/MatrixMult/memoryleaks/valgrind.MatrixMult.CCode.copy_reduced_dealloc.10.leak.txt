==7767== Memcheck, a memory error detector
==7767== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==7767== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==7767== Command: ./MatrixMult.out 10
==7767== Parent PID: 6768
==7767== 
==7767== Invalid read of size 8
==7767==    at 0x401144: free2DArray (Util.c:10)
==7767==    by 0x401117: free_Matrix (MatrixMult.c:14)
==7767==    by 0x401117: main (MatrixMult.c:642)
==7767==  Address 0x51fcf00 is 0 bytes inside a block of size 80 free'd
==7767==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7767==    by 0x40115E: free2DArray (Util.c:13)
==7767==    by 0x40110C: main (MatrixMult.c:639)
==7767== 
==7767== Invalid free() / delete / delete[] / realloc()
==7767==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7767==    by 0x40114D: free2DArray (Util.c:10)
==7767==    by 0x401117: free_Matrix (MatrixMult.c:14)
==7767==    by 0x401117: main (MatrixMult.c:642)
==7767==  Address 0x51fcf90 is 0 bytes inside a block of size 80 free'd
==7767==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7767==    by 0x40114D: free2DArray (Util.c:10)
==7767==    by 0x40110C: main (MatrixMult.c:639)
==7767== 
==7767== Invalid free() / delete / delete[] / realloc()
==7767==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7767==    by 0x40115E: free2DArray (Util.c:13)
==7767==    by 0x401117: free_Matrix (MatrixMult.c:14)
==7767==    by 0x401117: main (MatrixMult.c:642)
==7767==  Address 0x51fcf00 is 0 bytes inside a block of size 80 free'd
==7767==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7767==    by 0x40115E: free2DArray (Util.c:13)
==7767==    by 0x40110C: main (MatrixMult.c:639)
==7767== 
==7767== 
==7767== HEAP SUMMARY:
==7767==     in use at exit: 32 bytes in 2 blocks
==7767==   total heap usage: 39 allocs, 48 frees, 3,224 bytes allocated
==7767== 
==7767== LEAK SUMMARY:
==7767==    definitely lost: 8 bytes in 1 blocks
==7767==    indirectly lost: 24 bytes in 1 blocks
==7767==      possibly lost: 0 bytes in 0 blocks
==7767==    still reachable: 0 bytes in 0 blocks
==7767==         suppressed: 0 bytes in 0 blocks
==7767== Rerun with --leak-check=full to see details of leaked memory
==7767== 
==7767== For counts of detected and suppressed errors, rerun with: -v
==7767== ERROR SUMMARY: 21 errors from 3 contexts (suppressed: 0 from 0)
