==3698== Memcheck, a memory error detector
==3698== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3698== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==3698== Command: ./TicTacToe.out 10000000
==3698== Parent PID: 2572
==3698== 
--3698-- core    : 3527413760/3527413760  max/curr mmap'd, 7/0 unsplit/split sb unmmap'd,  3500170952/3500170952 max/curr,      101114/4311748952 totalloc-blocks/bytes,      100462 searches 8 rzB
--3698-- dinfo   : 20713472/12517376  max/curr mmap'd, 4/2 unsplit/split sb unmmap'd,  19376880/11045344 max/curr,       84667/  40450064 totalloc-blocks/bytes,       84766 searches 8 rzB
--3698-- client  : 12125732864/12125732864  max/curr mmap'd, 0/0 unsplit/split sb unmmap'd,  6735064544/6735064544 max/curr,    84188307/6735064544 totalloc-blocks/bytes,    84185416 searches 24 rzB
--3698-- demangle:        0/       0  max/curr mmap'd, 0/0 unsplit/split sb unmmap'd,         0/       0 max/curr,           0/         0 totalloc-blocks/bytes,           0 searches 8 rzB
--3698-- ttaux   :    65536/   65536  max/curr mmap'd, 0/0 unsplit/split sb unmmap'd,     50464/   35440 max/curr,         289/     91584 totalloc-blocks/bytes,         288 searches 8 rzB
==3698== 
==3698==     Valgrind's memory management: out of memory:
==3698==        memcheck:allocate new SecMap's request for 16384 bytes failed.
==3698==        18766581760 bytes have already been allocated.
==3698==     Valgrind cannot continue.  Sorry.
==3698== 
==3698==     There are several possible reasons for this.
==3698==     - You have some kind of memory limit in place.  Look at the
==3698==       output of 'ulimit -a'.  Is there a limit on the size of
==3698==       virtual memory or address space?
==3698==     - You have run out of swap space.
==3698==     - Valgrind has a bug.  If you think this is the case or you are
==3698==     not sure, please let us know and we'll try to fix it.
==3698==     Please note that programs can take substantially more memory than
==3698==     normal when running under Valgrind tools, eg. up to twice or
==3698==     more, depending on the tool.  On a 64-bit machine, Valgrind
==3698==     should be able to make use of up 32GB memory.  On a 32-bit
==3698==     machine, Valgrind should be able to use all the memory available
==3698==     to a single process, up to 4GB if that's how you have your
==3698==     kernel configured.  Most 32-bit Linux setups allow a maximum of
==3698==     3GB per process.
==3698== 
==3698==     Whatever the reason, Valgrind cannot continue.  Sorry.
