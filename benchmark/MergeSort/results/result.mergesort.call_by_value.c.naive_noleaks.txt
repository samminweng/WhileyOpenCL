Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:16216042	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:3340714	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:2781697	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:3164582	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:2582477	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:2279295	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:2945299	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:2732876	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:3908477	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10
10
Parameter:10	ExecutionTime:4357469	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:4814654	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:5642634	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:6452449	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:6897575	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:7415096	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:6104994	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:5545935	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:5722007	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:5845469	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100
100
Parameter:100	ExecutionTime:6251472	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6994465	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:7096086	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:7363236	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:7095760	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6976188	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6879612	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6891243	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:7421883	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6822599	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000
1000
Parameter:1000	ExecutionTime:7016699	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:19212836	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:12852629	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:10540403	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:12029384	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:10044700	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:7220330	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:9375137	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:7134843	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:8812809	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000
10000
Parameter:10000	ExecutionTime:10624536	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:54617083	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:58341152	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:49084218	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:49147216	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:49531084	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:49444104	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:55975118	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:56452293	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:54447352	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000
100000
Parameter:100000	ExecutionTime:53608263	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:490138768	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:494357056	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:490210746	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:490162187	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:489454471	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:490309882	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:482475253	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:490718574	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:483598629	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:491739649	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5102174890	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5086650420	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5089476220	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5089148376	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5102994771	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5103170072	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5093401419	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5091427617	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5091153677	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:5098245193	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53876789472	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53792988516	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53866148923	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:54189543818	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53749275154	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53806652234	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53824210346	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53986146688	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53856077610	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:53852404802	nanoseconds.
Beginning the benchmarks of naive mergesort_call_by_value C program method on array size = 200000000
processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 0
cpu cores	: 4
apicid		: 0
initial apicid	: 0
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 1
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 1
cpu cores	: 4
apicid		: 2
initial apicid	: 2
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 2
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 2
cpu cores	: 4
apicid		: 4
initial apicid	: 4
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 3
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 2700.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 3
cpu cores	: 4
apicid		: 6
initial apicid	: 6
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 4
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 0
cpu cores	: 4
apicid		: 1
initial apicid	: 1
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 5
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 1
cpu cores	: 4
apicid		: 3
initial apicid	: 3
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 6
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 2
cpu cores	: 4
apicid		: 5
initial apicid	: 5
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 7
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 3401.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 3
cpu cores	: 4
apicid		: 7
initial apicid	: 7
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

