Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:4264721	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:3398253	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:5785667	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:5813579	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:5361060	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:6465055	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:6382751	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:6434922	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:6765843	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10
10
Parameter:10	ExecutionTime:5984162	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:5735039	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:6418338	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:6299449	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:5567068	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:5863018	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:6444972	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:5536711	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:6224706	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:5777258	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100
100
Parameter:100	ExecutionTime:5030017	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6809904	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5729517	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5741570	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5339781	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5911162	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:6110756	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5924853	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5565364	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5556585	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000
1000
Parameter:1000	ExecutionTime:5611126	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:6847013	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:8124669	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:7468252	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:7109910	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:5799581	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:6094726	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:6558753	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:6669150	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:6948886	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000
10000
Parameter:10000	ExecutionTime:6992266	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:16492454	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:10844103	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:8914655	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:9381874	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:10512823	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:10143166	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:9560920	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:9473205	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:9362598	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000
100000
Parameter:100000	ExecutionTime:9325826	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:35686532	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:33039970	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:33842520	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:32859553	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:31874435	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:32556108	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:33561155	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:31315314	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:32478092	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000
1000000
Parameter:1000000	ExecutionTime:30824106	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:224380515	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:226781046	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:225348686	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:219115956	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:219136082	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:218197780	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:218648192	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:225863004	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:222426011	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 10000000
10000000
Parameter:10000000	ExecutionTime:224157538	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2134612799	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2127955106	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2133016151	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2135219820	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2139018617	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2134245735	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2135642176	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2137029816	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2137625097	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 100000000
100000000
Parameter:100000000	ExecutionTime:2127872790	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3569622240	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3574411007	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3560665675	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3560832965	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3559729358	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3563658129	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3575427944	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3572682072	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3562630198	nanoseconds.
Beginning the benchmarks of naive reverse_call_by_value CCode program method on array size = 1000000000
fail to malloc at clone function in Util.c
Parameter:1000000000	ExecutionTime:3572965552	nanoseconds.
processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 0
cpu cores	: 4
apicid		: 0
initial apicid	: 0
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 1
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 1
cpu cores	: 4
apicid		: 2
initial apicid	: 2
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 2
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 3401.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 2
cpu cores	: 4
apicid		: 4
initial apicid	: 4
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 3
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 3
cpu cores	: 4
apicid		: 6
initial apicid	: 6
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 4
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 0
cpu cores	: 4
apicid		: 1
initial apicid	: 1
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 5
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 1
cpu cores	: 4
apicid		: 3
initial apicid	: 3
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 6
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 800.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 2
cpu cores	: 4
apicid		: 5
initial apicid	: 5
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 7
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 1000.000
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 3
cpu cores	: 4
apicid		: 7
initial apicid	: 7
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6784.44
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

