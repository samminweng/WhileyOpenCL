=====================================================================
Introduction
======================================================================

The Whiley programming language employs the extended static checking
to eliminate the errors at the compile time, and compiles the
high-level Whiley program into different kinds of implementations.
However, the C implementations that the Whiley compiler generates are
currently quite inefficient, due to always using unbounded integers,
unbounded data structures with frequent copying, etc. This project
aims to use the program analysis techniques to generate efficient
parallel implementations in C and OpenCL and to gain the speed-up
across heterogeneous platforms.


======================================================================
Installation
======================================================================

1. The Whiley Intermediate Language Interpreter (WyIL Interpreter)
----------------------------------------------------------------------
To install the Whiley Eclipse plugin start Eclipse and select "Install
New Software" (normally found under "Help").  Then, add
http://whiley.org/eclipse as a "software site", afterwhich you should
find the "Whiley Eclipse Plugin" becomes an option to install.  At
this point, "select all" and follow the instructions to install the
plugin.

For more info on Wyclipse, see http://whiley.org/tools/wyclipse/


% cd examples
% java -jar wyjc-all-vX.Y.Z.jar -bp wyjc-all-vX.Y.Z.jar hello-world.whiley

(here, vX.Y.Z is the version number of the distribution)

Then, to run the program you would do this:

% java -cp "wyjc-all-vX.Y.Z.jar;." hello-world
Hello World

(note: under Mac OS and UNIX you will want to replace the ';' with a ':')

3. Whiley Development Kit (WDK)
----------------------------------------------------------------------
To install the Whiley Development Kit, first download it from
http://whiley.org/downloads.  Then, unpack the tarball into an
appropriate directory (as you've probably already done).  You then
need to make sure that PATH environment variable points to the bin/
directory, where several scripts are provided for running Whiley.
(don't worry if you don't know what the PATH is, as you can instead
run the jar directly --- see below).

With the PATH setup correctly, you should be able to run the wyjc
command to compile Whiley programs as follows:

% cd examples
% wyjc hello-world.whiley

At this point, you can run the program using the whiley command:

% wyj hello-world
Hello World

(note: the wyj command is just a wrapper for java -cp lib/wyrt-vX.Y.Z.jar).

NOTE: if you're running on a Windows system without cygwin, or you're
having trouble getting the wyjc scripts to work, then a useful
alternative is to run the jar file directly.  You can do this as
follows:

% cd examples
% java -jar ../lib/wyjc-vX.Y.Z.jar -bp ../lib/wyrt-vX.Y.Z.jar hello-world.whiley

(here, vX.Y.Z is the version number of the distribution)

Then, to run the program you would do this:

% java -cp "../lib/wyrt-vX.Y.Z.jar;." hello-world
Hello World

(note: under Mac OS and UNIX you will want to replace the ';' with a ':')


