digraph "Scop Graph for 'mat_add' function" {
	label="Scop Graph for 'mat_add' function";

	Node0x8f0cad0 [shape=record,label="{entry:\l  br label %entry.split, !dbg !42\l}"];
	Node0x8f0cad0 -> Node0x8f0caf0;
	Node0x8f0caf0 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13, metadata\l... !43), !dbg !42\l  br label %for.cond1.preheader, !dbg !44\l}"];
	Node0x8f0caf0 -> Node0x8e69a70;
	Node0x8e69a70 [shape=record,label="{for.cond1.preheader:                              \l  %indvars.iv30 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next31,\l... %for.inc14 ]\l  br label %for.body3, !dbg !48\l}"];
	Node0x8e69a70 -> Node0x8f0cb90;
	Node0x8f0cb90 [shape=record,label="{for.body3:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next,\l... %for.body3 ]\l  %arrayidx5 = getelementptr inbounds [10240 x [10240 x i64]], [10240 x [10240\l... x i64]]* @A, i64 0, i64 %indvars.iv30, i64 %indvars.iv, !dbg !53\l  %0 = load i64, i64* %arrayidx5, align 8, !dbg !53, !tbaa !55\l  %arrayidx9 = getelementptr inbounds [10240 x [10240 x i64]], [10240 x [10240\l... x i64]]* @B, i64 0, i64 %indvars.iv30, i64 %indvars.iv, !dbg !59\l  %1 = load i64, i64* %arrayidx9, align 8, !dbg !59, !tbaa !55\l  %add = add nsw i64 %1, %0, !dbg !60\l  %arrayidx13 = getelementptr inbounds [10240 x [10240 x i64]], [10240 x\l... [10240 x i64]]* @C, i64 0, i64 %indvars.iv30, i64 %indvars.iv, !dbg !61\l  store i64 %add, i64* %arrayidx13, align 8, !dbg !62, !tbaa !55\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !48\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !14, metadata\l... !43), !dbg !63\l  %exitcond = icmp ne i64 %indvars.iv.next, 10240, !dbg !48\l  br i1 %exitcond, label %for.body3, label %for.inc14, !dbg !48\l}"];
	Node0x8f0cb90 -> Node0x8f0cb90[constraint=false];
	Node0x8f0cb90 -> Node0x8f34450;
	Node0x8f34450 [shape=record,label="{for.inc14:                                        \l  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !44\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !13, metadata\l... !43), !dbg !42\l  %exitcond32 = icmp ne i64 %indvars.iv.next31, 10240, !dbg !44\l  br i1 %exitcond32, label %for.cond1.preheader, label %for.end16, !dbg !44\l}"];
	Node0x8f34450 -> Node0x8e69a70[constraint=false];
	Node0x8f34450 -> Node0x8f344b0;
	Node0x8f344b0 [shape=record,label="{for.end16:                                        \l  ret void, !dbg !64\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x8f06ed0 {
          label = "MatrixAdd.c:20-27
";
          style = solid;
          color = 1
          subgraph cluster_0x8e5ea20 {
            label = "MatrixAdd.c:20-23
";
            style = filled;
            color = 3            subgraph cluster_0x8e62990 {
              label = "MatrixAdd.c:20-23
";
              style = solid;
              color = 5
              Node0x8f0cb90;
            }
            Node0x8e69a70;
            Node0x8f34450;
          }
          Node0x8f0cad0;
          Node0x8f0caf0;
          Node0x8f344b0;
        }
}
