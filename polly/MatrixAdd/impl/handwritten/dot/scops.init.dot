digraph "Scop Graph for 'init' function" {
	label="Scop Graph for 'init' function";

	Node0xa0a33d0 [shape=record,label="{entry:\l  %t = alloca i64, align 8\l  %R = alloca [10240 x [10240 x i32]], align 16\l  br label %entry.split, !dbg !47\l}"];
	Node0xa0a33d0 -> Node0xa170950;
	Node0xa170950 [shape=record,label="{entry.split:                                      \l  %0 = bitcast i64* %t to i8*, !dbg !47\l  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !47\l  %1 = bitcast [10240 x [10240 x i32]]* %R to i8*, !dbg !48\l  call void @llvm.lifetime.start(i64 419430400, i8* %1) #4, !dbg !48\l  tail call void @llvm.dbg.declare(metadata [10240 x [10240 x i32]]* %R,\l... metadata !22, metadata !49), !dbg !50\l  tail call void @llvm.dbg.value(metadata i64* %t, i64 0, metadata !16,\l... metadata !51), !dbg !52\l  %call = call i64 @time(i64* nonnull %t) #4, !dbg !53\l  %conv = trunc i64 %call to i32, !dbg !54\l  call void @srand(i32 %conv) #4, !dbg !55\l  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !14, metadata\l... !49), !dbg !57\l  br label %for.cond2.preheader, !dbg !58\l}"];
	Node0xa170950 -> Node0xa0a00e0;
	Node0xa0a00e0 [shape=record,label="{for.cond2.preheader:                              \l  %indvars.iv70 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next71, %for.inc9\l... ]\l  br label %for.body5, !dbg !62\l}"];
	Node0xa0a00e0 -> Node0xa0a2a00;
	Node0xa0a2a00 [shape=record,label="{for.body5:                                        \l  %indvars.iv67 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next68,\l... %for.body5 ]\l  %call6 = call i32 @rand() #4, !dbg !71\l  %rem = srem i32 %call6, 100, !dbg !73\l  %arrayidx8 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x [10240\l... x i32]]* %R, i64 0, i64 %indvars.iv70, i64 %indvars.iv67, !dbg !74\l  store i32 %rem, i32* %arrayidx8, align 4, !dbg !75, !tbaa !76\l  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1, !dbg !62\l  call void @llvm.dbg.value(metadata !2, i64 0, metadata !15, metadata !49),\l... !dbg !80\l  %exitcond69 = icmp ne i64 %indvars.iv.next68, 10240, !dbg !62\l  br i1 %exitcond69, label %for.body5, label %for.inc9, !dbg !62\l}"];
	Node0xa0a2a00 -> Node0xa0a2a00[constraint=false];
	Node0xa0a2a00 -> Node0xa14ba80;
	Node0xa14ba80 [shape=record,label="{for.inc9:                                         \l  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1, !dbg !58\l  call void @llvm.dbg.value(metadata !2, i64 0, metadata !14, metadata !49),\l... !dbg !57\l  %exitcond72 = icmp ne i64 %indvars.iv.next71, 10240, !dbg !58\l  br i1 %exitcond72, label %for.cond2.preheader, label %for.cond12.preheader,\l... !dbg !58\l}"];
	Node0xa14ba80 -> Node0xa0a00e0[constraint=false];
	Node0xa14ba80 -> Node0xa0a4c90;
	Node0xa0a4c90 [shape=record,label="{for.cond12.preheader:                             \l  br label %for.cond16.preheader, !dbg !67\l}"];
	Node0xa0a4c90 -> Node0xa0aceb0;
	Node0xa0aceb0 [shape=record,label="{for.cond16.preheader:                             \l  %indvars.iv64 = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next65,\l... %for.inc39 ]\l  br label %for.body19, !dbg !81\l}"];
	Node0xa0aceb0 -> Node0xa099dd0;
	Node0xa099dd0 [shape=record,label="{for.body19:                                       \l  %indvars.iv = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next,\l... %for.body19 ]\l  %arrayidx23 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x\l... [10240 x i32]]* %R, i64 0, i64 %indvars.iv64, i64 %indvars.iv, !dbg !86\l  %2 = load i32, i32* %arrayidx23, align 4, !dbg !86, !tbaa !76\l  %arrayidx27 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x\l... [10240 x i32]]* @A, i64 0, i64 %indvars.iv64, i64 %indvars.iv, !dbg !88\l  store i32 %2, i32* %arrayidx27, align 4, !dbg !89, !tbaa !76\l  %sub = sub nsw i32 100, %2, !dbg !90\l  %arrayidx35 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x\l... [10240 x i32]]* @B, i64 0, i64 %indvars.iv64, i64 %indvars.iv, !dbg !91\l  store i32 %sub, i32* %arrayidx35, align 4, !dbg !92, !tbaa !76\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !81\l  call void @llvm.dbg.value(metadata !2, i64 0, metadata !15, metadata !49),\l... !dbg !80\l  %exitcond = icmp ne i64 %indvars.iv.next, 10240, !dbg !81\l  br i1 %exitcond, label %for.body19, label %for.inc39, !dbg !81\l}"];
	Node0xa099dd0 -> Node0xa099dd0[constraint=false];
	Node0xa099dd0 -> Node0xa0a2990;
	Node0xa0a2990 [shape=record,label="{for.inc39:                                        \l  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1, !dbg !67\l  call void @llvm.dbg.value(metadata !2, i64 0, metadata !14, metadata !49),\l... !dbg !57\l  %exitcond66 = icmp ne i64 %indvars.iv.next65, 10240, !dbg !67\l  br i1 %exitcond66, label %for.cond16.preheader, label %for.end41, !dbg !67\l}"];
	Node0xa0a2990 -> Node0xa0aceb0[constraint=false];
	Node0xa0a2990 -> Node0xa09b550;
	Node0xa09b550 [shape=record,label="{for.end41:                                        \l  call void @llvm.lifetime.end(i64 419430400, i8* %1) #4, !dbg !93\l  call void @llvm.lifetime.end(i64 8, i8* %0) #4, !dbg !94\l  ret void, !dbg !93\l}"];
	colorscheme = "paired12"
        subgraph cluster_0xa0a0db0 {
          label = "MatrixAdd.c:14-33
";
          style = solid;
          color = 1
          subgraph cluster_0xa14ba00 {
            label = "MatrixAdd.c:14-23
Call instruction:   %call6 = call i32 @rand() #4, !dbg !71";
            style = solid;
            color = 6
            subgraph cluster_0xa0a2c90 {
              label = "MatrixAdd.c:15-23
Call instruction:   %call6 = call i32 @rand() #4, !dbg !71";
              style = solid;
              color = 5
              Node0xa0a2a00;
            }
            Node0xa0a00e0;
            Node0xa14ba80;
          }
          subgraph cluster_0xa091880 {
            label = "MatrixAdd.c:14-30
";
            style = filled;
            color = 3            subgraph cluster_0xa0a21a0 {
              label = "MatrixAdd.c:15-30
";
              style = solid;
              color = 5
              Node0xa099dd0;
            }
            Node0xa0aceb0;
            Node0xa0a2990;
          }
          Node0xa0a33d0;
          Node0xa170950;
          Node0xa0a4c90;
          Node0xa09b550;
        }
}
