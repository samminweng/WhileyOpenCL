digraph "Scop Graph for 'print_array' function" {
	label="Scop Graph for 'print_array' function";

	Node0xa18e670 [shape=record,label="{entry:\l  br label %entry.split, !dbg !47\l}"];
	Node0xa18e670 -> Node0xa0a7e30;
	Node0xa0a7e30 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !33, metadata\l... !48), !dbg !47\l  br label %for.cond1.preheader, !dbg !49\l}"];
	Node0xa0a7e30 -> Node0xa0a2730;
	Node0xa0a2730 [shape=record,label="{for.cond1.preheader:                              \l  %indvars.iv22 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next23, %for.end ]\l  br label %for.body3, !dbg !53\l}"];
	Node0xa0a2730 -> Node0xa095f50;
	Node0xa095f50 [shape=record,label="{for.body3:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next,\l... %for.inc ]\l  %arrayidx5 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x [10240\l... x i32]]* @C, i64 0, i64 %indvars.iv22, i64 %indvars.iv, !dbg !58\l  %0 = load i32, i32* %arrayidx5, align 4, !dbg !58, !tbaa !60\l  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !64\l  %1 = trunc i64 %indvars.iv to i32, !dbg !65\l  %rem = srem i32 %1, 80, !dbg !65\l  %cmp6 = icmp eq i32 %rem, 79, !dbg !67\l  br i1 %cmp6, label %if.then, label %for.inc, !dbg !68\l}"];
	Node0xa095f50 -> Node0xa09b810;
	Node0xa095f50 -> Node0xa0a2f10;
	Node0xa09b810 [shape=record,label="{if.then:                                          \l  %putchar19 = tail call i32 @putchar(i32 10) #5, !dbg !69\l  br label %for.inc, !dbg !69\l}"];
	Node0xa09b810 -> Node0xa0a2f10;
	Node0xa0a2f10 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !53\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !34, metadata\l... !48), !dbg !71\l  %exitcond = icmp ne i64 %indvars.iv.next, 10240, !dbg !53\l  br i1 %exitcond, label %for.body3, label %for.end, !dbg !53\l}"];
	Node0xa0a2f10 -> Node0xa095f50[constraint=false];
	Node0xa0a2f10 -> Node0xa11bd90;
	Node0xa11bd90 [shape=record,label="{for.end:                                          \l  %putchar = tail call i32 @putchar(i32 10) #5, !dbg !72\l  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !49\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !33, metadata\l... !48), !dbg !47\l  %exitcond24 = icmp ne i64 %indvars.iv.next23, 10240, !dbg !49\l  br i1 %exitcond24, label %for.cond1.preheader, label %for.end11, !dbg !49\l}"];
	Node0xa11bd90 -> Node0xa0a2730[constraint=false];
	Node0xa11bd90 -> Node0xa16c290;
	Node0xa16c290 [shape=record,label="{for.end11:                                        \l  ret void, !dbg !73\l}"];
	colorscheme = "paired12"
        subgraph cluster_0xa18e6f0 {
          label = "MatrixAdd.c:46-55
";
          style = solid;
          color = 1
          subgraph cluster_0xa0ad340 {
            label = "MatrixAdd.c:46-53
Call instruction:   %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !64";
            style = solid;
            color = 6
            subgraph cluster_0xa0a0db0 {
              label = "MatrixAdd.c:46-51
Call instruction:   %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !64";
              style = solid;
              color = 5
              subgraph cluster_0xa1851b0 {
                label = "MatrixAdd.c:50-51
Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0xa095f50;
                Node0xa09b810;
              }
              Node0xa0a2f10;
            }
            Node0xa0a2730;
            Node0xa11bd90;
          }
          Node0xa18e670;
          Node0xa0a7e30;
          Node0xa16c290;
        }
}
