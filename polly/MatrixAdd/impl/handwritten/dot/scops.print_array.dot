digraph "Scop Graph for 'print_array' function" {
	label="Scop Graph for 'print_array' function";

	Node0x9e20a30 [shape=record,label="{entry:\l  br label %entry.split, !dbg !52\l}"];
	Node0x9e20a30 -> Node0x9e14a40;
	Node0x9e14a40 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !33, metadata\l... !53), !dbg !52\l  br label %for.cond1.preheader, !dbg !54\l}"];
	Node0x9e14a40 -> Node0x9e1cb00;
	Node0x9e1cb00 [shape=record,label="{for.cond1.preheader:                              \l  %indvars.iv22 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next23, %for.end ]\l  br label %for.body3, !dbg !58\l}"];
	Node0x9e1cb00 -> Node0x9e1cbe0;
	Node0x9e1cbe0 [shape=record,label="{for.body3:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next,\l... %for.inc ]\l  %arrayidx5 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x [10240\l... x i32]]* @C, i64 0, i64 %indvars.iv22, i64 %indvars.iv, !dbg !63\l  %0 = load i32, i32* %arrayidx5, align 4, !dbg !63, !tbaa !65\l  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !69\l  %1 = trunc i64 %indvars.iv to i32, !dbg !70\l  %rem = srem i32 %1, 80, !dbg !70\l  %cmp6 = icmp eq i32 %rem, 79, !dbg !72\l  br i1 %cmp6, label %if.then, label %for.inc, !dbg !73\l}"];
	Node0x9e1cbe0 -> Node0x9ef5a20;
	Node0x9e1cbe0 -> Node0x9e20b20;
	Node0x9ef5a20 [shape=record,label="{if.then:                                          \l  %putchar19 = tail call i32 @putchar(i32 10) #5, !dbg !74\l  br label %for.inc, !dbg !74\l}"];
	Node0x9ef5a20 -> Node0x9e20b20;
	Node0x9e20b20 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !58\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !34, metadata\l... !53), !dbg !76\l  %exitcond = icmp ne i64 %indvars.iv.next, 10240, !dbg !58\l  br i1 %exitcond, label %for.body3, label %for.end, !dbg !58\l}"];
	Node0x9e20b20 -> Node0x9e1cbe0[constraint=false];
	Node0x9e20b20 -> Node0x9f07900;
	Node0x9f07900 [shape=record,label="{for.end:                                          \l  %putchar = tail call i32 @putchar(i32 10) #5, !dbg !77\l  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !54\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !33, metadata\l... !53), !dbg !52\l  %exitcond24 = icmp ne i64 %indvars.iv.next23, 10240, !dbg !54\l  br i1 %exitcond24, label %for.cond1.preheader, label %for.end11, !dbg !54\l}"];
	Node0x9f07900 -> Node0x9e1cb00[constraint=false];
	Node0x9f07900 -> Node0x9e18420;
	Node0x9e18420 [shape=record,label="{for.end11:                                        \l  ret void, !dbg !78\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x9e24400 {
          label = "MatrixAdd.c:34-43
";
          style = solid;
          color = 1
          subgraph cluster_0x9e149c0 {
            label = "MatrixAdd.c:34-41
Call instruction:   %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !69";
            style = solid;
            color = 6
            subgraph cluster_0x9e1cb60 {
              label = "MatrixAdd.c:34-39
Call instruction:   %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !69";
              style = solid;
              color = 5
              subgraph cluster_0x9e1ca80 {
                label = "MatrixAdd.c:38-39
Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x9e1cbe0;
                Node0x9ef5a20;
              }
              Node0x9e20b20;
            }
            Node0x9e1cb00;
            Node0x9f07900;
          }
          Node0x9e20a30;
          Node0x9e14a40;
          Node0x9e18420;
        }
}
