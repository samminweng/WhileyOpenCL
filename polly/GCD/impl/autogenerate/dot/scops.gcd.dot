digraph "Scop Graph for 'gcd' function" {
	label="Scop Graph for 'gcd' function";

	Node0xa81be10 [shape=record,label="{entry:\l  br label %entry.split, !dbg !110\l}"];
	Node0xa81be10 -> Node0xa8071f0;
	Node0xa8071f0 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i64 %a, i64 0, metadata !11,\l... metadata !111), !dbg !110\l  tail call void @llvm.dbg.value(metadata i64 %b, i64 0, metadata !12,\l... metadata !111), !dbg !112\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !13, metadata\l... !111), !dbg !113\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !14, metadata\l... !111), !dbg !114\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !15, metadata\l... !111), !dbg !115\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !16, metadata\l... !111), !dbg !116\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !17, metadata\l... !111), !dbg !117\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !18, metadata\l... !111), !dbg !118\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !14, metadata\l... !111), !dbg !114\l  %cmp = icmp eq i64 %a, 0, !dbg !119\l  br i1 %cmp, label %cleanup, label %while.cond.preheader, !dbg !121\l}"];
	Node0xa8071f0 -> Node0xa7fb380;
	Node0xa8071f0 -> Node0xa807c10;
	Node0xa7fb380 [shape=record,label="{cleanup:                                          \l  %retval.0 = phi i64 [ %b, %entry.split ], [ %a.addr.033.lcssa,\l... %cleanup.loopexit ]\l  ret i64 %retval.0, !dbg !142\l}"];
	Node0xa807c10 [shape=record,label="{while.cond.preheader:                             \l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !15, metadata\l... !111), !dbg !115\l  %cmp13234 = icmp sgt i64 %a, -1, !dbg !122\l  br i1 %cmp13234, label %blklab4.lr.ph.lr.ph, label\l... %while.cond.outer.if.end3_crit_edge, !dbg !126\l}"];
	Node0xa807c10 -> Node0xa840d40;
	Node0xa807c10 -> Node0xa817ad0;
	Node0xa840d40 [shape=record,label="{blklab4.lr.ph.lr.ph:                              \l  br label %blklab4.lr.ph, !dbg !126\l}"];
	Node0xa840d40 -> Node0xa818e20;
	Node0xa818e20 [shape=record,label="{blklab4.lr.ph:                                    \l  %a.addr.0.ph36 = phi i64 [ %a, %blklab4.lr.ph.lr.ph ], [\l... %a.addr.033.lcssa37, %blklab5 ]\l  %b.addr.0.ph35 = phi i64 [ %b, %blklab4.lr.ph.lr.ph ], [ %sub10, %blklab5 ]\l  br label %blklab4, !dbg !126\l}"];
	Node0xa818e20 -> Node0xa7f9ee0;
	Node0xa7f9ee0 [shape=record,label="{blklab4:                                          \l  %a.addr.033 = phi i64 [ %a.addr.0.ph36, %blklab4.lr.ph ], [ %sub, %if.end9 ]\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !16, metadata\l... !111), !dbg !116\l  %cmp4 = icmp eq i64 %b.addr.0.ph35, 0, !dbg !134\l  br i1 %cmp4, label %cleanup.loopexit, label %if.end6, !dbg !136\l}"];
	Node0xa7f9ee0 -> Node0xa7f5850;
	Node0xa7f9ee0 -> Node0xa82dd10;
	Node0xa7f5850 [shape=record,label="{cleanup.loopexit:                                 \l  %a.addr.033.lcssa = phi i64 [ %a.addr.033, %blklab4 ]\l  br label %cleanup, !dbg !142\l}"];
	Node0xa7f5850 -> Node0xa7fb380;
	Node0xa82dd10 [shape=record,label="{if.end6:                                          \l  %cmp7 = icmp sgt i64 %a.addr.033, %b.addr.0.ph35, !dbg !137\l  br i1 %cmp7, label %if.end9, label %blklab5, !dbg !139\l}"];
	Node0xa82dd10 -> Node0xa815ea0;
	Node0xa82dd10 -> Node0xa7f4700;
	Node0xa815ea0 [shape=record,label="{if.end9:                                          \l  %sub = sub nsw i64 %a.addr.033, %b.addr.0.ph35, !dbg !140\l  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !17,\l... metadata !111), !dbg !117\l  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !11,\l... metadata !111), !dbg !110\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !15, metadata\l... !111), !dbg !115\l  %cmp1 = icmp sgt i64 %sub, -1, !dbg !122\l  br i1 %cmp1, label %blklab4, label %while.cond.if.end3_crit_edge, !dbg !126\l}"];
	Node0xa815ea0 -> Node0xa7f9ee0;
	Node0xa815ea0 -> Node0xa842e70;
	Node0xa842e70 [shape=record,label="{while.cond.if.end3_crit_edge:                     \l  br label %if.end3, !dbg !126\l}"];
	Node0xa842e70 -> Node0xa8020d0;
	Node0xa8020d0 [shape=record,label="{if.end3:                                          \l  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !127,\l... !tbaa !128\l  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]*\l... @.str, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %0) #7, !dbg !132\l  tail call void @exit(i32 -1) #8, !dbg !133\l  unreachable, !dbg !133\l}"];
	Node0xa7f4700 [shape=record,label="{blklab5:                                          \l  %a.addr.033.lcssa37 = phi i64 [ %a.addr.033, %if.end6 ]\l  %sub10 = sub nsw i64 %b.addr.0.ph35, %a.addr.033.lcssa37, !dbg !141\l  tail call void @llvm.dbg.value(metadata i64 %sub10, i64 0, metadata !18,\l... metadata !111), !dbg !118\l  tail call void @llvm.dbg.value(metadata i64 %sub10, i64 0, metadata !12,\l... metadata !111), !dbg !112\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !15, metadata\l... !111), !dbg !115\l  %cmp132 = icmp sgt i64 %a.addr.033.lcssa37, -1, !dbg !122\l  br i1 %cmp132, label %blklab4.lr.ph, label\l... %while.cond.outer.while.cond.outer.if.end3_crit_edge_crit_edge, !dbg !126\l}"];
	Node0xa7f4700 -> Node0xa818e20;
	Node0xa7f4700 -> Node0xa81b0d0;
	Node0xa81b0d0 [shape=record,label="{while.cond.outer.while.cond.outer.if.end3_crit_edge_crit_edge: \l  br label %while.cond.outer.if.end3_crit_edge, !dbg !126\l}"];
	Node0xa81b0d0 -> Node0xa817ad0;
	Node0xa817ad0 [shape=record,label="{while.cond.outer.if.end3_crit_edge:               \l  br label %if.end3, !dbg !126\l}"];
	Node0xa817ad0 -> Node0xa8020d0;
	colorscheme = "paired12"
        subgraph cluster_0xa7f3270 {
          label = "GCD.c:2-60
";
          style = solid;
          color = 1
          Node0xa81be10;
          Node0xa8071f0;
          Node0xa7fb380;
          Node0xa807c10;
          Node0xa840d40;
          Node0xa818e20;
          Node0xa7f9ee0;
          Node0xa7f5850;
          Node0xa82dd10;
          Node0xa815ea0;
          Node0xa842e70;
          Node0xa8020d0;
          Node0xa7f4700;
          Node0xa81b0d0;
          Node0xa817ad0;
        }
}
