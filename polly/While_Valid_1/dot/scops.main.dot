digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x5eb15d0 [shape=record,label="{entry:\l  %_xs_size = alloca i64, align 8\l  %_7 = alloca i64, align 8\l  %_9_size = alloca i64, align 8\l  %_10_size = alloca i64, align 8\l  br label %entry.split\l}"];
	Node0x5eb15d0 -> Node0x5ea84c0;
	Node0x5ea84c0 [shape=record,label="{entry.split:                                      \l  store i64 0, i64* %_xs_size, align 8\l  store i64 0, i64* %_7, align 8\l  store i64 0, i64* %_9_size, align 8\l  store i64 0, i64* %_10_size, align 8\l  store i64 0, i64* %_xs_size, align 8\l  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1\l  %0 = load i8*, i8** %arrayidx, align 8\l  call void @readStringAsInteger(i8* %0, i64* %_7)\l  %1 = load i64, i64* %_7, align 8\l  %cmp.1 = icmp sgt i64 %1, 0\l  br i1 %cmp.1, label %for.body.lr.ph, label %blklab2\l}"];
	Node0x5ea84c0 -> Node0x5eb2f80;
	Node0x5ea84c0 -> Node0x5eba540;
	Node0x5eb2f80 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body\l}"];
	Node0x5eb2f80 -> Node0x5eb5fa0;
	Node0x5eb5fa0 [shape=record,label="{for.body:                                         \l  %_xs.03 = phi i64* [ null, %for.body.lr.ph ], [ %call2, %for.body ]\l  %_i.02 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]\l  store i64 1, i64* %_9_size, align 8\l  %call = call noalias i8* @malloc(i64 8) #4\l  %2 = bitcast i8* %call to i64*\l  store i64 %_i.02, i64* %2, align 8\l  %3 = load i64, i64* %_xs_size, align 8\l  %4 = load i64, i64* %_9_size, align 8\l  %add = add nsw i64 %4, %3\l  store i64 %add, i64* %_10_size, align 8\l  %call2 = call i64* @append(i64* %_xs.03, i64* %_xs_size, i64* %2, i64*\l... %_9_size, i64* %_10_size)\l  call void @free(i8* %call) #4\l  %5 = load i64, i64* %_10_size, align 8\l  store i64 %5, i64* %_xs_size, align 8\l  %inc = add nsw i64 %_i.02, 1\l  %6 = load i64, i64* %_7, align 8\l  %cmp = icmp slt i64 %inc, %6\l  br i1 %cmp, label %for.body, label %for.cond.blklab2_crit_edge\l}"];
	Node0x5eb5fa0 -> Node0x5eb5fa0[constraint=false];
	Node0x5eb5fa0 -> Node0x5ea2df0;
	Node0x5ea2df0 [shape=record,label="{for.cond.blklab2_crit_edge:                       \l  br label %blklab2\l}"];
	Node0x5ea2df0 -> Node0x5eba540;
	Node0x5eba540 [shape=record,label="{blklab2:                                          \l  %_xs.0.lcssa = phi i64* [ %call2, %for.cond.blklab2_crit_edge ], [ null,\l... %entry.split ]\l  %7 = load i64, i64* %_xs_size, align 8\l  %call3 = call i64* @reverse(i64* %_xs.0.lcssa, i64 %7)\l  call void @indirect_printf_array(i64* %call3, i64 %7)\l  ret i32 0\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x5ef9630 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x5ef9530 {
            label = "PHI node in exit BB";
            style = solid;
            color = 6
            subgraph cluster_0x5ef9a30 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0x5eb5fa0;
            }
            Node0x5ea84c0;
            Node0x5eb2f80;
            Node0x5ea2df0;
          }
          Node0x5eb15d0;
          Node0x5eba540;
        }
}
