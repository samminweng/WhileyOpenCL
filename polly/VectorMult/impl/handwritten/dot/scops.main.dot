digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x530cc50 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x530cc50 -> Node0x530cf10;
	Node0x530cf10 [shape=record,label="{entry.split:                                      \l  br label %for.body\l}"];
	Node0x530cf10 -> Node0x530cd70;
	Node0x530cd70 [shape=record,label="{for.body:                                         \l  %indvars.iv8 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next9, %for.inc16 ]\l  %arrayidx = getelementptr inbounds [65536 x i32], [65536 x i32]* @p, i64 0,\l... i64 %indvars.iv8\l  store i32 0, i32* %arrayidx, align 4\l  br label %for.body3\l}"];
	Node0x530cd70 -> Node0x531f900;
	Node0x531f900 [shape=record,label="{for.body3:                                        \l  %indvars.iv5 = phi i64 [ 0, %for.body ], [ %indvars.iv.next6, %for.body3 ]\l  %arrayidx5 = getelementptr inbounds [65536 x i32], [65536 x i32]* @u, i64 0,\l... i64 %indvars.iv5\l  store i32 1, i32* %arrayidx5, align 4\l  %arrayidx7 = getelementptr inbounds [65536 x i32], [65536 x i32]* @v, i64 0,\l... i64 %indvars.iv5\l  store i32 1, i32* %arrayidx7, align 4\l  %arrayidx9 = getelementptr inbounds [65536 x i32], [65536 x i32]* @p, i64 0,\l... i64 %indvars.iv8\l  %0 = load i32, i32* %arrayidx9, align 4\l  %arrayidx11 = getelementptr inbounds [65536 x i32], [65536 x i32]* @u, i64\l... 0, i64 %indvars.iv5\l  %1 = load i32, i32* %arrayidx11, align 4\l  %arrayidx13 = getelementptr inbounds [65536 x i32], [65536 x i32]* @v, i64\l... 0, i64 %indvars.iv5\l  %2 = load i32, i32* %arrayidx13, align 4\l  %mul = mul nsw i32 %2, %1\l  %add = add nsw i32 %mul, %0\l  %arrayidx15 = getelementptr inbounds [65536 x i32], [65536 x i32]* @p, i64\l... 0, i64 %indvars.iv8\l  store i32 %add, i32* %arrayidx15, align 4\l  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1\l  %exitcond7 = icmp ne i64 %indvars.iv.next6, 65536\l  br i1 %exitcond7, label %for.body3, label %for.inc16\l}"];
	Node0x531f900 -> Node0x531f900[constraint=false];
	Node0x531f900 -> Node0x531b1b0;
	Node0x531b1b0 [shape=record,label="{for.inc16:                                        \l  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1\l  %exitcond10 = icmp ne i64 %indvars.iv.next9, 65536\l  br i1 %exitcond10, label %for.body, label %for.cond19.preheader\l}"];
	Node0x531b1b0 -> Node0x530cd70[constraint=false];
	Node0x531b1b0 -> Node0x531d260;
	Node0x531d260 [shape=record,label="{for.cond19.preheader:                             \l  br label %for.inc25\l}"];
	Node0x531d260 -> Node0x531f890;
	Node0x531f890 [shape=record,label="{for.inc25:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond19.preheader ], [ %indvars.iv.next,\l... %for.inc25 ]\l  %sum.02 = phi i64 [ 0, %for.cond19.preheader ], [ %add24, %for.inc25 ]\l  %arrayidx23 = getelementptr inbounds [65536 x i32], [65536 x i32]* @p, i64\l... 0, i64 %indvars.iv\l  %3 = load i32, i32* %arrayidx23, align 4\l  %conv = sext i32 %3 to i64\l  %add24 = add nsw i64 %conv, %sum.02\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp ne i64 %indvars.iv.next, 65536\l  br i1 %exitcond, label %for.inc25, label %for.end27\l}"];
	Node0x531f890 -> Node0x531f890[constraint=false];
	Node0x531f890 -> Node0x531d100;
	Node0x531d100 [shape=record,label="{for.end27:                                        \l  %add24.lcssa = phi i64 [ %add24, %for.inc25 ]\l  %cmp28 = icmp eq i64 %add24.lcssa, 4294967296\l  br i1 %cmp28, label %if.end, label %if.then\l}"];
	Node0x531d100 -> Node0x531eaf0;
	Node0x531d100 -> Node0x531d200;
	Node0x531eaf0 [shape=record,label="{if.end:                                           \l  %call30 = tail call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x\l... i8], [1 x i8]* @.str.1, i64 0, i64 0)) #4\l  %call31 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x\l... i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 65536, i32 65536, i64\l... %add24.lcssa) #4\l  ret i32 0\l}"];
	Node0x531d200 [shape=record,label="{if.then:                                          \l  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x\l... i8], [34 x i8]* @.str, i64 0, i64 0)) #4\l  tail call void @exit(i32 -2) #5\l  unreachable\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x530cbd0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x531e5c0 {
            label = "";
            style = filled;
            color = 3            subgraph cluster_0x530dfb0 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0x530df30 {
                label = "";
                style = solid;
                color = 7
                Node0x531f900;
              }
              Node0x530cd70;
              Node0x531b1b0;
            }
            subgraph cluster_0x530ccf0 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x531f890;
            }
            Node0x531d260;
          }
          Node0x530cc50;
          Node0x530cf10;
          Node0x531d100;
          Node0x531eaf0;
          Node0x531d200;
        }
}
