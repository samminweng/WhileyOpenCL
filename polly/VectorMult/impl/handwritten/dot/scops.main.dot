digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x5003340 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x5003340 -> Node0x5001710;
	Node0x5001710 [shape=record,label="{entry.split:                                      \l  br label %for.cond1.preheader\l}"];
	Node0x5001710 -> Node0x50016a0;
	Node0x50016a0 [shape=record,label="{for.cond1.preheader:                              \l  %total.04 = phi i64 [ 0, %entry.split ], [ %add.lcssa, %for.inc10 ]\l  %r.03 = phi i64 [ 0, %entry.split ], [ %inc11, %for.inc10 ]\l  br label %for.body3\l}"];
	Node0x50016a0 -> Node0x5004bf0;
	Node0x5004bf0 [shape=record,label="{for.body3:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next,\l... %for.body3 ]\l  %total.12 = phi i64 [ %total.04, %for.cond1.preheader ], [ %add, %for.body3 ]\l  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* @u, i64 0, i64\l... %indvars.iv\l  store i32 1, i32* %arrayidx, align 4\l  %arrayidx5 = getelementptr inbounds [64 x i32], [64 x i32]* @v, i64 0, i64\l... %indvars.iv\l  store i32 1, i32* %arrayidx5, align 4\l  %arrayidx7 = getelementptr inbounds [64 x i32], [64 x i32]* @u, i64 0, i64\l... %indvars.iv\l  %0 = load i32, i32* %arrayidx7, align 4\l  %arrayidx9 = getelementptr inbounds [64 x i32], [64 x i32]* @v, i64 0, i64\l... %indvars.iv\l  %1 = load i32, i32* %arrayidx9, align 4\l  %mul = mul nsw i32 %1, %0\l  %conv = sext i32 %mul to i64\l  %add = add nsw i64 %conv, %total.12\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp ne i64 %indvars.iv.next, 64\l  br i1 %exitcond, label %for.body3, label %for.inc10\l}"];
	Node0x5004bf0 -> Node0x5004bf0[constraint=false];
	Node0x5004bf0 -> Node0x5006cb0;
	Node0x5006cb0 [shape=record,label="{for.inc10:                                        \l  %add.lcssa = phi i64 [ %add, %for.body3 ]\l  %inc11 = add nuw nsw i64 %r.03, 1\l  %exitcond5 = icmp ne i64 %inc11, 1073741824\l  br i1 %exitcond5, label %for.cond1.preheader, label %for.end12\l}"];
	Node0x5006cb0 -> Node0x50016a0[constraint=false];
	Node0x5006cb0 -> Node0x5006cd0;
	Node0x5006cd0 [shape=record,label="{for.end12:                                        \l  %add.lcssa.lcssa = phi i64 [ %add.lcssa, %for.inc10 ]\l  %cmp13 = icmp eq i64 %add.lcssa.lcssa, 68719476736\l  br i1 %cmp13, label %if.end, label %if.then\l}"];
	Node0x5006cd0 -> Node0x5006db0;
	Node0x5006cd0 -> Node0x5006dd0;
	Node0x5006db0 [shape=record,label="{if.end:                                           \l  %call15 = tail call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x\l... i8], [1 x i8]* @.str.1, i64 0, i64 0)) #4\l  %call16 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([100\l... x i8], [100 x i8]* @.str.2, i64 0, i64 0), i64 68719476736, i32 64, i64\l... %add.lcssa.lcssa) #4\l  ret i32 0\l}"];
	Node0x5006dd0 [shape=record,label="{if.then:                                          \l  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x\l... i8], [34 x i8]* @.str, i64 0, i64 0)) #4\l  tail call void @exit(i32 -2) #5\l  unreachable\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x4ff6420 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x4ff6660 {
            label = "";
            style = filled;
            color = 3            subgraph cluster_0x4ff67f0 {
              label = "";
              style = solid;
              color = 5
              Node0x5004bf0;
            }
            Node0x50016a0;
            Node0x5006cb0;
          }
          Node0x5003340;
          Node0x5001710;
          Node0x5006cd0;
          Node0x5006db0;
          Node0x5006dd0;
        }
}
