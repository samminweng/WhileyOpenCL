digraph "Scop Graph for 'append' function" {
	label="Scop Graph for 'append' function";

	Node0x8ff1ec0 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x8ff1ec0 -> Node0x8f82000;
	Node0x8f82000 [shape=record,label="{entry.split:                                      \l  %add = add nsw i64 %arr2_size, %arr1_size\l  %0 = bitcast i64* %arr1 to i8*\l  %mul = shl i64 %add, 3\l  %call = tail call i8* @realloc(i8* %0, i64 %mul) #5\l  %1 = bitcast i8* %call to i64*\l  %cmp = icmp eq i8* %call, null\l  br i1 %cmp, label %if.then, label %if.end\l}"];
	Node0x8f82000 -> Node0x8f8e790;
	Node0x8f82000 -> Node0x8f9abb0;
	Node0x8f8e790 [shape=record,label="{if.then:                                          \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([57 x i8], [57 x\l... i8]* @str.31, i64 0, i64 0))\l  tail call void @exit(i32 -2) #6\l  unreachable\l}"];
	Node0x8f9abb0 [shape=record,label="{if.end:                                           \l  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %arr1_size\l  %2 = bitcast i64* %arrayidx to i8*\l  %3 = bitcast i64* %arr2 to i8*\l  %mul2 = shl i64 %arr2_size, 3\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 %mul2, i32 8,\l... i1 false)\l  ret i64* %1\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x8fc9e40 {
          label = "";
          style = solid;
          color = 1
          Node0x8ff1ec0;
          Node0x8f82000;
          Node0x8f8e790;
          Node0x8f9abb0;
        }
}
