digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x8f983b0 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x8f983b0 -> Node0x8f683e0;
	Node0x8f683e0 [shape=record,label="{entry.split:                                      \l  %call = tail call i64** @convertArgsToIntArray(i32 %argc, i8** %args)\l  %0 = load i64*, i64** %call, align 8, !tbaa !1\l  %call1 = tail call i64 @parseStringToInt(i64* %0)\l  %cmp = icmp eq i64 %call1, 0\l  br i1 %cmp, label %blklab9, label %if.end\l}"];
	Node0x8f683e0 -> Node0x8f864c0;
	Node0x8f683e0 -> Node0x8fdb360;
	Node0x8f864c0 [shape=record,label="{blklab9:                                          \l  tail call void @exit(i32 0) #7\l  unreachable\l}"];
	Node0x8fdb360 [shape=record,label="{if.end:                                           \l  %add = add nsw i64 %call1, 1\l  %conv4 = trunc i64 %add to i32\l  %call5 = tail call i64* @gen1DArray(i32 0, i32 %conv4)\l  %call6 = tail call i64* @copy(i64* %call5, i64 %add)\l  %cmp7127 = icmp slt i64 %call1, 0\l  br i1 %cmp7127, label %blklab10, label %if.end10.lr.ph\l}"];
	Node0x8fdb360 -> Node0x8fa9fd0;
	Node0x8fdb360 -> Node0x8f7d360;
	Node0x8fa9fd0 [shape=record,label="{blklab10:                                         \l  %call15 = tail call i64* @copy(i64* %call6, i64 %add)\l  %call16 = tail call i64* @sortV1(i64* %call15, i64 %add, i64 0, i64 %add)\l  %call17 = tail call i64* @copy(i64* %call16, i64 %add)\l  %2 = load i64, i64* %call17, align 8, !tbaa !5\l  %cmp19 = icmp eq i64 %2, 0\l  br i1 %cmp19, label %blklab12, label %if.end22\l}"];
	Node0x8fa9fd0 -> Node0x8f88920;
	Node0x8fa9fd0 -> Node0x8e99930;
	Node0x8f88920 [shape=record,label="{blklab12:                                         \l  %arrayidx24 = getelementptr inbounds i64, i64* %call17, i64 %call1\l  %5 = load i64, i64* %arrayidx24, align 8, !tbaa !5\l  %cmp25 = icmp eq i64 %5, %call1\l  br i1 %cmp25, label %blklab13, label %if.end28\l}"];
	Node0x8f88920 -> Node0x8feca40;
	Node0x8f88920 -> Node0x8f7ee30;
	Node0x8feca40 [shape=record,label="{blklab13:                                         \l  %call30 = tail call noalias i8* @malloc(i64 304) #5\l  %8 = bitcast i8* %call30 to i64*\l  store i64 80, i64* %8, align 8, !tbaa !5\l  %arrayidx32 = getelementptr inbounds i8, i8* %call30, i64 8\l  %9 = bitcast i8* %arrayidx32 to i64*\l  store i64 97, i64* %9, align 8, !tbaa !5\l  %arrayidx33 = getelementptr inbounds i8, i8* %call30, i64 16\l  %10 = bitcast i8* %arrayidx33 to i64*\l  store i64 115, i64* %10, align 8, !tbaa !5\l  %arrayidx34 = getelementptr inbounds i8, i8* %call30, i64 24\l  %11 = bitcast i8* %arrayidx34 to i64*\l  store i64 115, i64* %11, align 8, !tbaa !5\l  %arrayidx35 = getelementptr inbounds i8, i8* %call30, i64 32\l  %12 = bitcast i8* %arrayidx35 to i64*\l  store i64 32, i64* %12, align 8, !tbaa !5\l  %arrayidx36 = getelementptr inbounds i8, i8* %call30, i64 40\l  %13 = bitcast i8* %arrayidx36 to i64*\l  store i64 77, i64* %13, align 8, !tbaa !5\l  %arrayidx37 = getelementptr inbounds i8, i8* %call30, i64 48\l  %14 = bitcast i8* %arrayidx37 to i64*\l  store i64 101, i64* %14, align 8, !tbaa !5\l  %arrayidx38 = getelementptr inbounds i8, i8* %call30, i64 56\l  %15 = bitcast i8* %arrayidx38 to i64*\l  store i64 114, i64* %15, align 8, !tbaa !5\l  %arrayidx39 = getelementptr inbounds i8, i8* %call30, i64 64\l  %16 = bitcast i8* %arrayidx39 to i64*\l  store i64 103, i64* %16, align 8, !tbaa !5\l  %arrayidx40 = getelementptr inbounds i8, i8* %call30, i64 72\l  %17 = bitcast i8* %arrayidx40 to i64*\l  store i64 101, i64* %17, align 8, !tbaa !5\l  %arrayidx41 = getelementptr inbounds i8, i8* %call30, i64 80\l  %18 = bitcast i8* %arrayidx41 to i64*\l  store i64 83, i64* %18, align 8, !tbaa !5\l  %arrayidx42 = getelementptr inbounds i8, i8* %call30, i64 88\l  %19 = bitcast i8* %arrayidx42 to i64*\l  store i64 111, i64* %19, align 8, !tbaa !5\l  %arrayidx43 = getelementptr inbounds i8, i8* %call30, i64 96\l  %20 = bitcast i8* %arrayidx43 to i64*\l  store i64 114, i64* %20, align 8, !tbaa !5\l  %arrayidx44 = getelementptr inbounds i8, i8* %call30, i64 104\l  %21 = bitcast i8* %arrayidx44 to i64*\l  store i64 116, i64* %21, align 8, !tbaa !5\l  %arrayidx45 = getelementptr inbounds i8, i8* %call30, i64 112\l  %22 = bitcast i8* %arrayidx45 to i64*\l  store i64 32, i64* %22, align 8, !tbaa !5\l  %arrayidx46 = getelementptr inbounds i8, i8* %call30, i64 120\l  %23 = bitcast i8* %arrayidx46 to i64*\l  store i64 116, i64* %23, align 8, !tbaa !5\l  %arrayidx47 = getelementptr inbounds i8, i8* %call30, i64 128\l  %24 = bitcast i8* %arrayidx47 to i64*\l  store i64 101, i64* %24, align 8, !tbaa !5\l  %arrayidx48 = getelementptr inbounds i8, i8* %call30, i64 136\l  %25 = bitcast i8* %arrayidx48 to i64*\l  store i64 115, i64* %25, align 8, !tbaa !5\l  %arrayidx49 = getelementptr inbounds i8, i8* %call30, i64 144\l  %26 = bitcast i8* %arrayidx49 to i64*\l  store i64 116, i64* %26, align 8, !tbaa !5\l  %arrayidx50 = getelementptr inbounds i8, i8* %call30, i64 152\l  %27 = bitcast i8* %arrayidx50 to i64*\l  store i64 32, i64* %27, align 8, !tbaa !5\l  %arrayidx51 = getelementptr inbounds i8, i8* %call30, i64 160\l  %28 = bitcast i8* %arrayidx51 to i64*\l  store i64 99, i64* %28, align 8, !tbaa !5\l  %arrayidx52 = getelementptr inbounds i8, i8* %call30, i64 168\l  %29 = bitcast i8* %arrayidx52 to i64*\l  store i64 97, i64* %29, align 8, !tbaa !5\l  %arrayidx53 = getelementptr inbounds i8, i8* %call30, i64 176\l  %30 = bitcast i8* %arrayidx53 to i64*\l  store i64 115, i64* %30, align 8, !tbaa !5\l  %arrayidx54 = getelementptr inbounds i8, i8* %call30, i64 184\l  %31 = bitcast i8* %arrayidx54 to i64*\l  store i64 101, i64* %31, align 8, !tbaa !5\l  %arrayidx55 = getelementptr inbounds i8, i8* %call30, i64 192\l  %32 = bitcast i8* %arrayidx55 to i64*\l  store i64 32, i64* %32, align 8, !tbaa !5\l  %arrayidx56 = getelementptr inbounds i8, i8* %call30, i64 200\l  %33 = bitcast i8* %arrayidx56 to i64*\l  store i64 119, i64* %33, align 8, !tbaa !5\l  %arrayidx57 = getelementptr inbounds i8, i8* %call30, i64 208\l  %34 = bitcast i8* %arrayidx57 to i64*\l  store i64 105, i64* %34, align 8, !tbaa !5\l  %arrayidx58 = getelementptr inbounds i8, i8* %call30, i64 216\l  %35 = bitcast i8* %arrayidx58 to i64*\l  store i64 116, i64* %35, align 8, !tbaa !5\l  %arrayidx59 = getelementptr inbounds i8, i8* %call30, i64 224\l  %36 = bitcast i8* %arrayidx59 to i64*\l  store i64 104, i64* %36, align 8, !tbaa !5\l  %arrayidx60 = getelementptr inbounds i8, i8* %call30, i64 232\l  %37 = bitcast i8* %arrayidx60 to i64*\l  store i64 32, i64* %37, align 8, !tbaa !5\l  %arrayidx61 = getelementptr inbounds i8, i8* %call30, i64 240\l  %38 = bitcast i8* %arrayidx61 to i64*\l  store i64 105, i64* %38, align 8, !tbaa !5\l  %arrayidx62 = getelementptr inbounds i8, i8* %call30, i64 248\l  %39 = bitcast i8* %arrayidx62 to i64*\l  store i64 110, i64* %39, align 8, !tbaa !5\l  %arrayidx63 = getelementptr inbounds i8, i8* %call30, i64 256\l  %40 = bitcast i8* %arrayidx63 to i64*\l  store i64 112, i64* %40, align 8, !tbaa !5\l  %arrayidx64 = getelementptr inbounds i8, i8* %call30, i64 264\l  %41 = bitcast i8* %arrayidx64 to i64*\l  store i64 117, i64* %41, align 8, !tbaa !5\l  %arrayidx65 = getelementptr inbounds i8, i8* %call30, i64 272\l  %42 = bitcast i8* %arrayidx65 to i64*\l  store i64 116, i64* %42, align 8, !tbaa !5\l  %arrayidx66 = getelementptr inbounds i8, i8* %call30, i64 280\l  %43 = bitcast i8* %arrayidx66 to i64*\l  store i64 32, i64* %43, align 8, !tbaa !5\l  %arrayidx67 = getelementptr inbounds i8, i8* %call30, i64 288\l  %44 = bitcast i8* %arrayidx67 to i64*\l  store i64 61, i64* %44, align 8, !tbaa !5\l  %arrayidx68 = getelementptr inbounds i8, i8* %call30, i64 296\l  %45 = bitcast i8* %arrayidx68 to i64*\l  store i64 32, i64* %45, align 8, !tbaa !5\l  tail call void @printf_s(i64* %8, i64 38)\l  %call69 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.21, i64 0, i64 0), i64 %call1)\l  br label %blklab9\l}"];
	Node0x8feca40 -> Node0x8f864c0;
	Node0x8f7ee30 [shape=record,label="{if.end28:                                         \l  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !1\l  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]*\l... @.str.20, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %6) #6\l  tail call void @exit(i32 -1) #7\l  unreachable\l}"];
	Node0x8e99930 [shape=record,label="{if.end22:                                         \l  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !1\l  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]*\l... @.str.20, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %3) #6\l  tail call void @exit(i32 -1) #7\l  unreachable\l}"];
	Node0x8f7d360 [shape=record,label="{if.end10.lr.ph:                                   \l  %1 = add i64 %call1, 1\l  br label %if.end10\l}"];
	Node0x8f7d360 -> Node0x8f9bcd0;
	Node0x8f9bcd0 [shape=record,label="{if.end10:                                         \l  %index.0128 = phi i64 [ 0, %if.end10.lr.ph ], [ %add13, %if.end10 ]\l  %sub11 = sub nsw i64 %call1, %index.0128\l  %arrayidx12 = getelementptr inbounds i64, i64* %call6, i64 %index.0128\l  store i64 %sub11, i64* %arrayidx12, align 8, !tbaa !5\l  %add13 = add nuw nsw i64 %index.0128, 1\l  %exitcond = icmp ne i64 %add13, %1\l  br i1 %exitcond, label %if.end10, label %while.body.blklab10_crit_edge\l}"];
	Node0x8f9bcd0 -> Node0x8f9bcd0[constraint=false];
	Node0x8f9bcd0 -> Node0x8f97580;
	Node0x8f97580 [shape=record,label="{while.body.blklab10_crit_edge:                    \l  br label %blklab10\l}"];
	Node0x8f97580 -> Node0x8fa9fd0;
	colorscheme = "paired12"
        subgraph cluster_0x8f68270 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x8f6ccd0 {
            label = "Call instruction:   %call5 = tail call i64* @gen1DArray(i32 0, i32 %conv4)";
            style = solid;
            color = 6
            subgraph cluster_0x8f682f0 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x8f9bcd0;
            }
            Node0x8fdb360;
            Node0x8f7d360;
            Node0x8f97580;
          }
          Node0x8f983b0;
          Node0x8f683e0;
          Node0x8f864c0;
          Node0x8fa9fd0;
          Node0x8f88920;
          Node0x8feca40;
          Node0x8f7ee30;
          Node0x8e99930;
        }
}
