digraph "Scop Graph for 'printf_s' function" {
	label="Scop Graph for 'printf_s' function";

	Node0x8f83dc0 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x8f83dc0 -> Node0x8f864c0;
	Node0x8f864c0 [shape=record,label="{entry.split:                                      \l  %cmp5 = icmp sgt i64 %input_size, 0\l  br i1 %cmp5, label %for.body.lr.ph, label %for.end\l}"];
	Node0x8f864c0 -> Node0x8fa9fd0;
	Node0x8f864c0 -> Node0x8fa7690;
	Node0x8fa9fd0 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body\l}"];
	Node0x8fa9fd0 -> Node0x8f8e070;
	Node0x8f8e070 [shape=record,label="{for.body:                                         \l  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]\l  %arrayidx = getelementptr inbounds i64, i64* %input, i64 %i.06\l  %0 = load i64, i64* %arrayidx, align 8, !tbaa !1\l  %conv = trunc i64 %0 to i32\l  %sext = shl i32 %conv, 24\l  %conv1 = ashr exact i32 %sext, 24\l  %putchar = tail call i32 @putchar(i32 %conv1) #5\l  %inc = add nuw nsw i64 %i.06, 1\l  %exitcond = icmp ne i64 %inc, %input_size\l  br i1 %exitcond, label %for.body, label %for.cond.for.end_crit_edge\l}"];
	Node0x8f8e070 -> Node0x8f8e070[constraint=false];
	Node0x8f8e070 -> Node0x8f94c70;
	Node0x8f94c70 [shape=record,label="{for.cond.for.end_crit_edge:                       \l  br label %for.end\l}"];
	Node0x8f94c70 -> Node0x8fa7690;
	Node0x8fa7690 [shape=record,label="{for.end:                                          \l  ret void\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x8ff1aa0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x8f7d310 {
            label = "Call instruction:   %putchar = tail call i32 @putchar(i32 %conv1) #5";
            style = solid;
            color = 6
            subgraph cluster_0x8f7d290 {
              label = "Call instruction:   %putchar = tail call i32 @putchar(i32 %conv1) #5";
              style = solid;
              color = 5
              Node0x8f8e070;
            }
            Node0x8f864c0;
            Node0x8fa9fd0;
            Node0x8f94c70;
          }
          Node0x8f83dc0;
          Node0x8fa7690;
        }
}
