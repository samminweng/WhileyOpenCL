digraph "Scop Graph for 'copy_array_POS' function" {
	label="Scop Graph for 'copy_array_POS' function";

	Node0xa5bead0 [shape=record,label="{entry:\l  br label %entry.split, !dbg !27\l}"];
	Node0xa5bead0 -> Node0xa6ac130;
	Node0xa6ac130 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata %struct.POS** %_POS, i64 0, metadata\l... !21, metadata !28), !dbg !27\l  tail call void @llvm.dbg.value(metadata i64 %_POS_size, i64 0, metadata !22,\l... metadata !28), !dbg !29\l  %mul = shl i64 %_POS_size, 3, !dbg !30\l  %call = tail call noalias i8* @malloc(i64 %mul) #7, !dbg !31\l  %0 = bitcast i8* %call to %struct.POS**, !dbg !33\l  tail call void @llvm.dbg.value(metadata %struct.POS** %0, i64 0, metadata\l... !23, metadata !28), !dbg !34\l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !24, metadata\l... !28), !dbg !35\l  %cmp12 = icmp sgt i64 %_POS_size, 0, !dbg !36\l  br i1 %cmp12, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !39\l}"];
	Node0xa6ac130 -> Node0xa5c4980;
	Node0xa6ac130 -> Node0xa5e9340;
	Node0xa5c4980 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body, !dbg !39\l}"];
	Node0xa5c4980 -> Node0xa5e5c00;
	Node0xa5e5c00 [shape=record,label="{for.body:                                         \l  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]\l  %arrayidx = getelementptr inbounds %struct.POS*, %struct.POS** %_POS, i64\l... %indvars.iv, !dbg !41\l  %1 = load %struct.POS*, %struct.POS** %arrayidx, align 8, !dbg !41, !tbaa !43\l  %call2 = tail call %struct.POS* @copy_POS(%struct.POS* %1), !dbg !47\l  %arrayidx4 = getelementptr inbounds %struct.POS*, %struct.POS** %0, i64\l... %indvars.iv, !dbg !48\l  store %struct.POS* %call2, %struct.POS** %arrayidx4, align 8, !dbg !49,\l... !tbaa !43\l  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !39\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !24, metadata\l... !28), !dbg !35\l  %cmp = icmp slt i64 %indvars.iv.next, %_POS_size, !dbg !36\l  br i1 %cmp, label %for.body, label %for.cond.for.cond.cleanup_crit_edge,\l... !dbg !39, !llvm.loop !50\l}"];
	Node0xa5e5c00 -> Node0xa5e5c00[constraint=false];
	Node0xa5e5c00 -> Node0xa5eaee0;
	Node0xa5eaee0 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge:              \l  br label %for.cond.cleanup, !dbg !39\l}"];
	Node0xa5eaee0 -> Node0xa5e9340;
	Node0xa5e9340 [shape=record,label="{for.cond.cleanup:                                 \l  ret %struct.POS** %0, !dbg !40\l}"];
	colorscheme = "paired12"
        subgraph cluster_0xa632e20 {
          label = "NQueens_original.c:8-13
";
          style = solid;
          color = 1
          subgraph cluster_0xa6114f0 {
            label = "NQueens_original.c:8-11
Call instruction:   %call = tail call noalias i8* @malloc(i64 %mul) #7, !dbg !31";
            style = solid;
            color = 6
            subgraph cluster_0xa60d840 {
              label = "NQueens_original.c:10-11
Call instruction:   %call2 = tail call %struct.POS* @copy_POS(%struct.POS* %1), !dbg !47";
              style = solid;
              color = 5
              Node0xa5e5c00;
            }
            Node0xa6ac130;
            Node0xa5c4980;
            Node0xa5eaee0;
          }
          Node0xa5bead0;
          Node0xa5e9340;
        }
}
