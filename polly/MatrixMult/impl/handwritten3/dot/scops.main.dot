digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x520f650 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x520f650 -> Node0x521b890;
	Node0x521b890 [shape=record,label="{entry.split:                                      \l  tail call void @init()\l  br label %for.body\l}"];
	Node0x521b890 -> Node0x520ef80;
	Node0x520ef80 [shape=record,label="{for.body:                                         \l  %indvars.iv3 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next4, %for.inc10 ]\l  %0 = trunc i64 %indvars.iv3 to i32\l  %call = tail call i32* @transpose(i32** bitcast ([2048 x [2048 x i32]]* @Y\l... to i32**), i32 %0)\l  br label %for.body3\l}"];
	Node0x520ef80 -> Node0x521b6e0;
	Node0x521b6e0 [shape=record,label="{for.body3:                                        \l  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body3 ]\l  %arraydecay = getelementptr inbounds [2048 x [2048 x i32]], [2048 x [2048 x\l... i32]]* @X, i64 0, i64 %indvars.iv, i64 0\l  %call7 = tail call i32 @dot(i32* %arraydecay, i32* %call)\l  %arrayidx9 = getelementptr inbounds [2048 x [2048 x i32]], [2048 x [2048 x\l... i32]]* @Z, i64 0, i64 %indvars.iv, i64 %indvars.iv3\l  store i32 %call7, i32* %arrayidx9, align 4\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp ne i64 %indvars.iv.next, 2048\l  br i1 %exitcond, label %for.body3, label %for.inc10\l}"];
	Node0x521b6e0 -> Node0x521b6e0[constraint=false];
	Node0x521b6e0 -> Node0x521f5c0;
	Node0x521f5c0 [shape=record,label="{for.inc10:                                        \l  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1\l  %exitcond5 = icmp ne i64 %indvars.iv.next4, 2048\l  br i1 %exitcond5, label %for.body, label %for.end12\l}"];
	Node0x521f5c0 -> Node0x520ef80[constraint=false];
	Node0x521f5c0 -> Node0x521f620;
	Node0x521f620 [shape=record,label="{for.end12:                                        \l  %1 = load i32, i32* getelementptr inbounds ([2048 x [2048 x i32]], [2048 x\l... [2048 x i32]]* @Z, i64 0, i64 2047, i64 2047), align 4\l  %call13 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x\l... i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 2048, i32 2048, i32 2047, i32\l... 2047, i32 %1) #3\l  ret i32 0\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x521b640 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x520ee60 {
            label = "Call instruction:   %call = tail call i32* @transpose(i32** bitcast ([2048 x [2048 x i32]]* @Y to i32**), i32 %0)";
            style = solid;
            color = 6
            subgraph cluster_0x520ede0 {
              label = "Call instruction:   %call7 = tail call i32 @dot(i32* %arraydecay, i32* %call)";
              style = solid;
              color = 5
              Node0x521b6e0;
            }
            Node0x520ef80;
            Node0x521f5c0;
          }
          Node0x520f650;
          Node0x521b890;
          Node0x521f620;
        }
}
