digraph "Scop Graph for 'dot' function" {
	label="Scop Graph for 'dot' function";

	Node0x520f570 [shape=record,label="{entry:\l  %sum = alloca [64 x i32], align 16\l  br label %entry.split\l}"];
	Node0x520f570 -> Node0x521f2a0;
	Node0x521f2a0 [shape=record,label="{entry.split:                                      \l  br label %for.cond1.preheader\l}"];
	Node0x521f2a0 -> Node0x520d7e0;
	Node0x520d7e0 [shape=record,label="{for.cond1.preheader:                              \l  %indvars.iv12 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next13, %for.end ]\l  br label %for.inc\l}"];
	Node0x520d7e0 -> Node0x521cf10;
	Node0x521cf10 [shape=record,label="{for.inc:                                          \l  %indvars.iv6 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next7,\l... %for.inc ]\l  %tmp.04 = phi i32 [ 0, %for.cond1.preheader ], [ %add9, %for.inc ]\l  %0 = shl i64 %indvars.iv12, 6\l  %1 = add nuw nsw i64 %indvars.iv6, %0\l  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %1\l  %2 = load i32, i32* %arrayidx, align 4\l  %3 = shl i64 %indvars.iv12, 6\l  %4 = add nuw nsw i64 %indvars.iv6, %3\l  %arrayidx7 = getelementptr inbounds i32, i32* %b, i64 %4\l  %5 = load i32, i32* %arrayidx7, align 4\l  %mul8 = mul nsw i32 %5, %2\l  %add9 = add nsw i32 %mul8, %tmp.04\l  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1\l  %exitcond11 = icmp ne i64 %indvars.iv.next7, 64\l  br i1 %exitcond11, label %for.inc, label %for.end\l}"];
	Node0x521cf10 -> Node0x521cf10[constraint=false];
	Node0x521cf10 -> Node0x521abc0;
	Node0x521abc0 [shape=record,label="{for.end:                                          \l  %add9.lcssa = phi i32 [ %add9, %for.inc ]\l  %arrayidx11 = getelementptr inbounds [64 x i32], [64 x i32]* %sum, i64 0,\l... i64 %indvars.iv12\l  store i32 %add9.lcssa, i32* %arrayidx11, align 4\l  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1\l  %exitcond16 = icmp ne i64 %indvars.iv.next13, 32\l  br i1 %exitcond16, label %for.cond1.preheader, label %for.cond16.preheader\l}"];
	Node0x521abc0 -> Node0x520d7e0[constraint=false];
	Node0x521abc0 -> Node0x521b550;
	Node0x521b550 [shape=record,label="{for.cond16.preheader:                             \l  br label %for.inc22\l}"];
	Node0x521b550 -> Node0x521b4f0;
	Node0x521b4f0 [shape=record,label="{for.inc22:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next,\l... %for.inc22 ]\l  %total.02 = phi i32 [ 0, %for.cond16.preheader ], [ %add21, %for.inc22 ]\l  %arrayidx20 = getelementptr inbounds [64 x i32], [64 x i32]* %sum, i64 0,\l... i64 %indvars.iv\l  %6 = load i32, i32* %arrayidx20, align 4\l  %add21 = add nsw i32 %6, %total.02\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp ne i64 %indvars.iv.next, 32\l  br i1 %exitcond, label %for.inc22, label %for.end24\l}"];
	Node0x521b4f0 -> Node0x521b4f0[constraint=false];
	Node0x521b4f0 -> Node0x521d0e0;
	Node0x521d0e0 [shape=record,label="{for.end24:                                        \l  %add21.lcssa = phi i32 [ %add21, %for.inc22 ]\l  ret i32 %add21.lcssa\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x520d8a0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x52219e0 {
            label = "";
            style = filled;
            color = 3            subgraph cluster_0x521f360 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0x520d920 {
                label = "";
                style = solid;
                color = 7
                Node0x521cf10;
              }
              Node0x520d7e0;
              Node0x521abc0;
            }
            subgraph cluster_0x521cb40 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0x521b4f0;
            }
            Node0x521b550;
          }
          Node0x520f570;
          Node0x521f2a0;
          Node0x521d0e0;
        }
}
