digraph "Scop Graph for 'matrix_multiply' function" {
	label="Scop Graph for 'matrix_multiply' function";

	Node0x6a42010 [shape=record,label="{entry:\l  br label %entry.split, !dbg !31\l}"];
	Node0x6a42010 -> Node0x6a179b0;
	Node0x6a179b0 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata %struct.Matrix* %A, i64 0, metadata\l... !32, metadata !33), !dbg !31\l  tail call void @llvm.dbg.value(metadata %struct.Matrix* %B, i64 0, metadata\l... !34, metadata !33), !dbg !35\l  %data = getelementptr inbounds %struct.Matrix, %struct.Matrix* %A, i64 0,\l... i32 0, !dbg !36\l  %0 = load i32*, i32** %data, align 8, !dbg !36\l  tail call void @llvm.dbg.value(metadata i32* %0, i64 0, metadata !37,\l... metadata !33), !dbg !38\l  %data1 = getelementptr inbounds %struct.Matrix, %struct.Matrix* %B, i64 0,\l... i32 0, !dbg !39\l  %1 = load i32*, i32** %data1, align 8, !dbg !39\l  tail call void @llvm.dbg.value(metadata i32* %1, i64 0, metadata !40,\l... metadata !33), !dbg !41\l  %width2 = getelementptr inbounds %struct.Matrix, %struct.Matrix* %B, i64 0,\l... i32 1, !dbg !42\l  %2 = load i32, i32* %width2, align 8, !dbg !42\l  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !43,\l... metadata !33), !dbg !44\l  %height3 = getelementptr inbounds %struct.Matrix, %struct.Matrix* %A, i64 0,\l... i32 2, !dbg !45\l  %3 = load i32, i32* %height3, align 4, !dbg !45\l  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !46,\l... metadata !33), !dbg !47\l  %mul = mul nsw i32 %3, %2, !dbg !48\l  %conv = sext i32 %mul to i64, !dbg !49\l  %mul4 = shl nsw i64 %conv, 2, !dbg !50\l  %call = tail call noalias i8* @malloc(i64 %mul4) #4, !dbg !51\l  %4 = bitcast i8* %call to i32*, !dbg !52\l  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !53,\l... metadata !33), !dbg !54\l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !55, metadata\l... !33), !dbg !56\l  %height5 = getelementptr inbounds %struct.Matrix, %struct.Matrix* %A, i64 0,\l... i32 2, !dbg !57\l  %5 = load i32, i32* %height5, align 4, !dbg !57\l  %cmp6 = icmp sgt i32 %5, 0, !dbg !61\l  br i1 %cmp6, label %for.cond7.preheader.lr.ph, label %for.end41, !dbg !62\l}"];
	Node0x6a179b0 -> Node0x6a17e10;
	Node0x6a179b0 -> Node0x6a3ad80;
	Node0x6a17e10 [shape=record,label="{for.cond7.preheader.lr.ph:                        \l  %6 = sext i32 %2 to i64, !dbg !62\l  %7 = sext i32 %2 to i64, !dbg !62\l  %8 = sext i32 %2 to i64, !dbg !62\l  %9 = sext i32 %2 to i64, !dbg !62\l  %10 = sext i32 %2 to i64, !dbg !62\l  br label %for.cond7.preheader, !dbg !62\l}"];
	Node0x6a17e10 -> Node0x6a17be0;
	Node0x6a17be0 [shape=record,label="{for.cond7.preheader:                              \l  %indvars.iv17 = phi i64 [ 0, %for.cond7.preheader.lr.ph ], [\l... %indvars.iv.next18, %for.inc39 ]\l  %width8 = getelementptr inbounds %struct.Matrix, %struct.Matrix* %B, i64 0,\l... i32 1, !dbg !63\l  %11 = load i32, i32* %width8, align 8, !dbg !63\l  %cmp93 = icmp sgt i32 %11, 0, !dbg !68\l  br i1 %cmp93, label %for.body11.lr.ph, label %for.inc39, !dbg !69\l}"];
	Node0x6a17be0 -> Node0x6a18050;
	Node0x6a17be0 -> Node0x6a16f90;
	Node0x6a18050 [shape=record,label="{for.body11.lr.ph:                                 \l  br label %for.body11, !dbg !69\l}"];
	Node0x6a18050 -> Node0x6a254a0;
	Node0x6a254a0 [shape=record,label="{for.body11:                                       \l  %indvars.iv12 = phi i64 [ 0, %for.body11.lr.ph ], [ %indvars.iv.next13,\l... %for.inc36 ]\l  %12 = mul nsw i64 %indvars.iv17, %10, !dbg !70\l  %13 = add nsw i64 %indvars.iv12, %12, !dbg !72\l  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %13, !dbg !73\l  store i32 0, i32* %arrayidx, align 4, !dbg !74\l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !75, metadata\l... !33), !dbg !76\l  %width14 = getelementptr inbounds %struct.Matrix, %struct.Matrix* %A, i64 0,\l... i32 1, !dbg !77\l  %14 = load i32, i32* %width14, align 8, !dbg !77\l  %cmp151 = icmp sgt i32 %14, 0, !dbg !81\l  br i1 %cmp151, label %for.body17.lr.ph, label %for.inc36, !dbg !82\l}"];
	Node0x6a254a0 -> Node0x6a11470;
	Node0x6a254a0 -> Node0x6a1ec90;
	Node0x6a11470 [shape=record,label="{for.body17.lr.ph:                                 \l  br label %for.body17, !dbg !82\l}"];
	Node0x6a11470 -> Node0x6a1ecf0;
	Node0x6a1ecf0 [shape=record,label="{for.body17:                                       \l  %indvars.iv = phi i64 [ 0, %for.body17.lr.ph ], [ %indvars.iv.next,\l... %for.body17 ]\l  %15 = mul nsw i64 %indvars.iv17, %9, !dbg !83\l  %16 = add nsw i64 %indvars.iv12, %15, !dbg !85\l  %arrayidx21 = getelementptr inbounds i32, i32* %4, i64 %16, !dbg !86\l  %17 = load i32, i32* %arrayidx21, align 4, !dbg !86\l  %18 = mul nsw i64 %indvars.iv17, %8, !dbg !87\l  %19 = add nsw i64 %indvars.iv, %18, !dbg !88\l  %arrayidx25 = getelementptr inbounds i32, i32* %0, i64 %19, !dbg !89\l  %20 = load i32, i32* %arrayidx25, align 4, !dbg !89\l  %21 = mul nsw i64 %indvars.iv, %6, !dbg !90\l  %22 = add nsw i64 %21, %indvars.iv12, !dbg !91\l  %arrayidx29 = getelementptr inbounds i32, i32* %1, i64 %22, !dbg !92\l  %23 = load i32, i32* %arrayidx29, align 4, !dbg !92\l  %mul30 = mul nsw i32 %23, %20, !dbg !93\l  %add31 = add nsw i32 %mul30, %17, !dbg !94\l  %24 = mul nsw i64 %indvars.iv17, %7, !dbg !95\l  %25 = add nsw i64 %indvars.iv12, %24, !dbg !96\l  %arrayidx35 = getelementptr inbounds i32, i32* %4, i64 %25, !dbg !97\l  store i32 %add31, i32* %arrayidx35, align 4, !dbg !98\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !82\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !75, metadata\l... !33), !dbg !76\l  %26 = load i32, i32* %width14, align 8, !dbg !77\l  %27 = sext i32 %26 to i64, !dbg !81\l  %cmp15 = icmp slt i64 %indvars.iv.next, %27, !dbg !81\l  br i1 %cmp15, label %for.body17, label %for.cond13.for.inc36_crit_edge, !dbg\l... !82\l}"];
	Node0x6a1ecf0 -> Node0x6a1ecf0[constraint=false];
	Node0x6a1ecf0 -> Node0x6a04530;
	Node0x6a04530 [shape=record,label="{for.cond13.for.inc36_crit_edge:                   \l  br label %for.inc36, !dbg !82\l}"];
	Node0x6a04530 -> Node0x6a1ec90;
	Node0x6a1ec90 [shape=record,label="{for.inc36:                                        \l  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !69\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !99, metadata\l... !33), !dbg !100\l  %28 = load i32, i32* %width8, align 8, !dbg !63\l  %29 = sext i32 %28 to i64, !dbg !68\l  %cmp9 = icmp slt i64 %indvars.iv.next13, %29, !dbg !68\l  br i1 %cmp9, label %for.body11, label %for.cond7.for.inc39_crit_edge, !dbg\l... !69\l}"];
	Node0x6a1ec90 -> Node0x6a254a0[constraint=false];
	Node0x6a1ec90 -> Node0x6a04590;
	Node0x6a04590 [shape=record,label="{for.cond7.for.inc39_crit_edge:                    \l  br label %for.inc39, !dbg !69\l}"];
	Node0x6a04590 -> Node0x6a16f90;
	Node0x6a16f90 [shape=record,label="{for.inc39:                                        \l  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !62\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !55, metadata\l... !33), !dbg !56\l  %30 = load i32, i32* %height5, align 4, !dbg !57\l  %31 = sext i32 %30 to i64, !dbg !61\l  %cmp = icmp slt i64 %indvars.iv.next18, %31, !dbg !61\l  br i1 %cmp, label %for.cond7.preheader, label %for.cond.for.end41_crit_edge,\l... !dbg !62\l}"];
	Node0x6a16f90 -> Node0x6a17be0[constraint=false];
	Node0x6a16f90 -> Node0x69f75d0;
	Node0x69f75d0 [shape=record,label="{for.cond.for.end41_crit_edge:                     \l  br label %for.end41, !dbg !62\l}"];
	Node0x69f75d0 -> Node0x6a3ad80;
	Node0x6a3ad80 [shape=record,label="{for.end41:                                        \l  %call42 = tail call noalias i8* @malloc(i64 16) #4, !dbg !101\l  %32 = bitcast i8* %call42 to %struct.Matrix*, !dbg !102\l  tail call void @llvm.dbg.value(metadata %struct.Matrix* %32, i64 0, metadata\l... !103, metadata !33), !dbg !104\l  %33 = bitcast i8* %call42 to i8**, !dbg !105\l  store i8* %call, i8** %33, align 8, !dbg !105\l  %width44 = getelementptr inbounds i8, i8* %call42, i64 8, !dbg !106\l  %34 = bitcast i8* %width44 to i32*, !dbg !106\l  store i32 %2, i32* %34, align 8, !dbg !107\l  %height45 = getelementptr inbounds i8, i8* %call42, i64 12, !dbg !108\l  %35 = bitcast i8* %height45 to i32*, !dbg !108\l  store i32 %3, i32* %35, align 4, !dbg !109\l  ret %struct.Matrix* %32, !dbg !110\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x69fb9d0 {
          label = "MatrixMult.c:29-52
";
          style = solid;
          color = 1
          subgraph cluster_0x6a02580 {
            label = "MatrixMult.c:29-42
Call instruction:   %call = tail call noalias i8* @malloc(i64 %mul4) #4, !dbg !51";
            style = solid;
            color = 6
            subgraph cluster_0x6a41990 {
              label = "MatrixMult.c:30-42
";
              style = filled;
              color = 3              subgraph cluster_0x6a02500 {
                label = "MatrixMult.c:30-42
";
                style = solid;
                color = 7
                subgraph cluster_0x6a109f0 {
                  label = "MatrixMult.c:30-42
";
                  style = solid;
                  color = 9
                  subgraph cluster_0x6a17fa0 {
                    label = "MatrixMult.c:30-42
";
                    style = solid;
                    color = 11
                    subgraph cluster_0x69fdf10 {
                      label = "MatrixMult.c:30-42
";
                      style = solid;
                      color = 1
                      subgraph cluster_0x6a22a00 {
                        label = "MatrixMult.c:30-42
";
                        style = solid;
                        color = 6
                        Node0x6a1ecf0;
                      }
                      Node0x6a254a0;
                      Node0x6a11470;
                      Node0x6a04530;
                    }
                    Node0x6a1ec90;
                  }
                  Node0x6a17be0;
                  Node0x6a18050;
                  Node0x6a04590;
                }
                Node0x6a16f90;
              }
              Node0x69f75d0;
            }
            Node0x6a179b0;
            Node0x6a17e10;
          }
          Node0x6a42010;
          Node0x6a3ad80;
        }
}
