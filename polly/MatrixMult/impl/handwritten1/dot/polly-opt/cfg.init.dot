digraph "CFG for 'init' function" {
	label="CFG for 'init' function";

	Node0x6682ac0 [shape=record,label="{entry:\l  tail call void @llvm.dbg.value(metadata i32 %width, i64 0, metadata !19,\l... metadata !57), !dbg !58\l  tail call void @llvm.dbg.value(metadata i32 %height, i64 0, metadata !20,\l... metadata !57), !dbg !59\l  %conv = sext i32 %width to i64, !dbg !60\l  %mul = shl nsw i64 %conv, 3, !dbg !61\l  %conv1 = sext i32 %height to i64, !dbg !62\l  %mul2 = mul i64 %mul, %conv1, !dbg !63\l  %call = tail call noalias i8* @malloc(i64 %mul2) #5, !dbg !64\l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !21, metadata\l... !57), !dbg !66\l  %cmp77 = icmp sgt i32 %height, 0, !dbg !67\l  %cmp575 = icmp sgt i32 %width, 0, !dbg !71\l  %or.cond = and i1 %cmp77, %cmp575, !dbg !76\l  br i1 %or.cond, label %for.body7.preheader.us.preheader, label %polly.start,\l... !dbg !76\l|{<s0>T|<s1>F}}"];
	Node0x6682ac0:s0 -> Node0x66873e0;
	Node0x6682ac0:s1 -> Node0x66874b0;
	Node0x66873e0 [shape=record,label="{for.body7.preheader.us.preheader:                 \l  %0 = add i32 %width, -1, !dbg !77\l  %1 = zext i32 %0 to i64, !dbg !77\l  %2 = shl nuw nsw i64 %1, 3, !dbg !77\l  %3 = add nuw nsw i64 %2, 8, !dbg !77\l  %4 = add i32 %height, -1, !dbg !77\l  %xtraiter = and i32 %height, 7, !dbg !77\l  %lcmp.mod = icmp eq i32 %xtraiter, 0, !dbg !77\l  br i1 %lcmp.mod, label %for.body7.preheader.us.preheader.split, label\l... %for.body7.preheader.us.prol.preheader, !dbg !77\l|{<s0>T|<s1>F}}"];
	Node0x66873e0:s0 -> Node0x66888c0;
	Node0x66873e0:s1 -> Node0x66889e0;
	Node0x66889e0 [shape=record,label="{for.body7.preheader.us.prol.preheader:            \l  br label %for.body7.preheader.us.prol, !dbg !77\l}"];
	Node0x66889e0 -> Node0x6688990;
	Node0x6688990 [shape=record,label="{for.body7.preheader.us.prol:                      \l  %indvars.iv91.us.prol = phi i64 [ %indvars.iv.next92.us.prol,\l... %for.body7.preheader.us.prol ], [ 0, %for.body7.preheader.us.prol.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body7.preheader.us.prol ], [\l... %xtraiter, %for.body7.preheader.us.prol.preheader ]\l  %5 = mul i64 %mul, %indvars.iv91.us.prol, !dbg !77\l  %scevgep.prol = getelementptr i8, i8* %call, i64 %5, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.prol, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.prol = add nuw nsw i64 %indvars.iv91.us.prol, 1, !dbg\l... !76\l  %prol.iter.sub = add i32 %prol.iter, -1, !dbg !76\l  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0, !dbg !76\l  br i1 %prol.iter.cmp, label\l... %for.body7.preheader.us.preheader.split.loopexit, label\l... %for.body7.preheader.us.prol, !dbg !76, !llvm.loop !80\l|{<s0>T|<s1>F}}"];
	Node0x6688990:s0 -> Node0x66899a0;
	Node0x6688990:s1 -> Node0x6688990;
	Node0x66899a0 [shape=record,label="{for.body7.preheader.us.preheader.split.loopexit:  \l  %indvars.iv.next92.us.prol.lcssa = phi i64 [ %indvars.iv.next92.us.prol,\l... %for.body7.preheader.us.prol ]\l  br label %for.body7.preheader.us.preheader.split, !dbg !77\l}"];
	Node0x66899a0 -> Node0x66888c0;
	Node0x66888c0 [shape=record,label="{for.body7.preheader.us.preheader.split:           \l  %indvars.iv91.us.unr = phi i64 [ 0, %for.body7.preheader.us.preheader ], [\l... %indvars.iv.next92.us.prol.lcssa,\l... %for.body7.preheader.us.preheader.split.loopexit ]\l  %6 = icmp ult i32 %4, 7, !dbg !77\l  br i1 %6, label %polly.start.loopexit, label\l... %for.body7.preheader.us.preheader.split.split, !dbg !77\l|{<s0>T|<s1>F}}"];
	Node0x66888c0:s0 -> Node0x6688b70;
	Node0x66888c0:s1 -> Node0x668af70;
	Node0x668af70 [shape=record,label="{for.body7.preheader.us.preheader.split.split:     \l  br label %for.body7.preheader.us, !dbg !77\l}"];
	Node0x668af70 -> Node0x668af20;
	Node0x668af20 [shape=record,label="{for.body7.preheader.us:                           \l  %indvars.iv91.us = phi i64 [ %indvars.iv91.us.unr,\l... %for.body7.preheader.us.preheader.split.split ], [ %indvars.iv.next92.us.7,\l... %for.body7.preheader.us ]\l  %7 = mul i64 %mul, %indvars.iv91.us, !dbg !77\l  %scevgep = getelementptr i8, i8* %call, i64 %7, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us = add nuw nsw i64 %indvars.iv91.us, 1, !dbg !76\l  %8 = mul i64 %mul, %indvars.iv.next92.us, !dbg !77\l  %scevgep.1 = getelementptr i8, i8* %call, i64 %8, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.1, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.1 = add nsw i64 %indvars.iv91.us, 2, !dbg !76\l  %9 = mul i64 %mul, %indvars.iv.next92.us.1, !dbg !77\l  %scevgep.2 = getelementptr i8, i8* %call, i64 %9, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.2, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.2 = add nsw i64 %indvars.iv91.us, 3, !dbg !76\l  %10 = mul i64 %mul, %indvars.iv.next92.us.2, !dbg !77\l  %scevgep.3 = getelementptr i8, i8* %call, i64 %10, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.3, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.3 = add nsw i64 %indvars.iv91.us, 4, !dbg !76\l  %11 = mul i64 %mul, %indvars.iv.next92.us.3, !dbg !77\l  %scevgep.4 = getelementptr i8, i8* %call, i64 %11, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.4, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.4 = add nsw i64 %indvars.iv91.us, 5, !dbg !76\l  %12 = mul i64 %mul, %indvars.iv.next92.us.4, !dbg !77\l  %scevgep.5 = getelementptr i8, i8* %call, i64 %12, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.5, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.5 = add nsw i64 %indvars.iv91.us, 6, !dbg !76\l  %13 = mul i64 %mul, %indvars.iv.next92.us.5, !dbg !77\l  %scevgep.6 = getelementptr i8, i8* %call, i64 %13, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.6, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.6 = add nsw i64 %indvars.iv91.us, 7, !dbg !76\l  %14 = mul i64 %mul, %indvars.iv.next92.us.6, !dbg !77\l  %scevgep.7 = getelementptr i8, i8* %call, i64 %14, !dbg !77\l  call void @llvm.memset.p0i8.i64(i8* %scevgep.7, i8 0, i64 %3, i32 8, i1\l... false), !dbg !79\l  %indvars.iv.next92.us.7 = add nsw i64 %indvars.iv91.us, 8, !dbg !76\l  %lftr.wideiv.7 = trunc i64 %indvars.iv.next92.us.7 to i32, !dbg !76\l  %exitcond147.7 = icmp eq i32 %lftr.wideiv.7, %height, !dbg !76\l  br i1 %exitcond147.7, label %polly.start.loopexit.unr-lcssa, label\l... %for.body7.preheader.us, !dbg !76\l|{<s0>T|<s1>F}}"];
	Node0x668af20:s0 -> Node0x6689a40;
	Node0x668af20:s1 -> Node0x668af20;
	Node0x6689a40 [shape=record,label="{polly.start.loopexit.unr-lcssa:                   \l  br label %polly.start.loopexit\l}"];
	Node0x6689a40 -> Node0x6688b70;
	Node0x6688b70 [shape=record,label="{polly.start.loopexit:                             \l  br label %polly.start\l}"];
	Node0x6688b70 -> Node0x66874b0;
	Node0x66874b0 [shape=record,label="{polly.start:                                      \l  %15 = add nsw i64 %conv1, -1\l  %polly.fdiv_q.shr = ashr i64 %15, 5\l  %polly.loop_guard = icmp sgt i64 %polly.fdiv_q.shr, -1\l  br i1 %polly.loop_guard, label %polly.loop_header.preheader, label\l... %polly.exiting\l|{<s0>T|<s1>F}}"];
	Node0x66874b0:s0 -> Node0x668df40;
	Node0x66874b0:s1 -> Node0x668dfc0;
	Node0x668df40 [shape=record,label="{polly.loop_header.preheader:                      \l  %16 = add nsw i64 %conv, -1\l  %polly.fdiv_q.shr96 = ashr i64 %16, 5\l  %polly.loop_guard101 = icmp sgt i64 %polly.fdiv_q.shr96, -1\l  br label %polly.loop_header\l}"];
	Node0x668df40 -> Node0x668e360;
	Node0x6689b20 [shape=record,label="{polly.exiting.loopexit:                           \l  br label %polly.exiting, !dbg !82\l}"];
	Node0x6689b20 -> Node0x668dfc0;
	Node0x668dfc0 [shape=record,label="{polly.exiting:                                    \l  %call36 = tail call noalias i8* @malloc(i64 16) #5, !dbg !82\l  %17 = bitcast i8* %call36 to %struct.Matrix*, !dbg !83\l  tail call void @llvm.dbg.value(metadata %struct.Matrix* %17, i64 0, metadata\l... !24, metadata !57), !dbg !84\l  %18 = bitcast i8* %call36 to i8**, !dbg !85\l  store i8* %call, i8** %18, align 8, !dbg !85, !tbaa !86\l  %width38 = getelementptr inbounds i8, i8* %call36, i64 8, !dbg !92\l  %19 = bitcast i8* %width38 to i32*, !dbg !92\l  store i32 %width, i32* %19, align 8, !dbg !93, !tbaa !94\l  %height39 = getelementptr inbounds i8, i8* %call36, i64 12, !dbg !95\l  %20 = bitcast i8* %height39 to i32*, !dbg !95\l  store i32 %height, i32* %20, align 4, !dbg !96, !tbaa !97\l  ret %struct.Matrix* %17, !dbg !98\l}"];
	Node0x668e360 [shape=record,label="{polly.loop_header:                                \l  %polly.indvar = phi i64 [ %polly.indvar_next, %polly.loop_exit100 ], [ 0,\l... %polly.loop_header.preheader ]\l  br i1 %polly.loop_guard101, label %polly.loop_header98.preheader, label\l... %polly.loop_exit100\l|{<s0>T|<s1>F}}"];
	Node0x668e360:s0 -> Node0x6691670;
	Node0x668e360:s1 -> Node0x66914e0;
	Node0x6691670 [shape=record,label="{polly.loop_header98.preheader:                    \l  %21 = shl nsw i64 %polly.indvar, 5\l  %22 = sub nsw i64 %conv1, %21\l  %23 = add nsw i64 %22, -1\l  %24 = icmp sgt i64 %23, 31\l  %25 = select i1 %24, i64 31, i64 %23\l  %polly.loop_guard110 = icmp sgt i64 %25, -1\l  %polly.adjust_ub113 = add i64 %25, -1\l  br i1 %polly.loop_guard110, label\l... %polly.loop_header107.preheader.us.preheader, label %polly.loop_exit100\l|{<s0>T|<s1>F}}"];
	Node0x6691670:s0 -> Node0x6691570;
	Node0x6691670:s1 -> Node0x66914e0;
	Node0x6691570 [shape=record,label="{polly.loop_header107.preheader.us.preheader:      \l  br label %polly.loop_header107.preheader.us\l}"];
	Node0x6691570 -> Node0x6691e40;
	Node0x6691e40 [shape=record,label="{polly.loop_header107.preheader.us:                \l  %polly.indvar102.us = phi i64 [ %polly.indvar_next103.us,\l... %polly.loop_exit109.loopexit.us ], [ 0,\l... %polly.loop_header107.preheader.us.preheader ]\l  %26 = shl nsw i64 %polly.indvar102.us, 5\l  %27 = sub nsw i64 %conv, %26\l  %28 = add nsw i64 %27, -1\l  %29 = icmp sgt i64 %28, 31\l  %30 = select i1 %29, i64 31, i64 %28\l  %polly.loop_guard119.us = icmp sgt i64 %30, -1\l  %polly.adjust_ub122.us = add i64 %30, -1\l  br i1 %polly.loop_guard119.us, label\l... %polly.loop_header116.preheader.us.us.preheader, label\l... %polly.loop_exit109.loopexit.us\l|{<s0>T|<s1>F}}"];
	Node0x6691e40:s0 -> Node0x6692590;
	Node0x6691e40:s1 -> Node0x6691d10;
	Node0x6692590 [shape=record,label="{polly.loop_header116.preheader.us.us.preheader:   \l  br label %polly.loop_header116.preheader.us.us\l}"];
	Node0x6692590 -> Node0x6692780;
	Node0x6692830 [shape=record,label="{polly.loop_exit109.loopexit.us.loopexit:          \l  br label %polly.loop_exit109.loopexit.us\l}"];
	Node0x6692830 -> Node0x6691d10;
	Node0x6691d10 [shape=record,label="{polly.loop_exit109.loopexit.us:                   \l  %polly.indvar_next103.us = add nuw nsw i64 %polly.indvar102.us, 1\l  %exitcond = icmp eq i64 %polly.indvar102.us, %polly.fdiv_q.shr96\l  br i1 %exitcond, label %polly.loop_exit100.loopexit, label\l... %polly.loop_header107.preheader.us\l|{<s0>T|<s1>F}}"];
	Node0x6691d10:s0 -> Node0x66929c0;
	Node0x6691d10:s1 -> Node0x6691e40;
	Node0x6692780 [shape=record,label="{polly.loop_header116.preheader.us.us:             \l  %polly.indvar111.us.us = phi i64 [ %polly.indvar_next112.us.us,\l... %polly.loop_exit118.loopexit.us.us ], [ 0,\l... %polly.loop_header116.preheader.us.us.preheader ]\l  %31 = add nuw nsw i64 %polly.indvar111.us.us, %21\l  %32 = mul i64 %31, %mul\l  br label %polly.loop_header116.us.us\l}"];
	Node0x6692780 -> Node0x668e1a0;
	Node0x6692af0 [shape=record,label="{polly.loop_exit118.loopexit.us.us:                \l  %polly.indvar_next112.us.us = add nuw nsw i64 %polly.indvar111.us.us, 1\l  %polly.loop_cond114.us.us = icmp sgt i64 %polly.indvar111.us.us,\l... %polly.adjust_ub113\l  br i1 %polly.loop_cond114.us.us, label\l... %polly.loop_exit109.loopexit.us.loopexit, label\l... %polly.loop_header116.preheader.us.us\l|{<s0>T|<s1>F}}"];
	Node0x6692af0:s0 -> Node0x6692830;
	Node0x6692af0:s1 -> Node0x6692780;
	Node0x668e1a0 [shape=record,label="{polly.loop_header116.us.us:                       \l  %polly.indvar120.us.us = phi i64 [ %polly.indvar_next121.us.us,\l... %polly.loop_header116.us.us ], [ 0, %polly.loop_header116.preheader.us.us ]\l  %33 = add nuw nsw i64 %polly.indvar120.us.us, %26\l  %34 = shl i64 %33, 3\l  %35 = add i64 %34, %32\l  %scevgep.us.us = getelementptr i8, i8* %call, i64 %35\l  %scevgep124.us.us = bitcast i8* %scevgep.us.us to i64*\l  %_p_scalar_.us.us = load i64, i64* %scevgep124.us.us, align 8, !alias.scope\l... !99, !noalias !2\l  %p_add25.us.us = add nsw i64 %_p_scalar_.us.us, %31, !dbg !101\l  store i64 %p_add25.us.us, i64* %scevgep124.us.us, align 8, !alias.scope !99,\l... !noalias !2\l  %polly.indvar_next121.us.us = add nuw nsw i64 %polly.indvar120.us.us, 1\l  %polly.loop_cond123.us.us = icmp sgt i64 %polly.indvar120.us.us,\l... %polly.adjust_ub122.us\l  br i1 %polly.loop_cond123.us.us, label %polly.loop_exit118.loopexit.us.us,\l... label %polly.loop_header116.us.us\l|{<s0>T|<s1>F}}"];
	Node0x668e1a0:s0 -> Node0x6692af0;
	Node0x668e1a0:s1 -> Node0x668e1a0;
	Node0x66929c0 [shape=record,label="{polly.loop_exit100.loopexit:                      \l  br label %polly.loop_exit100\l}"];
	Node0x66929c0 -> Node0x66914e0;
	Node0x66914e0 [shape=record,label="{polly.loop_exit100:                               \l  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1\l  %exitcond145 = icmp eq i64 %polly.indvar, %polly.fdiv_q.shr\l  br i1 %exitcond145, label %polly.exiting.loopexit, label %polly.loop_header\l|{<s0>T|<s1>F}}"];
	Node0x66914e0:s0 -> Node0x6689b20;
	Node0x66914e0:s1 -> Node0x668e360;
}
