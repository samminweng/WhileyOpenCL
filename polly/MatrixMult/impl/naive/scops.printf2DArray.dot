digraph "Scop Graph for 'printf2DArray' function" {
	label="Scop Graph for 'printf2DArray' function";

	Node0x9e7e710 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x9e7e710 -> Node0x9ec1640;
	Node0x9ec1640 [shape=record,label="{entry.split:                                      \l  %putchar = tail call i32 @putchar(i32 91) #5\l  %cmp20 = icmp sgt i64 %input_size, 0\l  br i1 %cmp20, label %for.body.lr.ph, label %for.end\l}"];
	Node0x9ec1640 -> Node0x9ec6a20;
	Node0x9ec1640 -> Node0x9ee4e30;
	Node0x9ec6a20 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body\l}"];
	Node0x9ec6a20 -> Node0x9f51780;
	Node0x9f51780 [shape=record,label="{for.body:                                         \l  %i.021 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]\l  %arrayidx = getelementptr inbounds i64*, i64** %input, i64 %i.021\l  %0 = load i64*, i64** %arrayidx, align 8, !tbaa !1\l  tail call void @printf1DArray(i64* %0, i64 %input_size_size)\l  %inc = add nuw nsw i64 %i.021, 1\l  %cmp = icmp slt i64 %inc, %input_size\l  %cmp1 = icmp slt i64 %inc, 10\l  %or.cond = and i1 %cmp, %cmp1\l  br i1 %or.cond, label %for.body, label %for.cond.for.end_crit_edge\l}"];
	Node0x9f51780 -> Node0x9f51780[constraint=false];
	Node0x9f51780 -> Node0x9e96c70;
	Node0x9e96c70 [shape=record,label="{for.cond.for.end_crit_edge:                       \l  %cmp.lcssa22 = phi i1 [ %cmp, %for.body ]\l  br label %for.end\l}"];
	Node0x9e96c70 -> Node0x9ee4e30;
	Node0x9ee4e30 [shape=record,label="{for.end:                                          \l  %cmp.lcssa = phi i1 [ %cmp.lcssa22, %for.cond.for.end_crit_edge ], [ %cmp20,\l... %entry.split ]\l  br i1 %cmp.lcssa, label %if.then, label %if.end\l}"];
	Node0x9ee4e30 -> Node0x9e847c0;
	Node0x9ee4e30 -> Node0x9ea1010;
	Node0x9e847c0 [shape=record,label="{if.then:                                          \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]*\l... @str.38, i64 0, i64 0))\l  %sub = add nsw i64 %input_size, -1\l  %arrayidx6 = getelementptr inbounds i64*, i64** %input, i64 %sub\l  %1 = load i64*, i64** %arrayidx6, align 8, !tbaa !1\l  tail call void @printf1DArray(i64* %1, i64 %input_size_size)\l  br label %if.end\l}"];
	Node0x9e847c0 -> Node0x9ea1010;
	Node0x9ea1010 [shape=record,label="{if.end:                                           \l  %putchar19 = tail call i32 @putchar(i32 93) #5\l  ret void\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x9e7ebb0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x9e6ff30 {
            label = "Call instruction:   %putchar = tail call i32 @putchar(i32 91) #5";
            style = solid;
            color = 6
            subgraph cluster_0x9e5aa00 {
              label = "Call instruction:   tail call void @printf1DArray(i64* %0, i64 %input_size_size)";
              style = solid;
              color = 5
              Node0x9f51780;
            }
            Node0x9ec1640;
            Node0x9ec6a20;
            Node0x9e96c70;
          }
          subgraph cluster_0x9ed6dc0 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            Node0x9ee4e30;
            Node0x9e847c0;
          }
          Node0x9e7e710;
          Node0x9ea1010;
        }
}
