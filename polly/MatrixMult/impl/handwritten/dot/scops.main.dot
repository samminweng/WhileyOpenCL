digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x51e4600 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0x51e4600 -> Node0x51f12e0;
	Node0x51f12e0 [shape=record,label="{entry.split:                                      \l  tail call void @init_array()\l  br label %for.cond1.preheader\l}"];
	Node0x51f12e0 -> Node0x51f4950;
	Node0x51f4950 [shape=record,label="{for.cond1.preheader:                              \l  %indvars.iv7 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next8, %for.inc28 ]\l  br label %for.body3\l}"];
	Node0x51f4950 -> Node0x51f12b0;
	Node0x51f12b0 [shape=record,label="{for.body3:                                        \l  %indvars.iv4 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next5,\l... %for.inc25 ]\l  %arrayidx5 = getelementptr inbounds [1024 x [1024 x i64]], [1024 x [1024 x\l... i64]]* @C, i64 0, i64 %indvars.iv7, i64 %indvars.iv4\l  store i64 0, i64* %arrayidx5, align 8\l  br label %for.body8\l}"];
	Node0x51f12b0 -> Node0x51f5a40;
	Node0x51f5a40 [shape=record,label="{for.body8:                                        \l  %indvars.iv = phi i64 [ 0, %for.body3 ], [ %indvars.iv.next, %for.body8 ]\l  %arrayidx12 = getelementptr inbounds [1024 x [1024 x i64]], [1024 x [1024 x\l... i64]]* @C, i64 0, i64 %indvars.iv7, i64 %indvars.iv4\l  %0 = load i64, i64* %arrayidx12, align 8\l  %arrayidx16 = getelementptr inbounds [1024 x [1024 x i64]], [1024 x [1024 x\l... i64]]* @A, i64 0, i64 %indvars.iv7, i64 %indvars.iv\l  %1 = load i64, i64* %arrayidx16, align 8\l  %arrayidx20 = getelementptr inbounds [1024 x [1024 x i64]], [1024 x [1024 x\l... i64]]* @B, i64 0, i64 %indvars.iv, i64 %indvars.iv4\l  %2 = load i64, i64* %arrayidx20, align 8\l  %mul = mul nsw i64 %2, %1\l  %add = add nsw i64 %mul, %0\l  %arrayidx24 = getelementptr inbounds [1024 x [1024 x i64]], [1024 x [1024 x\l... i64]]* @C, i64 0, i64 %indvars.iv7, i64 %indvars.iv4\l  store i64 %add, i64* %arrayidx24, align 8\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond = icmp ne i64 %indvars.iv.next, 1024\l  br i1 %exitcond, label %for.body8, label %for.inc25\l}"];
	Node0x51f5a40 -> Node0x51f5a40[constraint=false];
	Node0x51f5a40 -> Node0x51f1300;
	Node0x51f1300 [shape=record,label="{for.inc25:                                        \l  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1\l  %exitcond6 = icmp ne i64 %indvars.iv.next5, 1024\l  br i1 %exitcond6, label %for.body3, label %for.inc28\l}"];
	Node0x51f1300 -> Node0x51f12b0[constraint=false];
	Node0x51f1300 -> Node0x51f1360;
	Node0x51f1360 [shape=record,label="{for.inc28:                                        \l  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1\l  %exitcond9 = icmp ne i64 %indvars.iv.next8, 1024\l  br i1 %exitcond9, label %for.cond1.preheader, label %for.end30\l}"];
	Node0x51f1360 -> Node0x51f4950[constraint=false];
	Node0x51f1360 -> Node0x51f8bc0;
	Node0x51f8bc0 [shape=record,label="{for.end30:                                        \l  %3 = load i64, i64* getelementptr inbounds ([1024 x [1024 x i64]], [1024 x\l... [1024 x i64]]* @C, i64 0, i64 1023, i64 1023), align 8\l  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x\l... i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 1024, i32 1024, i64 %3) #2\l  ret i32 0\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x51f5750 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x51f45d0 {
            label = "";
            style = filled;
            color = 3            subgraph cluster_0x51f57d0 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0x51f4140 {
                label = "";
                style = solid;
                color = 7
                Node0x51f5a40;
              }
              Node0x51f12b0;
              Node0x51f1300;
            }
            Node0x51f4950;
            Node0x51f1360;
          }
          Node0x51e4600;
          Node0x51f12e0;
          Node0x51f8bc0;
        }
}
