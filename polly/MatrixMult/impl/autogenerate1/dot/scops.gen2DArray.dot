digraph "Scop Graph for 'gen2DArray' function" {
	label="Scop Graph for 'gen2DArray' function";

	Node0x9f946c0 [shape=record,label="{entry:\l  br label %entry.split, !dbg !38\l}"];
	Node0x9f946c0 -> Node0x9f71d60;
	Node0x9f71d60 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i64* %arr, i64 0, metadata !32,\l... metadata !39), !dbg !38\l  tail call void @llvm.dbg.value(metadata i64 %x, i64 0, metadata !33,\l... metadata !39), !dbg !40\l  tail call void @llvm.dbg.value(metadata i64 %y, i64 0, metadata !34,\l... metadata !39), !dbg !41\l  tail call void @llvm.dbg.value(metadata i64** null, i64 0, metadata !35,\l... metadata !39), !dbg !42\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !36, metadata\l... !39), !dbg !43\l  %mul = shl i64 %y, 3, !dbg !44\l  tail call void @llvm.dbg.value(metadata i64 %mul, i64 0, metadata !37,\l... metadata !39), !dbg !45\l  %mul1 = shl i64 %x, 3, !dbg !46\l  %call = tail call noalias i8* @malloc(i64 %mul1) #6, !dbg !47\l  %0 = bitcast i8* %call to i64**, !dbg !48\l  tail call void @llvm.dbg.value(metadata i64** %0, i64 0, metadata !35,\l... metadata !39), !dbg !42\l  %cmp = icmp eq i8* %call, null, !dbg !49\l  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !51\l}"];
	Node0x9f71d60 -> Node0x9f8f9e0;
	Node0x9f71d60 -> Node0x9f87ad0;
	Node0x9f8f9e0 [shape=record,label="{if.then:                                          \l  %puts24 = tail call i32 @puts(i8* getelementptr inbounds ([61 x i8], [61 x\l... i8]* @str.22, i64 0, i64 0)), !dbg !57\l  tail call void @exit(i32 -2) #7, !dbg !59\l  unreachable, !dbg !59\l}"];
	Node0x9f87ad0 [shape=record,label="{for.cond.preheader:                               \l  %cmp325 = icmp sgt i64 %x, 0, !dbg !52\l  br i1 %cmp325, label %for.body.lr.ph, label %for.end, !dbg !56\l}"];
	Node0x9f87ad0 -> Node0x9fc2660;
	Node0x9f87ad0 -> Node0x9fc2af0;
	Node0x9fc2660 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body, !dbg !56\l}"];
	Node0x9fc2660 -> Node0x9fc2210;
	Node0x9fc2210 [shape=record,label="{for.body:                                         \l  %i.026 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %if.end9 ]\l  %call4 = tail call noalias i8* @malloc(i64 %mul) #6, !dbg !60\l  %arrayidx = getelementptr inbounds i64*, i64** %0, i64 %i.026, !dbg !62\l  %1 = bitcast i64** %arrayidx to i8**, !dbg !63\l  store i8* %call4, i8** %1, align 8, !dbg !63, !tbaa !64\l  %cmp6 = icmp eq i8* %call4, null, !dbg !68\l  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !70\l}"];
	Node0x9fc2210 -> Node0x9fae740;
	Node0x9fc2210 -> Node0x9f8d800;
	Node0x9fae740 [shape=record,label="{if.then7:                                         \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([61 x i8], [61 x\l... i8]* @str.21, i64 0, i64 0)), !dbg !71\l  tail call void @exit(i32 -2) #7, !dbg !73\l  unreachable, !dbg !73\l}"];
	Node0x9f8d800 [shape=record,label="{if.end9:                                          \l  %2 = bitcast i64* %arr to i8*, !dbg !74\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %call4, i8* %2, i64\l... %mul, i32 8, i1 false), !dbg !74\l  %inc = add nuw nsw i64 %i.026, 1, !dbg !75\l  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !36,\l... metadata !39), !dbg !43\l  %cmp3 = icmp slt i64 %inc, %x, !dbg !52\l  br i1 %cmp3, label %for.body, label %for.cond.for.end_crit_edge, !dbg !56\l}"];
	Node0x9f8d800 -> Node0x9fc2210;
	Node0x9f8d800 -> Node0x9f77900;
	Node0x9f77900 [shape=record,label="{for.cond.for.end_crit_edge:                       \l  br label %for.end, !dbg !56\l}"];
	Node0x9f77900 -> Node0x9fc2af0;
	Node0x9fc2af0 [shape=record,label="{for.end:                                          \l  ret i64** %0, !dbg !77\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x9f79e00 {
          label = "Util.c:49-69
";
          style = solid;
          color = 1
          Node0x9f946c0;
          Node0x9f71d60;
          Node0x9f8f9e0;
          Node0x9f87ad0;
          Node0x9fc2660;
          Node0x9fc2210;
          Node0x9fae740;
          Node0x9f8d800;
          Node0x9f77900;
          Node0x9fc2af0;
        }
}
