digraph "Scop Graph for 'append' function" {
	label="Scop Graph for 'append' function";

	Node0xb4d5590 [shape=record,label="{entry:\l  br label %entry.split, !dbg !38\l}"];
	Node0xb4d5590 -> Node0xb405c40;
	Node0xb405c40 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i64* %arr1, i64 0, metadata !32,\l... metadata !39), !dbg !38\l  tail call void @llvm.dbg.value(metadata i64 %arr1_size, i64 0, metadata !33,\l... metadata !39), !dbg !40\l  tail call void @llvm.dbg.value(metadata i64* %arr2, i64 0, metadata !34,\l... metadata !39), !dbg !41\l  tail call void @llvm.dbg.value(metadata i64 %arr2_size, i64 0, metadata !35,\l... metadata !39), !dbg !42\l  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !36,\l... metadata !39), !dbg !43\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !37, metadata\l... !39), !dbg !44\l  %add = add nsw i64 %arr2_size, %arr1_size, !dbg !45\l  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !37,\l... metadata !39), !dbg !44\l  %0 = bitcast i64* %arr1 to i8*, !dbg !46\l  %mul = shl i64 %add, 3, !dbg !47\l  %call = tail call i8* @realloc(i8* %0, i64 %mul) #6, !dbg !48\l  %1 = bitcast i8* %call to i64*, !dbg !49\l  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !36,\l... metadata !39), !dbg !43\l  %cmp = icmp eq i8* %call, null, !dbg !50\l  br i1 %cmp, label %if.then, label %if.end, !dbg !52\l}"];
	Node0xb405c40 -> Node0xb402170;
	Node0xb405c40 -> Node0xb427ef0;
	Node0xb402170 [shape=record,label="{if.then:                                          \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([57 x i8], [57 x\l... i8]* @str.29, i64 0, i64 0)), !dbg !53\l  tail call void @exit(i32 -2) #7, !dbg !55\l  unreachable, !dbg !55\l}"];
	Node0xb427ef0 [shape=record,label="{if.end:                                           \l  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %arr1_size, !dbg !56\l  %2 = bitcast i64* %arrayidx to i8*, !dbg !57\l  %3 = bitcast i64* %arr2 to i8*, !dbg !57\l  %mul2 = shl i64 %arr2_size, 3, !dbg !58\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 %mul2, i32 8,\l... i1 false), !dbg !57\l  ret i64* %1, !dbg !59\l}"];
	colorscheme = "paired12"
        subgraph cluster_0xb42da90 {
          label = "Util.c:204-220
";
          style = solid;
          color = 1
          Node0xb4d5590;
          Node0xb405c40;
          Node0xb402170;
          Node0xb427ef0;
        }
}
