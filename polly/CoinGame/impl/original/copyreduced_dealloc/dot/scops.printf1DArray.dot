digraph "Scop Graph for 'printf1DArray' function" {
	label="Scop Graph for 'printf1DArray' function";

	Node0xb1d83e0 [shape=record,label="{entry:\l  br label %entry.split, !dbg !37\l}"];
	Node0xb1d83e0 -> Node0xb21ff40;
	Node0xb21ff40 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i64* %input, i64 0, metadata !32,\l... metadata !38), !dbg !37\l  tail call void @llvm.dbg.value(metadata i64 %input_size, i64 0, metadata\l... !33, metadata !38), !dbg !39\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !34, metadata\l... !38), !dbg !40\l  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !35, metadata\l... !38), !dbg !41\l  tail call void @llvm.dbg.value(metadata i32 10, i64 0, metadata !36,\l... metadata !38), !dbg !42\l  %putchar = tail call i32 @putchar(i32 91) #6, !dbg !43\l  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !34, metadata\l... !38), !dbg !40\l  %cmp24 = icmp sgt i64 %input_size, 0, !dbg !44\l  br i1 %cmp24, label %for.body.lr.ph, label %for.end, !dbg !48\l}"];
	Node0xb21ff40 -> Node0xb29a880;
	Node0xb21ff40 -> Node0xb236440;
	Node0xb29a880 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body, !dbg !48\l}"];
	Node0xb29a880 -> Node0xb1f71a0;
	Node0xb1f71a0 [shape=record,label="{for.body:                                         \l  %i.026 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]\l  %isFirst.025 = phi i32 [ 1, %for.body.lr.ph ], [ %isFirst.1, %for.inc ]\l  %tobool = icmp eq i32 %isFirst.025, 0, !dbg !49\l  %arrayidx = getelementptr inbounds i64, i64* %input, i64 %i.026, !dbg !52\l  %0 = load i64, i64* %arrayidx, align 8, !dbg !52, !tbaa !54\l  br i1 %tobool, label %if.else, label %if.then, !dbg !58\l}"];
	Node0xb1f71a0 -> Node0xb225410;
	Node0xb1f71a0 -> Node0xb236010;
	Node0xb225410 [shape=record,label="{if.else:                                          \l  %call5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 %0), !dbg !61\l  br label %for.inc\l}"];
	Node0xb225410 -> Node0xb1e26c0;
	Node0xb1e26c0 [shape=record,label="{for.inc:                                          \l  %isFirst.1 = phi i32 [ 0, %if.then ], [ %isFirst.025, %if.else ]\l  %inc = add nuw nsw i64 %i.026, 1, !dbg !63\l  tail call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !34,\l... metadata !38), !dbg !40\l  %cmp = icmp slt i64 %inc, %input_size, !dbg !44\l  %cmp1 = icmp slt i64 %inc, 10, !dbg !65\l  %or.cond = and i1 %cmp, %cmp1, !dbg !48\l  br i1 %or.cond, label %for.body, label %for.cond.for.end_crit_edge, !dbg\l... !48, !llvm.loop !67\l}"];
	Node0xb1e26c0 -> Node0xb1f71a0[constraint=false];
	Node0xb1e26c0 -> Node0xb1ec710;
	Node0xb1ec710 [shape=record,label="{for.cond.for.end_crit_edge:                       \l  %cmp.lcssa27 = phi i1 [ %cmp, %for.inc ]\l  br label %for.end, !dbg !48\l}"];
	Node0xb1ec710 -> Node0xb236440;
	Node0xb236440 [shape=record,label="{for.end:                                          \l  %cmp.lcssa = phi i1 [ %cmp.lcssa27, %for.cond.for.end_crit_edge ], [ %cmp24,\l... %entry.split ]\l  br i1 %cmp.lcssa, label %if.then8, label %if.end11, !dbg !69\l}"];
	Node0xb236440 -> Node0xb1dff40;
	Node0xb236440 -> Node0xb225d80;
	Node0xb1dff40 [shape=record,label="{if.then8:                                         \l  %sub = add nsw i64 %input_size, -1, !dbg !70\l  %arrayidx9 = getelementptr inbounds i64, i64* %input, i64 %sub, !dbg !73\l  %1 = load i64, i64* %arrayidx9, align 8, !dbg !73, !tbaa !54\l  %call10 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x\l... i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 %1), !dbg !74\l  br label %if.end11, !dbg !75\l}"];
	Node0xb1dff40 -> Node0xb225d80;
	Node0xb225d80 [shape=record,label="{if.end11:                                         \l  %putchar23 = tail call i32 @putchar(i32 93) #6, !dbg !76\l  ret void, !dbg !77\l}"];
	Node0xb236010 [shape=record,label="{if.then:                                          \l  %call3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 %0), !dbg !59\l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !35, metadata\l... !38), !dbg !41\l  br label %for.inc, !dbg !60\l}"];
	Node0xb236010 -> Node0xb1e26c0;
	colorscheme = "paired12"
        subgraph cluster_0xb234d20 {
          label = "Util.c:250-270
";
          style = solid;
          color = 1
          subgraph cluster_0xb237a90 {
            label = "Util.c:250-262
Call instruction:   %putchar = tail call i32 @putchar(i32 91) #6, !dbg !43";
            style = solid;
            color = 6
            subgraph cluster_0xb237a10 {
              label = "Util.c:251-262
Call instruction:   %call5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 %0), !dbg !61";
              style = solid;
              color = 5
              subgraph cluster_0xb234da0 {
                label = "Util.c:253-262
Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0xb1f71a0;
                Node0xb225410;
                Node0xb236010;
              }
              Node0xb1e26c0;
            }
            Node0xb21ff40;
            Node0xb29a880;
            Node0xb1ec710;
          }
          subgraph cluster_0xb223c00 {
            label = "Util.c:266-268
Region can not profitably be optimized!";
            style = solid;
            color = 6
            Node0xb236440;
            Node0xb1dff40;
          }
          Node0xb1d83e0;
          Node0xb225d80;
        }
}
