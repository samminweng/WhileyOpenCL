digraph "Scop Graph for 'findMoves' function" {
	label="Scop Graph for 'findMoves' function";

	Node0xa82bc40 [shape=record,label="{entry:\l  br label %entry.split, !dbg !40\l}"];
	Node0xa82bc40 -> Node0xa9135c0;
	Node0xa9135c0 [shape=record,label="{entry.split:                                      \l  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !19, metadata\l... !41), !dbg !40\l  br label %for.cond1.preheader, !dbg !42\l}"];
	Node0xa9135c0 -> Node0xa901bc0;
	Node0xa901bc0 [shape=record,label="{for.cond1.preheader:                              \l  %indvars.iv227 = phi i32 [ 6, %entry.split ], [ %indvars.iv.next228,\l... %for.inc137 ]\l  %indvars.iv221 = phi i64 [ 0, %entry.split ], [ %indvars.iv.next222,\l... %for.inc137 ]\l  br i1 true, label %for.body3.lr.ph, label %for.cond91.preheader, !dbg !46\l}"];
	Node0xa901bc0 -> Node0xa829480;
	Node0xa901bc0 -> Node0xa8294a0;
	Node0xa829480 [shape=record,label="{for.body3.lr.ph:                                  \l  br label %for.body3, !dbg !46\l}"];
	Node0xa829480 -> Node0xa8dce80;
	Node0xa8dce80 [shape=record,label="{for.body3:                                        \l  %indvars.iv216 = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next217,\l... %for.inc ]\l  %indvars.iv212 = phi i64 [ %indvars.iv221, %for.body3.lr.ph ], [\l... %indvars.iv.next213, %for.inc ]\l  %arrayidx5 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @Y,\l... i64 0, i64 %indvars.iv216, i64 %indvars.iv212, !dbg !55\l  store i32 0, i32* %arrayidx5, align 4, !dbg !57, !tbaa !58\l  %indvars.iv.next217 = add nuw nsw i64 %indvars.iv216, 1, !dbg !46\l  %cmp6 = icmp slt i64 %indvars.iv.next217, 6, !dbg !62\l  %cmp7 = icmp sgt i64 %indvars.iv212, 0, !dbg !64\l  %or.cond = and i1 %cmp6, %cmp7, !dbg !66\l  br i1 %or.cond, label %if.then, label %if.end, !dbg !66\l}"];
	Node0xa8dce80 -> Node0xa8dcea0;
	Node0xa8dce80 -> Node0xa8dcdb0;
	Node0xa8dcea0 [shape=record,label="{if.then:                                          \l  %0 = add nsw i64 %indvars.iv212, -1, !dbg !67\l  %arrayidx13 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @M,\l... i64 0, i64 %indvars.iv.next217, i64 %0, !dbg !68\l  %1 = load i32, i32* %arrayidx13, align 4, !dbg !68, !tbaa !58\l  store i32 %1, i32* %arrayidx5, align 4, !dbg !70, !tbaa !58\l  br label %if.end, !dbg !71\l}"];
	Node0xa8dcea0 -> Node0xa8dcdb0;
	Node0xa8dcdb0 [shape=record,label="{if.end:                                           \l  %arrayidx21 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @X,\l... i64 0, i64 %indvars.iv216, i64 %indvars.iv212, !dbg !72\l  store i32 0, i32* %arrayidx21, align 4, !dbg !73, !tbaa !58\l  %2 = add nuw nsw i64 %indvars.iv216, 2, !dbg !74\l  %cmp23 = icmp slt i64 %2, 6, !dbg !76\l  br i1 %cmp23, label %if.then24, label %if.end53, !dbg !77\l}"];
	Node0xa8dcdb0 -> Node0xa8dce10;
	Node0xa8dcdb0 -> Node0xa910e40;
	Node0xa8dce10 [shape=record,label="{if.then24:                                        \l  %arrayidx29 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @M,\l... i64 0, i64 %2, i64 %indvars.iv212, !dbg !78\l  %3 = load i32, i32* %arrayidx29, align 4, !dbg !78, !tbaa !58\l  store i32 %3, i32* %arrayidx21, align 4, !dbg !80, !tbaa !58\l  %4 = load i32, i32* %arrayidx5, align 4, !dbg !81, !tbaa !58\l  %cmp42 = icmp sgt i32 %3, %4, !dbg !83\l  %. = select i1 %cmp42, i32 %4, i32 %3, !dbg !84\l  store i32 %., i32* %arrayidx21, align 4, !dbg !85\l  br label %if.end53, !dbg !84\l}"];
	Node0xa8dce10 -> Node0xa910e40;
	Node0xa910e40 [shape=record,label="{if.end53:                                         \l  %arrayidx57 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @Z,\l... i64 0, i64 %indvars.iv216, i64 %indvars.iv212, !dbg !87\l  store i32 0, i32* %arrayidx57, align 4, !dbg !88, !tbaa !58\l  %cmp59 = icmp sgt i64 %indvars.iv212, 1, !dbg !89\l  br i1 %cmp59, label %if.then60, label %for.inc, !dbg !91\l}"];
	Node0xa910e40 -> Node0xa910ea0;
	Node0xa910e40 -> Node0xa910f00;
	Node0xa910ea0 [shape=record,label="{if.then60:                                        \l  %5 = add nsw i64 %indvars.iv212, -2, !dbg !92\l  %arrayidx65 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @M,\l... i64 0, i64 %indvars.iv216, i64 %5, !dbg !94\l  %6 = load i32, i32* %arrayidx65, align 4, !dbg !94, !tbaa !58\l  store i32 %6, i32* %arrayidx57, align 4, !dbg !95, !tbaa !58\l  %7 = load i32, i32* %arrayidx5, align 4, !dbg !96, !tbaa !58\l  %cmp78 = icmp sgt i32 %6, %7, !dbg !98\l  %.204 = select i1 %cmp78, i32 %7, i32 %6, !dbg !99\l  store i32 %.204, i32* %arrayidx57, align 4, !dbg !100\l  br label %for.inc, !dbg !99\l}"];
	Node0xa910ea0 -> Node0xa910f00;
	Node0xa910f00 [shape=record,label="{for.inc:                                          \l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !20, metadata\l... !41), !dbg !102\l  %indvars.iv.next213 = add nuw nsw i64 %indvars.iv212, 1, !dbg !46\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !21, metadata\l... !41), !dbg !103\l  %lftr.wideiv = trunc i64 %indvars.iv.next217 to i32, !dbg !46\l  %exitcond = icmp ne i32 %lftr.wideiv, %indvars.iv227, !dbg !46\l  br i1 %exitcond, label %for.body3, label\l... %for.cond1.for.cond91.preheader_crit_edge, !dbg !46\l}"];
	Node0xa910f00 -> Node0xa8dce80[constraint=false];
	Node0xa910f00 -> Node0xa837d00;
	Node0xa837d00 [shape=record,label="{for.cond1.for.cond91.preheader_crit_edge:         \l  br label %for.cond91.preheader, !dbg !46\l}"];
	Node0xa837d00 -> Node0xa8294a0;
	Node0xa8294a0 [shape=record,label="{for.cond91.preheader:                             \l  br i1 true, label %for.body93.lr.ph, label %for.inc137, !dbg !51\l}"];
	Node0xa8294a0 -> Node0xa837d20;
	Node0xa8294a0 -> Node0xa8273f0;
	Node0xa837d20 [shape=record,label="{for.body93.lr.ph:                                 \l  br label %for.body93, !dbg !51\l}"];
	Node0xa837d20 -> Node0xa8e2cb0;
	Node0xa8e2cb0 [shape=record,label="{for.body93:                                       \l  %indvars.iv225 = phi i64 [ 0, %for.body93.lr.ph ], [ %indvars.iv.next226,\l... %for.inc133 ]\l  %indvars.iv223 = phi i64 [ %indvars.iv221, %for.body93.lr.ph ], [\l... %indvars.iv.next224, %for.inc133 ]\l  %arrayidx95 = getelementptr inbounds [6 x i32], [6 x i32]* @V, i64 0, i64\l... %indvars.iv225, !dbg !104\l  %8 = load i32, i32* %arrayidx95, align 4, !dbg !104, !tbaa !58\l  %arrayidx99 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @X,\l... i64 0, i64 %indvars.iv225, i64 %indvars.iv223, !dbg !107\l  %9 = load i32, i32* %arrayidx99, align 4, !dbg !107, !tbaa !58\l  %add100 = add nsw i32 %9, %8, !dbg !108\l  %arrayidx102 = getelementptr inbounds [6 x i32], [6 x i32]* @V, i64 0, i64\l... %indvars.iv223, !dbg !109\l  %10 = load i32, i32* %arrayidx102, align 4, !dbg !109, !tbaa !58\l  %arrayidx106 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @Z,\l... i64 0, i64 %indvars.iv225, i64 %indvars.iv223, !dbg !110\l  %11 = load i32, i32* %arrayidx106, align 4, !dbg !110, !tbaa !58\l  %add107 = add nsw i32 %11, %10, !dbg !111\l  %cmp108 = icmp sgt i32 %add100, %add107, !dbg !112\l  %arrayidx120 = getelementptr inbounds [6 x [6 x i32]], [6 x [6 x i32]]* @M,\l... i64 0, i64 %indvars.iv225, i64 %indvars.iv223, !dbg !113\l  br i1 %cmp108, label %if.then109, label %if.else, !dbg !115\l}"];
	Node0xa8e2cb0 -> Node0xa8e2c30;
	Node0xa8e2cb0 -> Node0xa8e2c90;
	Node0xa8e2c30 [shape=record,label="{if.then109:                                       \l  br label %for.inc133, !dbg !116\l}"];
	Node0xa8e2c30 -> Node0xa8e2d50;
	Node0xa8e2d50 [shape=record,label="{for.inc133:                                       \l  %storemerge = phi i32 [ %add107, %if.else ], [ %add100, %if.then109 ]\l  store i32 %storemerge, i32* %arrayidx120, align 4, !dbg !117, !tbaa !58\l  %indvars.iv.next226 = add nuw nsw i64 %indvars.iv225, 1, !dbg !51\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !20, metadata\l... !41), !dbg !102\l  %indvars.iv.next224 = add nuw nsw i64 %indvars.iv223, 1, !dbg !51\l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !21, metadata\l... !41), !dbg !103\l  %lftr.wideiv229 = trunc i64 %indvars.iv.next226 to i32, !dbg !51\l  %exitcond230 = icmp ne i32 %lftr.wideiv229, %indvars.iv227, !dbg !51\l  br i1 %exitcond230, label %for.body93, label\l... %for.cond91.for.inc137_crit_edge, !dbg !51\l}"];
	Node0xa8e2d50 -> Node0xa8e2cb0[constraint=false];
	Node0xa8e2d50 -> Node0xa8274d0;
	Node0xa8274d0 [shape=record,label="{for.cond91.for.inc137_crit_edge:                  \l  br label %for.inc137, !dbg !51\l}"];
	Node0xa8274d0 -> Node0xa8273f0;
	Node0xa8273f0 [shape=record,label="{for.inc137:                                       \l  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !19, metadata\l... !41), !dbg !40\l  %indvars.iv.next222 = add nuw nsw i64 %indvars.iv221, 1, !dbg !42\l  %indvars.iv.next228 = add nsw i32 %indvars.iv227, -1, !dbg !42\l  %exitcond231 = icmp ne i64 %indvars.iv.next222, 6, !dbg !42\l  br i1 %exitcond231, label %for.cond1.preheader, label %for.end139, !dbg !42\l}"];
	Node0xa8273f0 -> Node0xa901bc0[constraint=false];
	Node0xa8273f0 -> Node0xa8e2d70;
	Node0xa8e2d70 [shape=record,label="{for.end139:                                       \l  %12 = load i32, i32* getelementptr inbounds ([6 x [6 x i32]], [6 x [6 x\l... i32]]* @M, i64 0, i64 0, i64 5), align 4, !dbg !118, !tbaa !58\l  ret i32 %12, !dbg !119\l}"];
	Node0xa8e2c90 [shape=record,label="{if.else:                                          \l  br label %for.inc133\l}"];
	Node0xa8e2c90 -> Node0xa8e2d50;
	colorscheme = "paired12"
        subgraph cluster_0xa822430 {
          label = "CoinGame.c:104-152
";
          style = solid;
          color = 1
          subgraph cluster_0xa8dcfc0 {
            label = "CoinGame.c:104-141
";
            style = filled;
            color = 3            subgraph cluster_0xa8dcf40 {
              label = "CoinGame.c:104-128
";
              style = solid;
              color = 5
              subgraph cluster_0xa8df000 {
                label = "CoinGame.c:104-128
";
                style = solid;
                color = 7
                subgraph cluster_0xa8def80 {
                  label = "CoinGame.c:107-114
";
                  style = solid;
                  color = 9
                  Node0xa8dce80;
                  Node0xa8dcea0;
                }
                subgraph cluster_0xa8439f0 {
                  label = "CoinGame.c:116-120
";
                  style = solid;
                  color = 9
                  Node0xa8dcdb0;
                  Node0xa8dce10;
                }
                subgraph cluster_0xa843970 {
                  label = "CoinGame.c:124-128
";
                  style = solid;
                  color = 9
                  Node0xa910e40;
                  Node0xa910ea0;
                }
                Node0xa910f00;
              }
              Node0xa901bc0;
              Node0xa829480;
              Node0xa837d00;
            }
            subgraph cluster_0xa838210 {
              label = "CoinGame.c:104-141
";
              style = solid;
              color = 5
              subgraph cluster_0xa837460 {
                label = "CoinGame.c:104-141
";
                style = solid;
                color = 7
                subgraph cluster_0xa8433b0 {
                  label = "CoinGame.c:139-141
";
                  style = solid;
                  color = 9
                  Node0xa8e2cb0;
                  Node0xa8e2c30;
                  Node0xa8e2c90;
                }
                Node0xa8e2d50;
              }
              Node0xa8294a0;
              Node0xa837d20;
              Node0xa8274d0;
            }
            Node0xa8273f0;
          }
          Node0xa82bc40;
          Node0xa9135c0;
          Node0xa8e2d70;
        }
}
