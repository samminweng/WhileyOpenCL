[kernel] preprocessing with "gcc -C -E -I.  For_Valid_1.c"
/usr/include/x86_64-linux-gnu/bits/byteswap.h:47:[kernel] warning: Calling undeclared function __builtin_bswap32. Old style K&R code?
/usr/include/x86_64-linux-gnu/bits/byteswap.h:111:[kernel] warning: Calling undeclared function __builtin_bswap64. Old style K&R code?
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
[value] computing for function malloc <- main.
        Called from For_Valid_1.c:48.
[kernel] warning: Neither code nor specification for function malloc, generating default assigns from the prototype
[value] using specification for function malloc
[value] Done for function malloc
For_Valid_1.c:52:[kernel] warning: out of bounds write. assert \valid(_5+0);
For_Valid_1.c:52:[kernel] too many locations to update in array. Approximating.
For_Valid_1.c:54:[kernel] too many locations to update in array. Approximating.
For_Valid_1.c:56:[kernel] too many locations to update in array. Approximating.
For_Valid_1.c:59:[value] Assigning imprecise value to _7.
        The imprecision originates from Library function {For_Valid_1.c:48}
For_Valid_1.c:63:[value] Assigning imprecise value to _12.
        The imprecision originates from Library function {For_Valid_1.c:48}
For_Valid_1.c:65:[value] Reading left-value _12.
        It contains a garbled mix of {alloced_return_malloc} because of
        Library function {For_Valid_1.c:48}.
[value] computing for function sprintf <- main.
        Called from For_Valid_1.c:65.
[kernel] warning: Neither code nor specification for function sprintf, generating default assigns from the prototype
[value] using specification for function sprintf
[value] Done for function sprintf
[value] computing for function printf <- main.
        Called from For_Valid_1.c:67.
[kernel] warning: Neither code nor specification for function printf, generating default assigns from the prototype
[value] using specification for function printf
[value] Done for function printf
[value] computing for function sprintf <- main.
        Called from For_Valid_1.c:65.
[value] Done for function sprintf
[value] computing for function printf <- main.
        Called from For_Valid_1.c:67.
[value] Done for function printf
[value] computing for function sprintf <- main.
        Called from For_Valid_1.c:65.
[value] Done for function sprintf
[value] computing for function printf <- main.
        Called from For_Valid_1.c:67.
[value] Done for function printf
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value] Values at end of function main:
          _5_size ∈ {3}
          index_0 ∈ {3}
          _7 ∈
            {{ garbled mix of &{alloced_return_malloc}
             (origin: Library function {For_Valid_1.c:48}) }}
          _11[0] ∈ [--..--] or UNINITIALIZED
             [1..1023] ∈ UNINITIALIZED
          _3 ∈ {2}
          _4 ∈ {3}
          _5 ∈ {{ &alloced_return_malloc + [0..2147483647] }}
          _12 ∈
             {{ garbled mix of &{alloced_return_malloc}
              (origin: Library function {For_Valid_1.c:48}) }}
          _2 ∈ {1}
          __retres ∈ {-1}
          alloced_return_malloc[...] ∈
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Library function {For_Valid_1.c:48}) }}
[from] Computing for function main
[from] Computing for function malloc <-main
[from] Done for function malloc
[from] Computing for function sprintf <-main
[from] Done for function sprintf
For_Valid_1.c:65:[from] warning: variadic call detected. Using only 2 argument(s).
[from] Computing for function printf <-main
[from] Done for function printf
For_Valid_1.c:67:[from] warning: variadic call detected. Using only 1 argument(s).
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
       These dependencies hold at termination for the executions that terminate:
[from] Function malloc:
         \result FROM __size
[from] Function printf:
         \result FROM "%s\n"[bits 0 to 7]
[from] Function sprintf:
         _11[0] FROM _11[0]; "%ld"[bits 0 to 7]
         \result FROM _11[0]; "%ld"[bits 0 to 7]
[from] Function main:
         alloced_return_malloc[bits 0 to 17179869367] FROM \nothing (and SELF)
         \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
