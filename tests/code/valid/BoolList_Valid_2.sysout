[kernel] preprocessing with "gcc -C -E -I.  BoolList_Valid_2.c"
/usr/include/x86_64-linux-gnu/bits/byteswap.h:47:[kernel] warning: Calling undeclared function __builtin_bswap32. Old style K&R code?
/usr/include/x86_64-linux-gnu/bits/byteswap.h:111:[kernel] warning: Calling undeclared function __builtin_bswap64. Old style K&R code?
BoolList_Valid_2.c:57:[kernel] warning: Calling undeclared function isAlive. Old style K&R code?
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
[value] computing for function malloc <- main.
        Called from BoolList_Valid_2.c:179.
[kernel] warning: Neither code nor specification for function malloc, generating default assigns from the prototype
[value] using specification for function malloc
[value] Done for function malloc
BoolList_Valid_2.c:180:[kernel] warning: out of bounds write. assert \valid(_9+0);
BoolList_Valid_2.c:180:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:181:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:182:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:183:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:184:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:185:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:186:[kernel] too many locations to update in array. Approximating.
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:187.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
BoolList_Valid_2.c:13:[value] entering loop for the first time
BoolList_Valid_2.c:14:[kernel] warning: out of bounds write. assert \valid(ptr+i);
BoolList_Valid_2.c:14:[value] Assigning imprecise value to *(ptr + i)
        (i.e. {{ alloced_return_malloc -> [0..17179869176],0%8 }} (size:<32>)).
        The imprecision originates from Library function {BoolList_Valid_2.c:11}
BoolList_Valid_2.c:14:[kernel] too many locations to update in array. Approximating.
BoolList_Valid_2.c:14:[value] Assigning imprecise value to *(ptr + i)
        (i.e. {{ alloced_return_malloc -> [0..17179869208],0%8 }} (size:<32>)).
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
BoolList_Valid_2.c:13:[value] assigning non deterministic value for the first time
BoolList_Valid_2.c:14:[value] Assigning imprecise value to *(ptr + i)
        (i.e. {{ alloced_return_malloc -> [0..17179869240],0%8 }} (size:<32>)).
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
BoolList_Valid_2.c:14:[value] Assigning imprecise value to *(ptr + i)
        (i.e. {{ alloced_return_malloc -> [0..17179869272],0%8 }} (size:<32>)).
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
BoolList_Valid_2.c:14:[value] Assigning imprecise value to *(ptr + i)
        (i.e. {{ alloced_return_malloc -> [0..17179869304],0%8 }} (size:<32>)).
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
BoolList_Valid_2.c:14:[value] Assigning imprecise value to *(ptr + i)
        (i.e. {{ alloced_return_malloc -> [0..17179869368],0%8 }} (size:<32>)).
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
[value] Recording results for clone
[value] Done for function clone
BoolList_Valid_2.c:190:[value] entering loop for the first time
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:192.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
BoolList_Valid_2.c:14:[kernel] warning: out of bounds read. assert \valid_read(arr+i);
[value] Recording results for clone
[value] Done for function clone
[value] computing for function toString <- main.
        Called from BoolList_Valid_2.c:193.
[value] computing for function strcpy <- toString <- main.
        Called from BoolList_Valid_2.c:22.
[kernel] warning: Neither code nor specification for function strcpy, generating default assigns from the prototype
[value] using specification for function strcpy
[value] Done for function strcpy
BoolList_Valid_2.c:23:[value] entering loop for the first time
BoolList_Valid_2.c:24:[kernel] warning: out of bounds read. assert \valid_read(arr+i);
BoolList_Valid_2.c:24:[value] Reading left-value *(arr + i).
        The location is {{ alloced_return_malloc -> [0..17179869176],0%8 }}.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
BoolList_Valid_2.c:24:[kernel] warning: pointer comparison: assert \pointer_comparable((void *)*(arr+i), (void *)1);
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[kernel] warning: Neither code nor specification for function strcat, generating default assigns from the prototype
[value] using specification for function strcat
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
BoolList_Valid_2.c:24:[value] Reading left-value *(arr + i).
        The location is {{ alloced_return_malloc -> [0..17179869208],0%8 }}.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
BoolList_Valid_2.c:24:[value] Reading left-value *(arr + i).
        The location is {{ alloced_return_malloc -> [0..17179869240],0%8 }}.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
BoolList_Valid_2.c:24:[value] Reading left-value *(arr + i).
        The location is {{ alloced_return_malloc -> [0..17179869272],0%8 }}.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
BoolList_Valid_2.c:24:[value] Reading left-value *(arr + i).
        The location is {{ alloced_return_malloc -> [0..17179869304],0%8 }}.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
BoolList_Valid_2.c:24:[value] Reading left-value *(arr + i).
        The location is {{ alloced_return_malloc -> [0..17179869368],0%8 }}.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:33.
[value] Done for function strcat
[value] computing for function strlen <- toString <- main.
        Called from BoolList_Valid_2.c:35.
[kernel] warning: Neither code nor specification for function strlen, generating default assigns from the prototype
[value] using specification for function strlen
[value] Done for function strlen
BoolList_Valid_2.c:36:[kernel] warning: signed overflow. assert len+1 â‰¤ 2147483647;
BoolList_Valid_2.c:36:[kernel] warning: out of bounds write. assert \valid(str+(int)(len+1));
[value] Recording results for toString
[value] Done for function toString
[value] computing for function printf <- main.
        Called from BoolList_Valid_2.c:193.
[kernel] warning: Neither code nor specification for function printf, generating default assigns from the prototype
[value] using specification for function printf
[value] Done for function printf
[value] computing for function play <- main.
        Called from BoolList_Valid_2.c:194.
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:51.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:52.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
BoolList_Valid_2.c:55:[value] entering loop for the first time
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
BoolList_Valid_2.c:85:[kernel] warning: out of bounds write. assert \valid(_1+_7);
BoolList_Valid_2.c:85:[kernel] too many locations to update in array. Approximating.
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
BoolList_Valid_2.c:126:[kernel] warning: out of bounds read. assert \valid_read(_1+_12);
BoolList_Valid_2.c:126:[value] Assigning imprecise value to _13.
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
BoolList_Valid_2.c:128:[value] Reading left-value _13.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
BoolList_Valid_2.c:128:[kernel] warning: pointer comparison: assert \pointer_comparable((void *)_13, (void *)_14);
BoolList_Valid_2.c:142:[value] Assigning imprecise value to _19.
        The imprecision originates from Misaligned {BoolList_Valid_2.c:14}
BoolList_Valid_2.c:144:[value] Reading left-value _19.
        It contains a garbled mix of {alloced_return_malloc} because of Misaligned
        {BoolList_Valid_2.c:14}.
BoolList_Valid_2.c:144:[kernel] warning: pointer comparison: assert \pointer_comparable((void *)_19, (void *)_20);
[value] Recording results for isAlive
[value] Done for function isAlive
BoolList_Valid_2.c:72:[kernel] warning: out of bounds write. assert \valid(_1+_7);
BoolList_Valid_2.c:72:[kernel] too many locations to update in array. Approximating.
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] computing for function perror <- isAlive <- play <- main.
        Called from BoolList_Valid_2.c:140.
[kernel] warning: Neither code nor specification for function perror, generating default assigns from the prototype
[value] using specification for function perror
[value] Done for function perror
[value] Recording results for isAlive
[value] Done for function isAlive
[value] Recording results for play
[value] Done for function play
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:195.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:192.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function toString <- main.
        Called from BoolList_Valid_2.c:193.
[value] computing for function strcpy <- toString <- main.
        Called from BoolList_Valid_2.c:22.
[value] Done for function strcpy
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:33.
[value] Done for function strcat
[value] computing for function strlen <- toString <- main.
        Called from BoolList_Valid_2.c:35.
[value] Done for function strlen
[value] Recording results for toString
[value] Done for function toString
[value] computing for function printf <- main.
        Called from BoolList_Valid_2.c:193.
[value] Done for function printf
[value] computing for function play <- main.
        Called from BoolList_Valid_2.c:194.
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:51.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:52.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] computing for function perror <- isAlive <- play <- main.
        Called from BoolList_Valid_2.c:140.
[value] Done for function perror
[value] Recording results for isAlive
[value] Done for function isAlive
[value] Recording results for play
[value] Done for function play
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:195.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:192.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function toString <- main.
        Called from BoolList_Valid_2.c:193.
[value] computing for function strcpy <- toString <- main.
        Called from BoolList_Valid_2.c:22.
[value] Done for function strcpy
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:33.
[value] Done for function strcat
[value] computing for function strlen <- toString <- main.
        Called from BoolList_Valid_2.c:35.
[value] Done for function strlen
[value] Recording results for toString
[value] Done for function toString
[value] computing for function printf <- main.
        Called from BoolList_Valid_2.c:193.
[value] Done for function printf
[value] computing for function play <- main.
        Called from BoolList_Valid_2.c:194.
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:51.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:52.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] computing for function perror <- isAlive <- play <- main.
        Called from BoolList_Valid_2.c:140.
[value] Done for function perror
[value] Recording results for isAlive
[value] Done for function isAlive
[value] Recording results for play
[value] Done for function play
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:195.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:192.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function toString <- main.
        Called from BoolList_Valid_2.c:193.
[value] computing for function strcpy <- toString <- main.
        Called from BoolList_Valid_2.c:22.
[value] Done for function strcpy
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:33.
[value] Done for function strcat
[value] computing for function strlen <- toString <- main.
        Called from BoolList_Valid_2.c:35.
[value] Done for function strlen
[value] Recording results for toString
[value] Done for function toString
[value] computing for function printf <- main.
        Called from BoolList_Valid_2.c:193.
[value] Done for function printf
[value] computing for function play <- main.
        Called from BoolList_Valid_2.c:194.
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:51.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:52.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] computing for function perror <- isAlive <- play <- main.
        Called from BoolList_Valid_2.c:140.
[value] Done for function perror
[value] Recording results for isAlive
[value] Done for function isAlive
[value] Recording results for play
[value] Done for function play
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:195.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:192.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function toString <- main.
        Called from BoolList_Valid_2.c:193.
[value] computing for function strcpy <- toString <- main.
        Called from BoolList_Valid_2.c:22.
[value] Done for function strcpy
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:25.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:27.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:30.
[value] Done for function strcat
[value] computing for function strcat <- toString <- main.
        Called from BoolList_Valid_2.c:33.
[value] Done for function strcat
[value] computing for function strlen <- toString <- main.
        Called from BoolList_Valid_2.c:35.
[value] Done for function strlen
[value] Recording results for toString
[value] Done for function toString
[value] computing for function printf <- main.
        Called from BoolList_Valid_2.c:193.
[value] Done for function printf
[value] computing for function play <- main.
        Called from BoolList_Valid_2.c:194.
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:51.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function clone <- play <- main.
        Called from BoolList_Valid_2.c:52.
[value] computing for function malloc <- clone <- play <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] Recording results for isAlive
[value] Done for function isAlive
[value] computing for function isAlive <- play <- main.
        Called from BoolList_Valid_2.c:57.
[value] computing for function perror <- isAlive <- play <- main.
        Called from BoolList_Valid_2.c:140.
[value] Done for function perror
[value] Recording results for isAlive
[value] Done for function isAlive
[value] Recording results for play
[value] Done for function play
[value] computing for function clone <- main.
        Called from BoolList_Valid_2.c:195.
[value] computing for function malloc <- clone <- main.
        Called from BoolList_Valid_2.c:11.
[value] Done for function malloc
[value] Recording results for clone
[value] Done for function clone
[value] Recording results for main
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value] Values at end of function clone:
          ptr âˆˆ {{ NULL + [--..--] ; &alloced_return_malloc + [0..2147483647] }}
          i âˆˆ [7..15]
          alloced_return_malloc[bits 0 to 17179869399] âˆˆ
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Misaligned {BoolList_Valid_2.c:14}) }}
                               [bits 17179869400 to ...] âˆˆ
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Library function {BoolList_Valid_2.c:11}) }}
[value] Values at end of function isAlive:
          _24 âˆˆ {7} or UNINITIALIZED
          _13 âˆˆ
             {{ garbled mix of &{alloced_return_malloc}
              (origin: Misaligned {BoolList_Valid_2.c:14}) }} or UNINITIALIZED
          _12 âˆˆ {0; 1; 2; 3; 4; 5} or UNINITIALIZED
          _23 âˆˆ {0} or UNINITIALIZED
          _14 âˆˆ {1} or UNINITIALIZED
          _17 âˆˆ {1} or UNINITIALIZED
          _19 âˆˆ
             {{ garbled mix of &{alloced_return_malloc}
              (origin: Misaligned {BoolList_Valid_2.c:14}) }} or UNINITIALIZED
          _18 âˆˆ {2; 3; 4; 5; 6; 7} or UNINITIALIZED
          _3 âˆˆ {0}
          _5 âˆˆ {1} or UNINITIALIZED
          _6 âˆˆ {2; 3; 4; 5; 6; 7} or UNINITIALIZED
          _8 âˆˆ {7} or UNINITIALIZED
          _20 âˆˆ {1} or UNINITIALIZED
          _11 âˆˆ {1} or UNINITIALIZED
          _22 âˆˆ {0} or UNINITIALIZED
          _21 âˆˆ {1} or UNINITIALIZED
          __retres âˆˆ {0; 1}
[value] Values at end of function play:
          _1 âˆˆ {{ NULL + [--..--] ; &alloced_return_malloc + [0..2147483647] }}
          _2 âˆˆ {{ NULL + [--..--] ; &alloced_return_malloc + [0..2147483647] }}
          _14 âˆˆ {1} or UNINITIALIZED
          _3 âˆˆ {0}
          _17 âˆˆ {0} or UNINITIALIZED
          _5 âˆˆ {7}
          _6 âˆˆ [7..15]
          _7 âˆˆ {0; 1; 2; 3; 4; 5; 6} or UNINITIALIZED
          _8 âˆˆ {0; 1} or UNINITIALIZED
          _20 âˆˆ {7} or UNINITIALIZED
          _11 âˆˆ {1} or UNINITIALIZED
          alloced_return_malloc[bits 0 to 17179869399] âˆˆ
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Misaligned {BoolList_Valid_2.c:14}) }}
                               [bits 17179869400 to ...] âˆˆ
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Library function {BoolList_Valid_2.c:11}) }}
[value] Values at end of function toString:
          i âˆˆ [7..15]
          len âˆˆ [--..--]
          str[0] âˆˆ [--..--] or UNINITIALIZED
             [1..1023] âˆˆ {0} or UNINITIALIZED
[value] Values at end of function main:
          _13 âˆˆ {0; 1; 2; 3; 4} or UNINITIALIZED
          _12 âˆˆ [5..15]
          _17 âˆˆ
             {{ NULL + [--..--] ; &alloced_return_malloc + [0..2147483647] }} or UNINITIALIZED
          _18 âˆˆ
             {{ NULL + [--..--] ; &alloced_return_malloc + [0..2147483647] }} or UNINITIALIZED
          str[0] âˆˆ [--..--] or UNINITIALIZED
             [1..1023] âˆˆ {0} or UNINITIALIZED
          _1 âˆˆ {{ NULL + [--..--] ; &alloced_return_malloc + [0..2147483647] }}
          _2 âˆˆ {1}
          _3 âˆˆ {1}
          size âˆˆ {7}
          _4 âˆˆ {1}
          _5 âˆˆ {1}
          _6 âˆˆ {1}
          _7 âˆˆ {1}
          _8 âˆˆ {1}
          _9 âˆˆ {{ &alloced_return_malloc + [0..2147483647] }}
          _11 âˆˆ {5}
          _10 âˆˆ {0}
          alloced_return_malloc[bits 0 to 17179869399] âˆˆ
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Misaligned {BoolList_Valid_2.c:14}) }}
                               [bits 17179869400 to ...] âˆˆ
                               {{ garbled mix of &{alloced_return_malloc}
                                (origin: Library function {BoolList_Valid_2.c:11}) }}
/* Generated by Frama-C */
typedef unsigned long size_t;
typedef unsigned long __uint64_t;
/*@ assigns \at(\result,Post) \from *__format; */
extern int printf(char const * __restrict __format , ...);

/*@ assigns \nothing; */
extern void perror(char const *__s);

extern int ( /* missing proto */ __builtin_bswap32)(int x_0);

__inline static unsigned int __bswap_32(unsigned int __bsx)
{
  unsigned int __retres;
  int tmp;
  tmp = __builtin_bswap32((int)__bsx);
  __retres = (unsigned int)tmp;
  return __retres;
}

extern int ( /* missing proto */ __builtin_bswap64)(unsigned long x_0);

__inline static __uint64_t __bswap_64(__uint64_t __bsx)
{
  __uint64_t __retres;
  int tmp;
  tmp = __builtin_bswap64(__bsx);
  __retres = (unsigned long)tmp;
  return __retres;
}

/*@ assigns \at(\result,Post) \from __size; */
extern  __attribute__((__nothrow__)) void *malloc(size_t __size) __attribute__((
__malloc__, __leaf__));

/*@ assigns *__dest;
    assigns \at(\result,Post) \from *__dest, *__src;
    assigns *__dest \from *__dest, *__src;
 */
extern  __attribute__((__nothrow__)) char *strcpy(char * __restrict __dest,
                                                  char const * __restrict __src) __attribute__((
__nonnull__(1,2), __leaf__));

/*@ assigns *__dest;
    assigns \at(\result,Post) \from *__dest, *__src;
    assigns *__dest \from *__dest, *__src;
 */
extern  __attribute__((__nothrow__)) char *strcat(char * __restrict __dest,
                                                  char const * __restrict __src) __attribute__((
__nonnull__(1,2), __leaf__));

/*@ assigns \at(\result,Post) \from *__s; */
extern  __attribute__((__nothrow__)) size_t strlen(char const *__s) __attribute__((
__pure__, __nonnull__(1), __leaf__));

int *clone(int *arr, int size)
{
  int *ptr;
  int i;
  ptr = (int *)malloc((unsigned long)((unsigned int)size * sizeof(int)));
  i = 0;
  while (i < size) {
    /*@ assert Value: mem_access: \valid(ptr+i); */
    /*@ assert Value: mem_access: \valid_read(arr+i); */
    *(ptr + i) = *(arr + i);
    i ++;
  }
  return ptr;
}

char *toString(int *arr, int size, char *str)
{
  int i;
  int len;
  size_t tmp;
  i = 0;
  strcpy(str,"[");
  i = 0;
  while (i < size) {
    /*@ assert Value: mem_access: \valid_read(arr+i); */
    /*@ assert
        Value: ptr_comparison:
          \pointer_comparable((void *)*(arr+i), (void *)1);
    */
    if (*(arr + i) == 1) strcat(str,"true"); else strcat(str,"false");
    if (i < size - 1) strcat(str,", ");
    i ++;
  }
  strcat(str,"]");
  {
    /*undefined sequence*/
    tmp = strlen((char const *)str);
    len = (int)tmp;
  }
  /*@ assert Value: signed_overflow: len+1 â‰¤ 2147483647; */
  /*@ assert Value: mem_access: \valid(str+(int)(len+1)); */
  *(str + (len + 1)) = (char)'\000';
  return str;
}

int isAlive(int _0, int *_1, int size);

int *play(int *_0, int size)
{
  int *_1;
  int *_2;
  int _14;
  int _3;
  int _17;
  int _5;
  int _6;
  int _7;
  int _8;
  int _20;
  int _11;
  _2 = clone(_0,size);
  _1 = clone(_2,size);
  _3 = 0;
  _5 = size;
  _6 = _3;
  while (_6 < _5) {
    _7 = _6;
    _8 = isAlive(_7,_0,size);
    _11 = 1;
    if (_8 == _11) goto blklab4;
    goto blklab2;
    blklab4: _14 = 1;
    _20 = 0;
    if (_7 >= _20) goto blklab11;
    perror("fail index out of bounds (negative)");
    blklab11: _20 = size;
    if (_7 < _20) goto blklab12;
    perror("fail index out of bounds (not less than length)");
    blklab12:
      /*@ assert Value: mem_access: \valid(_1+_7); */
      *(_1 + _7) = _14;
    goto blklab3;
    blklab2: _17 = 0;
    _20 = 0;
    if (_7 >= _20) goto blklab13;
    perror("fail index out of bounds (negative)");
    blklab13: _20 = size;
    if (_7 < _20) goto blklab14;
    perror("fail index out of bounds (not less than length)");
    blklab14:
      /*@ assert Value: mem_access: \valid(_1+_7); */
      *(_1 + _7) = _17;
    blklab3: ;
    _6 ++;
  }
  blklab1: ;
  return _1;
}

int isAlive(int _0, int *_1, int size)
{
  int __retres;
  int _24;
  int _13;
  int _12;
  int _23;
  int _14;
  int _17;
  int _19;
  int _18;
  int _3;
  int _5;
  int _6;
  int _8;
  int _20;
  int _11;
  int _22;
  int _21;
  _3 = 0;
  if (_0 <= _3) goto blklab5;
  _5 = 1;
  _6 = _0 + _5;
  _8 = size;
  if (_6 >= _8) goto blklab5;
  _11 = 1;
  _12 = _0 - _11;
  _23 = 0;
  if (_12 >= _23) goto blklab15;
  perror("fail index out of bounds (negative)");
  blklab15: _24 = size;
  if (_12 < _24) goto blklab16;
  perror("fail index out of bounds (not less than length)");
  blklab16:
    /*@ assert Value: mem_access: \valid_read(_1+_12); */
    _13 = *(_1 + _12);
  _14 = 1;
  /*@ assert
      Value: ptr_comparison: \pointer_comparable((void *)_13, (void *)_14);
  */
  if (_13 == _14) goto blklab7;
  goto blklab5;
  blklab7: _17 = 1;
  _18 = _0 + _17;
  _23 = 0;
  if (_18 >= _23) goto blklab17;
  perror("fail index out of bounds (negative)");
  blklab17: _24 = size;
  if (_18 < _24) goto blklab18;
  perror("fail index out of bounds (not less than length)");
  blklab18: _19 = *(_1 + _18);
  _20 = 1;
  /*@ assert
      Value: ptr_comparison: \pointer_comparable((void *)_19, (void *)_20);
  */
  if (_19 == _20) goto blklab8;
  goto blklab5;
  blklab8: _21 = 1;
  __retres = _21;
  goto return_label;
  blklab5: _22 = 0;
  __retres = _22;
  return_label: /* internal */ return __retres;
}

void main(int argc, char **argv)
{
  int _13;
  int _12;
  int *_17;
  int *_18;
  char str[1024];
  int *_1;
  int _2;
  int _3;
  int size;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int *_9;
  int _11;
  int _10;
  _2 = 1;
  _3 = 1;
  _4 = 1;
  _5 = 1;
  _6 = 1;
  _7 = 1;
  _8 = 1;
  size = 7;
  _9 = (int *)malloc((unsigned long)((unsigned int)size * sizeof(int)));
  /*@ assert Value: mem_access: \valid(_9+0); */
  *(_9 + 0) = _2;
  *(_9 + 1) = _3;
  *(_9 + 2) = _4;
  *(_9 + 3) = _5;
  *(_9 + 4) = _6;
  *(_9 + 5) = _7;
  *(_9 + 6) = _8;
  _1 = clone(_9,size);
  _10 = 0;
  _11 = 5;
  _12 = _10;
  while (_12 < _11) {
    {
      char *tmp_0;
      _13 = _12;
      _17 = clone(_1,size);
      tmp_0 = toString(_17,size,str);
      printf("%s\n",tmp_0);
      _18 = play(_1,size);
      _1 = clone(_18,size);
    }
    _12 ++;
  }
  blklab10: ;
  return;
}


