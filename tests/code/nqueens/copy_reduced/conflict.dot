digraph conflict{
"entry [ENTRY]"[shape=box];
"code [BLOCK]"[shape=box];
"blklab1 [IF]"[shape=box];
"blklab1 [ELSE]"[shape=box];
"blklab0 [IF]"[shape=box];
"blklab0 [ELSE]"[shape=box];
"%10 [RETURN]"[shape=box];
"abs12 [INVOKE]"[shape=box];
"abs12 [BLOCK]"[shape=box];
"abs15 [INVOKE]"[shape=box];
"abs15 [BLOCK]"[shape=box];
"blklab2 [IF]"[shape=box];
"blklab2 [ELSE]"[shape=box];
"blklab3 [BLOCK]"[shape=box];
"%15 [RETURN]"[shape=box];
"exit [EXIT]"[shape=box];
"entry [ENTRY]"->"code [BLOCK]";
"code [BLOCK]"->"blklab1 [IF]";
"code [BLOCK]"->"blklab1 [ELSE]";
"blklab1 [IF]"->"blklab0 [IF]";
"blklab1 [IF]"->"blklab0 [ELSE]";
"blklab1 [ELSE]"->"%10 [RETURN]";
"blklab0 [IF]"->"blklab1 [ELSE]";
"blklab0 [ELSE]"->"abs12 [INVOKE]";
"%10 [RETURN]"->"blklab0 [ELSE]";
"abs12 [INVOKE]"->"abs12 [BLOCK]";
"abs12 [BLOCK]"->"abs15 [INVOKE]";
"abs15 [INVOKE]"->"abs15 [BLOCK]";
"abs15 [BLOCK]"->"blklab2 [IF]";
"abs15 [BLOCK]"->"blklab2 [ELSE]";
"blklab2 [IF]"->"blklab3 [BLOCK]";
"blklab2 [ELSE]"->"blklab3 [BLOCK]";
"blklab3 [BLOCK]"->"%15 [RETURN]";
"%15 [RETURN]"->"exit [EXIT]";

}
