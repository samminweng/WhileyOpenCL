==6171== Memcheck, a memory error detector
==6171== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==6171== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==6171== Command: ./Fibonacci.out
==6171== Parent PID: 4976
==6171== 
==6171== 
==6171== HEAP SUMMARY:
==6171==     in use at exit: 1,872 bytes in 22 blocks
==6171==   total heap usage: 23 allocs, 1 frees, 10,064 bytes allocated
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 6 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400EFB: main (Fibonacci.c:107)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 7 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 8 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 9 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 10 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 11 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 12 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 13 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 14 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x400C86: _fibonacci_ (Fibonacci.c:46)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 15 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 16 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 17 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 18 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 19 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 20 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== 80 bytes in 1 blocks are definitely lost in loss record 21 of 22
==6171==    at 0x4C2DBB6: malloc (vg_replace_malloc.c:299)
==6171==    by 0x4015DC: copy1DArray_int64_t (Util.c:80)
==6171==    by 0x400D2D: _fibonacci_ (Fibonacci.c:50)
==6171==    by 0x400CFF: _fibonacci_ (Fibonacci.c:47)
==6171==    by 0x400FA2: main (Fibonacci.c:116)
==6171== 
==6171== LEAK SUMMARY:
==6171==    definitely lost: 1,280 bytes in 16 blocks
==6171==    indirectly lost: 0 bytes in 0 blocks
==6171==      possibly lost: 0 bytes in 0 blocks
==6171==    still reachable: 592 bytes in 6 blocks
==6171==         suppressed: 0 bytes in 0 blocks
==6171== Reachable blocks (those to which a pointer was found) are not shown.
==6171== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==6171== 
==6171== For counts of detected and suppressed errors, rerun with: -v
==6171== ERROR SUMMARY: 16 errors from 16 contexts (suppressed: 0 from 0)
