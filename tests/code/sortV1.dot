digraph sortV1{
"entry [ENTRY]"->"code [BLOCK]";
"code [BLOCK]"->"blklab0 [IF]";
"code [BLOCK]"->"blklab0 [ELSE]";
"blklab0 [IF]"->"slice8 [INVOKE]";
"blklab0 [ELSE]"->"items [RETURN]";
"slice8 [INVOKE]"->"slice8 [BLOCK]";
"slice8 [BLOCK]"->"sortV111 [INVOKE]";
"sortV111 [INVOKE]"->"sortV111 [BLOCK]";
"sortV111 [BLOCK]"->"slice13 [INVOKE]";
"slice13 [INVOKE]"->"slice13 [BLOCK]";
"slice13 [BLOCK]"->"sortV117 [INVOKE]";
"sortV117 [INVOKE]"->"sortV117 [BLOCK]";
"sortV117 [BLOCK]"->"blklab1 [LOOP_HEADER]";
"blklab1 [LOOP_HEADER]"->"blklab3 [LOOP_BODY]";
"blklab1 [LOOP_HEADER]"->"blklab1 [LOOP_EXIT]";
"blklab3 [LOOP_BODY]"->"blklab1 [LOOP_HEADER]";
"blklab3 [LOOP_BODY]"->"blklab3 [LOOP_BODY]";
"blklab3 [LOOP_BODY]"->"blklab1 [LOOP_EXIT]";
"blklab3 [LOOP_BODY]"->"blklab3 [LOOP_EXIT]";
"blklab1 [LOOP_EXIT]"->"blklab5 [LOOP_HEADER]";
"blklab3 [LOOP_EXIT]"->"blklab4 [BLOCK]";
"blklab4 [BLOCK]"->"blklab2 [BLOCK]";
"blklab5 [LOOP_HEADER]"->"blklab5 [LOOP_BODY]";
"blklab5 [LOOP_HEADER]"->"blklab5 [LOOP_EXIT]";
"blklab5 [LOOP_BODY]"->"blklab5 [LOOP_HEADER]";
"blklab5 [LOOP_BODY]"->"blklab6 [BLOCK]";
"blklab5 [LOOP_EXIT]"->"blklab7 [LOOP_HEADER]";
"blklab7 [LOOP_HEADER]"->"blklab7 [LOOP_BODY]";
"blklab7 [LOOP_HEADER]"->"blklab7 [LOOP_EXIT]";
"blklab7 [LOOP_BODY]"->"blklab7 [LOOP_HEADER]";
"blklab7 [LOOP_BODY]"->"blklab8 [BLOCK]";
"blklab7 [LOOP_EXIT]"->"blklab0 [ELSE]";
"items [RETURN]"->"exit [EXIT]";

}
