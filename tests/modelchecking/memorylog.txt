=== Test report for dealloc assignment_2Vars_test1 ===
The Valgrind memory detector as below:
==10097== Memcheck, a memory error detector
==10097== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10097== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10097== Command: ./impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.dealloc.out
==10097== Parent PID: 10074
==10097== 
==10097== 
==10097== HEAP SUMMARY:
==10097==     in use at exit: 0 bytes in 0 blocks
==10097==   total heap usage: 7 allocs, 7 frees, 8,432 bytes allocated
==10097== 
==10097== All heap blocks were freed -- no leaks are possible
==10097== 
==10097== For counts of detected and suppressed errors, rerun with: -v
==10097== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _5 ) (LINE:20 FILE: impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _5 ) (LINE:22 FILE: impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _8 ) (LINE:28 FILE: impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _8 ) (LINE:30 FILE: impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:32 FILE: impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:34 FILE: impl/dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_2Vars_test2 ===
The Valgrind memory detector as below:
==10113== Memcheck, a memory error detector
==10113== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10113== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10113== Command: ./impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.dealloc.out
==10113== Parent PID: 10074
==10113== 
==10113== 
==10113== HEAP SUMMARY:
==10113==     in use at exit: 0 bytes in 0 blocks
==10113==   total heap usage: 7 allocs, 7 frees, 8,432 bytes allocated
==10113== 
==10113== All heap blocks were freed -- no leaks are possible
==10113== 
==10113== For counts of detected and suppressed errors, rerun with: -v
==10113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _5 ) (LINE:20 FILE: impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _5 ) (LINE:22 FILE: impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _8 ) (LINE:28 FILE: impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _8 ) (LINE:30 FILE: impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:32 FILE: impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:34 FILE: impl/dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test1 ===
The Valgrind memory detector as below:
==10128== Memcheck, a memory error detector
==10128== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10128== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10128== Command: ./impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.dealloc.out
==10128== Parent PID: 10074
==10128== 
==10128== 
==10128== HEAP SUMMARY:
==10128==     in use at exit: 0 bytes in 0 blocks
==10128==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10128== 
==10128== All heap blocks were freed -- no leaks are possible
==10128== 
==10128== For counts of detected and suppressed errors, rerun with: -v
==10128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test10 ===
The Valgrind memory detector as below:
==10143== Memcheck, a memory error detector
==10143== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10143== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10143== Command: ./impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.dealloc.out
==10143== Parent PID: 10074
==10143== 
==10143== 
==10143== HEAP SUMMARY:
==10143==     in use at exit: 0 bytes in 0 blocks
==10143==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10143== 
==10143== All heap blocks were freed -- no leaks are possible
==10143== 
==10143== For counts of detected and suppressed errors, rerun with: -v
==10143== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test100 ===
The Valgrind memory detector as below:
==10158== Memcheck, a memory error detector
==10158== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10158== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10158== Command: ./impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.dealloc.out
==10158== Parent PID: 10074
==10158== 
==10158== 
==10158== HEAP SUMMARY:
==10158==     in use at exit: 0 bytes in 0 blocks
==10158==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10158== 
==10158== All heap blocks were freed -- no leaks are possible
==10158== 
==10158== For counts of detected and suppressed errors, rerun with: -v
==10158== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test101 ===
The Valgrind memory detector as below:
==10177== Memcheck, a memory error detector
==10177== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10177== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10177== Command: ./impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.dealloc.out
==10177== Parent PID: 10074
==10177== 
==10177== 
==10177== HEAP SUMMARY:
==10177==     in use at exit: 0 bytes in 0 blocks
==10177==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10177== 
==10177== All heap blocks were freed -- no leaks are possible
==10177== 
==10177== For counts of detected and suppressed errors, rerun with: -v
==10177== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test102 ===
The Valgrind memory detector as below:
==10192== Memcheck, a memory error detector
==10192== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10192== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10192== Command: ./impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.dealloc.out
==10192== Parent PID: 10074
==10192== 
==10192== 
==10192== HEAP SUMMARY:
==10192==     in use at exit: 0 bytes in 0 blocks
==10192==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10192== 
==10192== All heap blocks were freed -- no leaks are possible
==10192== 
==10192== For counts of detected and suppressed errors, rerun with: -v
==10192== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test103 ===
The Valgrind memory detector as below:
==10208== Memcheck, a memory error detector
==10208== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10208== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10208== Command: ./impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.dealloc.out
==10208== Parent PID: 10074
==10208== 
==10208== 
==10208== HEAP SUMMARY:
==10208==     in use at exit: 0 bytes in 0 blocks
==10208==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10208== 
==10208== All heap blocks were freed -- no leaks are possible
==10208== 
==10208== For counts of detected and suppressed errors, rerun with: -v
==10208== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test104 ===
The Valgrind memory detector as below:
==10223== Memcheck, a memory error detector
==10223== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10223== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10223== Command: ./impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.dealloc.out
==10223== Parent PID: 10074
==10223== 
==10223== 
==10223== HEAP SUMMARY:
==10223==     in use at exit: 0 bytes in 0 blocks
==10223==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10223== 
==10223== All heap blocks were freed -- no leaks are possible
==10223== 
==10223== For counts of detected and suppressed errors, rerun with: -v
==10223== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test105 ===
The Valgrind memory detector as below:
==10239== Memcheck, a memory error detector
==10239== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10239== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10239== Command: ./impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.dealloc.out
==10239== Parent PID: 10074
==10239== 
==10239== 
==10239== HEAP SUMMARY:
==10239==     in use at exit: 0 bytes in 0 blocks
==10239==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10239== 
==10239== All heap blocks were freed -- no leaks are possible
==10239== 
==10239== For counts of detected and suppressed errors, rerun with: -v
==10239== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test106 ===
The Valgrind memory detector as below:
==10254== Memcheck, a memory error detector
==10254== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10254== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10254== Command: ./impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.dealloc.out
==10254== Parent PID: 10074
==10254== 
==10254== 
==10254== HEAP SUMMARY:
==10254==     in use at exit: 0 bytes in 0 blocks
==10254==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10254== 
==10254== All heap blocks were freed -- no leaks are possible
==10254== 
==10254== For counts of detected and suppressed errors, rerun with: -v
==10254== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test107 ===
The Valgrind memory detector as below:
==10270== Memcheck, a memory error detector
==10270== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10270== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10270== Command: ./impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.dealloc.out
==10270== Parent PID: 10074
==10270== 
==10270== 
==10270== HEAP SUMMARY:
==10270==     in use at exit: 0 bytes in 0 blocks
==10270==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10270== 
==10270== All heap blocks were freed -- no leaks are possible
==10270== 
==10270== For counts of detected and suppressed errors, rerun with: -v
==10270== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test108 ===
The Valgrind memory detector as below:
==10286== Memcheck, a memory error detector
==10286== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10286== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10286== Command: ./impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.dealloc.out
==10286== Parent PID: 10074
==10286== 
==10286== 
==10286== HEAP SUMMARY:
==10286==     in use at exit: 0 bytes in 0 blocks
==10286==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10286== 
==10286== All heap blocks were freed -- no leaks are possible
==10286== 
==10286== For counts of detected and suppressed errors, rerun with: -v
==10286== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test109 ===
The Valgrind memory detector as below:
==10301== Memcheck, a memory error detector
==10301== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10301== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10301== Command: ./impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.dealloc.out
==10301== Parent PID: 10074
==10301== 
==10301== 
==10301== HEAP SUMMARY:
==10301==     in use at exit: 0 bytes in 0 blocks
==10301==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10301== 
==10301== All heap blocks were freed -- no leaks are possible
==10301== 
==10301== For counts of detected and suppressed errors, rerun with: -v
==10301== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test11 ===
The Valgrind memory detector as below:
==10316== Memcheck, a memory error detector
==10316== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10316== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10316== Command: ./impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.dealloc.out
==10316== Parent PID: 10074
==10316== 
==10316== 
==10316== HEAP SUMMARY:
==10316==     in use at exit: 0 bytes in 0 blocks
==10316==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10316== 
==10316== All heap blocks were freed -- no leaks are possible
==10316== 
==10316== For counts of detected and suppressed errors, rerun with: -v
==10316== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test110 ===
The Valgrind memory detector as below:
==10345== Memcheck, a memory error detector
==10345== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10345== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10345== Command: ./impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.dealloc.out
==10345== Parent PID: 10074
==10345== 
==10345== 
==10345== HEAP SUMMARY:
==10345==     in use at exit: 0 bytes in 0 blocks
==10345==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10345== 
==10345== All heap blocks were freed -- no leaks are possible
==10345== 
==10345== For counts of detected and suppressed errors, rerun with: -v
==10345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test111 ===
The Valgrind memory detector as below:
==10361== Memcheck, a memory error detector
==10361== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10361== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10361== Command: ./impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.dealloc.out
==10361== Parent PID: 10074
==10361== 
==10361== 
==10361== HEAP SUMMARY:
==10361==     in use at exit: 0 bytes in 0 blocks
==10361==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10361== 
==10361== All heap blocks were freed -- no leaks are possible
==10361== 
==10361== For counts of detected and suppressed errors, rerun with: -v
==10361== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test112 ===
The Valgrind memory detector as below:
==10377== Memcheck, a memory error detector
==10377== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10377== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10377== Command: ./impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.dealloc.out
==10377== Parent PID: 10074
==10377== 
==10377== 
==10377== HEAP SUMMARY:
==10377==     in use at exit: 0 bytes in 0 blocks
==10377==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10377== 
==10377== All heap blocks were freed -- no leaks are possible
==10377== 
==10377== For counts of detected and suppressed errors, rerun with: -v
==10377== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test113 ===
The Valgrind memory detector as below:
==10392== Memcheck, a memory error detector
==10392== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10392== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10392== Command: ./impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.dealloc.out
==10392== Parent PID: 10074
==10392== 
==10392== 
==10392== HEAP SUMMARY:
==10392==     in use at exit: 0 bytes in 0 blocks
==10392==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10392== 
==10392== All heap blocks were freed -- no leaks are possible
==10392== 
==10392== For counts of detected and suppressed errors, rerun with: -v
==10392== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test114 ===
The Valgrind memory detector as below:
==10407== Memcheck, a memory error detector
==10407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10407== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10407== Command: ./impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.dealloc.out
==10407== Parent PID: 10074
==10407== 
==10407== 
==10407== HEAP SUMMARY:
==10407==     in use at exit: 0 bytes in 0 blocks
==10407==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10407== 
==10407== All heap blocks were freed -- no leaks are possible
==10407== 
==10407== For counts of detected and suppressed errors, rerun with: -v
==10407== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test115 ===
The Valgrind memory detector as below:
==10423== Memcheck, a memory error detector
==10423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10423== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10423== Command: ./impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.dealloc.out
==10423== Parent PID: 10074
==10423== 
==10423== 
==10423== HEAP SUMMARY:
==10423==     in use at exit: 0 bytes in 0 blocks
==10423==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10423== 
==10423== All heap blocks were freed -- no leaks are possible
==10423== 
==10423== For counts of detected and suppressed errors, rerun with: -v
==10423== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test116 ===
The Valgrind memory detector as below:
==10438== Memcheck, a memory error detector
==10438== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10438== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10438== Command: ./impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.dealloc.out
==10438== Parent PID: 10074
==10438== 
==10438== 
==10438== HEAP SUMMARY:
==10438==     in use at exit: 0 bytes in 0 blocks
==10438==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10438== 
==10438== All heap blocks were freed -- no leaks are possible
==10438== 
==10438== For counts of detected and suppressed errors, rerun with: -v
==10438== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test117 ===
The Valgrind memory detector as below:
==10453== Memcheck, a memory error detector
==10453== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10453== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10453== Command: ./impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.dealloc.out
==10453== Parent PID: 10074
==10453== 
==10453== 
==10453== HEAP SUMMARY:
==10453==     in use at exit: 0 bytes in 0 blocks
==10453==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10453== 
==10453== All heap blocks were freed -- no leaks are possible
==10453== 
==10453== For counts of detected and suppressed errors, rerun with: -v
==10453== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test118 ===
The Valgrind memory detector as below:
==10469== Memcheck, a memory error detector
==10469== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10469== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10469== Command: ./impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.dealloc.out
==10469== Parent PID: 10074
==10469== 
==10469== 
==10469== HEAP SUMMARY:
==10469==     in use at exit: 0 bytes in 0 blocks
==10469==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10469== 
==10469== All heap blocks were freed -- no leaks are possible
==10469== 
==10469== For counts of detected and suppressed errors, rerun with: -v
==10469== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test119 ===
The Valgrind memory detector as below:
==10484== Memcheck, a memory error detector
==10484== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10484== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10484== Command: ./impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.dealloc.out
==10484== Parent PID: 10074
==10484== 
==10484== 
==10484== HEAP SUMMARY:
==10484==     in use at exit: 0 bytes in 0 blocks
==10484==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10484== 
==10484== All heap blocks were freed -- no leaks are possible
==10484== 
==10484== For counts of detected and suppressed errors, rerun with: -v
==10484== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test12 ===
The Valgrind memory detector as below:
==10499== Memcheck, a memory error detector
==10499== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10499== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10499== Command: ./impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.dealloc.out
==10499== Parent PID: 10074
==10499== 
==10499== 
==10499== HEAP SUMMARY:
==10499==     in use at exit: 0 bytes in 0 blocks
==10499==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10499== 
==10499== All heap blocks were freed -- no leaks are possible
==10499== 
==10499== For counts of detected and suppressed errors, rerun with: -v
==10499== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test120 ===
The Valgrind memory detector as below:
==10515== Memcheck, a memory error detector
==10515== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10515== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10515== Command: ./impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.dealloc.out
==10515== Parent PID: 10074
==10515== 
==10515== 
==10515== HEAP SUMMARY:
==10515==     in use at exit: 0 bytes in 0 blocks
==10515==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10515== 
==10515== All heap blocks were freed -- no leaks are possible
==10515== 
==10515== For counts of detected and suppressed errors, rerun with: -v
==10515== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test121 ===
The Valgrind memory detector as below:
==10530== Memcheck, a memory error detector
==10530== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10530== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10530== Command: ./impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.dealloc.out
==10530== Parent PID: 10074
==10530== 
==10530== 
==10530== HEAP SUMMARY:
==10530==     in use at exit: 0 bytes in 0 blocks
==10530==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10530== 
==10530== All heap blocks were freed -- no leaks are possible
==10530== 
==10530== For counts of detected and suppressed errors, rerun with: -v
==10530== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test122 ===
The Valgrind memory detector as below:
==10545== Memcheck, a memory error detector
==10545== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10545== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10545== Command: ./impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.dealloc.out
==10545== Parent PID: 10074
==10545== 
==10545== 
==10545== HEAP SUMMARY:
==10545==     in use at exit: 0 bytes in 0 blocks
==10545==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10545== 
==10545== All heap blocks were freed -- no leaks are possible
==10545== 
==10545== For counts of detected and suppressed errors, rerun with: -v
==10545== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test123 ===
The Valgrind memory detector as below:
==10561== Memcheck, a memory error detector
==10561== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10561== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10561== Command: ./impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.dealloc.out
==10561== Parent PID: 10074
==10561== 
==10561== 
==10561== HEAP SUMMARY:
==10561==     in use at exit: 0 bytes in 0 blocks
==10561==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10561== 
==10561== All heap blocks were freed -- no leaks are possible
==10561== 
==10561== For counts of detected and suppressed errors, rerun with: -v
==10561== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test124 ===
The Valgrind memory detector as below:
==10576== Memcheck, a memory error detector
==10576== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10576== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10576== Command: ./impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.dealloc.out
==10576== Parent PID: 10074
==10576== 
==10576== 
==10576== HEAP SUMMARY:
==10576==     in use at exit: 0 bytes in 0 blocks
==10576==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10576== 
==10576== All heap blocks were freed -- no leaks are possible
==10576== 
==10576== For counts of detected and suppressed errors, rerun with: -v
==10576== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test125 ===
The Valgrind memory detector as below:
==10592== Memcheck, a memory error detector
==10592== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10592== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10592== Command: ./impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.dealloc.out
==10592== Parent PID: 10074
==10592== 
==10592== 
==10592== HEAP SUMMARY:
==10592==     in use at exit: 0 bytes in 0 blocks
==10592==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10592== 
==10592== All heap blocks were freed -- no leaks are possible
==10592== 
==10592== For counts of detected and suppressed errors, rerun with: -v
==10592== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test126 ===
The Valgrind memory detector as below:
==10608== Memcheck, a memory error detector
==10608== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10608== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10608== Command: ./impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.dealloc.out
==10608== Parent PID: 10074
==10608== 
==10608== 
==10608== HEAP SUMMARY:
==10608==     in use at exit: 0 bytes in 0 blocks
==10608==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10608== 
==10608== All heap blocks were freed -- no leaks are possible
==10608== 
==10608== For counts of detected and suppressed errors, rerun with: -v
==10608== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test127 ===
The Valgrind memory detector as below:
==10624== Memcheck, a memory error detector
==10624== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10624== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10624== Command: ./impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.dealloc.out
==10624== Parent PID: 10074
==10624== 
==10624== 
==10624== HEAP SUMMARY:
==10624==     in use at exit: 0 bytes in 0 blocks
==10624==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10624== 
==10624== All heap blocks were freed -- no leaks are possible
==10624== 
==10624== For counts of detected and suppressed errors, rerun with: -v
==10624== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test128 ===
The Valgrind memory detector as below:
==10639== Memcheck, a memory error detector
==10639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10639== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10639== Command: ./impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.dealloc.out
==10639== Parent PID: 10074
==10639== 
==10639== 
==10639== HEAP SUMMARY:
==10639==     in use at exit: 0 bytes in 0 blocks
==10639==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10639== 
==10639== All heap blocks were freed -- no leaks are possible
==10639== 
==10639== For counts of detected and suppressed errors, rerun with: -v
==10639== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test129 ===
The Valgrind memory detector as below:
==10654== Memcheck, a memory error detector
==10654== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10654== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10654== Command: ./impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.dealloc.out
==10654== Parent PID: 10074
==10654== 
==10654== 
==10654== HEAP SUMMARY:
==10654==     in use at exit: 0 bytes in 0 blocks
==10654==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10654== 
==10654== All heap blocks were freed -- no leaks are possible
==10654== 
==10654== For counts of detected and suppressed errors, rerun with: -v
==10654== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test13 ===
The Valgrind memory detector as below:
==10669== Memcheck, a memory error detector
==10669== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10669== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10669== Command: ./impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.dealloc.out
==10669== Parent PID: 10074
==10669== 
==10669== 
==10669== HEAP SUMMARY:
==10669==     in use at exit: 0 bytes in 0 blocks
==10669==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10669== 
==10669== All heap blocks were freed -- no leaks are possible
==10669== 
==10669== For counts of detected and suppressed errors, rerun with: -v
==10669== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test130 ===
The Valgrind memory detector as below:
==10685== Memcheck, a memory error detector
==10685== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10685== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10685== Command: ./impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.dealloc.out
==10685== Parent PID: 10074
==10685== 
==10685== 
==10685== HEAP SUMMARY:
==10685==     in use at exit: 0 bytes in 0 blocks
==10685==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10685== 
==10685== All heap blocks were freed -- no leaks are possible
==10685== 
==10685== For counts of detected and suppressed errors, rerun with: -v
==10685== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test131 ===
The Valgrind memory detector as below:
==10700== Memcheck, a memory error detector
==10700== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10700== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10700== Command: ./impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.dealloc.out
==10700== Parent PID: 10074
==10700== 
==10700== 
==10700== HEAP SUMMARY:
==10700==     in use at exit: 0 bytes in 0 blocks
==10700==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10700== 
==10700== All heap blocks were freed -- no leaks are possible
==10700== 
==10700== For counts of detected and suppressed errors, rerun with: -v
==10700== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test132 ===
The Valgrind memory detector as below:
==10715== Memcheck, a memory error detector
==10715== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10715== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10715== Command: ./impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.dealloc.out
==10715== Parent PID: 10074
==10715== 
==10715== 
==10715== HEAP SUMMARY:
==10715==     in use at exit: 0 bytes in 0 blocks
==10715==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10715== 
==10715== All heap blocks were freed -- no leaks are possible
==10715== 
==10715== For counts of detected and suppressed errors, rerun with: -v
==10715== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test133 ===
The Valgrind memory detector as below:
==10731== Memcheck, a memory error detector
==10731== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10731== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10731== Command: ./impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.dealloc.out
==10731== Parent PID: 10074
==10731== 
==10731== 
==10731== HEAP SUMMARY:
==10731==     in use at exit: 0 bytes in 0 blocks
==10731==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10731== 
==10731== All heap blocks were freed -- no leaks are possible
==10731== 
==10731== For counts of detected and suppressed errors, rerun with: -v
==10731== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test134 ===
The Valgrind memory detector as below:
==10746== Memcheck, a memory error detector
==10746== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10746== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10746== Command: ./impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.dealloc.out
==10746== Parent PID: 10074
==10746== 
==10746== 
==10746== HEAP SUMMARY:
==10746==     in use at exit: 0 bytes in 0 blocks
==10746==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10746== 
==10746== All heap blocks were freed -- no leaks are possible
==10746== 
==10746== For counts of detected and suppressed errors, rerun with: -v
==10746== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test135 ===
The Valgrind memory detector as below:
==10761== Memcheck, a memory error detector
==10761== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10761== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10761== Command: ./impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.dealloc.out
==10761== Parent PID: 10074
==10761== 
==10761== 
==10761== HEAP SUMMARY:
==10761==     in use at exit: 0 bytes in 0 blocks
==10761==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10761== 
==10761== All heap blocks were freed -- no leaks are possible
==10761== 
==10761== For counts of detected and suppressed errors, rerun with: -v
==10761== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test136 ===
The Valgrind memory detector as below:
==10777== Memcheck, a memory error detector
==10777== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10777== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10777== Command: ./impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.dealloc.out
==10777== Parent PID: 10074
==10777== 
==10777== 
==10777== HEAP SUMMARY:
==10777==     in use at exit: 0 bytes in 0 blocks
==10777==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10777== 
==10777== All heap blocks were freed -- no leaks are possible
==10777== 
==10777== For counts of detected and suppressed errors, rerun with: -v
==10777== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test137 ===
The Valgrind memory detector as below:
==10792== Memcheck, a memory error detector
==10792== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10792== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10792== Command: ./impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.dealloc.out
==10792== Parent PID: 10074
==10792== 
==10792== 
==10792== HEAP SUMMARY:
==10792==     in use at exit: 0 bytes in 0 blocks
==10792==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10792== 
==10792== All heap blocks were freed -- no leaks are possible
==10792== 
==10792== For counts of detected and suppressed errors, rerun with: -v
==10792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test138 ===
The Valgrind memory detector as below:
==10807== Memcheck, a memory error detector
==10807== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10807== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10807== Command: ./impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.dealloc.out
==10807== Parent PID: 10074
==10807== 
==10807== 
==10807== HEAP SUMMARY:
==10807==     in use at exit: 0 bytes in 0 blocks
==10807==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10807== 
==10807== All heap blocks were freed -- no leaks are possible
==10807== 
==10807== For counts of detected and suppressed errors, rerun with: -v
==10807== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test139 ===
The Valgrind memory detector as below:
==10822== Memcheck, a memory error detector
==10822== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10822== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10822== Command: ./impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.dealloc.out
==10822== Parent PID: 10074
==10822== 
==10822== 
==10822== HEAP SUMMARY:
==10822==     in use at exit: 0 bytes in 0 blocks
==10822==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10822== 
==10822== All heap blocks were freed -- no leaks are possible
==10822== 
==10822== For counts of detected and suppressed errors, rerun with: -v
==10822== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test14 ===
The Valgrind memory detector as below:
==10838== Memcheck, a memory error detector
==10838== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10838== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10838== Command: ./impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.dealloc.out
==10838== Parent PID: 10074
==10838== 
==10838== 
==10838== HEAP SUMMARY:
==10838==     in use at exit: 0 bytes in 0 blocks
==10838==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10838== 
==10838== All heap blocks were freed -- no leaks are possible
==10838== 
==10838== For counts of detected and suppressed errors, rerun with: -v
==10838== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test140 ===
The Valgrind memory detector as below:
==10853== Memcheck, a memory error detector
==10853== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10853== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10853== Command: ./impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.dealloc.out
==10853== Parent PID: 10074
==10853== 
==10853== 
==10853== HEAP SUMMARY:
==10853==     in use at exit: 0 bytes in 0 blocks
==10853==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10853== 
==10853== All heap blocks were freed -- no leaks are possible
==10853== 
==10853== For counts of detected and suppressed errors, rerun with: -v
==10853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test141 ===
The Valgrind memory detector as below:
==10869== Memcheck, a memory error detector
==10869== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10869== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10869== Command: ./impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.dealloc.out
==10869== Parent PID: 10074
==10869== 
==10869== 
==10869== HEAP SUMMARY:
==10869==     in use at exit: 0 bytes in 0 blocks
==10869==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10869== 
==10869== All heap blocks were freed -- no leaks are possible
==10869== 
==10869== For counts of detected and suppressed errors, rerun with: -v
==10869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test142 ===
The Valgrind memory detector as below:
==10885== Memcheck, a memory error detector
==10885== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10885== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10885== Command: ./impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.dealloc.out
==10885== Parent PID: 10074
==10885== 
==10885== 
==10885== HEAP SUMMARY:
==10885==     in use at exit: 0 bytes in 0 blocks
==10885==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10885== 
==10885== All heap blocks were freed -- no leaks are possible
==10885== 
==10885== For counts of detected and suppressed errors, rerun with: -v
==10885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test143 ===
The Valgrind memory detector as below:
==10900== Memcheck, a memory error detector
==10900== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10900== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10900== Command: ./impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.dealloc.out
==10900== Parent PID: 10074
==10900== 
==10900== 
==10900== HEAP SUMMARY:
==10900==     in use at exit: 0 bytes in 0 blocks
==10900==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10900== 
==10900== All heap blocks were freed -- no leaks are possible
==10900== 
==10900== For counts of detected and suppressed errors, rerun with: -v
==10900== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test144 ===
The Valgrind memory detector as below:
==10915== Memcheck, a memory error detector
==10915== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10915== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10915== Command: ./impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.dealloc.out
==10915== Parent PID: 10074
==10915== 
==10915== 
==10915== HEAP SUMMARY:
==10915==     in use at exit: 0 bytes in 0 blocks
==10915==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10915== 
==10915== All heap blocks were freed -- no leaks are possible
==10915== 
==10915== For counts of detected and suppressed errors, rerun with: -v
==10915== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test145 ===
The Valgrind memory detector as below:
==10931== Memcheck, a memory error detector
==10931== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10931== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10931== Command: ./impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.dealloc.out
==10931== Parent PID: 10074
==10931== 
==10931== 
==10931== HEAP SUMMARY:
==10931==     in use at exit: 0 bytes in 0 blocks
==10931==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10931== 
==10931== All heap blocks were freed -- no leaks are possible
==10931== 
==10931== For counts of detected and suppressed errors, rerun with: -v
==10931== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test146 ===
The Valgrind memory detector as below:
==10946== Memcheck, a memory error detector
==10946== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10946== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10946== Command: ./impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.dealloc.out
==10946== Parent PID: 10074
==10946== 
==10946== 
==10946== HEAP SUMMARY:
==10946==     in use at exit: 0 bytes in 0 blocks
==10946==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10946== 
==10946== All heap blocks were freed -- no leaks are possible
==10946== 
==10946== For counts of detected and suppressed errors, rerun with: -v
==10946== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test147 ===
The Valgrind memory detector as below:
==10961== Memcheck, a memory error detector
==10961== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10961== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10961== Command: ./impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.dealloc.out
==10961== Parent PID: 10074
==10961== 
==10961== 
==10961== HEAP SUMMARY:
==10961==     in use at exit: 0 bytes in 0 blocks
==10961==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10961== 
==10961== All heap blocks were freed -- no leaks are possible
==10961== 
==10961== For counts of detected and suppressed errors, rerun with: -v
==10961== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test148 ===
The Valgrind memory detector as below:
==10977== Memcheck, a memory error detector
==10977== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10977== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10977== Command: ./impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.dealloc.out
==10977== Parent PID: 10074
==10977== 
==10977== 
==10977== HEAP SUMMARY:
==10977==     in use at exit: 0 bytes in 0 blocks
==10977==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10977== 
==10977== All heap blocks were freed -- no leaks are possible
==10977== 
==10977== For counts of detected and suppressed errors, rerun with: -v
==10977== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test149 ===
The Valgrind memory detector as below:
==10992== Memcheck, a memory error detector
==10992== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10992== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10992== Command: ./impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.dealloc.out
==10992== Parent PID: 10074
==10992== 
==10992== 
==10992== HEAP SUMMARY:
==10992==     in use at exit: 0 bytes in 0 blocks
==10992==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==10992== 
==10992== All heap blocks were freed -- no leaks are possible
==10992== 
==10992== For counts of detected and suppressed errors, rerun with: -v
==10992== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test15 ===
The Valgrind memory detector as below:
==11007== Memcheck, a memory error detector
==11007== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11007== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11007== Command: ./impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.dealloc.out
==11007== Parent PID: 10074
==11007== 
==11007== 
==11007== HEAP SUMMARY:
==11007==     in use at exit: 0 bytes in 0 blocks
==11007==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11007== 
==11007== All heap blocks were freed -- no leaks are possible
==11007== 
==11007== For counts of detected and suppressed errors, rerun with: -v
==11007== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test150 ===
The Valgrind memory detector as below:
==11033== Memcheck, a memory error detector
==11033== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11033== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11033== Command: ./impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.dealloc.out
==11033== Parent PID: 10074
==11033== 
==11033== 
==11033== HEAP SUMMARY:
==11033==     in use at exit: 0 bytes in 0 blocks
==11033==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11033== 
==11033== All heap blocks were freed -- no leaks are possible
==11033== 
==11033== For counts of detected and suppressed errors, rerun with: -v
==11033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test151 ===
The Valgrind memory detector as below:
==11048== Memcheck, a memory error detector
==11048== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11048== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11048== Command: ./impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.dealloc.out
==11048== Parent PID: 10074
==11048== 
==11048== 
==11048== HEAP SUMMARY:
==11048==     in use at exit: 0 bytes in 0 blocks
==11048==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11048== 
==11048== All heap blocks were freed -- no leaks are possible
==11048== 
==11048== For counts of detected and suppressed errors, rerun with: -v
==11048== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test152 ===
The Valgrind memory detector as below:
==11063== Memcheck, a memory error detector
==11063== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11063== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11063== Command: ./impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.dealloc.out
==11063== Parent PID: 10074
==11063== 
==11063== 
==11063== HEAP SUMMARY:
==11063==     in use at exit: 0 bytes in 0 blocks
==11063==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11063== 
==11063== All heap blocks were freed -- no leaks are possible
==11063== 
==11063== For counts of detected and suppressed errors, rerun with: -v
==11063== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test153 ===
The Valgrind memory detector as below:
==11078== Memcheck, a memory error detector
==11078== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11078== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11078== Command: ./impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.dealloc.out
==11078== Parent PID: 10074
==11078== 
==11078== 
==11078== HEAP SUMMARY:
==11078==     in use at exit: 0 bytes in 0 blocks
==11078==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11078== 
==11078== All heap blocks were freed -- no leaks are possible
==11078== 
==11078== For counts of detected and suppressed errors, rerun with: -v
==11078== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test154 ===
The Valgrind memory detector as below:
==11096== Memcheck, a memory error detector
==11096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11096== Command: ./impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.dealloc.out
==11096== Parent PID: 10074
==11096== 
==11096== 
==11096== HEAP SUMMARY:
==11096==     in use at exit: 0 bytes in 0 blocks
==11096==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11096== 
==11096== All heap blocks were freed -- no leaks are possible
==11096== 
==11096== For counts of detected and suppressed errors, rerun with: -v
==11096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test155 ===
The Valgrind memory detector as below:
==11112== Memcheck, a memory error detector
==11112== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11112== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11112== Command: ./impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.dealloc.out
==11112== Parent PID: 10074
==11112== 
==11112== 
==11112== HEAP SUMMARY:
==11112==     in use at exit: 0 bytes in 0 blocks
==11112==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11112== 
==11112== All heap blocks were freed -- no leaks are possible
==11112== 
==11112== For counts of detected and suppressed errors, rerun with: -v
==11112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test156 ===
The Valgrind memory detector as below:
==11128== Memcheck, a memory error detector
==11128== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11128== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11128== Command: ./impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.dealloc.out
==11128== Parent PID: 10074
==11128== 
==11128== 
==11128== HEAP SUMMARY:
==11128==     in use at exit: 0 bytes in 0 blocks
==11128==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11128== 
==11128== All heap blocks were freed -- no leaks are possible
==11128== 
==11128== For counts of detected and suppressed errors, rerun with: -v
==11128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test157 ===
The Valgrind memory detector as below:
==11144== Memcheck, a memory error detector
==11144== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11144== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11144== Command: ./impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.dealloc.out
==11144== Parent PID: 10074
==11144== 
==11144== 
==11144== HEAP SUMMARY:
==11144==     in use at exit: 0 bytes in 0 blocks
==11144==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11144== 
==11144== All heap blocks were freed -- no leaks are possible
==11144== 
==11144== For counts of detected and suppressed errors, rerun with: -v
==11144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test158 ===
The Valgrind memory detector as below:
==11159== Memcheck, a memory error detector
==11159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11159== Command: ./impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.dealloc.out
==11159== Parent PID: 10074
==11159== 
==11159== 
==11159== HEAP SUMMARY:
==11159==     in use at exit: 0 bytes in 0 blocks
==11159==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11159== 
==11159== All heap blocks were freed -- no leaks are possible
==11159== 
==11159== For counts of detected and suppressed errors, rerun with: -v
==11159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test159 ===
The Valgrind memory detector as below:
==11174== Memcheck, a memory error detector
==11174== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11174== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11174== Command: ./impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.dealloc.out
==11174== Parent PID: 10074
==11174== 
==11174== 
==11174== HEAP SUMMARY:
==11174==     in use at exit: 0 bytes in 0 blocks
==11174==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11174== 
==11174== All heap blocks were freed -- no leaks are possible
==11174== 
==11174== For counts of detected and suppressed errors, rerun with: -v
==11174== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test16 ===
The Valgrind memory detector as below:
==11196== Memcheck, a memory error detector
==11196== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11196== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11196== Command: ./impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.dealloc.out
==11196== Parent PID: 10074
==11196== 
==11196== 
==11196== HEAP SUMMARY:
==11196==     in use at exit: 0 bytes in 0 blocks
==11196==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11196== 
==11196== All heap blocks were freed -- no leaks are possible
==11196== 
==11196== For counts of detected and suppressed errors, rerun with: -v
==11196== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test160 ===
The Valgrind memory detector as below:
==11211== Memcheck, a memory error detector
==11211== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11211== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11211== Command: ./impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.dealloc.out
==11211== Parent PID: 10074
==11211== 
==11211== 
==11211== HEAP SUMMARY:
==11211==     in use at exit: 0 bytes in 0 blocks
==11211==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11211== 
==11211== All heap blocks were freed -- no leaks are possible
==11211== 
==11211== For counts of detected and suppressed errors, rerun with: -v
==11211== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test161 ===
The Valgrind memory detector as below:
==11226== Memcheck, a memory error detector
==11226== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11226== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11226== Command: ./impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.dealloc.out
==11226== Parent PID: 10074
==11226== 
==11226== 
==11226== HEAP SUMMARY:
==11226==     in use at exit: 0 bytes in 0 blocks
==11226==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11226== 
==11226== All heap blocks were freed -- no leaks are possible
==11226== 
==11226== For counts of detected and suppressed errors, rerun with: -v
==11226== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test162 ===
The Valgrind memory detector as below:
==11242== Memcheck, a memory error detector
==11242== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11242== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11242== Command: ./impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.dealloc.out
==11242== Parent PID: 10074
==11242== 
==11242== 
==11242== HEAP SUMMARY:
==11242==     in use at exit: 0 bytes in 0 blocks
==11242==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11242== 
==11242== All heap blocks were freed -- no leaks are possible
==11242== 
==11242== For counts of detected and suppressed errors, rerun with: -v
==11242== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test163 ===
The Valgrind memory detector as below:
==11258== Memcheck, a memory error detector
==11258== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11258== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11258== Command: ./impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.dealloc.out
==11258== Parent PID: 10074
==11258== 
==11258== 
==11258== HEAP SUMMARY:
==11258==     in use at exit: 0 bytes in 0 blocks
==11258==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11258== 
==11258== All heap blocks were freed -- no leaks are possible
==11258== 
==11258== For counts of detected and suppressed errors, rerun with: -v
==11258== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test164 ===
The Valgrind memory detector as below:
==11276== Memcheck, a memory error detector
==11276== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11276== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11276== Command: ./impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.dealloc.out
==11276== Parent PID: 10074
==11276== 
==11276== 
==11276== HEAP SUMMARY:
==11276==     in use at exit: 0 bytes in 0 blocks
==11276==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11276== 
==11276== All heap blocks were freed -- no leaks are possible
==11276== 
==11276== For counts of detected and suppressed errors, rerun with: -v
==11276== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test165 ===
The Valgrind memory detector as below:
==11292== Memcheck, a memory error detector
==11292== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11292== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11292== Command: ./impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.dealloc.out
==11292== Parent PID: 10074
==11292== 
==11292== 
==11292== HEAP SUMMARY:
==11292==     in use at exit: 0 bytes in 0 blocks
==11292==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11292== 
==11292== All heap blocks were freed -- no leaks are possible
==11292== 
==11292== For counts of detected and suppressed errors, rerun with: -v
==11292== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test166 ===
The Valgrind memory detector as below:
==11308== Memcheck, a memory error detector
==11308== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11308== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11308== Command: ./impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.dealloc.out
==11308== Parent PID: 10074
==11308== 
==11308== 
==11308== HEAP SUMMARY:
==11308==     in use at exit: 0 bytes in 0 blocks
==11308==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11308== 
==11308== All heap blocks were freed -- no leaks are possible
==11308== 
==11308== For counts of detected and suppressed errors, rerun with: -v
==11308== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test167 ===
The Valgrind memory detector as below:
==11332== Memcheck, a memory error detector
==11332== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11332== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11332== Command: ./impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.dealloc.out
==11332== Parent PID: 10074
==11332== 
==11332== 
==11332== HEAP SUMMARY:
==11332==     in use at exit: 0 bytes in 0 blocks
==11332==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11332== 
==11332== All heap blocks were freed -- no leaks are possible
==11332== 
==11332== For counts of detected and suppressed errors, rerun with: -v
==11332== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test168 ===
The Valgrind memory detector as below:
==11354== Memcheck, a memory error detector
==11354== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11354== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11354== Command: ./impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.dealloc.out
==11354== Parent PID: 10074
==11354== 
==11354== 
==11354== HEAP SUMMARY:
==11354==     in use at exit: 0 bytes in 0 blocks
==11354==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11354== 
==11354== All heap blocks were freed -- no leaks are possible
==11354== 
==11354== For counts of detected and suppressed errors, rerun with: -v
==11354== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test169 ===
The Valgrind memory detector as below:
==11400== Memcheck, a memory error detector
==11400== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11400== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11400== Command: ./impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.dealloc.out
==11400== Parent PID: 10074
==11400== 
==11400== 
==11400== HEAP SUMMARY:
==11400==     in use at exit: 0 bytes in 0 blocks
==11400==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11400== 
==11400== All heap blocks were freed -- no leaks are possible
==11400== 
==11400== For counts of detected and suppressed errors, rerun with: -v
==11400== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test17 ===
The Valgrind memory detector as below:
==11420== Memcheck, a memory error detector
==11420== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11420== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11420== Command: ./impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.dealloc.out
==11420== Parent PID: 10074
==11420== 
==11420== 
==11420== HEAP SUMMARY:
==11420==     in use at exit: 0 bytes in 0 blocks
==11420==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11420== 
==11420== All heap blocks were freed -- no leaks are possible
==11420== 
==11420== For counts of detected and suppressed errors, rerun with: -v
==11420== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test170 ===
The Valgrind memory detector as below:
==11444== Memcheck, a memory error detector
==11444== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11444== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11444== Command: ./impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.dealloc.out
==11444== Parent PID: 10074
==11444== 
==11444== 
==11444== HEAP SUMMARY:
==11444==     in use at exit: 0 bytes in 0 blocks
==11444==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11444== 
==11444== All heap blocks were freed -- no leaks are possible
==11444== 
==11444== For counts of detected and suppressed errors, rerun with: -v
==11444== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test171 ===
The Valgrind memory detector as below:
==11480== Memcheck, a memory error detector
==11480== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11480== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11480== Command: ./impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.dealloc.out
==11480== Parent PID: 10074
==11480== 
==11480== 
==11480== HEAP SUMMARY:
==11480==     in use at exit: 0 bytes in 0 blocks
==11480==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11480== 
==11480== All heap blocks were freed -- no leaks are possible
==11480== 
==11480== For counts of detected and suppressed errors, rerun with: -v
==11480== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test172 ===
The Valgrind memory detector as below:
==11509== Memcheck, a memory error detector
==11509== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11509== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11509== Command: ./impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.dealloc.out
==11509== Parent PID: 10074
==11509== 
==11509== 
==11509== HEAP SUMMARY:
==11509==     in use at exit: 0 bytes in 0 blocks
==11509==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11509== 
==11509== All heap blocks were freed -- no leaks are possible
==11509== 
==11509== For counts of detected and suppressed errors, rerun with: -v
==11509== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test173 ===
The Valgrind memory detector as below:
==11544== Memcheck, a memory error detector
==11544== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11544== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11544== Command: ./impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.dealloc.out
==11544== Parent PID: 10074
==11544== 
==11544== 
==11544== HEAP SUMMARY:
==11544==     in use at exit: 0 bytes in 0 blocks
==11544==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11544== 
==11544== All heap blocks were freed -- no leaks are possible
==11544== 
==11544== For counts of detected and suppressed errors, rerun with: -v
==11544== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test174 ===
The Valgrind memory detector as below:
==11564== Memcheck, a memory error detector
==11564== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11564== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11564== Command: ./impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.dealloc.out
==11564== Parent PID: 10074
==11564== 
==11564== 
==11564== HEAP SUMMARY:
==11564==     in use at exit: 0 bytes in 0 blocks
==11564==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11564== 
==11564== All heap blocks were freed -- no leaks are possible
==11564== 
==11564== For counts of detected and suppressed errors, rerun with: -v
==11564== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test175 ===
The Valgrind memory detector as below:
==11590== Memcheck, a memory error detector
==11590== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11590== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11590== Command: ./impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.dealloc.out
==11590== Parent PID: 10074
==11590== 
==11590== 
==11590== HEAP SUMMARY:
==11590==     in use at exit: 0 bytes in 0 blocks
==11590==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11590== 
==11590== All heap blocks were freed -- no leaks are possible
==11590== 
==11590== For counts of detected and suppressed errors, rerun with: -v
==11590== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test176 ===
The Valgrind memory detector as below:
==11614== Memcheck, a memory error detector
==11614== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11614== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11614== Command: ./impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.dealloc.out
==11614== Parent PID: 10074
==11614== 
==11614== 
==11614== HEAP SUMMARY:
==11614==     in use at exit: 0 bytes in 0 blocks
==11614==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11614== 
==11614== All heap blocks were freed -- no leaks are possible
==11614== 
==11614== For counts of detected and suppressed errors, rerun with: -v
==11614== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test177 ===
The Valgrind memory detector as below:
==11630== Memcheck, a memory error detector
==11630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11630== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11630== Command: ./impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.dealloc.out
==11630== Parent PID: 10074
==11630== 
==11630== 
==11630== HEAP SUMMARY:
==11630==     in use at exit: 0 bytes in 0 blocks
==11630==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11630== 
==11630== All heap blocks were freed -- no leaks are possible
==11630== 
==11630== For counts of detected and suppressed errors, rerun with: -v
==11630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test178 ===
The Valgrind memory detector as below:
==11645== Memcheck, a memory error detector
==11645== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11645== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11645== Command: ./impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.dealloc.out
==11645== Parent PID: 10074
==11645== 
==11645== 
==11645== HEAP SUMMARY:
==11645==     in use at exit: 0 bytes in 0 blocks
==11645==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11645== 
==11645== All heap blocks were freed -- no leaks are possible
==11645== 
==11645== For counts of detected and suppressed errors, rerun with: -v
==11645== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test179 ===
The Valgrind memory detector as below:
==11663== Memcheck, a memory error detector
==11663== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11663== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11663== Command: ./impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.dealloc.out
==11663== Parent PID: 10074
==11663== 
==11663== 
==11663== HEAP SUMMARY:
==11663==     in use at exit: 0 bytes in 0 blocks
==11663==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11663== 
==11663== All heap blocks were freed -- no leaks are possible
==11663== 
==11663== For counts of detected and suppressed errors, rerun with: -v
==11663== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test18 ===
The Valgrind memory detector as below:
==11679== Memcheck, a memory error detector
==11679== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11679== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11679== Command: ./impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.dealloc.out
==11679== Parent PID: 10074
==11679== 
==11679== 
==11679== HEAP SUMMARY:
==11679==     in use at exit: 0 bytes in 0 blocks
==11679==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11679== 
==11679== All heap blocks were freed -- no leaks are possible
==11679== 
==11679== For counts of detected and suppressed errors, rerun with: -v
==11679== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test180 ===
The Valgrind memory detector as below:
==11694== Memcheck, a memory error detector
==11694== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11694== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11694== Command: ./impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.dealloc.out
==11694== Parent PID: 10074
==11694== 
==11694== 
==11694== HEAP SUMMARY:
==11694==     in use at exit: 0 bytes in 0 blocks
==11694==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11694== 
==11694== All heap blocks were freed -- no leaks are possible
==11694== 
==11694== For counts of detected and suppressed errors, rerun with: -v
==11694== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test181 ===
The Valgrind memory detector as below:
==11709== Memcheck, a memory error detector
==11709== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11709== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11709== Command: ./impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.dealloc.out
==11709== Parent PID: 10074
==11709== 
==11709== 
==11709== HEAP SUMMARY:
==11709==     in use at exit: 0 bytes in 0 blocks
==11709==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11709== 
==11709== All heap blocks were freed -- no leaks are possible
==11709== 
==11709== For counts of detected and suppressed errors, rerun with: -v
==11709== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test182 ===
The Valgrind memory detector as below:
==11724== Memcheck, a memory error detector
==11724== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11724== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11724== Command: ./impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.dealloc.out
==11724== Parent PID: 10074
==11724== 
==11724== 
==11724== HEAP SUMMARY:
==11724==     in use at exit: 0 bytes in 0 blocks
==11724==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11724== 
==11724== All heap blocks were freed -- no leaks are possible
==11724== 
==11724== For counts of detected and suppressed errors, rerun with: -v
==11724== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test183 ===
The Valgrind memory detector as below:
==11740== Memcheck, a memory error detector
==11740== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11740== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11740== Command: ./impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.dealloc.out
==11740== Parent PID: 10074
==11740== 
==11740== 
==11740== HEAP SUMMARY:
==11740==     in use at exit: 0 bytes in 0 blocks
==11740==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11740== 
==11740== All heap blocks were freed -- no leaks are possible
==11740== 
==11740== For counts of detected and suppressed errors, rerun with: -v
==11740== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test184 ===
The Valgrind memory detector as below:
==11755== Memcheck, a memory error detector
==11755== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11755== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11755== Command: ./impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.dealloc.out
==11755== Parent PID: 10074
==11755== 
==11755== 
==11755== HEAP SUMMARY:
==11755==     in use at exit: 0 bytes in 0 blocks
==11755==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11755== 
==11755== All heap blocks were freed -- no leaks are possible
==11755== 
==11755== For counts of detected and suppressed errors, rerun with: -v
==11755== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test185 ===
The Valgrind memory detector as below:
==11770== Memcheck, a memory error detector
==11770== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11770== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11770== Command: ./impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.dealloc.out
==11770== Parent PID: 10074
==11770== 
==11770== 
==11770== HEAP SUMMARY:
==11770==     in use at exit: 0 bytes in 0 blocks
==11770==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11770== 
==11770== All heap blocks were freed -- no leaks are possible
==11770== 
==11770== For counts of detected and suppressed errors, rerun with: -v
==11770== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test186 ===
The Valgrind memory detector as below:
==11786== Memcheck, a memory error detector
==11786== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11786== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11786== Command: ./impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.dealloc.out
==11786== Parent PID: 10074
==11786== 
==11786== 
==11786== HEAP SUMMARY:
==11786==     in use at exit: 0 bytes in 0 blocks
==11786==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11786== 
==11786== All heap blocks were freed -- no leaks are possible
==11786== 
==11786== For counts of detected and suppressed errors, rerun with: -v
==11786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test187 ===
The Valgrind memory detector as below:
==11816== Memcheck, a memory error detector
==11816== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11816== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11816== Command: ./impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.dealloc.out
==11816== Parent PID: 10074
==11816== 
==11816== 
==11816== HEAP SUMMARY:
==11816==     in use at exit: 0 bytes in 0 blocks
==11816==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11816== 
==11816== All heap blocks were freed -- no leaks are possible
==11816== 
==11816== For counts of detected and suppressed errors, rerun with: -v
==11816== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test188 ===
The Valgrind memory detector as below:
==11837== Memcheck, a memory error detector
==11837== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11837== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11837== Command: ./impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.dealloc.out
==11837== Parent PID: 10074
==11837== 
==11837== 
==11837== HEAP SUMMARY:
==11837==     in use at exit: 0 bytes in 0 blocks
==11837==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11837== 
==11837== All heap blocks were freed -- no leaks are possible
==11837== 
==11837== For counts of detected and suppressed errors, rerun with: -v
==11837== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test189 ===
The Valgrind memory detector as below:
==11871== Memcheck, a memory error detector
==11871== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11871== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11871== Command: ./impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.dealloc.out
==11871== Parent PID: 10074
==11871== 
==11871== 
==11871== HEAP SUMMARY:
==11871==     in use at exit: 0 bytes in 0 blocks
==11871==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11871== 
==11871== All heap blocks were freed -- no leaks are possible
==11871== 
==11871== For counts of detected and suppressed errors, rerun with: -v
==11871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test19 ===
The Valgrind memory detector as below:
==11894== Memcheck, a memory error detector
==11894== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11894== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11894== Command: ./impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.dealloc.out
==11894== Parent PID: 10074
==11894== 
==11894== 
==11894== HEAP SUMMARY:
==11894==     in use at exit: 0 bytes in 0 blocks
==11894==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11894== 
==11894== All heap blocks were freed -- no leaks are possible
==11894== 
==11894== For counts of detected and suppressed errors, rerun with: -v
==11894== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test190 ===
The Valgrind memory detector as below:
==11919== Memcheck, a memory error detector
==11919== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11919== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11919== Command: ./impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.dealloc.out
==11919== Parent PID: 10074
==11919== 
==11919== 
==11919== HEAP SUMMARY:
==11919==     in use at exit: 0 bytes in 0 blocks
==11919==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11919== 
==11919== All heap blocks were freed -- no leaks are possible
==11919== 
==11919== For counts of detected and suppressed errors, rerun with: -v
==11919== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test191 ===
The Valgrind memory detector as below:
==11953== Memcheck, a memory error detector
==11953== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11953== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11953== Command: ./impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.dealloc.out
==11953== Parent PID: 10074
==11953== 
==11953== 
==11953== HEAP SUMMARY:
==11953==     in use at exit: 0 bytes in 0 blocks
==11953==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11953== 
==11953== All heap blocks were freed -- no leaks are possible
==11953== 
==11953== For counts of detected and suppressed errors, rerun with: -v
==11953== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test192 ===
The Valgrind memory detector as below:
==11968== Memcheck, a memory error detector
==11968== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11968== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11968== Command: ./impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.dealloc.out
==11968== Parent PID: 10074
==11968== 
==11968== 
==11968== HEAP SUMMARY:
==11968==     in use at exit: 0 bytes in 0 blocks
==11968==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11968== 
==11968== All heap blocks were freed -- no leaks are possible
==11968== 
==11968== For counts of detected and suppressed errors, rerun with: -v
==11968== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test193 ===
The Valgrind memory detector as below:
==11988== Memcheck, a memory error detector
==11988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11988== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11988== Command: ./impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.dealloc.out
==11988== Parent PID: 10074
==11988== 
==11988== 
==11988== HEAP SUMMARY:
==11988==     in use at exit: 0 bytes in 0 blocks
==11988==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==11988== 
==11988== All heap blocks were freed -- no leaks are possible
==11988== 
==11988== For counts of detected and suppressed errors, rerun with: -v
==11988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test194 ===
The Valgrind memory detector as below:
==12006== Memcheck, a memory error detector
==12006== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12006== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12006== Command: ./impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.dealloc.out
==12006== Parent PID: 10074
==12006== 
==12006== 
==12006== HEAP SUMMARY:
==12006==     in use at exit: 0 bytes in 0 blocks
==12006==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12006== 
==12006== All heap blocks were freed -- no leaks are possible
==12006== 
==12006== For counts of detected and suppressed errors, rerun with: -v
==12006== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test195 ===
The Valgrind memory detector as below:
==12025== Memcheck, a memory error detector
==12025== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12025== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12025== Command: ./impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.dealloc.out
==12025== Parent PID: 10074
==12025== 
==12025== 
==12025== HEAP SUMMARY:
==12025==     in use at exit: 0 bytes in 0 blocks
==12025==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12025== 
==12025== All heap blocks were freed -- no leaks are possible
==12025== 
==12025== For counts of detected and suppressed errors, rerun with: -v
==12025== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test196 ===
The Valgrind memory detector as below:
==12041== Memcheck, a memory error detector
==12041== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12041== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12041== Command: ./impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.dealloc.out
==12041== Parent PID: 10074
==12041== 
==12041== 
==12041== HEAP SUMMARY:
==12041==     in use at exit: 0 bytes in 0 blocks
==12041==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12041== 
==12041== All heap blocks were freed -- no leaks are possible
==12041== 
==12041== For counts of detected and suppressed errors, rerun with: -v
==12041== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test197 ===
The Valgrind memory detector as below:
==12056== Memcheck, a memory error detector
==12056== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12056== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12056== Command: ./impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.dealloc.out
==12056== Parent PID: 10074
==12056== 
==12056== 
==12056== HEAP SUMMARY:
==12056==     in use at exit: 0 bytes in 0 blocks
==12056==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12056== 
==12056== All heap blocks were freed -- no leaks are possible
==12056== 
==12056== For counts of detected and suppressed errors, rerun with: -v
==12056== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test198 ===
The Valgrind memory detector as below:
==12071== Memcheck, a memory error detector
==12071== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12071== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12071== Command: ./impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.dealloc.out
==12071== Parent PID: 10074
==12071== 
==12071== 
==12071== HEAP SUMMARY:
==12071==     in use at exit: 0 bytes in 0 blocks
==12071==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12071== 
==12071== All heap blocks were freed -- no leaks are possible
==12071== 
==12071== For counts of detected and suppressed errors, rerun with: -v
==12071== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test199 ===
The Valgrind memory detector as below:
==12090== Memcheck, a memory error detector
==12090== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12090== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12090== Command: ./impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.dealloc.out
==12090== Parent PID: 10074
==12090== 
==12090== 
==12090== HEAP SUMMARY:
==12090==     in use at exit: 0 bytes in 0 blocks
==12090==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12090== 
==12090== All heap blocks were freed -- no leaks are possible
==12090== 
==12090== For counts of detected and suppressed errors, rerun with: -v
==12090== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test2 ===
The Valgrind memory detector as below:
==12106== Memcheck, a memory error detector
==12106== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12106== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12106== Command: ./impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.dealloc.out
==12106== Parent PID: 10074
==12106== 
==12106== 
==12106== HEAP SUMMARY:
==12106==     in use at exit: 0 bytes in 0 blocks
==12106==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12106== 
==12106== All heap blocks were freed -- no leaks are possible
==12106== 
==12106== For counts of detected and suppressed errors, rerun with: -v
==12106== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test20 ===
The Valgrind memory detector as below:
==12122== Memcheck, a memory error detector
==12122== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12122== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12122== Command: ./impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.dealloc.out
==12122== Parent PID: 10074
==12122== 
==12122== 
==12122== HEAP SUMMARY:
==12122==     in use at exit: 0 bytes in 0 blocks
==12122==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12122== 
==12122== All heap blocks were freed -- no leaks are possible
==12122== 
==12122== For counts of detected and suppressed errors, rerun with: -v
==12122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test200 ===
The Valgrind memory detector as below:
==12138== Memcheck, a memory error detector
==12138== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12138== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12138== Command: ./impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.dealloc.out
==12138== Parent PID: 10074
==12138== 
==12138== 
==12138== HEAP SUMMARY:
==12138==     in use at exit: 0 bytes in 0 blocks
==12138==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12138== 
==12138== All heap blocks were freed -- no leaks are possible
==12138== 
==12138== For counts of detected and suppressed errors, rerun with: -v
==12138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test201 ===
The Valgrind memory detector as below:
==12153== Memcheck, a memory error detector
==12153== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12153== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12153== Command: ./impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.dealloc.out
==12153== Parent PID: 10074
==12153== 
==12153== 
==12153== HEAP SUMMARY:
==12153==     in use at exit: 0 bytes in 0 blocks
==12153==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12153== 
==12153== All heap blocks were freed -- no leaks are possible
==12153== 
==12153== For counts of detected and suppressed errors, rerun with: -v
==12153== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test202 ===
The Valgrind memory detector as below:
==12168== Memcheck, a memory error detector
==12168== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12168== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12168== Command: ./impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.dealloc.out
==12168== Parent PID: 10074
==12168== 
==12168== 
==12168== HEAP SUMMARY:
==12168==     in use at exit: 0 bytes in 0 blocks
==12168==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12168== 
==12168== All heap blocks were freed -- no leaks are possible
==12168== 
==12168== For counts of detected and suppressed errors, rerun with: -v
==12168== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test203 ===
The Valgrind memory detector as below:
==12183== Memcheck, a memory error detector
==12183== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12183== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12183== Command: ./impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.dealloc.out
==12183== Parent PID: 10074
==12183== 
==12183== 
==12183== HEAP SUMMARY:
==12183==     in use at exit: 0 bytes in 0 blocks
==12183==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12183== 
==12183== All heap blocks were freed -- no leaks are possible
==12183== 
==12183== For counts of detected and suppressed errors, rerun with: -v
==12183== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test204 ===
The Valgrind memory detector as below:
==12199== Memcheck, a memory error detector
==12199== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12199== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12199== Command: ./impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.dealloc.out
==12199== Parent PID: 10074
==12199== 
==12199== 
==12199== HEAP SUMMARY:
==12199==     in use at exit: 0 bytes in 0 blocks
==12199==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12199== 
==12199== All heap blocks were freed -- no leaks are possible
==12199== 
==12199== For counts of detected and suppressed errors, rerun with: -v
==12199== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test205 ===
The Valgrind memory detector as below:
==12214== Memcheck, a memory error detector
==12214== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12214== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12214== Command: ./impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.dealloc.out
==12214== Parent PID: 10074
==12214== 
==12214== 
==12214== HEAP SUMMARY:
==12214==     in use at exit: 0 bytes in 0 blocks
==12214==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12214== 
==12214== All heap blocks were freed -- no leaks are possible
==12214== 
==12214== For counts of detected and suppressed errors, rerun with: -v
==12214== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test206 ===
The Valgrind memory detector as below:
==12229== Memcheck, a memory error detector
==12229== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12229== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12229== Command: ./impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.dealloc.out
==12229== Parent PID: 10074
==12229== 
==12229== 
==12229== HEAP SUMMARY:
==12229==     in use at exit: 0 bytes in 0 blocks
==12229==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12229== 
==12229== All heap blocks were freed -- no leaks are possible
==12229== 
==12229== For counts of detected and suppressed errors, rerun with: -v
==12229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test207 ===
The Valgrind memory detector as below:
==12245== Memcheck, a memory error detector
==12245== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12245== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12245== Command: ./impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.dealloc.out
==12245== Parent PID: 10074
==12245== 
==12245== 
==12245== HEAP SUMMARY:
==12245==     in use at exit: 0 bytes in 0 blocks
==12245==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12245== 
==12245== All heap blocks were freed -- no leaks are possible
==12245== 
==12245== For counts of detected and suppressed errors, rerun with: -v
==12245== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test208 ===
The Valgrind memory detector as below:
==12260== Memcheck, a memory error detector
==12260== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12260== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12260== Command: ./impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.dealloc.out
==12260== Parent PID: 10074
==12260== 
==12260== 
==12260== HEAP SUMMARY:
==12260==     in use at exit: 0 bytes in 0 blocks
==12260==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12260== 
==12260== All heap blocks were freed -- no leaks are possible
==12260== 
==12260== For counts of detected and suppressed errors, rerun with: -v
==12260== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test209 ===
The Valgrind memory detector as below:
==12275== Memcheck, a memory error detector
==12275== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12275== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12275== Command: ./impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.dealloc.out
==12275== Parent PID: 10074
==12275== 
==12275== 
==12275== HEAP SUMMARY:
==12275==     in use at exit: 0 bytes in 0 blocks
==12275==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12275== 
==12275== All heap blocks were freed -- no leaks are possible
==12275== 
==12275== For counts of detected and suppressed errors, rerun with: -v
==12275== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test21 ===
The Valgrind memory detector as below:
==12290== Memcheck, a memory error detector
==12290== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12290== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12290== Command: ./impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.dealloc.out
==12290== Parent PID: 10074
==12290== 
==12290== 
==12290== HEAP SUMMARY:
==12290==     in use at exit: 0 bytes in 0 blocks
==12290==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12290== 
==12290== All heap blocks were freed -- no leaks are possible
==12290== 
==12290== For counts of detected and suppressed errors, rerun with: -v
==12290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test210 ===
The Valgrind memory detector as below:
==12306== Memcheck, a memory error detector
==12306== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12306== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12306== Command: ./impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.dealloc.out
==12306== Parent PID: 10074
==12306== 
==12306== 
==12306== HEAP SUMMARY:
==12306==     in use at exit: 0 bytes in 0 blocks
==12306==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12306== 
==12306== All heap blocks were freed -- no leaks are possible
==12306== 
==12306== For counts of detected and suppressed errors, rerun with: -v
==12306== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test211 ===
The Valgrind memory detector as below:
==12321== Memcheck, a memory error detector
==12321== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12321== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12321== Command: ./impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.dealloc.out
==12321== Parent PID: 10074
==12321== 
==12321== 
==12321== HEAP SUMMARY:
==12321==     in use at exit: 0 bytes in 0 blocks
==12321==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12321== 
==12321== All heap blocks were freed -- no leaks are possible
==12321== 
==12321== For counts of detected and suppressed errors, rerun with: -v
==12321== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test212 ===
The Valgrind memory detector as below:
==12336== Memcheck, a memory error detector
==12336== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12336== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12336== Command: ./impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.dealloc.out
==12336== Parent PID: 10074
==12336== 
==12336== 
==12336== HEAP SUMMARY:
==12336==     in use at exit: 0 bytes in 0 blocks
==12336==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12336== 
==12336== All heap blocks were freed -- no leaks are possible
==12336== 
==12336== For counts of detected and suppressed errors, rerun with: -v
==12336== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test213 ===
The Valgrind memory detector as below:
==12353== Memcheck, a memory error detector
==12353== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12353== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12353== Command: ./impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.dealloc.out
==12353== Parent PID: 10074
==12353== 
==12353== 
==12353== HEAP SUMMARY:
==12353==     in use at exit: 0 bytes in 0 blocks
==12353==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12353== 
==12353== All heap blocks were freed -- no leaks are possible
==12353== 
==12353== For counts of detected and suppressed errors, rerun with: -v
==12353== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test214 ===
The Valgrind memory detector as below:
==12368== Memcheck, a memory error detector
==12368== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12368== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12368== Command: ./impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.dealloc.out
==12368== Parent PID: 10074
==12368== 
==12368== 
==12368== HEAP SUMMARY:
==12368==     in use at exit: 0 bytes in 0 blocks
==12368==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12368== 
==12368== All heap blocks were freed -- no leaks are possible
==12368== 
==12368== For counts of detected and suppressed errors, rerun with: -v
==12368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test215 ===
The Valgrind memory detector as below:
==12386== Memcheck, a memory error detector
==12386== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12386== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12386== Command: ./impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.dealloc.out
==12386== Parent PID: 10074
==12386== 
==12386== 
==12386== HEAP SUMMARY:
==12386==     in use at exit: 0 bytes in 0 blocks
==12386==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12386== 
==12386== All heap blocks were freed -- no leaks are possible
==12386== 
==12386== For counts of detected and suppressed errors, rerun with: -v
==12386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test216 ===
The Valgrind memory detector as below:
==12401== Memcheck, a memory error detector
==12401== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12401== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12401== Command: ./impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.dealloc.out
==12401== Parent PID: 10074
==12401== 
==12401== 
==12401== HEAP SUMMARY:
==12401==     in use at exit: 0 bytes in 0 blocks
==12401==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12401== 
==12401== All heap blocks were freed -- no leaks are possible
==12401== 
==12401== For counts of detected and suppressed errors, rerun with: -v
==12401== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test217 ===
The Valgrind memory detector as below:
==12416== Memcheck, a memory error detector
==12416== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12416== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12416== Command: ./impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.dealloc.out
==12416== Parent PID: 10074
==12416== 
==12416== 
==12416== HEAP SUMMARY:
==12416==     in use at exit: 0 bytes in 0 blocks
==12416==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12416== 
==12416== All heap blocks were freed -- no leaks are possible
==12416== 
==12416== For counts of detected and suppressed errors, rerun with: -v
==12416== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test218 ===
The Valgrind memory detector as below:
==12431== Memcheck, a memory error detector
==12431== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12431== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12431== Command: ./impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.dealloc.out
==12431== Parent PID: 10074
==12431== 
==12431== 
==12431== HEAP SUMMARY:
==12431==     in use at exit: 0 bytes in 0 blocks
==12431==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12431== 
==12431== All heap blocks were freed -- no leaks are possible
==12431== 
==12431== For counts of detected and suppressed errors, rerun with: -v
==12431== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test219 ===
The Valgrind memory detector as below:
==12447== Memcheck, a memory error detector
==12447== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12447== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12447== Command: ./impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.dealloc.out
==12447== Parent PID: 10074
==12447== 
==12447== 
==12447== HEAP SUMMARY:
==12447==     in use at exit: 0 bytes in 0 blocks
==12447==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12447== 
==12447== All heap blocks were freed -- no leaks are possible
==12447== 
==12447== For counts of detected and suppressed errors, rerun with: -v
==12447== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test22 ===
The Valgrind memory detector as below:
==12462== Memcheck, a memory error detector
==12462== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12462== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12462== Command: ./impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.dealloc.out
==12462== Parent PID: 10074
==12462== 
==12462== 
==12462== HEAP SUMMARY:
==12462==     in use at exit: 0 bytes in 0 blocks
==12462==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12462== 
==12462== All heap blocks were freed -- no leaks are possible
==12462== 
==12462== For counts of detected and suppressed errors, rerun with: -v
==12462== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test220 ===
The Valgrind memory detector as below:
==12477== Memcheck, a memory error detector
==12477== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12477== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12477== Command: ./impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.dealloc.out
==12477== Parent PID: 10074
==12477== 
==12477== 
==12477== HEAP SUMMARY:
==12477==     in use at exit: 0 bytes in 0 blocks
==12477==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12477== 
==12477== All heap blocks were freed -- no leaks are possible
==12477== 
==12477== For counts of detected and suppressed errors, rerun with: -v
==12477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test221 ===
The Valgrind memory detector as below:
==12492== Memcheck, a memory error detector
==12492== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12492== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12492== Command: ./impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.dealloc.out
==12492== Parent PID: 10074
==12492== 
==12492== 
==12492== HEAP SUMMARY:
==12492==     in use at exit: 0 bytes in 0 blocks
==12492==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12492== 
==12492== All heap blocks were freed -- no leaks are possible
==12492== 
==12492== For counts of detected and suppressed errors, rerun with: -v
==12492== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test222 ===
The Valgrind memory detector as below:
==12508== Memcheck, a memory error detector
==12508== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12508== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12508== Command: ./impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.dealloc.out
==12508== Parent PID: 10074
==12508== 
==12508== 
==12508== HEAP SUMMARY:
==12508==     in use at exit: 0 bytes in 0 blocks
==12508==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12508== 
==12508== All heap blocks were freed -- no leaks are possible
==12508== 
==12508== For counts of detected and suppressed errors, rerun with: -v
==12508== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test223 ===
The Valgrind memory detector as below:
==12523== Memcheck, a memory error detector
==12523== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12523== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12523== Command: ./impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.dealloc.out
==12523== Parent PID: 10074
==12523== 
==12523== 
==12523== HEAP SUMMARY:
==12523==     in use at exit: 0 bytes in 0 blocks
==12523==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12523== 
==12523== All heap blocks were freed -- no leaks are possible
==12523== 
==12523== For counts of detected and suppressed errors, rerun with: -v
==12523== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test224 ===
The Valgrind memory detector as below:
==12539== Memcheck, a memory error detector
==12539== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12539== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12539== Command: ./impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.dealloc.out
==12539== Parent PID: 10074
==12539== 
==12539== 
==12539== HEAP SUMMARY:
==12539==     in use at exit: 0 bytes in 0 blocks
==12539==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12539== 
==12539== All heap blocks were freed -- no leaks are possible
==12539== 
==12539== For counts of detected and suppressed errors, rerun with: -v
==12539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test225 ===
The Valgrind memory detector as below:
==12555== Memcheck, a memory error detector
==12555== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12555== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12555== Command: ./impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.dealloc.out
==12555== Parent PID: 10074
==12555== 
==12555== 
==12555== HEAP SUMMARY:
==12555==     in use at exit: 0 bytes in 0 blocks
==12555==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12555== 
==12555== All heap blocks were freed -- no leaks are possible
==12555== 
==12555== For counts of detected and suppressed errors, rerun with: -v
==12555== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test226 ===
The Valgrind memory detector as below:
==12570== Memcheck, a memory error detector
==12570== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12570== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12570== Command: ./impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.dealloc.out
==12570== Parent PID: 10074
==12570== 
==12570== 
==12570== HEAP SUMMARY:
==12570==     in use at exit: 0 bytes in 0 blocks
==12570==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12570== 
==12570== All heap blocks were freed -- no leaks are possible
==12570== 
==12570== For counts of detected and suppressed errors, rerun with: -v
==12570== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test227 ===
The Valgrind memory detector as below:
==12585== Memcheck, a memory error detector
==12585== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12585== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12585== Command: ./impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.dealloc.out
==12585== Parent PID: 10074
==12585== 
==12585== 
==12585== HEAP SUMMARY:
==12585==     in use at exit: 0 bytes in 0 blocks
==12585==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12585== 
==12585== All heap blocks were freed -- no leaks are possible
==12585== 
==12585== For counts of detected and suppressed errors, rerun with: -v
==12585== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test228 ===
The Valgrind memory detector as below:
==12601== Memcheck, a memory error detector
==12601== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12601== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12601== Command: ./impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.dealloc.out
==12601== Parent PID: 10074
==12601== 
==12601== 
==12601== HEAP SUMMARY:
==12601==     in use at exit: 0 bytes in 0 blocks
==12601==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12601== 
==12601== All heap blocks were freed -- no leaks are possible
==12601== 
==12601== For counts of detected and suppressed errors, rerun with: -v
==12601== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test229 ===
The Valgrind memory detector as below:
==12616== Memcheck, a memory error detector
==12616== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12616== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12616== Command: ./impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.dealloc.out
==12616== Parent PID: 10074
==12616== 
==12616== 
==12616== HEAP SUMMARY:
==12616==     in use at exit: 0 bytes in 0 blocks
==12616==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12616== 
==12616== All heap blocks were freed -- no leaks are possible
==12616== 
==12616== For counts of detected and suppressed errors, rerun with: -v
==12616== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test23 ===
The Valgrind memory detector as below:
==12631== Memcheck, a memory error detector
==12631== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12631== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12631== Command: ./impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.dealloc.out
==12631== Parent PID: 10074
==12631== 
==12631== 
==12631== HEAP SUMMARY:
==12631==     in use at exit: 0 bytes in 0 blocks
==12631==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12631== 
==12631== All heap blocks were freed -- no leaks are possible
==12631== 
==12631== For counts of detected and suppressed errors, rerun with: -v
==12631== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test230 ===
The Valgrind memory detector as below:
==12648== Memcheck, a memory error detector
==12648== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12648== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12648== Command: ./impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.dealloc.out
==12648== Parent PID: 10074
==12648== 
==12648== 
==12648== HEAP SUMMARY:
==12648==     in use at exit: 0 bytes in 0 blocks
==12648==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12648== 
==12648== All heap blocks were freed -- no leaks are possible
==12648== 
==12648== For counts of detected and suppressed errors, rerun with: -v
==12648== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test231 ===
The Valgrind memory detector as below:
==12663== Memcheck, a memory error detector
==12663== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12663== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12663== Command: ./impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.dealloc.out
==12663== Parent PID: 10074
==12663== 
==12663== 
==12663== HEAP SUMMARY:
==12663==     in use at exit: 0 bytes in 0 blocks
==12663==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12663== 
==12663== All heap blocks were freed -- no leaks are possible
==12663== 
==12663== For counts of detected and suppressed errors, rerun with: -v
==12663== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test232 ===
The Valgrind memory detector as below:
==12678== Memcheck, a memory error detector
==12678== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12678== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12678== Command: ./impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.dealloc.out
==12678== Parent PID: 10074
==12678== 
==12678== 
==12678== HEAP SUMMARY:
==12678==     in use at exit: 0 bytes in 0 blocks
==12678==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12678== 
==12678== All heap blocks were freed -- no leaks are possible
==12678== 
==12678== For counts of detected and suppressed errors, rerun with: -v
==12678== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test233 ===
The Valgrind memory detector as below:
==12693== Memcheck, a memory error detector
==12693== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12693== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12693== Command: ./impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.dealloc.out
==12693== Parent PID: 10074
==12693== 
==12693== 
==12693== HEAP SUMMARY:
==12693==     in use at exit: 0 bytes in 0 blocks
==12693==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12693== 
==12693== All heap blocks were freed -- no leaks are possible
==12693== 
==12693== For counts of detected and suppressed errors, rerun with: -v
==12693== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test234 ===
The Valgrind memory detector as below:
==12710== Memcheck, a memory error detector
==12710== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12710== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12710== Command: ./impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.dealloc.out
==12710== Parent PID: 10074
==12710== 
==12710== 
==12710== HEAP SUMMARY:
==12710==     in use at exit: 0 bytes in 0 blocks
==12710==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12710== 
==12710== All heap blocks were freed -- no leaks are possible
==12710== 
==12710== For counts of detected and suppressed errors, rerun with: -v
==12710== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test235 ===
The Valgrind memory detector as below:
==12725== Memcheck, a memory error detector
==12725== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12725== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12725== Command: ./impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.dealloc.out
==12725== Parent PID: 10074
==12725== 
==12725== 
==12725== HEAP SUMMARY:
==12725==     in use at exit: 0 bytes in 0 blocks
==12725==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12725== 
==12725== All heap blocks were freed -- no leaks are possible
==12725== 
==12725== For counts of detected and suppressed errors, rerun with: -v
==12725== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test236 ===
The Valgrind memory detector as below:
==12740== Memcheck, a memory error detector
==12740== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12740== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12740== Command: ./impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.dealloc.out
==12740== Parent PID: 10074
==12740== 
==12740== 
==12740== HEAP SUMMARY:
==12740==     in use at exit: 0 bytes in 0 blocks
==12740==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12740== 
==12740== All heap blocks were freed -- no leaks are possible
==12740== 
==12740== For counts of detected and suppressed errors, rerun with: -v
==12740== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test237 ===
The Valgrind memory detector as below:
==12755== Memcheck, a memory error detector
==12755== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12755== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12755== Command: ./impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.dealloc.out
==12755== Parent PID: 10074
==12755== 
==12755== 
==12755== HEAP SUMMARY:
==12755==     in use at exit: 0 bytes in 0 blocks
==12755==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12755== 
==12755== All heap blocks were freed -- no leaks are possible
==12755== 
==12755== For counts of detected and suppressed errors, rerun with: -v
==12755== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test238 ===
The Valgrind memory detector as below:
==12772== Memcheck, a memory error detector
==12772== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12772== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12772== Command: ./impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.dealloc.out
==12772== Parent PID: 10074
==12772== 
==12772== 
==12772== HEAP SUMMARY:
==12772==     in use at exit: 0 bytes in 0 blocks
==12772==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12772== 
==12772== All heap blocks were freed -- no leaks are possible
==12772== 
==12772== For counts of detected and suppressed errors, rerun with: -v
==12772== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test239 ===
The Valgrind memory detector as below:
==12787== Memcheck, a memory error detector
==12787== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12787== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12787== Command: ./impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.dealloc.out
==12787== Parent PID: 10074
==12787== 
==12787== 
==12787== HEAP SUMMARY:
==12787==     in use at exit: 0 bytes in 0 blocks
==12787==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12787== 
==12787== All heap blocks were freed -- no leaks are possible
==12787== 
==12787== For counts of detected and suppressed errors, rerun with: -v
==12787== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test24 ===
The Valgrind memory detector as below:
==12802== Memcheck, a memory error detector
==12802== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12802== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12802== Command: ./impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.dealloc.out
==12802== Parent PID: 10074
==12802== 
==12802== 
==12802== HEAP SUMMARY:
==12802==     in use at exit: 0 bytes in 0 blocks
==12802==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12802== 
==12802== All heap blocks were freed -- no leaks are possible
==12802== 
==12802== For counts of detected and suppressed errors, rerun with: -v
==12802== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test240 ===
The Valgrind memory detector as below:
==12818== Memcheck, a memory error detector
==12818== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12818== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12818== Command: ./impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.dealloc.out
==12818== Parent PID: 10074
==12818== 
==12818== 
==12818== HEAP SUMMARY:
==12818==     in use at exit: 0 bytes in 0 blocks
==12818==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12818== 
==12818== All heap blocks were freed -- no leaks are possible
==12818== 
==12818== For counts of detected and suppressed errors, rerun with: -v
==12818== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test241 ===
The Valgrind memory detector as below:
==12834== Memcheck, a memory error detector
==12834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12834== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12834== Command: ./impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.dealloc.out
==12834== Parent PID: 10074
==12834== 
==12834== 
==12834== HEAP SUMMARY:
==12834==     in use at exit: 0 bytes in 0 blocks
==12834==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12834== 
==12834== All heap blocks were freed -- no leaks are possible
==12834== 
==12834== For counts of detected and suppressed errors, rerun with: -v
==12834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test242 ===
The Valgrind memory detector as below:
==12849== Memcheck, a memory error detector
==12849== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12849== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12849== Command: ./impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.dealloc.out
==12849== Parent PID: 10074
==12849== 
==12849== 
==12849== HEAP SUMMARY:
==12849==     in use at exit: 0 bytes in 0 blocks
==12849==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12849== 
==12849== All heap blocks were freed -- no leaks are possible
==12849== 
==12849== For counts of detected and suppressed errors, rerun with: -v
==12849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test243 ===
The Valgrind memory detector as below:
==12864== Memcheck, a memory error detector
==12864== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12864== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12864== Command: ./impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.dealloc.out
==12864== Parent PID: 10074
==12864== 
==12864== 
==12864== HEAP SUMMARY:
==12864==     in use at exit: 0 bytes in 0 blocks
==12864==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12864== 
==12864== All heap blocks were freed -- no leaks are possible
==12864== 
==12864== For counts of detected and suppressed errors, rerun with: -v
==12864== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test244 ===
The Valgrind memory detector as below:
==12880== Memcheck, a memory error detector
==12880== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12880== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12880== Command: ./impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.dealloc.out
==12880== Parent PID: 10074
==12880== 
==12880== 
==12880== HEAP SUMMARY:
==12880==     in use at exit: 0 bytes in 0 blocks
==12880==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12880== 
==12880== All heap blocks were freed -- no leaks are possible
==12880== 
==12880== For counts of detected and suppressed errors, rerun with: -v
==12880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test245 ===
The Valgrind memory detector as below:
==12899== Memcheck, a memory error detector
==12899== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12899== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12899== Command: ./impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.dealloc.out
==12899== Parent PID: 10074
==12899== 
==12899== 
==12899== HEAP SUMMARY:
==12899==     in use at exit: 0 bytes in 0 blocks
==12899==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12899== 
==12899== All heap blocks were freed -- no leaks are possible
==12899== 
==12899== For counts of detected and suppressed errors, rerun with: -v
==12899== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test246 ===
The Valgrind memory detector as below:
==12915== Memcheck, a memory error detector
==12915== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12915== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12915== Command: ./impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.dealloc.out
==12915== Parent PID: 10074
==12915== 
==12915== 
==12915== HEAP SUMMARY:
==12915==     in use at exit: 0 bytes in 0 blocks
==12915==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12915== 
==12915== All heap blocks were freed -- no leaks are possible
==12915== 
==12915== For counts of detected and suppressed errors, rerun with: -v
==12915== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test247 ===
The Valgrind memory detector as below:
==12931== Memcheck, a memory error detector
==12931== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12931== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12931== Command: ./impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.dealloc.out
==12931== Parent PID: 10074
==12931== 
==12931== 
==12931== HEAP SUMMARY:
==12931==     in use at exit: 0 bytes in 0 blocks
==12931==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12931== 
==12931== All heap blocks were freed -- no leaks are possible
==12931== 
==12931== For counts of detected and suppressed errors, rerun with: -v
==12931== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test248 ===
The Valgrind memory detector as below:
==12946== Memcheck, a memory error detector
==12946== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12946== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12946== Command: ./impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.dealloc.out
==12946== Parent PID: 10074
==12946== 
==12946== 
==12946== HEAP SUMMARY:
==12946==     in use at exit: 0 bytes in 0 blocks
==12946==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12946== 
==12946== All heap blocks were freed -- no leaks are possible
==12946== 
==12946== For counts of detected and suppressed errors, rerun with: -v
==12946== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test249 ===
The Valgrind memory detector as below:
==12961== Memcheck, a memory error detector
==12961== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12961== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12961== Command: ./impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.dealloc.out
==12961== Parent PID: 10074
==12961== 
==12961== 
==12961== HEAP SUMMARY:
==12961==     in use at exit: 0 bytes in 0 blocks
==12961==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12961== 
==12961== All heap blocks were freed -- no leaks are possible
==12961== 
==12961== For counts of detected and suppressed errors, rerun with: -v
==12961== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test25 ===
The Valgrind memory detector as below:
==12977== Memcheck, a memory error detector
==12977== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12977== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12977== Command: ./impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.dealloc.out
==12977== Parent PID: 10074
==12977== 
==12977== 
==12977== HEAP SUMMARY:
==12977==     in use at exit: 0 bytes in 0 blocks
==12977==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12977== 
==12977== All heap blocks were freed -- no leaks are possible
==12977== 
==12977== For counts of detected and suppressed errors, rerun with: -v
==12977== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test250 ===
The Valgrind memory detector as below:
==12992== Memcheck, a memory error detector
==12992== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12992== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12992== Command: ./impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.dealloc.out
==12992== Parent PID: 10074
==12992== 
==12992== 
==12992== HEAP SUMMARY:
==12992==     in use at exit: 0 bytes in 0 blocks
==12992==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==12992== 
==12992== All heap blocks were freed -- no leaks are possible
==12992== 
==12992== For counts of detected and suppressed errors, rerun with: -v
==12992== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test251 ===
The Valgrind memory detector as below:
==13007== Memcheck, a memory error detector
==13007== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13007== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13007== Command: ./impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.dealloc.out
==13007== Parent PID: 10074
==13007== 
==13007== 
==13007== HEAP SUMMARY:
==13007==     in use at exit: 0 bytes in 0 blocks
==13007==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13007== 
==13007== All heap blocks were freed -- no leaks are possible
==13007== 
==13007== For counts of detected and suppressed errors, rerun with: -v
==13007== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test252 ===
The Valgrind memory detector as below:
==13022== Memcheck, a memory error detector
==13022== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13022== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13022== Command: ./impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.dealloc.out
==13022== Parent PID: 10074
==13022== 
==13022== 
==13022== HEAP SUMMARY:
==13022==     in use at exit: 0 bytes in 0 blocks
==13022==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13022== 
==13022== All heap blocks were freed -- no leaks are possible
==13022== 
==13022== For counts of detected and suppressed errors, rerun with: -v
==13022== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test253 ===
The Valgrind memory detector as below:
==13038== Memcheck, a memory error detector
==13038== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13038== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13038== Command: ./impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.dealloc.out
==13038== Parent PID: 10074
==13038== 
==13038== 
==13038== HEAP SUMMARY:
==13038==     in use at exit: 0 bytes in 0 blocks
==13038==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13038== 
==13038== All heap blocks were freed -- no leaks are possible
==13038== 
==13038== For counts of detected and suppressed errors, rerun with: -v
==13038== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test254 ===
The Valgrind memory detector as below:
==13053== Memcheck, a memory error detector
==13053== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13053== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13053== Command: ./impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.dealloc.out
==13053== Parent PID: 10074
==13053== 
==13053== 
==13053== HEAP SUMMARY:
==13053==     in use at exit: 0 bytes in 0 blocks
==13053==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13053== 
==13053== All heap blocks were freed -- no leaks are possible
==13053== 
==13053== For counts of detected and suppressed errors, rerun with: -v
==13053== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test255 ===
The Valgrind memory detector as below:
==13068== Memcheck, a memory error detector
==13068== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13068== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13068== Command: ./impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.dealloc.out
==13068== Parent PID: 10074
==13068== 
==13068== 
==13068== HEAP SUMMARY:
==13068==     in use at exit: 0 bytes in 0 blocks
==13068==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13068== 
==13068== All heap blocks were freed -- no leaks are possible
==13068== 
==13068== For counts of detected and suppressed errors, rerun with: -v
==13068== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test256 ===
The Valgrind memory detector as below:
==13083== Memcheck, a memory error detector
==13083== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13083== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13083== Command: ./impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.dealloc.out
==13083== Parent PID: 10074
==13083== 
==13083== 
==13083== HEAP SUMMARY:
==13083==     in use at exit: 0 bytes in 0 blocks
==13083==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13083== 
==13083== All heap blocks were freed -- no leaks are possible
==13083== 
==13083== For counts of detected and suppressed errors, rerun with: -v
==13083== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test257 ===
The Valgrind memory detector as below:
==13106== Memcheck, a memory error detector
==13106== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13106== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13106== Command: ./impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.dealloc.out
==13106== Parent PID: 10074
==13106== 
==13106== 
==13106== HEAP SUMMARY:
==13106==     in use at exit: 0 bytes in 0 blocks
==13106==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13106== 
==13106== All heap blocks were freed -- no leaks are possible
==13106== 
==13106== For counts of detected and suppressed errors, rerun with: -v
==13106== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test258 ===
The Valgrind memory detector as below:
==13121== Memcheck, a memory error detector
==13121== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13121== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13121== Command: ./impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.dealloc.out
==13121== Parent PID: 10074
==13121== 
==13121== 
==13121== HEAP SUMMARY:
==13121==     in use at exit: 0 bytes in 0 blocks
==13121==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13121== 
==13121== All heap blocks were freed -- no leaks are possible
==13121== 
==13121== For counts of detected and suppressed errors, rerun with: -v
==13121== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test259 ===
The Valgrind memory detector as below:
==13136== Memcheck, a memory error detector
==13136== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13136== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13136== Command: ./impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.dealloc.out
==13136== Parent PID: 10074
==13136== 
==13136== 
==13136== HEAP SUMMARY:
==13136==     in use at exit: 0 bytes in 0 blocks
==13136==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13136== 
==13136== All heap blocks were freed -- no leaks are possible
==13136== 
==13136== For counts of detected and suppressed errors, rerun with: -v
==13136== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test26 ===
The Valgrind memory detector as below:
==13151== Memcheck, a memory error detector
==13151== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13151== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13151== Command: ./impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.dealloc.out
==13151== Parent PID: 10074
==13151== 
==13151== 
==13151== HEAP SUMMARY:
==13151==     in use at exit: 0 bytes in 0 blocks
==13151==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13151== 
==13151== All heap blocks were freed -- no leaks are possible
==13151== 
==13151== For counts of detected and suppressed errors, rerun with: -v
==13151== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test260 ===
The Valgrind memory detector as below:
==13167== Memcheck, a memory error detector
==13167== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13167== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13167== Command: ./impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.dealloc.out
==13167== Parent PID: 10074
==13167== 
==13167== 
==13167== HEAP SUMMARY:
==13167==     in use at exit: 0 bytes in 0 blocks
==13167==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13167== 
==13167== All heap blocks were freed -- no leaks are possible
==13167== 
==13167== For counts of detected and suppressed errors, rerun with: -v
==13167== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test261 ===
The Valgrind memory detector as below:
==13182== Memcheck, a memory error detector
==13182== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13182== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13182== Command: ./impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.dealloc.out
==13182== Parent PID: 10074
==13182== 
==13182== 
==13182== HEAP SUMMARY:
==13182==     in use at exit: 0 bytes in 0 blocks
==13182==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13182== 
==13182== All heap blocks were freed -- no leaks are possible
==13182== 
==13182== For counts of detected and suppressed errors, rerun with: -v
==13182== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test262 ===
The Valgrind memory detector as below:
==13205== Memcheck, a memory error detector
==13205== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13205== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13205== Command: ./impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.dealloc.out
==13205== Parent PID: 10074
==13205== 
==13205== 
==13205== HEAP SUMMARY:
==13205==     in use at exit: 0 bytes in 0 blocks
==13205==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13205== 
==13205== All heap blocks were freed -- no leaks are possible
==13205== 
==13205== For counts of detected and suppressed errors, rerun with: -v
==13205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test263 ===
The Valgrind memory detector as below:
==13222== Memcheck, a memory error detector
==13222== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13222== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13222== Command: ./impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.dealloc.out
==13222== Parent PID: 10074
==13222== 
==13222== 
==13222== HEAP SUMMARY:
==13222==     in use at exit: 0 bytes in 0 blocks
==13222==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13222== 
==13222== All heap blocks were freed -- no leaks are possible
==13222== 
==13222== For counts of detected and suppressed errors, rerun with: -v
==13222== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test264 ===
The Valgrind memory detector as below:
==13237== Memcheck, a memory error detector
==13237== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13237== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13237== Command: ./impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.dealloc.out
==13237== Parent PID: 10074
==13237== 
==13237== 
==13237== HEAP SUMMARY:
==13237==     in use at exit: 0 bytes in 0 blocks
==13237==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13237== 
==13237== All heap blocks were freed -- no leaks are possible
==13237== 
==13237== For counts of detected and suppressed errors, rerun with: -v
==13237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test265 ===
The Valgrind memory detector as below:
==13252== Memcheck, a memory error detector
==13252== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13252== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13252== Command: ./impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.dealloc.out
==13252== Parent PID: 10074
==13252== 
==13252== 
==13252== HEAP SUMMARY:
==13252==     in use at exit: 0 bytes in 0 blocks
==13252==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13252== 
==13252== All heap blocks were freed -- no leaks are possible
==13252== 
==13252== For counts of detected and suppressed errors, rerun with: -v
==13252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test266 ===
The Valgrind memory detector as below:
==13267== Memcheck, a memory error detector
==13267== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13267== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13267== Command: ./impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.dealloc.out
==13267== Parent PID: 10074
==13267== 
==13267== 
==13267== HEAP SUMMARY:
==13267==     in use at exit: 0 bytes in 0 blocks
==13267==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13267== 
==13267== All heap blocks were freed -- no leaks are possible
==13267== 
==13267== For counts of detected and suppressed errors, rerun with: -v
==13267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test267 ===
The Valgrind memory detector as below:
==13283== Memcheck, a memory error detector
==13283== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13283== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13283== Command: ./impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.dealloc.out
==13283== Parent PID: 10074
==13283== 
==13283== 
==13283== HEAP SUMMARY:
==13283==     in use at exit: 0 bytes in 0 blocks
==13283==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13283== 
==13283== All heap blocks were freed -- no leaks are possible
==13283== 
==13283== For counts of detected and suppressed errors, rerun with: -v
==13283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test268 ===
The Valgrind memory detector as below:
==13298== Memcheck, a memory error detector
==13298== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13298== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13298== Command: ./impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.dealloc.out
==13298== Parent PID: 10074
==13298== 
==13298== 
==13298== HEAP SUMMARY:
==13298==     in use at exit: 0 bytes in 0 blocks
==13298==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13298== 
==13298== All heap blocks were freed -- no leaks are possible
==13298== 
==13298== For counts of detected and suppressed errors, rerun with: -v
==13298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test269 ===
The Valgrind memory detector as below:
==13313== Memcheck, a memory error detector
==13313== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13313== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13313== Command: ./impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.dealloc.out
==13313== Parent PID: 10074
==13313== 
==13313== 
==13313== HEAP SUMMARY:
==13313==     in use at exit: 0 bytes in 0 blocks
==13313==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13313== 
==13313== All heap blocks were freed -- no leaks are possible
==13313== 
==13313== For counts of detected and suppressed errors, rerun with: -v
==13313== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test27 ===
The Valgrind memory detector as below:
==13336== Memcheck, a memory error detector
==13336== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13336== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13336== Command: ./impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.dealloc.out
==13336== Parent PID: 10074
==13336== 
==13336== 
==13336== HEAP SUMMARY:
==13336==     in use at exit: 0 bytes in 0 blocks
==13336==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13336== 
==13336== All heap blocks were freed -- no leaks are possible
==13336== 
==13336== For counts of detected and suppressed errors, rerun with: -v
==13336== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test270 ===
The Valgrind memory detector as below:
==13353== Memcheck, a memory error detector
==13353== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13353== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13353== Command: ./impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.dealloc.out
==13353== Parent PID: 10074
==13353== 
==13353== 
==13353== HEAP SUMMARY:
==13353==     in use at exit: 0 bytes in 0 blocks
==13353==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13353== 
==13353== All heap blocks were freed -- no leaks are possible
==13353== 
==13353== For counts of detected and suppressed errors, rerun with: -v
==13353== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test271 ===
The Valgrind memory detector as below:
==13368== Memcheck, a memory error detector
==13368== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13368== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13368== Command: ./impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.dealloc.out
==13368== Parent PID: 10074
==13368== 
==13368== 
==13368== HEAP SUMMARY:
==13368==     in use at exit: 0 bytes in 0 blocks
==13368==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13368== 
==13368== All heap blocks were freed -- no leaks are possible
==13368== 
==13368== For counts of detected and suppressed errors, rerun with: -v
==13368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test272 ===
The Valgrind memory detector as below:
==13383== Memcheck, a memory error detector
==13383== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13383== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13383== Command: ./impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.dealloc.out
==13383== Parent PID: 10074
==13383== 
==13383== 
==13383== HEAP SUMMARY:
==13383==     in use at exit: 0 bytes in 0 blocks
==13383==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13383== 
==13383== All heap blocks were freed -- no leaks are possible
==13383== 
==13383== For counts of detected and suppressed errors, rerun with: -v
==13383== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test273 ===
The Valgrind memory detector as below:
==13400== Memcheck, a memory error detector
==13400== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13400== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13400== Command: ./impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.dealloc.out
==13400== Parent PID: 10074
==13400== 
==13400== 
==13400== HEAP SUMMARY:
==13400==     in use at exit: 0 bytes in 0 blocks
==13400==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13400== 
==13400== All heap blocks were freed -- no leaks are possible
==13400== 
==13400== For counts of detected and suppressed errors, rerun with: -v
==13400== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test274 ===
The Valgrind memory detector as below:
==13416== Memcheck, a memory error detector
==13416== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13416== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13416== Command: ./impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.dealloc.out
==13416== Parent PID: 10074
==13416== 
==13416== 
==13416== HEAP SUMMARY:
==13416==     in use at exit: 0 bytes in 0 blocks
==13416==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13416== 
==13416== All heap blocks were freed -- no leaks are possible
==13416== 
==13416== For counts of detected and suppressed errors, rerun with: -v
==13416== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test275 ===
The Valgrind memory detector as below:
==13431== Memcheck, a memory error detector
==13431== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13431== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13431== Command: ./impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.dealloc.out
==13431== Parent PID: 10074
==13431== 
==13431== 
==13431== HEAP SUMMARY:
==13431==     in use at exit: 0 bytes in 0 blocks
==13431==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13431== 
==13431== All heap blocks were freed -- no leaks are possible
==13431== 
==13431== For counts of detected and suppressed errors, rerun with: -v
==13431== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test276 ===
The Valgrind memory detector as below:
==13447== Memcheck, a memory error detector
==13447== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13447== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13447== Command: ./impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.dealloc.out
==13447== Parent PID: 10074
==13447== 
==13447== 
==13447== HEAP SUMMARY:
==13447==     in use at exit: 0 bytes in 0 blocks
==13447==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13447== 
==13447== All heap blocks were freed -- no leaks are possible
==13447== 
==13447== For counts of detected and suppressed errors, rerun with: -v
==13447== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test277 ===
The Valgrind memory detector as below:
==13464== Memcheck, a memory error detector
==13464== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13464== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13464== Command: ./impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.dealloc.out
==13464== Parent PID: 10074
==13464== 
==13464== 
==13464== HEAP SUMMARY:
==13464==     in use at exit: 0 bytes in 0 blocks
==13464==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13464== 
==13464== All heap blocks were freed -- no leaks are possible
==13464== 
==13464== For counts of detected and suppressed errors, rerun with: -v
==13464== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test278 ===
The Valgrind memory detector as below:
==13479== Memcheck, a memory error detector
==13479== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13479== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13479== Command: ./impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.dealloc.out
==13479== Parent PID: 10074
==13479== 
==13479== 
==13479== HEAP SUMMARY:
==13479==     in use at exit: 0 bytes in 0 blocks
==13479==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13479== 
==13479== All heap blocks were freed -- no leaks are possible
==13479== 
==13479== For counts of detected and suppressed errors, rerun with: -v
==13479== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test279 ===
The Valgrind memory detector as below:
==13496== Memcheck, a memory error detector
==13496== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13496== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13496== Command: ./impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.dealloc.out
==13496== Parent PID: 10074
==13496== 
==13496== 
==13496== HEAP SUMMARY:
==13496==     in use at exit: 0 bytes in 0 blocks
==13496==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13496== 
==13496== All heap blocks were freed -- no leaks are possible
==13496== 
==13496== For counts of detected and suppressed errors, rerun with: -v
==13496== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test28 ===
The Valgrind memory detector as below:
==13511== Memcheck, a memory error detector
==13511== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13511== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13511== Command: ./impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.dealloc.out
==13511== Parent PID: 10074
==13511== 
==13511== 
==13511== HEAP SUMMARY:
==13511==     in use at exit: 0 bytes in 0 blocks
==13511==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13511== 
==13511== All heap blocks were freed -- no leaks are possible
==13511== 
==13511== For counts of detected and suppressed errors, rerun with: -v
==13511== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test280 ===
The Valgrind memory detector as below:
==13527== Memcheck, a memory error detector
==13527== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13527== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13527== Command: ./impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.dealloc.out
==13527== Parent PID: 10074
==13527== 
==13527== 
==13527== HEAP SUMMARY:
==13527==     in use at exit: 0 bytes in 0 blocks
==13527==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13527== 
==13527== All heap blocks were freed -- no leaks are possible
==13527== 
==13527== For counts of detected and suppressed errors, rerun with: -v
==13527== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test281 ===
The Valgrind memory detector as below:
==13542== Memcheck, a memory error detector
==13542== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13542== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13542== Command: ./impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.dealloc.out
==13542== Parent PID: 10074
==13542== 
==13542== 
==13542== HEAP SUMMARY:
==13542==     in use at exit: 0 bytes in 0 blocks
==13542==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13542== 
==13542== All heap blocks were freed -- no leaks are possible
==13542== 
==13542== For counts of detected and suppressed errors, rerun with: -v
==13542== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test282 ===
The Valgrind memory detector as below:
==13557== Memcheck, a memory error detector
==13557== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13557== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13557== Command: ./impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.dealloc.out
==13557== Parent PID: 10074
==13557== 
==13557== 
==13557== HEAP SUMMARY:
==13557==     in use at exit: 0 bytes in 0 blocks
==13557==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13557== 
==13557== All heap blocks were freed -- no leaks are possible
==13557== 
==13557== For counts of detected and suppressed errors, rerun with: -v
==13557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test283 ===
The Valgrind memory detector as below:
==13611== Memcheck, a memory error detector
==13611== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13611== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13611== Command: ./impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.dealloc.out
==13611== Parent PID: 10074
==13611== 
==13611== 
==13611== HEAP SUMMARY:
==13611==     in use at exit: 0 bytes in 0 blocks
==13611==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13611== 
==13611== All heap blocks were freed -- no leaks are possible
==13611== 
==13611== For counts of detected and suppressed errors, rerun with: -v
==13611== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test284 ===
The Valgrind memory detector as below:
==13631== Memcheck, a memory error detector
==13631== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13631== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13631== Command: ./impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.dealloc.out
==13631== Parent PID: 10074
==13631== 
==13631== 
==13631== HEAP SUMMARY:
==13631==     in use at exit: 0 bytes in 0 blocks
==13631==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13631== 
==13631== All heap blocks were freed -- no leaks are possible
==13631== 
==13631== For counts of detected and suppressed errors, rerun with: -v
==13631== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test285 ===
The Valgrind memory detector as below:
==13646== Memcheck, a memory error detector
==13646== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13646== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13646== Command: ./impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.dealloc.out
==13646== Parent PID: 10074
==13646== 
==13646== 
==13646== HEAP SUMMARY:
==13646==     in use at exit: 0 bytes in 0 blocks
==13646==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13646== 
==13646== All heap blocks were freed -- no leaks are possible
==13646== 
==13646== For counts of detected and suppressed errors, rerun with: -v
==13646== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test286 ===
The Valgrind memory detector as below:
==13662== Memcheck, a memory error detector
==13662== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13662== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13662== Command: ./impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.dealloc.out
==13662== Parent PID: 10074
==13662== 
==13662== 
==13662== HEAP SUMMARY:
==13662==     in use at exit: 0 bytes in 0 blocks
==13662==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13662== 
==13662== All heap blocks were freed -- no leaks are possible
==13662== 
==13662== For counts of detected and suppressed errors, rerun with: -v
==13662== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test287 ===
The Valgrind memory detector as below:
==13677== Memcheck, a memory error detector
==13677== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13677== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13677== Command: ./impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.dealloc.out
==13677== Parent PID: 10074
==13677== 
==13677== 
==13677== HEAP SUMMARY:
==13677==     in use at exit: 0 bytes in 0 blocks
==13677==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13677== 
==13677== All heap blocks were freed -- no leaks are possible
==13677== 
==13677== For counts of detected and suppressed errors, rerun with: -v
==13677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test288 ===
The Valgrind memory detector as below:
==13692== Memcheck, a memory error detector
==13692== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13692== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13692== Command: ./impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.dealloc.out
==13692== Parent PID: 10074
==13692== 
==13692== 
==13692== HEAP SUMMARY:
==13692==     in use at exit: 0 bytes in 0 blocks
==13692==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13692== 
==13692== All heap blocks were freed -- no leaks are possible
==13692== 
==13692== For counts of detected and suppressed errors, rerun with: -v
==13692== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test289 ===
The Valgrind memory detector as below:
==13708== Memcheck, a memory error detector
==13708== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13708== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13708== Command: ./impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.dealloc.out
==13708== Parent PID: 10074
==13708== 
==13708== 
==13708== HEAP SUMMARY:
==13708==     in use at exit: 0 bytes in 0 blocks
==13708==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13708== 
==13708== All heap blocks were freed -- no leaks are possible
==13708== 
==13708== For counts of detected and suppressed errors, rerun with: -v
==13708== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test29 ===
The Valgrind memory detector as below:
==13723== Memcheck, a memory error detector
==13723== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13723== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13723== Command: ./impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.dealloc.out
==13723== Parent PID: 10074
==13723== 
==13723== 
==13723== HEAP SUMMARY:
==13723==     in use at exit: 0 bytes in 0 blocks
==13723==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13723== 
==13723== All heap blocks were freed -- no leaks are possible
==13723== 
==13723== For counts of detected and suppressed errors, rerun with: -v
==13723== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test290 ===
The Valgrind memory detector as below:
==13738== Memcheck, a memory error detector
==13738== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13738== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13738== Command: ./impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.dealloc.out
==13738== Parent PID: 10074
==13738== 
==13738== 
==13738== HEAP SUMMARY:
==13738==     in use at exit: 0 bytes in 0 blocks
==13738==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13738== 
==13738== All heap blocks were freed -- no leaks are possible
==13738== 
==13738== For counts of detected and suppressed errors, rerun with: -v
==13738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test291 ===
The Valgrind memory detector as below:
==13756== Memcheck, a memory error detector
==13756== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13756== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13756== Command: ./impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.dealloc.out
==13756== Parent PID: 10074
==13756== 
==13756== 
==13756== HEAP SUMMARY:
==13756==     in use at exit: 0 bytes in 0 blocks
==13756==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13756== 
==13756== All heap blocks were freed -- no leaks are possible
==13756== 
==13756== For counts of detected and suppressed errors, rerun with: -v
==13756== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test292 ===
The Valgrind memory detector as below:
==13771== Memcheck, a memory error detector
==13771== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13771== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13771== Command: ./impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.dealloc.out
==13771== Parent PID: 10074
==13771== 
==13771== 
==13771== HEAP SUMMARY:
==13771==     in use at exit: 0 bytes in 0 blocks
==13771==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13771== 
==13771== All heap blocks were freed -- no leaks are possible
==13771== 
==13771== For counts of detected and suppressed errors, rerun with: -v
==13771== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test293 ===
The Valgrind memory detector as below:
==13786== Memcheck, a memory error detector
==13786== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13786== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13786== Command: ./impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.dealloc.out
==13786== Parent PID: 10074
==13786== 
==13786== 
==13786== HEAP SUMMARY:
==13786==     in use at exit: 0 bytes in 0 blocks
==13786==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13786== 
==13786== All heap blocks were freed -- no leaks are possible
==13786== 
==13786== For counts of detected and suppressed errors, rerun with: -v
==13786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test294 ===
The Valgrind memory detector as below:
==13801== Memcheck, a memory error detector
==13801== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13801== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13801== Command: ./impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.dealloc.out
==13801== Parent PID: 10074
==13801== 
==13801== 
==13801== HEAP SUMMARY:
==13801==     in use at exit: 0 bytes in 0 blocks
==13801==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13801== 
==13801== All heap blocks were freed -- no leaks are possible
==13801== 
==13801== For counts of detected and suppressed errors, rerun with: -v
==13801== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test295 ===
The Valgrind memory detector as below:
==13817== Memcheck, a memory error detector
==13817== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13817== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13817== Command: ./impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.dealloc.out
==13817== Parent PID: 10074
==13817== 
==13817== 
==13817== HEAP SUMMARY:
==13817==     in use at exit: 0 bytes in 0 blocks
==13817==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13817== 
==13817== All heap blocks were freed -- no leaks are possible
==13817== 
==13817== For counts of detected and suppressed errors, rerun with: -v
==13817== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test296 ===
The Valgrind memory detector as below:
==13832== Memcheck, a memory error detector
==13832== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13832== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13832== Command: ./impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.dealloc.out
==13832== Parent PID: 10074
==13832== 
==13832== 
==13832== HEAP SUMMARY:
==13832==     in use at exit: 0 bytes in 0 blocks
==13832==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13832== 
==13832== All heap blocks were freed -- no leaks are possible
==13832== 
==13832== For counts of detected and suppressed errors, rerun with: -v
==13832== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test297 ===
The Valgrind memory detector as below:
==13847== Memcheck, a memory error detector
==13847== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13847== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13847== Command: ./impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.dealloc.out
==13847== Parent PID: 10074
==13847== 
==13847== 
==13847== HEAP SUMMARY:
==13847==     in use at exit: 0 bytes in 0 blocks
==13847==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13847== 
==13847== All heap blocks were freed -- no leaks are possible
==13847== 
==13847== For counts of detected and suppressed errors, rerun with: -v
==13847== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test298 ===
The Valgrind memory detector as below:
==13863== Memcheck, a memory error detector
==13863== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13863== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13863== Command: ./impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.dealloc.out
==13863== Parent PID: 10074
==13863== 
==13863== 
==13863== HEAP SUMMARY:
==13863==     in use at exit: 0 bytes in 0 blocks
==13863==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13863== 
==13863== All heap blocks were freed -- no leaks are possible
==13863== 
==13863== For counts of detected and suppressed errors, rerun with: -v
==13863== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test299 ===
The Valgrind memory detector as below:
==13878== Memcheck, a memory error detector
==13878== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13878== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13878== Command: ./impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.dealloc.out
==13878== Parent PID: 10074
==13878== 
==13878== 
==13878== HEAP SUMMARY:
==13878==     in use at exit: 0 bytes in 0 blocks
==13878==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13878== 
==13878== All heap blocks were freed -- no leaks are possible
==13878== 
==13878== For counts of detected and suppressed errors, rerun with: -v
==13878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test3 ===
The Valgrind memory detector as below:
==13893== Memcheck, a memory error detector
==13893== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13893== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13893== Command: ./impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.dealloc.out
==13893== Parent PID: 10074
==13893== 
==13893== 
==13893== HEAP SUMMARY:
==13893==     in use at exit: 0 bytes in 0 blocks
==13893==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13893== 
==13893== All heap blocks were freed -- no leaks are possible
==13893== 
==13893== For counts of detected and suppressed errors, rerun with: -v
==13893== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test30 ===
The Valgrind memory detector as below:
==13909== Memcheck, a memory error detector
==13909== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13909== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13909== Command: ./impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.dealloc.out
==13909== Parent PID: 10074
==13909== 
==13909== 
==13909== HEAP SUMMARY:
==13909==     in use at exit: 0 bytes in 0 blocks
==13909==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13909== 
==13909== All heap blocks were freed -- no leaks are possible
==13909== 
==13909== For counts of detected and suppressed errors, rerun with: -v
==13909== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test300 ===
The Valgrind memory detector as below:
==13924== Memcheck, a memory error detector
==13924== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13924== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13924== Command: ./impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.dealloc.out
==13924== Parent PID: 10074
==13924== 
==13924== 
==13924== HEAP SUMMARY:
==13924==     in use at exit: 0 bytes in 0 blocks
==13924==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13924== 
==13924== All heap blocks were freed -- no leaks are possible
==13924== 
==13924== For counts of detected and suppressed errors, rerun with: -v
==13924== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test301 ===
The Valgrind memory detector as below:
==13939== Memcheck, a memory error detector
==13939== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13939== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13939== Command: ./impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.dealloc.out
==13939== Parent PID: 10074
==13939== 
==13939== 
==13939== HEAP SUMMARY:
==13939==     in use at exit: 0 bytes in 0 blocks
==13939==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13939== 
==13939== All heap blocks were freed -- no leaks are possible
==13939== 
==13939== For counts of detected and suppressed errors, rerun with: -v
==13939== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test302 ===
The Valgrind memory detector as below:
==13955== Memcheck, a memory error detector
==13955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13955== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13955== Command: ./impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.dealloc.out
==13955== Parent PID: 10074
==13955== 
==13955== 
==13955== HEAP SUMMARY:
==13955==     in use at exit: 0 bytes in 0 blocks
==13955==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13955== 
==13955== All heap blocks were freed -- no leaks are possible
==13955== 
==13955== For counts of detected and suppressed errors, rerun with: -v
==13955== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test303 ===
The Valgrind memory detector as below:
==13970== Memcheck, a memory error detector
==13970== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13970== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13970== Command: ./impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.dealloc.out
==13970== Parent PID: 10074
==13970== 
==13970== 
==13970== HEAP SUMMARY:
==13970==     in use at exit: 0 bytes in 0 blocks
==13970==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13970== 
==13970== All heap blocks were freed -- no leaks are possible
==13970== 
==13970== For counts of detected and suppressed errors, rerun with: -v
==13970== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test304 ===
The Valgrind memory detector as below:
==13986== Memcheck, a memory error detector
==13986== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13986== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13986== Command: ./impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.dealloc.out
==13986== Parent PID: 10074
==13986== 
==13986== 
==13986== HEAP SUMMARY:
==13986==     in use at exit: 0 bytes in 0 blocks
==13986==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==13986== 
==13986== All heap blocks were freed -- no leaks are possible
==13986== 
==13986== For counts of detected and suppressed errors, rerun with: -v
==13986== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test305 ===
The Valgrind memory detector as below:
==14002== Memcheck, a memory error detector
==14002== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14002== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14002== Command: ./impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.dealloc.out
==14002== Parent PID: 10074
==14002== 
==14002== 
==14002== HEAP SUMMARY:
==14002==     in use at exit: 0 bytes in 0 blocks
==14002==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14002== 
==14002== All heap blocks were freed -- no leaks are possible
==14002== 
==14002== For counts of detected and suppressed errors, rerun with: -v
==14002== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test306 ===
The Valgrind memory detector as below:
==14017== Memcheck, a memory error detector
==14017== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14017== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14017== Command: ./impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.dealloc.out
==14017== Parent PID: 10074
==14017== 
==14017== 
==14017== HEAP SUMMARY:
==14017==     in use at exit: 0 bytes in 0 blocks
==14017==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14017== 
==14017== All heap blocks were freed -- no leaks are possible
==14017== 
==14017== For counts of detected and suppressed errors, rerun with: -v
==14017== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test307 ===
The Valgrind memory detector as below:
==14032== Memcheck, a memory error detector
==14032== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14032== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14032== Command: ./impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.dealloc.out
==14032== Parent PID: 10074
==14032== 
==14032== 
==14032== HEAP SUMMARY:
==14032==     in use at exit: 0 bytes in 0 blocks
==14032==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14032== 
==14032== All heap blocks were freed -- no leaks are possible
==14032== 
==14032== For counts of detected and suppressed errors, rerun with: -v
==14032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test308 ===
The Valgrind memory detector as below:
==14049== Memcheck, a memory error detector
==14049== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14049== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14049== Command: ./impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.dealloc.out
==14049== Parent PID: 10074
==14049== 
==14049== 
==14049== HEAP SUMMARY:
==14049==     in use at exit: 0 bytes in 0 blocks
==14049==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14049== 
==14049== All heap blocks were freed -- no leaks are possible
==14049== 
==14049== For counts of detected and suppressed errors, rerun with: -v
==14049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test309 ===
The Valgrind memory detector as below:
==14064== Memcheck, a memory error detector
==14064== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14064== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14064== Command: ./impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.dealloc.out
==14064== Parent PID: 10074
==14064== 
==14064== 
==14064== HEAP SUMMARY:
==14064==     in use at exit: 0 bytes in 0 blocks
==14064==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14064== 
==14064== All heap blocks were freed -- no leaks are possible
==14064== 
==14064== For counts of detected and suppressed errors, rerun with: -v
==14064== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test31 ===
The Valgrind memory detector as below:
==14080== Memcheck, a memory error detector
==14080== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14080== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14080== Command: ./impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.dealloc.out
==14080== Parent PID: 10074
==14080== 
==14080== 
==14080== HEAP SUMMARY:
==14080==     in use at exit: 0 bytes in 0 blocks
==14080==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14080== 
==14080== All heap blocks were freed -- no leaks are possible
==14080== 
==14080== For counts of detected and suppressed errors, rerun with: -v
==14080== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test310 ===
The Valgrind memory detector as below:
==14095== Memcheck, a memory error detector
==14095== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14095== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14095== Command: ./impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.dealloc.out
==14095== Parent PID: 10074
==14095== 
==14095== 
==14095== HEAP SUMMARY:
==14095==     in use at exit: 0 bytes in 0 blocks
==14095==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14095== 
==14095== All heap blocks were freed -- no leaks are possible
==14095== 
==14095== For counts of detected and suppressed errors, rerun with: -v
==14095== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test311 ===
The Valgrind memory detector as below:
==14110== Memcheck, a memory error detector
==14110== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14110== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14110== Command: ./impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.dealloc.out
==14110== Parent PID: 10074
==14110== 
==14110== 
==14110== HEAP SUMMARY:
==14110==     in use at exit: 0 bytes in 0 blocks
==14110==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14110== 
==14110== All heap blocks were freed -- no leaks are possible
==14110== 
==14110== For counts of detected and suppressed errors, rerun with: -v
==14110== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test312 ===
The Valgrind memory detector as below:
==14125== Memcheck, a memory error detector
==14125== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14125== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14125== Command: ./impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.dealloc.out
==14125== Parent PID: 10074
==14125== 
==14125== 
==14125== HEAP SUMMARY:
==14125==     in use at exit: 0 bytes in 0 blocks
==14125==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14125== 
==14125== All heap blocks were freed -- no leaks are possible
==14125== 
==14125== For counts of detected and suppressed errors, rerun with: -v
==14125== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test313 ===
The Valgrind memory detector as below:
==14141== Memcheck, a memory error detector
==14141== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14141== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14141== Command: ./impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.dealloc.out
==14141== Parent PID: 10074
==14141== 
==14141== 
==14141== HEAP SUMMARY:
==14141==     in use at exit: 0 bytes in 0 blocks
==14141==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14141== 
==14141== All heap blocks were freed -- no leaks are possible
==14141== 
==14141== For counts of detected and suppressed errors, rerun with: -v
==14141== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test314 ===
The Valgrind memory detector as below:
==14157== Memcheck, a memory error detector
==14157== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14157== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14157== Command: ./impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.dealloc.out
==14157== Parent PID: 10074
==14157== 
==14157== 
==14157== HEAP SUMMARY:
==14157==     in use at exit: 0 bytes in 0 blocks
==14157==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14157== 
==14157== All heap blocks were freed -- no leaks are possible
==14157== 
==14157== For counts of detected and suppressed errors, rerun with: -v
==14157== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test315 ===
The Valgrind memory detector as below:
==14172== Memcheck, a memory error detector
==14172== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14172== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14172== Command: ./impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.dealloc.out
==14172== Parent PID: 10074
==14172== 
==14172== 
==14172== HEAP SUMMARY:
==14172==     in use at exit: 0 bytes in 0 blocks
==14172==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14172== 
==14172== All heap blocks were freed -- no leaks are possible
==14172== 
==14172== For counts of detected and suppressed errors, rerun with: -v
==14172== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test316 ===
The Valgrind memory detector as below:
==14188== Memcheck, a memory error detector
==14188== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14188== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14188== Command: ./impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.dealloc.out
==14188== Parent PID: 10074
==14188== 
==14188== 
==14188== HEAP SUMMARY:
==14188==     in use at exit: 0 bytes in 0 blocks
==14188==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14188== 
==14188== All heap blocks were freed -- no leaks are possible
==14188== 
==14188== For counts of detected and suppressed errors, rerun with: -v
==14188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test317 ===
The Valgrind memory detector as below:
==14203== Memcheck, a memory error detector
==14203== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14203== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14203== Command: ./impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.dealloc.out
==14203== Parent PID: 10074
==14203== 
==14203== 
==14203== HEAP SUMMARY:
==14203==     in use at exit: 0 bytes in 0 blocks
==14203==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14203== 
==14203== All heap blocks were freed -- no leaks are possible
==14203== 
==14203== For counts of detected and suppressed errors, rerun with: -v
==14203== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test318 ===
The Valgrind memory detector as below:
==14220== Memcheck, a memory error detector
==14220== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14220== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14220== Command: ./impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.dealloc.out
==14220== Parent PID: 10074
==14220== 
==14220== 
==14220== HEAP SUMMARY:
==14220==     in use at exit: 0 bytes in 0 blocks
==14220==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14220== 
==14220== All heap blocks were freed -- no leaks are possible
==14220== 
==14220== For counts of detected and suppressed errors, rerun with: -v
==14220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test319 ===
The Valgrind memory detector as below:
==14237== Memcheck, a memory error detector
==14237== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14237== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14237== Command: ./impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.dealloc.out
==14237== Parent PID: 10074
==14237== 
==14237== 
==14237== HEAP SUMMARY:
==14237==     in use at exit: 0 bytes in 0 blocks
==14237==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14237== 
==14237== All heap blocks were freed -- no leaks are possible
==14237== 
==14237== For counts of detected and suppressed errors, rerun with: -v
==14237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test32 ===
The Valgrind memory detector as below:
==14252== Memcheck, a memory error detector
==14252== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14252== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14252== Command: ./impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.dealloc.out
==14252== Parent PID: 10074
==14252== 
==14252== 
==14252== HEAP SUMMARY:
==14252==     in use at exit: 0 bytes in 0 blocks
==14252==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14252== 
==14252== All heap blocks were freed -- no leaks are possible
==14252== 
==14252== For counts of detected and suppressed errors, rerun with: -v
==14252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test320 ===
The Valgrind memory detector as below:
==14267== Memcheck, a memory error detector
==14267== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14267== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14267== Command: ./impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.dealloc.out
==14267== Parent PID: 10074
==14267== 
==14267== 
==14267== HEAP SUMMARY:
==14267==     in use at exit: 0 bytes in 0 blocks
==14267==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14267== 
==14267== All heap blocks were freed -- no leaks are possible
==14267== 
==14267== For counts of detected and suppressed errors, rerun with: -v
==14267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test321 ===
The Valgrind memory detector as below:
==14284== Memcheck, a memory error detector
==14284== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14284== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14284== Command: ./impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.dealloc.out
==14284== Parent PID: 10074
==14284== 
==14284== 
==14284== HEAP SUMMARY:
==14284==     in use at exit: 0 bytes in 0 blocks
==14284==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14284== 
==14284== All heap blocks were freed -- no leaks are possible
==14284== 
==14284== For counts of detected and suppressed errors, rerun with: -v
==14284== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test322 ===
The Valgrind memory detector as below:
==14299== Memcheck, a memory error detector
==14299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14299== Command: ./impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.dealloc.out
==14299== Parent PID: 10074
==14299== 
==14299== 
==14299== HEAP SUMMARY:
==14299==     in use at exit: 0 bytes in 0 blocks
==14299==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14299== 
==14299== All heap blocks were freed -- no leaks are possible
==14299== 
==14299== For counts of detected and suppressed errors, rerun with: -v
==14299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test323 ===
The Valgrind memory detector as below:
==14315== Memcheck, a memory error detector
==14315== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14315== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14315== Command: ./impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.dealloc.out
==14315== Parent PID: 10074
==14315== 
==14315== 
==14315== HEAP SUMMARY:
==14315==     in use at exit: 0 bytes in 0 blocks
==14315==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14315== 
==14315== All heap blocks were freed -- no leaks are possible
==14315== 
==14315== For counts of detected and suppressed errors, rerun with: -v
==14315== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test324 ===
The Valgrind memory detector as below:
==14330== Memcheck, a memory error detector
==14330== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14330== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14330== Command: ./impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.dealloc.out
==14330== Parent PID: 10074
==14330== 
==14330== 
==14330== HEAP SUMMARY:
==14330==     in use at exit: 0 bytes in 0 blocks
==14330==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14330== 
==14330== All heap blocks were freed -- no leaks are possible
==14330== 
==14330== For counts of detected and suppressed errors, rerun with: -v
==14330== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test325 ===
The Valgrind memory detector as below:
==14345== Memcheck, a memory error detector
==14345== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14345== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14345== Command: ./impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.dealloc.out
==14345== Parent PID: 10074
==14345== 
==14345== 
==14345== HEAP SUMMARY:
==14345==     in use at exit: 0 bytes in 0 blocks
==14345==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14345== 
==14345== All heap blocks were freed -- no leaks are possible
==14345== 
==14345== For counts of detected and suppressed errors, rerun with: -v
==14345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test326 ===
The Valgrind memory detector as below:
==14360== Memcheck, a memory error detector
==14360== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14360== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14360== Command: ./impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.dealloc.out
==14360== Parent PID: 10074
==14360== 
==14360== 
==14360== HEAP SUMMARY:
==14360==     in use at exit: 0 bytes in 0 blocks
==14360==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14360== 
==14360== All heap blocks were freed -- no leaks are possible
==14360== 
==14360== For counts of detected and suppressed errors, rerun with: -v
==14360== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test327 ===
The Valgrind memory detector as below:
==14377== Memcheck, a memory error detector
==14377== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14377== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14377== Command: ./impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.dealloc.out
==14377== Parent PID: 10074
==14377== 
==14377== 
==14377== HEAP SUMMARY:
==14377==     in use at exit: 0 bytes in 0 blocks
==14377==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14377== 
==14377== All heap blocks were freed -- no leaks are possible
==14377== 
==14377== For counts of detected and suppressed errors, rerun with: -v
==14377== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test328 ===
The Valgrind memory detector as below:
==14392== Memcheck, a memory error detector
==14392== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14392== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14392== Command: ./impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.dealloc.out
==14392== Parent PID: 10074
==14392== 
==14392== 
==14392== HEAP SUMMARY:
==14392==     in use at exit: 0 bytes in 0 blocks
==14392==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14392== 
==14392== All heap blocks were freed -- no leaks are possible
==14392== 
==14392== For counts of detected and suppressed errors, rerun with: -v
==14392== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test329 ===
The Valgrind memory detector as below:
==14407== Memcheck, a memory error detector
==14407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14407== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14407== Command: ./impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.dealloc.out
==14407== Parent PID: 10074
==14407== 
==14407== 
==14407== HEAP SUMMARY:
==14407==     in use at exit: 0 bytes in 0 blocks
==14407==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14407== 
==14407== All heap blocks were freed -- no leaks are possible
==14407== 
==14407== For counts of detected and suppressed errors, rerun with: -v
==14407== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test33 ===
The Valgrind memory detector as below:
==14423== Memcheck, a memory error detector
==14423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14423== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14423== Command: ./impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.dealloc.out
==14423== Parent PID: 10074
==14423== 
==14423== 
==14423== HEAP SUMMARY:
==14423==     in use at exit: 0 bytes in 0 blocks
==14423==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14423== 
==14423== All heap blocks were freed -- no leaks are possible
==14423== 
==14423== For counts of detected and suppressed errors, rerun with: -v
==14423== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test330 ===
The Valgrind memory detector as below:
==14438== Memcheck, a memory error detector
==14438== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14438== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14438== Command: ./impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.dealloc.out
==14438== Parent PID: 10074
==14438== 
==14438== 
==14438== HEAP SUMMARY:
==14438==     in use at exit: 0 bytes in 0 blocks
==14438==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14438== 
==14438== All heap blocks were freed -- no leaks are possible
==14438== 
==14438== For counts of detected and suppressed errors, rerun with: -v
==14438== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test331 ===
The Valgrind memory detector as below:
==14453== Memcheck, a memory error detector
==14453== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14453== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14453== Command: ./impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.dealloc.out
==14453== Parent PID: 10074
==14453== 
==14453== 
==14453== HEAP SUMMARY:
==14453==     in use at exit: 0 bytes in 0 blocks
==14453==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14453== 
==14453== All heap blocks were freed -- no leaks are possible
==14453== 
==14453== For counts of detected and suppressed errors, rerun with: -v
==14453== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test332 ===
The Valgrind memory detector as below:
==14468== Memcheck, a memory error detector
==14468== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14468== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14468== Command: ./impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.dealloc.out
==14468== Parent PID: 10074
==14468== 
==14468== 
==14468== HEAP SUMMARY:
==14468==     in use at exit: 0 bytes in 0 blocks
==14468==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14468== 
==14468== All heap blocks were freed -- no leaks are possible
==14468== 
==14468== For counts of detected and suppressed errors, rerun with: -v
==14468== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test333 ===
The Valgrind memory detector as below:
==14485== Memcheck, a memory error detector
==14485== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14485== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14485== Command: ./impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.dealloc.out
==14485== Parent PID: 10074
==14485== 
==14485== 
==14485== HEAP SUMMARY:
==14485==     in use at exit: 0 bytes in 0 blocks
==14485==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14485== 
==14485== All heap blocks were freed -- no leaks are possible
==14485== 
==14485== For counts of detected and suppressed errors, rerun with: -v
==14485== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test334 ===
The Valgrind memory detector as below:
==14500== Memcheck, a memory error detector
==14500== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14500== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14500== Command: ./impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.dealloc.out
==14500== Parent PID: 10074
==14500== 
==14500== 
==14500== HEAP SUMMARY:
==14500==     in use at exit: 0 bytes in 0 blocks
==14500==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14500== 
==14500== All heap blocks were freed -- no leaks are possible
==14500== 
==14500== For counts of detected and suppressed errors, rerun with: -v
==14500== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test335 ===
The Valgrind memory detector as below:
==14515== Memcheck, a memory error detector
==14515== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14515== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14515== Command: ./impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.dealloc.out
==14515== Parent PID: 10074
==14515== 
==14515== 
==14515== HEAP SUMMARY:
==14515==     in use at exit: 0 bytes in 0 blocks
==14515==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14515== 
==14515== All heap blocks were freed -- no leaks are possible
==14515== 
==14515== For counts of detected and suppressed errors, rerun with: -v
==14515== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test336 ===
The Valgrind memory detector as below:
==14530== Memcheck, a memory error detector
==14530== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14530== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14530== Command: ./impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.dealloc.out
==14530== Parent PID: 10074
==14530== 
==14530== 
==14530== HEAP SUMMARY:
==14530==     in use at exit: 0 bytes in 0 blocks
==14530==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14530== 
==14530== All heap blocks were freed -- no leaks are possible
==14530== 
==14530== For counts of detected and suppressed errors, rerun with: -v
==14530== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test337 ===
The Valgrind memory detector as below:
==14554== Memcheck, a memory error detector
==14554== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14554== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14554== Command: ./impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.dealloc.out
==14554== Parent PID: 10074
==14554== 
==14554== 
==14554== HEAP SUMMARY:
==14554==     in use at exit: 0 bytes in 0 blocks
==14554==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14554== 
==14554== All heap blocks were freed -- no leaks are possible
==14554== 
==14554== For counts of detected and suppressed errors, rerun with: -v
==14554== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test338 ===
The Valgrind memory detector as below:
==14569== Memcheck, a memory error detector
==14569== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14569== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14569== Command: ./impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.dealloc.out
==14569== Parent PID: 10074
==14569== 
==14569== 
==14569== HEAP SUMMARY:
==14569==     in use at exit: 0 bytes in 0 blocks
==14569==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14569== 
==14569== All heap blocks were freed -- no leaks are possible
==14569== 
==14569== For counts of detected and suppressed errors, rerun with: -v
==14569== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test339 ===
The Valgrind memory detector as below:
==14584== Memcheck, a memory error detector
==14584== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14584== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14584== Command: ./impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.dealloc.out
==14584== Parent PID: 10074
==14584== 
==14584== 
==14584== HEAP SUMMARY:
==14584==     in use at exit: 0 bytes in 0 blocks
==14584==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14584== 
==14584== All heap blocks were freed -- no leaks are possible
==14584== 
==14584== For counts of detected and suppressed errors, rerun with: -v
==14584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test34 ===
The Valgrind memory detector as below:
==14600== Memcheck, a memory error detector
==14600== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14600== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14600== Command: ./impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.dealloc.out
==14600== Parent PID: 10074
==14600== 
==14600== 
==14600== HEAP SUMMARY:
==14600==     in use at exit: 0 bytes in 0 blocks
==14600==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14600== 
==14600== All heap blocks were freed -- no leaks are possible
==14600== 
==14600== For counts of detected and suppressed errors, rerun with: -v
==14600== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test340 ===
The Valgrind memory detector as below:
==14615== Memcheck, a memory error detector
==14615== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14615== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14615== Command: ./impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.dealloc.out
==14615== Parent PID: 10074
==14615== 
==14615== 
==14615== HEAP SUMMARY:
==14615==     in use at exit: 0 bytes in 0 blocks
==14615==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14615== 
==14615== All heap blocks were freed -- no leaks are possible
==14615== 
==14615== For counts of detected and suppressed errors, rerun with: -v
==14615== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test341 ===
The Valgrind memory detector as below:
==14630== Memcheck, a memory error detector
==14630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14630== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14630== Command: ./impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.dealloc.out
==14630== Parent PID: 10074
==14630== 
==14630== 
==14630== HEAP SUMMARY:
==14630==     in use at exit: 0 bytes in 0 blocks
==14630==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14630== 
==14630== All heap blocks were freed -- no leaks are possible
==14630== 
==14630== For counts of detected and suppressed errors, rerun with: -v
==14630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test342 ===
The Valgrind memory detector as below:
==14684== Memcheck, a memory error detector
==14684== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14684== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14684== Command: ./impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.dealloc.out
==14684== Parent PID: 10074
==14684== 
==14684== 
==14684== HEAP SUMMARY:
==14684==     in use at exit: 0 bytes in 0 blocks
==14684==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14684== 
==14684== All heap blocks were freed -- no leaks are possible
==14684== 
==14684== For counts of detected and suppressed errors, rerun with: -v
==14684== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test343 ===
The Valgrind memory detector as below:
==14706== Memcheck, a memory error detector
==14706== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14706== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14706== Command: ./impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.dealloc.out
==14706== Parent PID: 10074
==14706== 
==14706== 
==14706== HEAP SUMMARY:
==14706==     in use at exit: 0 bytes in 0 blocks
==14706==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14706== 
==14706== All heap blocks were freed -- no leaks are possible
==14706== 
==14706== For counts of detected and suppressed errors, rerun with: -v
==14706== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test344 ===
The Valgrind memory detector as below:
==14721== Memcheck, a memory error detector
==14721== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14721== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14721== Command: ./impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.dealloc.out
==14721== Parent PID: 10074
==14721== 
==14721== 
==14721== HEAP SUMMARY:
==14721==     in use at exit: 0 bytes in 0 blocks
==14721==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14721== 
==14721== All heap blocks were freed -- no leaks are possible
==14721== 
==14721== For counts of detected and suppressed errors, rerun with: -v
==14721== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test345 ===
The Valgrind memory detector as below:
==14736== Memcheck, a memory error detector
==14736== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14736== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14736== Command: ./impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.dealloc.out
==14736== Parent PID: 10074
==14736== 
==14736== 
==14736== HEAP SUMMARY:
==14736==     in use at exit: 0 bytes in 0 blocks
==14736==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14736== 
==14736== All heap blocks were freed -- no leaks are possible
==14736== 
==14736== For counts of detected and suppressed errors, rerun with: -v
==14736== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test346 ===
The Valgrind memory detector as below:
==14751== Memcheck, a memory error detector
==14751== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14751== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14751== Command: ./impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.dealloc.out
==14751== Parent PID: 10074
==14751== 
==14751== 
==14751== HEAP SUMMARY:
==14751==     in use at exit: 0 bytes in 0 blocks
==14751==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14751== 
==14751== All heap blocks were freed -- no leaks are possible
==14751== 
==14751== For counts of detected and suppressed errors, rerun with: -v
==14751== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test347 ===
The Valgrind memory detector as below:
==14767== Memcheck, a memory error detector
==14767== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14767== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14767== Command: ./impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.dealloc.out
==14767== Parent PID: 10074
==14767== 
==14767== 
==14767== HEAP SUMMARY:
==14767==     in use at exit: 0 bytes in 0 blocks
==14767==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14767== 
==14767== All heap blocks were freed -- no leaks are possible
==14767== 
==14767== For counts of detected and suppressed errors, rerun with: -v
==14767== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test348 ===
The Valgrind memory detector as below:
==14783== Memcheck, a memory error detector
==14783== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14783== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14783== Command: ./impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.dealloc.out
==14783== Parent PID: 10074
==14783== 
==14783== 
==14783== HEAP SUMMARY:
==14783==     in use at exit: 0 bytes in 0 blocks
==14783==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14783== 
==14783== All heap blocks were freed -- no leaks are possible
==14783== 
==14783== For counts of detected and suppressed errors, rerun with: -v
==14783== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test349 ===
The Valgrind memory detector as below:
==14799== Memcheck, a memory error detector
==14799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14799== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14799== Command: ./impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.dealloc.out
==14799== Parent PID: 10074
==14799== 
==14799== 
==14799== HEAP SUMMARY:
==14799==     in use at exit: 0 bytes in 0 blocks
==14799==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14799== 
==14799== All heap blocks were freed -- no leaks are possible
==14799== 
==14799== For counts of detected and suppressed errors, rerun with: -v
==14799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test35 ===
The Valgrind memory detector as below:
==14816== Memcheck, a memory error detector
==14816== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14816== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14816== Command: ./impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.dealloc.out
==14816== Parent PID: 10074
==14816== 
==14816== 
==14816== HEAP SUMMARY:
==14816==     in use at exit: 0 bytes in 0 blocks
==14816==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14816== 
==14816== All heap blocks were freed -- no leaks are possible
==14816== 
==14816== For counts of detected and suppressed errors, rerun with: -v
==14816== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test350 ===
The Valgrind memory detector as below:
==14831== Memcheck, a memory error detector
==14831== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14831== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14831== Command: ./impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.dealloc.out
==14831== Parent PID: 10074
==14831== 
==14831== 
==14831== HEAP SUMMARY:
==14831==     in use at exit: 0 bytes in 0 blocks
==14831==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14831== 
==14831== All heap blocks were freed -- no leaks are possible
==14831== 
==14831== For counts of detected and suppressed errors, rerun with: -v
==14831== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test351 ===
The Valgrind memory detector as below:
==14846== Memcheck, a memory error detector
==14846== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14846== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14846== Command: ./impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.dealloc.out
==14846== Parent PID: 10074
==14846== 
==14846== 
==14846== HEAP SUMMARY:
==14846==     in use at exit: 0 bytes in 0 blocks
==14846==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14846== 
==14846== All heap blocks were freed -- no leaks are possible
==14846== 
==14846== For counts of detected and suppressed errors, rerun with: -v
==14846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test352 ===
The Valgrind memory detector as below:
==14861== Memcheck, a memory error detector
==14861== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14861== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14861== Command: ./impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.dealloc.out
==14861== Parent PID: 10074
==14861== 
==14861== 
==14861== HEAP SUMMARY:
==14861==     in use at exit: 0 bytes in 0 blocks
==14861==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14861== 
==14861== All heap blocks were freed -- no leaks are possible
==14861== 
==14861== For counts of detected and suppressed errors, rerun with: -v
==14861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test353 ===
The Valgrind memory detector as below:
==14877== Memcheck, a memory error detector
==14877== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14877== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14877== Command: ./impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.dealloc.out
==14877== Parent PID: 10074
==14877== 
==14877== 
==14877== HEAP SUMMARY:
==14877==     in use at exit: 0 bytes in 0 blocks
==14877==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14877== 
==14877== All heap blocks were freed -- no leaks are possible
==14877== 
==14877== For counts of detected and suppressed errors, rerun with: -v
==14877== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test354 ===
The Valgrind memory detector as below:
==14892== Memcheck, a memory error detector
==14892== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14892== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14892== Command: ./impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.dealloc.out
==14892== Parent PID: 10074
==14892== 
==14892== 
==14892== HEAP SUMMARY:
==14892==     in use at exit: 0 bytes in 0 blocks
==14892==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14892== 
==14892== All heap blocks were freed -- no leaks are possible
==14892== 
==14892== For counts of detected and suppressed errors, rerun with: -v
==14892== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test355 ===
The Valgrind memory detector as below:
==14907== Memcheck, a memory error detector
==14907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14907== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14907== Command: ./impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.dealloc.out
==14907== Parent PID: 10074
==14907== 
==14907== 
==14907== HEAP SUMMARY:
==14907==     in use at exit: 0 bytes in 0 blocks
==14907==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14907== 
==14907== All heap blocks were freed -- no leaks are possible
==14907== 
==14907== For counts of detected and suppressed errors, rerun with: -v
==14907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test356 ===
The Valgrind memory detector as below:
==14922== Memcheck, a memory error detector
==14922== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14922== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14922== Command: ./impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.dealloc.out
==14922== Parent PID: 10074
==14922== 
==14922== 
==14922== HEAP SUMMARY:
==14922==     in use at exit: 0 bytes in 0 blocks
==14922==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14922== 
==14922== All heap blocks were freed -- no leaks are possible
==14922== 
==14922== For counts of detected and suppressed errors, rerun with: -v
==14922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test357 ===
The Valgrind memory detector as below:
==14938== Memcheck, a memory error detector
==14938== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14938== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14938== Command: ./impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.dealloc.out
==14938== Parent PID: 10074
==14938== 
==14938== 
==14938== HEAP SUMMARY:
==14938==     in use at exit: 0 bytes in 0 blocks
==14938==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14938== 
==14938== All heap blocks were freed -- no leaks are possible
==14938== 
==14938== For counts of detected and suppressed errors, rerun with: -v
==14938== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test358 ===
The Valgrind memory detector as below:
==14954== Memcheck, a memory error detector
==14954== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14954== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14954== Command: ./impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.dealloc.out
==14954== Parent PID: 10074
==14954== 
==14954== 
==14954== HEAP SUMMARY:
==14954==     in use at exit: 0 bytes in 0 blocks
==14954==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14954== 
==14954== All heap blocks were freed -- no leaks are possible
==14954== 
==14954== For counts of detected and suppressed errors, rerun with: -v
==14954== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test359 ===
The Valgrind memory detector as below:
==14969== Memcheck, a memory error detector
==14969== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14969== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14969== Command: ./impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.dealloc.out
==14969== Parent PID: 10074
==14969== 
==14969== 
==14969== HEAP SUMMARY:
==14969==     in use at exit: 0 bytes in 0 blocks
==14969==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14969== 
==14969== All heap blocks were freed -- no leaks are possible
==14969== 
==14969== For counts of detected and suppressed errors, rerun with: -v
==14969== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test36 ===
The Valgrind memory detector as below:
==14985== Memcheck, a memory error detector
==14985== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14985== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14985== Command: ./impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.dealloc.out
==14985== Parent PID: 10074
==14985== 
==14985== 
==14985== HEAP SUMMARY:
==14985==     in use at exit: 0 bytes in 0 blocks
==14985==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==14985== 
==14985== All heap blocks were freed -- no leaks are possible
==14985== 
==14985== For counts of detected and suppressed errors, rerun with: -v
==14985== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test360 ===
The Valgrind memory detector as below:
==15000== Memcheck, a memory error detector
==15000== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15000== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15000== Command: ./impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.dealloc.out
==15000== Parent PID: 10074
==15000== 
==15000== 
==15000== HEAP SUMMARY:
==15000==     in use at exit: 0 bytes in 0 blocks
==15000==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15000== 
==15000== All heap blocks were freed -- no leaks are possible
==15000== 
==15000== For counts of detected and suppressed errors, rerun with: -v
==15000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test361 ===
The Valgrind memory detector as below:
==15015== Memcheck, a memory error detector
==15015== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15015== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15015== Command: ./impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.dealloc.out
==15015== Parent PID: 10074
==15015== 
==15015== 
==15015== HEAP SUMMARY:
==15015==     in use at exit: 0 bytes in 0 blocks
==15015==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15015== 
==15015== All heap blocks were freed -- no leaks are possible
==15015== 
==15015== For counts of detected and suppressed errors, rerun with: -v
==15015== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test362 ===
The Valgrind memory detector as below:
==15031== Memcheck, a memory error detector
==15031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15031== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15031== Command: ./impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.dealloc.out
==15031== Parent PID: 10074
==15031== 
==15031== 
==15031== HEAP SUMMARY:
==15031==     in use at exit: 0 bytes in 0 blocks
==15031==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15031== 
==15031== All heap blocks were freed -- no leaks are possible
==15031== 
==15031== For counts of detected and suppressed errors, rerun with: -v
==15031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test363 ===
The Valgrind memory detector as below:
==15046== Memcheck, a memory error detector
==15046== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15046== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15046== Command: ./impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.dealloc.out
==15046== Parent PID: 10074
==15046== 
==15046== 
==15046== HEAP SUMMARY:
==15046==     in use at exit: 0 bytes in 0 blocks
==15046==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15046== 
==15046== All heap blocks were freed -- no leaks are possible
==15046== 
==15046== For counts of detected and suppressed errors, rerun with: -v
==15046== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test364 ===
The Valgrind memory detector as below:
==15061== Memcheck, a memory error detector
==15061== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15061== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15061== Command: ./impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.dealloc.out
==15061== Parent PID: 10074
==15061== 
==15061== 
==15061== HEAP SUMMARY:
==15061==     in use at exit: 0 bytes in 0 blocks
==15061==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15061== 
==15061== All heap blocks were freed -- no leaks are possible
==15061== 
==15061== For counts of detected and suppressed errors, rerun with: -v
==15061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test365 ===
The Valgrind memory detector as below:
==15076== Memcheck, a memory error detector
==15076== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15076== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15076== Command: ./impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.dealloc.out
==15076== Parent PID: 10074
==15076== 
==15076== 
==15076== HEAP SUMMARY:
==15076==     in use at exit: 0 bytes in 0 blocks
==15076==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15076== 
==15076== All heap blocks were freed -- no leaks are possible
==15076== 
==15076== For counts of detected and suppressed errors, rerun with: -v
==15076== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test366 ===
The Valgrind memory detector as below:
==15093== Memcheck, a memory error detector
==15093== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15093== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15093== Command: ./impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.dealloc.out
==15093== Parent PID: 10074
==15093== 
==15093== 
==15093== HEAP SUMMARY:
==15093==     in use at exit: 0 bytes in 0 blocks
==15093==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15093== 
==15093== All heap blocks were freed -- no leaks are possible
==15093== 
==15093== For counts of detected and suppressed errors, rerun with: -v
==15093== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test367 ===
The Valgrind memory detector as below:
==15108== Memcheck, a memory error detector
==15108== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15108== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15108== Command: ./impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.dealloc.out
==15108== Parent PID: 10074
==15108== 
==15108== 
==15108== HEAP SUMMARY:
==15108==     in use at exit: 0 bytes in 0 blocks
==15108==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15108== 
==15108== All heap blocks were freed -- no leaks are possible
==15108== 
==15108== For counts of detected and suppressed errors, rerun with: -v
==15108== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test368 ===
The Valgrind memory detector as below:
==15124== Memcheck, a memory error detector
==15124== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15124== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15124== Command: ./impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.dealloc.out
==15124== Parent PID: 10074
==15124== 
==15124== 
==15124== HEAP SUMMARY:
==15124==     in use at exit: 0 bytes in 0 blocks
==15124==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15124== 
==15124== All heap blocks were freed -- no leaks are possible
==15124== 
==15124== For counts of detected and suppressed errors, rerun with: -v
==15124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test369 ===
The Valgrind memory detector as below:
==15139== Memcheck, a memory error detector
==15139== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15139== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15139== Command: ./impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.dealloc.out
==15139== Parent PID: 10074
==15139== 
==15139== 
==15139== HEAP SUMMARY:
==15139==     in use at exit: 0 bytes in 0 blocks
==15139==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15139== 
==15139== All heap blocks were freed -- no leaks are possible
==15139== 
==15139== For counts of detected and suppressed errors, rerun with: -v
==15139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test37 ===
The Valgrind memory detector as below:
==15155== Memcheck, a memory error detector
==15155== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15155== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15155== Command: ./impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.dealloc.out
==15155== Parent PID: 10074
==15155== 
==15155== 
==15155== HEAP SUMMARY:
==15155==     in use at exit: 0 bytes in 0 blocks
==15155==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15155== 
==15155== All heap blocks were freed -- no leaks are possible
==15155== 
==15155== For counts of detected and suppressed errors, rerun with: -v
==15155== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test370 ===
The Valgrind memory detector as below:
==15170== Memcheck, a memory error detector
==15170== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15170== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15170== Command: ./impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.dealloc.out
==15170== Parent PID: 10074
==15170== 
==15170== 
==15170== HEAP SUMMARY:
==15170==     in use at exit: 0 bytes in 0 blocks
==15170==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15170== 
==15170== All heap blocks were freed -- no leaks are possible
==15170== 
==15170== For counts of detected and suppressed errors, rerun with: -v
==15170== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test371 ===
The Valgrind memory detector as below:
==15185== Memcheck, a memory error detector
==15185== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15185== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15185== Command: ./impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.dealloc.out
==15185== Parent PID: 10074
==15185== 
==15185== 
==15185== HEAP SUMMARY:
==15185==     in use at exit: 0 bytes in 0 blocks
==15185==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15185== 
==15185== All heap blocks were freed -- no leaks are possible
==15185== 
==15185== For counts of detected and suppressed errors, rerun with: -v
==15185== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test372 ===
The Valgrind memory detector as below:
==15201== Memcheck, a memory error detector
==15201== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15201== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15201== Command: ./impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.dealloc.out
==15201== Parent PID: 10074
==15201== 
==15201== 
==15201== HEAP SUMMARY:
==15201==     in use at exit: 0 bytes in 0 blocks
==15201==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15201== 
==15201== All heap blocks were freed -- no leaks are possible
==15201== 
==15201== For counts of detected and suppressed errors, rerun with: -v
==15201== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test373 ===
The Valgrind memory detector as below:
==15216== Memcheck, a memory error detector
==15216== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15216== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15216== Command: ./impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.dealloc.out
==15216== Parent PID: 10074
==15216== 
==15216== 
==15216== HEAP SUMMARY:
==15216==     in use at exit: 0 bytes in 0 blocks
==15216==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15216== 
==15216== All heap blocks were freed -- no leaks are possible
==15216== 
==15216== For counts of detected and suppressed errors, rerun with: -v
==15216== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test374 ===
The Valgrind memory detector as below:
==15231== Memcheck, a memory error detector
==15231== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15231== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15231== Command: ./impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.dealloc.out
==15231== Parent PID: 10074
==15231== 
==15231== 
==15231== HEAP SUMMARY:
==15231==     in use at exit: 0 bytes in 0 blocks
==15231==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15231== 
==15231== All heap blocks were freed -- no leaks are possible
==15231== 
==15231== For counts of detected and suppressed errors, rerun with: -v
==15231== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test375 ===
The Valgrind memory detector as below:
==15247== Memcheck, a memory error detector
==15247== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15247== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15247== Command: ./impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.dealloc.out
==15247== Parent PID: 10074
==15247== 
==15247== 
==15247== HEAP SUMMARY:
==15247==     in use at exit: 0 bytes in 0 blocks
==15247==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15247== 
==15247== All heap blocks were freed -- no leaks are possible
==15247== 
==15247== For counts of detected and suppressed errors, rerun with: -v
==15247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test376 ===
The Valgrind memory detector as below:
==15262== Memcheck, a memory error detector
==15262== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15262== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15262== Command: ./impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.dealloc.out
==15262== Parent PID: 10074
==15262== 
==15262== 
==15262== HEAP SUMMARY:
==15262==     in use at exit: 0 bytes in 0 blocks
==15262==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15262== 
==15262== All heap blocks were freed -- no leaks are possible
==15262== 
==15262== For counts of detected and suppressed errors, rerun with: -v
==15262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test377 ===
The Valgrind memory detector as below:
==15278== Memcheck, a memory error detector
==15278== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15278== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15278== Command: ./impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.dealloc.out
==15278== Parent PID: 10074
==15278== 
==15278== 
==15278== HEAP SUMMARY:
==15278==     in use at exit: 0 bytes in 0 blocks
==15278==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15278== 
==15278== All heap blocks were freed -- no leaks are possible
==15278== 
==15278== For counts of detected and suppressed errors, rerun with: -v
==15278== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test378 ===
The Valgrind memory detector as below:
==15293== Memcheck, a memory error detector
==15293== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15293== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15293== Command: ./impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.dealloc.out
==15293== Parent PID: 10074
==15293== 
==15293== 
==15293== HEAP SUMMARY:
==15293==     in use at exit: 0 bytes in 0 blocks
==15293==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15293== 
==15293== All heap blocks were freed -- no leaks are possible
==15293== 
==15293== For counts of detected and suppressed errors, rerun with: -v
==15293== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test379 ===
The Valgrind memory detector as below:
==15309== Memcheck, a memory error detector
==15309== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15309== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15309== Command: ./impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.dealloc.out
==15309== Parent PID: 10074
==15309== 
==15309== 
==15309== HEAP SUMMARY:
==15309==     in use at exit: 0 bytes in 0 blocks
==15309==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15309== 
==15309== All heap blocks were freed -- no leaks are possible
==15309== 
==15309== For counts of detected and suppressed errors, rerun with: -v
==15309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test38 ===
The Valgrind memory detector as below:
==15324== Memcheck, a memory error detector
==15324== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15324== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15324== Command: ./impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.dealloc.out
==15324== Parent PID: 10074
==15324== 
==15324== 
==15324== HEAP SUMMARY:
==15324==     in use at exit: 0 bytes in 0 blocks
==15324==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15324== 
==15324== All heap blocks were freed -- no leaks are possible
==15324== 
==15324== For counts of detected and suppressed errors, rerun with: -v
==15324== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test380 ===
The Valgrind memory detector as below:
==15341== Memcheck, a memory error detector
==15341== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15341== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15341== Command: ./impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.dealloc.out
==15341== Parent PID: 10074
==15341== 
==15341== 
==15341== HEAP SUMMARY:
==15341==     in use at exit: 0 bytes in 0 blocks
==15341==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15341== 
==15341== All heap blocks were freed -- no leaks are possible
==15341== 
==15341== For counts of detected and suppressed errors, rerun with: -v
==15341== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test381 ===
The Valgrind memory detector as below:
==15356== Memcheck, a memory error detector
==15356== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15356== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15356== Command: ./impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.dealloc.out
==15356== Parent PID: 10074
==15356== 
==15356== 
==15356== HEAP SUMMARY:
==15356==     in use at exit: 0 bytes in 0 blocks
==15356==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15356== 
==15356== All heap blocks were freed -- no leaks are possible
==15356== 
==15356== For counts of detected and suppressed errors, rerun with: -v
==15356== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test382 ===
The Valgrind memory detector as below:
==15371== Memcheck, a memory error detector
==15371== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15371== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15371== Command: ./impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.dealloc.out
==15371== Parent PID: 10074
==15371== 
==15371== 
==15371== HEAP SUMMARY:
==15371==     in use at exit: 0 bytes in 0 blocks
==15371==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15371== 
==15371== All heap blocks were freed -- no leaks are possible
==15371== 
==15371== For counts of detected and suppressed errors, rerun with: -v
==15371== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test383 ===
The Valgrind memory detector as below:
==15386== Memcheck, a memory error detector
==15386== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15386== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15386== Command: ./impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.dealloc.out
==15386== Parent PID: 10074
==15386== 
==15386== 
==15386== HEAP SUMMARY:
==15386==     in use at exit: 0 bytes in 0 blocks
==15386==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15386== 
==15386== All heap blocks were freed -- no leaks are possible
==15386== 
==15386== For counts of detected and suppressed errors, rerun with: -v
==15386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test384 ===
The Valgrind memory detector as below:
==15402== Memcheck, a memory error detector
==15402== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15402== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15402== Command: ./impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.dealloc.out
==15402== Parent PID: 10074
==15402== 
==15402== 
==15402== HEAP SUMMARY:
==15402==     in use at exit: 0 bytes in 0 blocks
==15402==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15402== 
==15402== All heap blocks were freed -- no leaks are possible
==15402== 
==15402== For counts of detected and suppressed errors, rerun with: -v
==15402== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test385 ===
The Valgrind memory detector as below:
==15417== Memcheck, a memory error detector
==15417== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15417== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15417== Command: ./impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.dealloc.out
==15417== Parent PID: 10074
==15417== 
==15417== 
==15417== HEAP SUMMARY:
==15417==     in use at exit: 0 bytes in 0 blocks
==15417==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15417== 
==15417== All heap blocks were freed -- no leaks are possible
==15417== 
==15417== For counts of detected and suppressed errors, rerun with: -v
==15417== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test386 ===
The Valgrind memory detector as below:
==15433== Memcheck, a memory error detector
==15433== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15433== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15433== Command: ./impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.dealloc.out
==15433== Parent PID: 10074
==15433== 
==15433== 
==15433== HEAP SUMMARY:
==15433==     in use at exit: 0 bytes in 0 blocks
==15433==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15433== 
==15433== All heap blocks were freed -- no leaks are possible
==15433== 
==15433== For counts of detected and suppressed errors, rerun with: -v
==15433== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test387 ===
The Valgrind memory detector as below:
==15448== Memcheck, a memory error detector
==15448== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15448== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15448== Command: ./impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.dealloc.out
==15448== Parent PID: 10074
==15448== 
==15448== 
==15448== HEAP SUMMARY:
==15448==     in use at exit: 0 bytes in 0 blocks
==15448==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15448== 
==15448== All heap blocks were freed -- no leaks are possible
==15448== 
==15448== For counts of detected and suppressed errors, rerun with: -v
==15448== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test388 ===
The Valgrind memory detector as below:
==15464== Memcheck, a memory error detector
==15464== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15464== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15464== Command: ./impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.dealloc.out
==15464== Parent PID: 10074
==15464== 
==15464== 
==15464== HEAP SUMMARY:
==15464==     in use at exit: 0 bytes in 0 blocks
==15464==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15464== 
==15464== All heap blocks were freed -- no leaks are possible
==15464== 
==15464== For counts of detected and suppressed errors, rerun with: -v
==15464== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test389 ===
The Valgrind memory detector as below:
==15479== Memcheck, a memory error detector
==15479== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15479== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15479== Command: ./impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.dealloc.out
==15479== Parent PID: 10074
==15479== 
==15479== 
==15479== HEAP SUMMARY:
==15479==     in use at exit: 0 bytes in 0 blocks
==15479==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15479== 
==15479== All heap blocks were freed -- no leaks are possible
==15479== 
==15479== For counts of detected and suppressed errors, rerun with: -v
==15479== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test39 ===
The Valgrind memory detector as below:
==15495== Memcheck, a memory error detector
==15495== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15495== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15495== Command: ./impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.dealloc.out
==15495== Parent PID: 10074
==15495== 
==15495== 
==15495== HEAP SUMMARY:
==15495==     in use at exit: 0 bytes in 0 blocks
==15495==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15495== 
==15495== All heap blocks were freed -- no leaks are possible
==15495== 
==15495== For counts of detected and suppressed errors, rerun with: -v
==15495== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test390 ===
The Valgrind memory detector as below:
==15511== Memcheck, a memory error detector
==15511== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15511== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15511== Command: ./impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.dealloc.out
==15511== Parent PID: 10074
==15511== 
==15511== 
==15511== HEAP SUMMARY:
==15511==     in use at exit: 0 bytes in 0 blocks
==15511==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15511== 
==15511== All heap blocks were freed -- no leaks are possible
==15511== 
==15511== For counts of detected and suppressed errors, rerun with: -v
==15511== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test391 ===
The Valgrind memory detector as below:
==15526== Memcheck, a memory error detector
==15526== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15526== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15526== Command: ./impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.dealloc.out
==15526== Parent PID: 10074
==15526== 
==15526== 
==15526== HEAP SUMMARY:
==15526==     in use at exit: 0 bytes in 0 blocks
==15526==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15526== 
==15526== All heap blocks were freed -- no leaks are possible
==15526== 
==15526== For counts of detected and suppressed errors, rerun with: -v
==15526== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test392 ===
The Valgrind memory detector as below:
==15541== Memcheck, a memory error detector
==15541== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15541== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15541== Command: ./impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.dealloc.out
==15541== Parent PID: 10074
==15541== 
==15541== 
==15541== HEAP SUMMARY:
==15541==     in use at exit: 0 bytes in 0 blocks
==15541==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15541== 
==15541== All heap blocks were freed -- no leaks are possible
==15541== 
==15541== For counts of detected and suppressed errors, rerun with: -v
==15541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test393 ===
The Valgrind memory detector as below:
==15557== Memcheck, a memory error detector
==15557== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15557== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15557== Command: ./impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.dealloc.out
==15557== Parent PID: 10074
==15557== 
==15557== 
==15557== HEAP SUMMARY:
==15557==     in use at exit: 0 bytes in 0 blocks
==15557==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15557== 
==15557== All heap blocks were freed -- no leaks are possible
==15557== 
==15557== For counts of detected and suppressed errors, rerun with: -v
==15557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test394 ===
The Valgrind memory detector as below:
==15573== Memcheck, a memory error detector
==15573== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15573== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15573== Command: ./impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.dealloc.out
==15573== Parent PID: 10074
==15573== 
==15573== 
==15573== HEAP SUMMARY:
==15573==     in use at exit: 0 bytes in 0 blocks
==15573==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15573== 
==15573== All heap blocks were freed -- no leaks are possible
==15573== 
==15573== For counts of detected and suppressed errors, rerun with: -v
==15573== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test395 ===
The Valgrind memory detector as below:
==15588== Memcheck, a memory error detector
==15588== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15588== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15588== Command: ./impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.dealloc.out
==15588== Parent PID: 10074
==15588== 
==15588== 
==15588== HEAP SUMMARY:
==15588==     in use at exit: 0 bytes in 0 blocks
==15588==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15588== 
==15588== All heap blocks were freed -- no leaks are possible
==15588== 
==15588== For counts of detected and suppressed errors, rerun with: -v
==15588== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test396 ===
The Valgrind memory detector as below:
==15604== Memcheck, a memory error detector
==15604== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15604== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15604== Command: ./impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.dealloc.out
==15604== Parent PID: 10074
==15604== 
==15604== 
==15604== HEAP SUMMARY:
==15604==     in use at exit: 0 bytes in 0 blocks
==15604==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15604== 
==15604== All heap blocks were freed -- no leaks are possible
==15604== 
==15604== For counts of detected and suppressed errors, rerun with: -v
==15604== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test397 ===
The Valgrind memory detector as below:
==15619== Memcheck, a memory error detector
==15619== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15619== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15619== Command: ./impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.dealloc.out
==15619== Parent PID: 10074
==15619== 
==15619== 
==15619== HEAP SUMMARY:
==15619==     in use at exit: 0 bytes in 0 blocks
==15619==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15619== 
==15619== All heap blocks were freed -- no leaks are possible
==15619== 
==15619== For counts of detected and suppressed errors, rerun with: -v
==15619== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test398 ===
The Valgrind memory detector as below:
==15636== Memcheck, a memory error detector
==15636== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15636== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15636== Command: ./impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.dealloc.out
==15636== Parent PID: 10074
==15636== 
==15636== 
==15636== HEAP SUMMARY:
==15636==     in use at exit: 0 bytes in 0 blocks
==15636==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15636== 
==15636== All heap blocks were freed -- no leaks are possible
==15636== 
==15636== For counts of detected and suppressed errors, rerun with: -v
==15636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test399 ===
The Valgrind memory detector as below:
==15651== Memcheck, a memory error detector
==15651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15651== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15651== Command: ./impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.dealloc.out
==15651== Parent PID: 10074
==15651== 
==15651== 
==15651== HEAP SUMMARY:
==15651==     in use at exit: 0 bytes in 0 blocks
==15651==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15651== 
==15651== All heap blocks were freed -- no leaks are possible
==15651== 
==15651== For counts of detected and suppressed errors, rerun with: -v
==15651== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test4 ===
The Valgrind memory detector as below:
==15666== Memcheck, a memory error detector
==15666== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15666== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15666== Command: ./impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.dealloc.out
==15666== Parent PID: 10074
==15666== 
==15666== 
==15666== HEAP SUMMARY:
==15666==     in use at exit: 0 bytes in 0 blocks
==15666==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15666== 
==15666== All heap blocks were freed -- no leaks are possible
==15666== 
==15666== For counts of detected and suppressed errors, rerun with: -v
==15666== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test40 ===
The Valgrind memory detector as below:
==15681== Memcheck, a memory error detector
==15681== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15681== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15681== Command: ./impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.dealloc.out
==15681== Parent PID: 10074
==15681== 
==15681== 
==15681== HEAP SUMMARY:
==15681==     in use at exit: 0 bytes in 0 blocks
==15681==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15681== 
==15681== All heap blocks were freed -- no leaks are possible
==15681== 
==15681== For counts of detected and suppressed errors, rerun with: -v
==15681== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test400 ===
The Valgrind memory detector as below:
==15697== Memcheck, a memory error detector
==15697== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15697== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15697== Command: ./impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.dealloc.out
==15697== Parent PID: 10074
==15697== 
==15697== 
==15697== HEAP SUMMARY:
==15697==     in use at exit: 0 bytes in 0 blocks
==15697==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15697== 
==15697== All heap blocks were freed -- no leaks are possible
==15697== 
==15697== For counts of detected and suppressed errors, rerun with: -v
==15697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test401 ===
The Valgrind memory detector as below:
==15712== Memcheck, a memory error detector
==15712== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15712== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15712== Command: ./impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.dealloc.out
==15712== Parent PID: 10074
==15712== 
==15712== 
==15712== HEAP SUMMARY:
==15712==     in use at exit: 0 bytes in 0 blocks
==15712==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15712== 
==15712== All heap blocks were freed -- no leaks are possible
==15712== 
==15712== For counts of detected and suppressed errors, rerun with: -v
==15712== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test402 ===
The Valgrind memory detector as below:
==15727== Memcheck, a memory error detector
==15727== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15727== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15727== Command: ./impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.dealloc.out
==15727== Parent PID: 10074
==15727== 
==15727== 
==15727== HEAP SUMMARY:
==15727==     in use at exit: 0 bytes in 0 blocks
==15727==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15727== 
==15727== All heap blocks were freed -- no leaks are possible
==15727== 
==15727== For counts of detected and suppressed errors, rerun with: -v
==15727== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test403 ===
The Valgrind memory detector as below:
==15742== Memcheck, a memory error detector
==15742== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15742== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15742== Command: ./impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.dealloc.out
==15742== Parent PID: 10074
==15742== 
==15742== 
==15742== HEAP SUMMARY:
==15742==     in use at exit: 0 bytes in 0 blocks
==15742==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15742== 
==15742== All heap blocks were freed -- no leaks are possible
==15742== 
==15742== For counts of detected and suppressed errors, rerun with: -v
==15742== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test404 ===
The Valgrind memory detector as below:
==15758== Memcheck, a memory error detector
==15758== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15758== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15758== Command: ./impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.dealloc.out
==15758== Parent PID: 10074
==15758== 
==15758== 
==15758== HEAP SUMMARY:
==15758==     in use at exit: 0 bytes in 0 blocks
==15758==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15758== 
==15758== All heap blocks were freed -- no leaks are possible
==15758== 
==15758== For counts of detected and suppressed errors, rerun with: -v
==15758== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test405 ===
The Valgrind memory detector as below:
==15773== Memcheck, a memory error detector
==15773== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15773== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15773== Command: ./impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.dealloc.out
==15773== Parent PID: 10074
==15773== 
==15773== 
==15773== HEAP SUMMARY:
==15773==     in use at exit: 0 bytes in 0 blocks
==15773==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15773== 
==15773== All heap blocks were freed -- no leaks are possible
==15773== 
==15773== For counts of detected and suppressed errors, rerun with: -v
==15773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test406 ===
The Valgrind memory detector as below:
==15788== Memcheck, a memory error detector
==15788== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15788== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15788== Command: ./impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.dealloc.out
==15788== Parent PID: 10074
==15788== 
==15788== 
==15788== HEAP SUMMARY:
==15788==     in use at exit: 0 bytes in 0 blocks
==15788==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15788== 
==15788== All heap blocks were freed -- no leaks are possible
==15788== 
==15788== For counts of detected and suppressed errors, rerun with: -v
==15788== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test407 ===
The Valgrind memory detector as below:
==15804== Memcheck, a memory error detector
==15804== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15804== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15804== Command: ./impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.dealloc.out
==15804== Parent PID: 10074
==15804== 
==15804== 
==15804== HEAP SUMMARY:
==15804==     in use at exit: 0 bytes in 0 blocks
==15804==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15804== 
==15804== All heap blocks were freed -- no leaks are possible
==15804== 
==15804== For counts of detected and suppressed errors, rerun with: -v
==15804== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test408 ===
The Valgrind memory detector as below:
==15819== Memcheck, a memory error detector
==15819== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15819== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15819== Command: ./impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.dealloc.out
==15819== Parent PID: 10074
==15819== 
==15819== 
==15819== HEAP SUMMARY:
==15819==     in use at exit: 0 bytes in 0 blocks
==15819==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15819== 
==15819== All heap blocks were freed -- no leaks are possible
==15819== 
==15819== For counts of detected and suppressed errors, rerun with: -v
==15819== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test409 ===
The Valgrind memory detector as below:
==15834== Memcheck, a memory error detector
==15834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15834== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15834== Command: ./impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.dealloc.out
==15834== Parent PID: 10074
==15834== 
==15834== 
==15834== HEAP SUMMARY:
==15834==     in use at exit: 0 bytes in 0 blocks
==15834==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15834== 
==15834== All heap blocks were freed -- no leaks are possible
==15834== 
==15834== For counts of detected and suppressed errors, rerun with: -v
==15834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test41 ===
The Valgrind memory detector as below:
==15849== Memcheck, a memory error detector
==15849== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15849== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15849== Command: ./impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.dealloc.out
==15849== Parent PID: 10074
==15849== 
==15849== 
==15849== HEAP SUMMARY:
==15849==     in use at exit: 0 bytes in 0 blocks
==15849==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15849== 
==15849== All heap blocks were freed -- no leaks are possible
==15849== 
==15849== For counts of detected and suppressed errors, rerun with: -v
==15849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test410 ===
The Valgrind memory detector as below:
==15865== Memcheck, a memory error detector
==15865== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15865== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15865== Command: ./impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.dealloc.out
==15865== Parent PID: 10074
==15865== 
==15865== 
==15865== HEAP SUMMARY:
==15865==     in use at exit: 0 bytes in 0 blocks
==15865==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15865== 
==15865== All heap blocks were freed -- no leaks are possible
==15865== 
==15865== For counts of detected and suppressed errors, rerun with: -v
==15865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test411 ===
The Valgrind memory detector as below:
==15880== Memcheck, a memory error detector
==15880== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15880== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15880== Command: ./impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.dealloc.out
==15880== Parent PID: 10074
==15880== 
==15880== 
==15880== HEAP SUMMARY:
==15880==     in use at exit: 0 bytes in 0 blocks
==15880==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15880== 
==15880== All heap blocks were freed -- no leaks are possible
==15880== 
==15880== For counts of detected and suppressed errors, rerun with: -v
==15880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test412 ===
The Valgrind memory detector as below:
==15895== Memcheck, a memory error detector
==15895== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15895== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15895== Command: ./impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.dealloc.out
==15895== Parent PID: 10074
==15895== 
==15895== 
==15895== HEAP SUMMARY:
==15895==     in use at exit: 0 bytes in 0 blocks
==15895==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15895== 
==15895== All heap blocks were freed -- no leaks are possible
==15895== 
==15895== For counts of detected and suppressed errors, rerun with: -v
==15895== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test413 ===
The Valgrind memory detector as below:
==15910== Memcheck, a memory error detector
==15910== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15910== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15910== Command: ./impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.dealloc.out
==15910== Parent PID: 10074
==15910== 
==15910== 
==15910== HEAP SUMMARY:
==15910==     in use at exit: 0 bytes in 0 blocks
==15910==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15910== 
==15910== All heap blocks were freed -- no leaks are possible
==15910== 
==15910== For counts of detected and suppressed errors, rerun with: -v
==15910== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test414 ===
The Valgrind memory detector as below:
==15927== Memcheck, a memory error detector
==15927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15927== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15927== Command: ./impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.dealloc.out
==15927== Parent PID: 10074
==15927== 
==15927== 
==15927== HEAP SUMMARY:
==15927==     in use at exit: 0 bytes in 0 blocks
==15927==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15927== 
==15927== All heap blocks were freed -- no leaks are possible
==15927== 
==15927== For counts of detected and suppressed errors, rerun with: -v
==15927== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test415 ===
The Valgrind memory detector as below:
==15942== Memcheck, a memory error detector
==15942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15942== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15942== Command: ./impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.dealloc.out
==15942== Parent PID: 10074
==15942== 
==15942== 
==15942== HEAP SUMMARY:
==15942==     in use at exit: 0 bytes in 0 blocks
==15942==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15942== 
==15942== All heap blocks were freed -- no leaks are possible
==15942== 
==15942== For counts of detected and suppressed errors, rerun with: -v
==15942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test416 ===
The Valgrind memory detector as below:
==15957== Memcheck, a memory error detector
==15957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15957== Command: ./impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.dealloc.out
==15957== Parent PID: 10074
==15957== 
==15957== 
==15957== HEAP SUMMARY:
==15957==     in use at exit: 0 bytes in 0 blocks
==15957==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15957== 
==15957== All heap blocks were freed -- no leaks are possible
==15957== 
==15957== For counts of detected and suppressed errors, rerun with: -v
==15957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test417 ===
The Valgrind memory detector as below:
==15973== Memcheck, a memory error detector
==15973== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15973== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15973== Command: ./impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.dealloc.out
==15973== Parent PID: 10074
==15973== 
==15973== 
==15973== HEAP SUMMARY:
==15973==     in use at exit: 0 bytes in 0 blocks
==15973==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15973== 
==15973== All heap blocks were freed -- no leaks are possible
==15973== 
==15973== For counts of detected and suppressed errors, rerun with: -v
==15973== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test418 ===
The Valgrind memory detector as below:
==15988== Memcheck, a memory error detector
==15988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15988== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15988== Command: ./impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.dealloc.out
==15988== Parent PID: 10074
==15988== 
==15988== 
==15988== HEAP SUMMARY:
==15988==     in use at exit: 0 bytes in 0 blocks
==15988==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==15988== 
==15988== All heap blocks were freed -- no leaks are possible
==15988== 
==15988== For counts of detected and suppressed errors, rerun with: -v
==15988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test419 ===
The Valgrind memory detector as below:
==16003== Memcheck, a memory error detector
==16003== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16003== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16003== Command: ./impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.dealloc.out
==16003== Parent PID: 10074
==16003== 
==16003== 
==16003== HEAP SUMMARY:
==16003==     in use at exit: 0 bytes in 0 blocks
==16003==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16003== 
==16003== All heap blocks were freed -- no leaks are possible
==16003== 
==16003== For counts of detected and suppressed errors, rerun with: -v
==16003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test42 ===
The Valgrind memory detector as below:
==16018== Memcheck, a memory error detector
==16018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16018== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16018== Command: ./impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.dealloc.out
==16018== Parent PID: 10074
==16018== 
==16018== 
==16018== HEAP SUMMARY:
==16018==     in use at exit: 0 bytes in 0 blocks
==16018==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16018== 
==16018== All heap blocks were freed -- no leaks are possible
==16018== 
==16018== For counts of detected and suppressed errors, rerun with: -v
==16018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test420 ===
The Valgrind memory detector as below:
==16034== Memcheck, a memory error detector
==16034== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16034== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16034== Command: ./impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.dealloc.out
==16034== Parent PID: 10074
==16034== 
==16034== 
==16034== HEAP SUMMARY:
==16034==     in use at exit: 0 bytes in 0 blocks
==16034==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16034== 
==16034== All heap blocks were freed -- no leaks are possible
==16034== 
==16034== For counts of detected and suppressed errors, rerun with: -v
==16034== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test421 ===
The Valgrind memory detector as below:
==16049== Memcheck, a memory error detector
==16049== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16049== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16049== Command: ./impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.dealloc.out
==16049== Parent PID: 10074
==16049== 
==16049== 
==16049== HEAP SUMMARY:
==16049==     in use at exit: 0 bytes in 0 blocks
==16049==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16049== 
==16049== All heap blocks were freed -- no leaks are possible
==16049== 
==16049== For counts of detected and suppressed errors, rerun with: -v
==16049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test422 ===
The Valgrind memory detector as below:
==16065== Memcheck, a memory error detector
==16065== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16065== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16065== Command: ./impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.dealloc.out
==16065== Parent PID: 10074
==16065== 
==16065== 
==16065== HEAP SUMMARY:
==16065==     in use at exit: 0 bytes in 0 blocks
==16065==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16065== 
==16065== All heap blocks were freed -- no leaks are possible
==16065== 
==16065== For counts of detected and suppressed errors, rerun with: -v
==16065== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test423 ===
The Valgrind memory detector as below:
==16080== Memcheck, a memory error detector
==16080== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16080== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16080== Command: ./impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.dealloc.out
==16080== Parent PID: 10074
==16080== 
==16080== 
==16080== HEAP SUMMARY:
==16080==     in use at exit: 0 bytes in 0 blocks
==16080==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16080== 
==16080== All heap blocks were freed -- no leaks are possible
==16080== 
==16080== For counts of detected and suppressed errors, rerun with: -v
==16080== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test424 ===
The Valgrind memory detector as below:
==16096== Memcheck, a memory error detector
==16096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16096== Command: ./impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.dealloc.out
==16096== Parent PID: 10074
==16096== 
==16096== 
==16096== HEAP SUMMARY:
==16096==     in use at exit: 0 bytes in 0 blocks
==16096==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16096== 
==16096== All heap blocks were freed -- no leaks are possible
==16096== 
==16096== For counts of detected and suppressed errors, rerun with: -v
==16096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test425 ===
The Valgrind memory detector as below:
==16111== Memcheck, a memory error detector
==16111== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16111== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16111== Command: ./impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.dealloc.out
==16111== Parent PID: 10074
==16111== 
==16111== 
==16111== HEAP SUMMARY:
==16111==     in use at exit: 0 bytes in 0 blocks
==16111==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16111== 
==16111== All heap blocks were freed -- no leaks are possible
==16111== 
==16111== For counts of detected and suppressed errors, rerun with: -v
==16111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test426 ===
The Valgrind memory detector as below:
==16130== Memcheck, a memory error detector
==16130== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16130== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16130== Command: ./impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.dealloc.out
==16130== Parent PID: 10074
==16130== 
==16130== 
==16130== HEAP SUMMARY:
==16130==     in use at exit: 0 bytes in 0 blocks
==16130==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16130== 
==16130== All heap blocks were freed -- no leaks are possible
==16130== 
==16130== For counts of detected and suppressed errors, rerun with: -v
==16130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test427 ===
The Valgrind memory detector as below:
==16147== Memcheck, a memory error detector
==16147== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16147== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16147== Command: ./impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.dealloc.out
==16147== Parent PID: 10074
==16147== 
==16147== 
==16147== HEAP SUMMARY:
==16147==     in use at exit: 0 bytes in 0 blocks
==16147==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16147== 
==16147== All heap blocks were freed -- no leaks are possible
==16147== 
==16147== For counts of detected and suppressed errors, rerun with: -v
==16147== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test428 ===
The Valgrind memory detector as below:
==16205== Memcheck, a memory error detector
==16205== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16205== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16205== Command: ./impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.dealloc.out
==16205== Parent PID: 10074
==16205== 
==16205== 
==16205== HEAP SUMMARY:
==16205==     in use at exit: 0 bytes in 0 blocks
==16205==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16205== 
==16205== All heap blocks were freed -- no leaks are possible
==16205== 
==16205== For counts of detected and suppressed errors, rerun with: -v
==16205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test429 ===
The Valgrind memory detector as below:
==16222== Memcheck, a memory error detector
==16222== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16222== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16222== Command: ./impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.dealloc.out
==16222== Parent PID: 10074
==16222== 
==16222== 
==16222== HEAP SUMMARY:
==16222==     in use at exit: 0 bytes in 0 blocks
==16222==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16222== 
==16222== All heap blocks were freed -- no leaks are possible
==16222== 
==16222== For counts of detected and suppressed errors, rerun with: -v
==16222== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test43 ===
The Valgrind memory detector as below:
==16238== Memcheck, a memory error detector
==16238== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16238== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16238== Command: ./impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.dealloc.out
==16238== Parent PID: 10074
==16238== 
==16238== 
==16238== HEAP SUMMARY:
==16238==     in use at exit: 0 bytes in 0 blocks
==16238==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16238== 
==16238== All heap blocks were freed -- no leaks are possible
==16238== 
==16238== For counts of detected and suppressed errors, rerun with: -v
==16238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test430 ===
The Valgrind memory detector as below:
==16255== Memcheck, a memory error detector
==16255== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16255== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16255== Command: ./impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.dealloc.out
==16255== Parent PID: 10074
==16255== 
==16255== 
==16255== HEAP SUMMARY:
==16255==     in use at exit: 0 bytes in 0 blocks
==16255==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16255== 
==16255== All heap blocks were freed -- no leaks are possible
==16255== 
==16255== For counts of detected and suppressed errors, rerun with: -v
==16255== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test431 ===
The Valgrind memory detector as below:
==16271== Memcheck, a memory error detector
==16271== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16271== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16271== Command: ./impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.dealloc.out
==16271== Parent PID: 10074
==16271== 
==16271== 
==16271== HEAP SUMMARY:
==16271==     in use at exit: 0 bytes in 0 blocks
==16271==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16271== 
==16271== All heap blocks were freed -- no leaks are possible
==16271== 
==16271== For counts of detected and suppressed errors, rerun with: -v
==16271== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test432 ===
The Valgrind memory detector as below:
==16287== Memcheck, a memory error detector
==16287== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16287== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16287== Command: ./impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.dealloc.out
==16287== Parent PID: 10074
==16287== 
==16287== 
==16287== HEAP SUMMARY:
==16287==     in use at exit: 0 bytes in 0 blocks
==16287==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16287== 
==16287== All heap blocks were freed -- no leaks are possible
==16287== 
==16287== For counts of detected and suppressed errors, rerun with: -v
==16287== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test433 ===
The Valgrind memory detector as below:
==16304== Memcheck, a memory error detector
==16304== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16304== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16304== Command: ./impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.dealloc.out
==16304== Parent PID: 10074
==16304== 
==16304== 
==16304== HEAP SUMMARY:
==16304==     in use at exit: 0 bytes in 0 blocks
==16304==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16304== 
==16304== All heap blocks were freed -- no leaks are possible
==16304== 
==16304== For counts of detected and suppressed errors, rerun with: -v
==16304== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test434 ===
The Valgrind memory detector as below:
==16322== Memcheck, a memory error detector
==16322== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16322== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16322== Command: ./impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.dealloc.out
==16322== Parent PID: 10074
==16322== 
==16322== 
==16322== HEAP SUMMARY:
==16322==     in use at exit: 0 bytes in 0 blocks
==16322==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16322== 
==16322== All heap blocks were freed -- no leaks are possible
==16322== 
==16322== For counts of detected and suppressed errors, rerun with: -v
==16322== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test435 ===
The Valgrind memory detector as below:
==16337== Memcheck, a memory error detector
==16337== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16337== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16337== Command: ./impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.dealloc.out
==16337== Parent PID: 10074
==16337== 
==16337== 
==16337== HEAP SUMMARY:
==16337==     in use at exit: 0 bytes in 0 blocks
==16337==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16337== 
==16337== All heap blocks were freed -- no leaks are possible
==16337== 
==16337== For counts of detected and suppressed errors, rerun with: -v
==16337== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test436 ===
The Valgrind memory detector as below:
==16366== Memcheck, a memory error detector
==16366== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16366== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16366== Command: ./impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.dealloc.out
==16366== Parent PID: 10074
==16366== 
==16366== 
==16366== HEAP SUMMARY:
==16366==     in use at exit: 0 bytes in 0 blocks
==16366==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16366== 
==16366== All heap blocks were freed -- no leaks are possible
==16366== 
==16366== For counts of detected and suppressed errors, rerun with: -v
==16366== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test437 ===
The Valgrind memory detector as below:
==16382== Memcheck, a memory error detector
==16382== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16382== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16382== Command: ./impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.dealloc.out
==16382== Parent PID: 10074
==16382== 
==16382== 
==16382== HEAP SUMMARY:
==16382==     in use at exit: 0 bytes in 0 blocks
==16382==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16382== 
==16382== All heap blocks were freed -- no leaks are possible
==16382== 
==16382== For counts of detected and suppressed errors, rerun with: -v
==16382== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test438 ===
The Valgrind memory detector as below:
==16397== Memcheck, a memory error detector
==16397== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16397== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16397== Command: ./impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.dealloc.out
==16397== Parent PID: 10074
==16397== 
==16397== 
==16397== HEAP SUMMARY:
==16397==     in use at exit: 0 bytes in 0 blocks
==16397==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16397== 
==16397== All heap blocks were freed -- no leaks are possible
==16397== 
==16397== For counts of detected and suppressed errors, rerun with: -v
==16397== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test439 ===
The Valgrind memory detector as below:
==16412== Memcheck, a memory error detector
==16412== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16412== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16412== Command: ./impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.dealloc.out
==16412== Parent PID: 10074
==16412== 
==16412== 
==16412== HEAP SUMMARY:
==16412==     in use at exit: 0 bytes in 0 blocks
==16412==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16412== 
==16412== All heap blocks were freed -- no leaks are possible
==16412== 
==16412== For counts of detected and suppressed errors, rerun with: -v
==16412== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test44 ===
The Valgrind memory detector as below:
==16428== Memcheck, a memory error detector
==16428== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16428== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16428== Command: ./impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.dealloc.out
==16428== Parent PID: 10074
==16428== 
==16428== 
==16428== HEAP SUMMARY:
==16428==     in use at exit: 0 bytes in 0 blocks
==16428==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16428== 
==16428== All heap blocks were freed -- no leaks are possible
==16428== 
==16428== For counts of detected and suppressed errors, rerun with: -v
==16428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test440 ===
The Valgrind memory detector as below:
==16444== Memcheck, a memory error detector
==16444== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16444== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16444== Command: ./impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.dealloc.out
==16444== Parent PID: 10074
==16444== 
==16444== 
==16444== HEAP SUMMARY:
==16444==     in use at exit: 0 bytes in 0 blocks
==16444==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16444== 
==16444== All heap blocks were freed -- no leaks are possible
==16444== 
==16444== For counts of detected and suppressed errors, rerun with: -v
==16444== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test441 ===
The Valgrind memory detector as below:
==16459== Memcheck, a memory error detector
==16459== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16459== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16459== Command: ./impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.dealloc.out
==16459== Parent PID: 10074
==16459== 
==16459== 
==16459== HEAP SUMMARY:
==16459==     in use at exit: 0 bytes in 0 blocks
==16459==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16459== 
==16459== All heap blocks were freed -- no leaks are possible
==16459== 
==16459== For counts of detected and suppressed errors, rerun with: -v
==16459== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test442 ===
The Valgrind memory detector as below:
==16475== Memcheck, a memory error detector
==16475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16475== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16475== Command: ./impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.dealloc.out
==16475== Parent PID: 10074
==16475== 
==16475== 
==16475== HEAP SUMMARY:
==16475==     in use at exit: 0 bytes in 0 blocks
==16475==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16475== 
==16475== All heap blocks were freed -- no leaks are possible
==16475== 
==16475== For counts of detected and suppressed errors, rerun with: -v
==16475== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test443 ===
The Valgrind memory detector as below:
==16490== Memcheck, a memory error detector
==16490== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16490== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16490== Command: ./impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.dealloc.out
==16490== Parent PID: 10074
==16490== 
==16490== 
==16490== HEAP SUMMARY:
==16490==     in use at exit: 0 bytes in 0 blocks
==16490==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16490== 
==16490== All heap blocks were freed -- no leaks are possible
==16490== 
==16490== For counts of detected and suppressed errors, rerun with: -v
==16490== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test444 ===
The Valgrind memory detector as below:
==16506== Memcheck, a memory error detector
==16506== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16506== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16506== Command: ./impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.dealloc.out
==16506== Parent PID: 10074
==16506== 
==16506== 
==16506== HEAP SUMMARY:
==16506==     in use at exit: 0 bytes in 0 blocks
==16506==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16506== 
==16506== All heap blocks were freed -- no leaks are possible
==16506== 
==16506== For counts of detected and suppressed errors, rerun with: -v
==16506== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test445 ===
The Valgrind memory detector as below:
==16521== Memcheck, a memory error detector
==16521== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16521== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16521== Command: ./impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.dealloc.out
==16521== Parent PID: 10074
==16521== 
==16521== 
==16521== HEAP SUMMARY:
==16521==     in use at exit: 0 bytes in 0 blocks
==16521==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16521== 
==16521== All heap blocks were freed -- no leaks are possible
==16521== 
==16521== For counts of detected and suppressed errors, rerun with: -v
==16521== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test446 ===
The Valgrind memory detector as below:
==16536== Memcheck, a memory error detector
==16536== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16536== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16536== Command: ./impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.dealloc.out
==16536== Parent PID: 10074
==16536== 
==16536== 
==16536== HEAP SUMMARY:
==16536==     in use at exit: 0 bytes in 0 blocks
==16536==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16536== 
==16536== All heap blocks were freed -- no leaks are possible
==16536== 
==16536== For counts of detected and suppressed errors, rerun with: -v
==16536== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test447 ===
The Valgrind memory detector as below:
==16551== Memcheck, a memory error detector
==16551== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16551== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16551== Command: ./impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.dealloc.out
==16551== Parent PID: 10074
==16551== 
==16551== 
==16551== HEAP SUMMARY:
==16551==     in use at exit: 0 bytes in 0 blocks
==16551==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16551== 
==16551== All heap blocks were freed -- no leaks are possible
==16551== 
==16551== For counts of detected and suppressed errors, rerun with: -v
==16551== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test448 ===
The Valgrind memory detector as below:
==16568== Memcheck, a memory error detector
==16568== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16568== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16568== Command: ./impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.dealloc.out
==16568== Parent PID: 10074
==16568== 
==16568== 
==16568== HEAP SUMMARY:
==16568==     in use at exit: 0 bytes in 0 blocks
==16568==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16568== 
==16568== All heap blocks were freed -- no leaks are possible
==16568== 
==16568== For counts of detected and suppressed errors, rerun with: -v
==16568== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test449 ===
The Valgrind memory detector as below:
==16583== Memcheck, a memory error detector
==16583== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16583== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16583== Command: ./impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.dealloc.out
==16583== Parent PID: 10074
==16583== 
==16583== 
==16583== HEAP SUMMARY:
==16583==     in use at exit: 0 bytes in 0 blocks
==16583==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16583== 
==16583== All heap blocks were freed -- no leaks are possible
==16583== 
==16583== For counts of detected and suppressed errors, rerun with: -v
==16583== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test45 ===
The Valgrind memory detector as below:
==16598== Memcheck, a memory error detector
==16598== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16598== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16598== Command: ./impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.dealloc.out
==16598== Parent PID: 10074
==16598== 
==16598== 
==16598== HEAP SUMMARY:
==16598==     in use at exit: 0 bytes in 0 blocks
==16598==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16598== 
==16598== All heap blocks were freed -- no leaks are possible
==16598== 
==16598== For counts of detected and suppressed errors, rerun with: -v
==16598== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test450 ===
The Valgrind memory detector as below:
==16613== Memcheck, a memory error detector
==16613== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16613== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16613== Command: ./impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.dealloc.out
==16613== Parent PID: 10074
==16613== 
==16613== 
==16613== HEAP SUMMARY:
==16613==     in use at exit: 0 bytes in 0 blocks
==16613==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16613== 
==16613== All heap blocks were freed -- no leaks are possible
==16613== 
==16613== For counts of detected and suppressed errors, rerun with: -v
==16613== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test451 ===
The Valgrind memory detector as below:
==16629== Memcheck, a memory error detector
==16629== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16629== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16629== Command: ./impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.dealloc.out
==16629== Parent PID: 10074
==16629== 
==16629== 
==16629== HEAP SUMMARY:
==16629==     in use at exit: 0 bytes in 0 blocks
==16629==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16629== 
==16629== All heap blocks were freed -- no leaks are possible
==16629== 
==16629== For counts of detected and suppressed errors, rerun with: -v
==16629== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test452 ===
The Valgrind memory detector as below:
==16644== Memcheck, a memory error detector
==16644== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16644== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16644== Command: ./impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.dealloc.out
==16644== Parent PID: 10074
==16644== 
==16644== 
==16644== HEAP SUMMARY:
==16644==     in use at exit: 0 bytes in 0 blocks
==16644==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16644== 
==16644== All heap blocks were freed -- no leaks are possible
==16644== 
==16644== For counts of detected and suppressed errors, rerun with: -v
==16644== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test453 ===
The Valgrind memory detector as below:
==16659== Memcheck, a memory error detector
==16659== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16659== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16659== Command: ./impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.dealloc.out
==16659== Parent PID: 10074
==16659== 
==16659== 
==16659== HEAP SUMMARY:
==16659==     in use at exit: 0 bytes in 0 blocks
==16659==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16659== 
==16659== All heap blocks were freed -- no leaks are possible
==16659== 
==16659== For counts of detected and suppressed errors, rerun with: -v
==16659== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test454 ===
The Valgrind memory detector as below:
==16675== Memcheck, a memory error detector
==16675== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16675== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16675== Command: ./impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.dealloc.out
==16675== Parent PID: 10074
==16675== 
==16675== 
==16675== HEAP SUMMARY:
==16675==     in use at exit: 0 bytes in 0 blocks
==16675==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16675== 
==16675== All heap blocks were freed -- no leaks are possible
==16675== 
==16675== For counts of detected and suppressed errors, rerun with: -v
==16675== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test455 ===
The Valgrind memory detector as below:
==16694== Memcheck, a memory error detector
==16694== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16694== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16694== Command: ./impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.dealloc.out
==16694== Parent PID: 10074
==16694== 
==16694== 
==16694== HEAP SUMMARY:
==16694==     in use at exit: 0 bytes in 0 blocks
==16694==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16694== 
==16694== All heap blocks were freed -- no leaks are possible
==16694== 
==16694== For counts of detected and suppressed errors, rerun with: -v
==16694== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test456 ===
The Valgrind memory detector as below:
==16710== Memcheck, a memory error detector
==16710== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16710== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16710== Command: ./impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.dealloc.out
==16710== Parent PID: 10074
==16710== 
==16710== 
==16710== HEAP SUMMARY:
==16710==     in use at exit: 0 bytes in 0 blocks
==16710==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16710== 
==16710== All heap blocks were freed -- no leaks are possible
==16710== 
==16710== For counts of detected and suppressed errors, rerun with: -v
==16710== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test457 ===
The Valgrind memory detector as below:
==16725== Memcheck, a memory error detector
==16725== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16725== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16725== Command: ./impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.dealloc.out
==16725== Parent PID: 10074
==16725== 
==16725== 
==16725== HEAP SUMMARY:
==16725==     in use at exit: 0 bytes in 0 blocks
==16725==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16725== 
==16725== All heap blocks were freed -- no leaks are possible
==16725== 
==16725== For counts of detected and suppressed errors, rerun with: -v
==16725== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test458 ===
The Valgrind memory detector as below:
==16740== Memcheck, a memory error detector
==16740== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16740== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16740== Command: ./impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.dealloc.out
==16740== Parent PID: 10074
==16740== 
==16740== 
==16740== HEAP SUMMARY:
==16740==     in use at exit: 0 bytes in 0 blocks
==16740==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16740== 
==16740== All heap blocks were freed -- no leaks are possible
==16740== 
==16740== For counts of detected and suppressed errors, rerun with: -v
==16740== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test459 ===
The Valgrind memory detector as below:
==16756== Memcheck, a memory error detector
==16756== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16756== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16756== Command: ./impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.dealloc.out
==16756== Parent PID: 10074
==16756== 
==16756== 
==16756== HEAP SUMMARY:
==16756==     in use at exit: 0 bytes in 0 blocks
==16756==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16756== 
==16756== All heap blocks were freed -- no leaks are possible
==16756== 
==16756== For counts of detected and suppressed errors, rerun with: -v
==16756== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test46 ===
The Valgrind memory detector as below:
==16771== Memcheck, a memory error detector
==16771== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16771== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16771== Command: ./impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.dealloc.out
==16771== Parent PID: 10074
==16771== 
==16771== 
==16771== HEAP SUMMARY:
==16771==     in use at exit: 0 bytes in 0 blocks
==16771==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16771== 
==16771== All heap blocks were freed -- no leaks are possible
==16771== 
==16771== For counts of detected and suppressed errors, rerun with: -v
==16771== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test460 ===
The Valgrind memory detector as below:
==16787== Memcheck, a memory error detector
==16787== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16787== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16787== Command: ./impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.dealloc.out
==16787== Parent PID: 10074
==16787== 
==16787== 
==16787== HEAP SUMMARY:
==16787==     in use at exit: 0 bytes in 0 blocks
==16787==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16787== 
==16787== All heap blocks were freed -- no leaks are possible
==16787== 
==16787== For counts of detected and suppressed errors, rerun with: -v
==16787== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test461 ===
The Valgrind memory detector as below:
==16803== Memcheck, a memory error detector
==16803== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16803== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16803== Command: ./impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.dealloc.out
==16803== Parent PID: 10074
==16803== 
==16803== 
==16803== HEAP SUMMARY:
==16803==     in use at exit: 0 bytes in 0 blocks
==16803==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16803== 
==16803== All heap blocks were freed -- no leaks are possible
==16803== 
==16803== For counts of detected and suppressed errors, rerun with: -v
==16803== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test462 ===
The Valgrind memory detector as below:
==16818== Memcheck, a memory error detector
==16818== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16818== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16818== Command: ./impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.dealloc.out
==16818== Parent PID: 10074
==16818== 
==16818== 
==16818== HEAP SUMMARY:
==16818==     in use at exit: 0 bytes in 0 blocks
==16818==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16818== 
==16818== All heap blocks were freed -- no leaks are possible
==16818== 
==16818== For counts of detected and suppressed errors, rerun with: -v
==16818== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test463 ===
The Valgrind memory detector as below:
==16833== Memcheck, a memory error detector
==16833== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16833== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16833== Command: ./impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.dealloc.out
==16833== Parent PID: 10074
==16833== 
==16833== 
==16833== HEAP SUMMARY:
==16833==     in use at exit: 0 bytes in 0 blocks
==16833==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16833== 
==16833== All heap blocks were freed -- no leaks are possible
==16833== 
==16833== For counts of detected and suppressed errors, rerun with: -v
==16833== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test464 ===
The Valgrind memory detector as below:
==16849== Memcheck, a memory error detector
==16849== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16849== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16849== Command: ./impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.dealloc.out
==16849== Parent PID: 10074
==16849== 
==16849== 
==16849== HEAP SUMMARY:
==16849==     in use at exit: 0 bytes in 0 blocks
==16849==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16849== 
==16849== All heap blocks were freed -- no leaks are possible
==16849== 
==16849== For counts of detected and suppressed errors, rerun with: -v
==16849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test465 ===
The Valgrind memory detector as below:
==16865== Memcheck, a memory error detector
==16865== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16865== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16865== Command: ./impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.dealloc.out
==16865== Parent PID: 10074
==16865== 
==16865== 
==16865== HEAP SUMMARY:
==16865==     in use at exit: 0 bytes in 0 blocks
==16865==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16865== 
==16865== All heap blocks were freed -- no leaks are possible
==16865== 
==16865== For counts of detected and suppressed errors, rerun with: -v
==16865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test466 ===
The Valgrind memory detector as below:
==16890== Memcheck, a memory error detector
==16890== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16890== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16890== Command: ./impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.dealloc.out
==16890== Parent PID: 10074
==16890== 
==16890== 
==16890== HEAP SUMMARY:
==16890==     in use at exit: 0 bytes in 0 blocks
==16890==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16890== 
==16890== All heap blocks were freed -- no leaks are possible
==16890== 
==16890== For counts of detected and suppressed errors, rerun with: -v
==16890== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test467 ===
The Valgrind memory detector as below:
==16911== Memcheck, a memory error detector
==16911== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16911== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16911== Command: ./impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.dealloc.out
==16911== Parent PID: 10074
==16911== 
==16911== 
==16911== HEAP SUMMARY:
==16911==     in use at exit: 0 bytes in 0 blocks
==16911==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16911== 
==16911== All heap blocks were freed -- no leaks are possible
==16911== 
==16911== For counts of detected and suppressed errors, rerun with: -v
==16911== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test468 ===
The Valgrind memory detector as below:
==16927== Memcheck, a memory error detector
==16927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16927== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16927== Command: ./impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.dealloc.out
==16927== Parent PID: 10074
==16927== 
==16927== 
==16927== HEAP SUMMARY:
==16927==     in use at exit: 0 bytes in 0 blocks
==16927==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16927== 
==16927== All heap blocks were freed -- no leaks are possible
==16927== 
==16927== For counts of detected and suppressed errors, rerun with: -v
==16927== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test469 ===
The Valgrind memory detector as below:
==16942== Memcheck, a memory error detector
==16942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16942== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16942== Command: ./impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.dealloc.out
==16942== Parent PID: 10074
==16942== 
==16942== 
==16942== HEAP SUMMARY:
==16942==     in use at exit: 0 bytes in 0 blocks
==16942==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16942== 
==16942== All heap blocks were freed -- no leaks are possible
==16942== 
==16942== For counts of detected and suppressed errors, rerun with: -v
==16942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test47 ===
The Valgrind memory detector as below:
==16957== Memcheck, a memory error detector
==16957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16957== Command: ./impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.dealloc.out
==16957== Parent PID: 10074
==16957== 
==16957== 
==16957== HEAP SUMMARY:
==16957==     in use at exit: 0 bytes in 0 blocks
==16957==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16957== 
==16957== All heap blocks were freed -- no leaks are possible
==16957== 
==16957== For counts of detected and suppressed errors, rerun with: -v
==16957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test470 ===
The Valgrind memory detector as below:
==16974== Memcheck, a memory error detector
==16974== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16974== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16974== Command: ./impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.dealloc.out
==16974== Parent PID: 10074
==16974== 
==16974== 
==16974== HEAP SUMMARY:
==16974==     in use at exit: 0 bytes in 0 blocks
==16974==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16974== 
==16974== All heap blocks were freed -- no leaks are possible
==16974== 
==16974== For counts of detected and suppressed errors, rerun with: -v
==16974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test471 ===
The Valgrind memory detector as below:
==16989== Memcheck, a memory error detector
==16989== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16989== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16989== Command: ./impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.dealloc.out
==16989== Parent PID: 10074
==16989== 
==16989== 
==16989== HEAP SUMMARY:
==16989==     in use at exit: 0 bytes in 0 blocks
==16989==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==16989== 
==16989== All heap blocks were freed -- no leaks are possible
==16989== 
==16989== For counts of detected and suppressed errors, rerun with: -v
==16989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test472 ===
The Valgrind memory detector as below:
==17004== Memcheck, a memory error detector
==17004== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17004== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17004== Command: ./impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.dealloc.out
==17004== Parent PID: 10074
==17004== 
==17004== 
==17004== HEAP SUMMARY:
==17004==     in use at exit: 0 bytes in 0 blocks
==17004==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17004== 
==17004== All heap blocks were freed -- no leaks are possible
==17004== 
==17004== For counts of detected and suppressed errors, rerun with: -v
==17004== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test473 ===
The Valgrind memory detector as below:
==17020== Memcheck, a memory error detector
==17020== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17020== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17020== Command: ./impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.dealloc.out
==17020== Parent PID: 10074
==17020== 
==17020== 
==17020== HEAP SUMMARY:
==17020==     in use at exit: 0 bytes in 0 blocks
==17020==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17020== 
==17020== All heap blocks were freed -- no leaks are possible
==17020== 
==17020== For counts of detected and suppressed errors, rerun with: -v
==17020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test474 ===
The Valgrind memory detector as below:
==17035== Memcheck, a memory error detector
==17035== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17035== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17035== Command: ./impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.dealloc.out
==17035== Parent PID: 10074
==17035== 
==17035== 
==17035== HEAP SUMMARY:
==17035==     in use at exit: 0 bytes in 0 blocks
==17035==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17035== 
==17035== All heap blocks were freed -- no leaks are possible
==17035== 
==17035== For counts of detected and suppressed errors, rerun with: -v
==17035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test475 ===
The Valgrind memory detector as below:
==17051== Memcheck, a memory error detector
==17051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17051== Command: ./impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.dealloc.out
==17051== Parent PID: 10074
==17051== 
==17051== 
==17051== HEAP SUMMARY:
==17051==     in use at exit: 0 bytes in 0 blocks
==17051==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17051== 
==17051== All heap blocks were freed -- no leaks are possible
==17051== 
==17051== For counts of detected and suppressed errors, rerun with: -v
==17051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test476 ===
The Valgrind memory detector as below:
==17066== Memcheck, a memory error detector
==17066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17066== Command: ./impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.dealloc.out
==17066== Parent PID: 10074
==17066== 
==17066== 
==17066== HEAP SUMMARY:
==17066==     in use at exit: 0 bytes in 0 blocks
==17066==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17066== 
==17066== All heap blocks were freed -- no leaks are possible
==17066== 
==17066== For counts of detected and suppressed errors, rerun with: -v
==17066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test477 ===
The Valgrind memory detector as below:
==17082== Memcheck, a memory error detector
==17082== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17082== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17082== Command: ./impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.dealloc.out
==17082== Parent PID: 10074
==17082== 
==17082== 
==17082== HEAP SUMMARY:
==17082==     in use at exit: 0 bytes in 0 blocks
==17082==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17082== 
==17082== All heap blocks were freed -- no leaks are possible
==17082== 
==17082== For counts of detected and suppressed errors, rerun with: -v
==17082== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test478 ===
The Valgrind memory detector as below:
==17097== Memcheck, a memory error detector
==17097== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17097== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17097== Command: ./impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.dealloc.out
==17097== Parent PID: 10074
==17097== 
==17097== 
==17097== HEAP SUMMARY:
==17097==     in use at exit: 0 bytes in 0 blocks
==17097==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17097== 
==17097== All heap blocks were freed -- no leaks are possible
==17097== 
==17097== For counts of detected and suppressed errors, rerun with: -v
==17097== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test479 ===
The Valgrind memory detector as below:
==17113== Memcheck, a memory error detector
==17113== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17113== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17113== Command: ./impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.dealloc.out
==17113== Parent PID: 10074
==17113== 
==17113== 
==17113== HEAP SUMMARY:
==17113==     in use at exit: 0 bytes in 0 blocks
==17113==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17113== 
==17113== All heap blocks were freed -- no leaks are possible
==17113== 
==17113== For counts of detected and suppressed errors, rerun with: -v
==17113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test48 ===
The Valgrind memory detector as below:
==17129== Memcheck, a memory error detector
==17129== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17129== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17129== Command: ./impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.dealloc.out
==17129== Parent PID: 10074
==17129== 
==17129== 
==17129== HEAP SUMMARY:
==17129==     in use at exit: 0 bytes in 0 blocks
==17129==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17129== 
==17129== All heap blocks were freed -- no leaks are possible
==17129== 
==17129== For counts of detected and suppressed errors, rerun with: -v
==17129== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test480 ===
The Valgrind memory detector as below:
==17145== Memcheck, a memory error detector
==17145== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17145== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17145== Command: ./impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.dealloc.out
==17145== Parent PID: 10074
==17145== 
==17145== 
==17145== HEAP SUMMARY:
==17145==     in use at exit: 0 bytes in 0 blocks
==17145==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17145== 
==17145== All heap blocks were freed -- no leaks are possible
==17145== 
==17145== For counts of detected and suppressed errors, rerun with: -v
==17145== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test481 ===
The Valgrind memory detector as below:
==17160== Memcheck, a memory error detector
==17160== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17160== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17160== Command: ./impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.dealloc.out
==17160== Parent PID: 10074
==17160== 
==17160== 
==17160== HEAP SUMMARY:
==17160==     in use at exit: 0 bytes in 0 blocks
==17160==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17160== 
==17160== All heap blocks were freed -- no leaks are possible
==17160== 
==17160== For counts of detected and suppressed errors, rerun with: -v
==17160== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test482 ===
The Valgrind memory detector as below:
==17175== Memcheck, a memory error detector
==17175== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17175== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17175== Command: ./impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.dealloc.out
==17175== Parent PID: 10074
==17175== 
==17175== 
==17175== HEAP SUMMARY:
==17175==     in use at exit: 0 bytes in 0 blocks
==17175==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17175== 
==17175== All heap blocks were freed -- no leaks are possible
==17175== 
==17175== For counts of detected and suppressed errors, rerun with: -v
==17175== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test483 ===
The Valgrind memory detector as below:
==17191== Memcheck, a memory error detector
==17191== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17191== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17191== Command: ./impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.dealloc.out
==17191== Parent PID: 10074
==17191== 
==17191== 
==17191== HEAP SUMMARY:
==17191==     in use at exit: 0 bytes in 0 blocks
==17191==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17191== 
==17191== All heap blocks were freed -- no leaks are possible
==17191== 
==17191== For counts of detected and suppressed errors, rerun with: -v
==17191== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test484 ===
The Valgrind memory detector as below:
==17206== Memcheck, a memory error detector
==17206== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17206== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17206== Command: ./impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.dealloc.out
==17206== Parent PID: 10074
==17206== 
==17206== 
==17206== HEAP SUMMARY:
==17206==     in use at exit: 0 bytes in 0 blocks
==17206==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17206== 
==17206== All heap blocks were freed -- no leaks are possible
==17206== 
==17206== For counts of detected and suppressed errors, rerun with: -v
==17206== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test485 ===
The Valgrind memory detector as below:
==17222== Memcheck, a memory error detector
==17222== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17222== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17222== Command: ./impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.dealloc.out
==17222== Parent PID: 10074
==17222== 
==17222== 
==17222== HEAP SUMMARY:
==17222==     in use at exit: 0 bytes in 0 blocks
==17222==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17222== 
==17222== All heap blocks were freed -- no leaks are possible
==17222== 
==17222== For counts of detected and suppressed errors, rerun with: -v
==17222== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test486 ===
The Valgrind memory detector as below:
==17237== Memcheck, a memory error detector
==17237== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17237== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17237== Command: ./impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.dealloc.out
==17237== Parent PID: 10074
==17237== 
==17237== 
==17237== HEAP SUMMARY:
==17237==     in use at exit: 0 bytes in 0 blocks
==17237==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17237== 
==17237== All heap blocks were freed -- no leaks are possible
==17237== 
==17237== For counts of detected and suppressed errors, rerun with: -v
==17237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test487 ===
The Valgrind memory detector as below:
==17253== Memcheck, a memory error detector
==17253== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17253== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17253== Command: ./impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.dealloc.out
==17253== Parent PID: 10074
==17253== 
==17253== 
==17253== HEAP SUMMARY:
==17253==     in use at exit: 0 bytes in 0 blocks
==17253==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17253== 
==17253== All heap blocks were freed -- no leaks are possible
==17253== 
==17253== For counts of detected and suppressed errors, rerun with: -v
==17253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test488 ===
The Valgrind memory detector as below:
==17268== Memcheck, a memory error detector
==17268== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17268== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17268== Command: ./impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.dealloc.out
==17268== Parent PID: 10074
==17268== 
==17268== 
==17268== HEAP SUMMARY:
==17268==     in use at exit: 0 bytes in 0 blocks
==17268==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17268== 
==17268== All heap blocks were freed -- no leaks are possible
==17268== 
==17268== For counts of detected and suppressed errors, rerun with: -v
==17268== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test489 ===
The Valgrind memory detector as below:
==17283== Memcheck, a memory error detector
==17283== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17283== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17283== Command: ./impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.dealloc.out
==17283== Parent PID: 10074
==17283== 
==17283== 
==17283== HEAP SUMMARY:
==17283==     in use at exit: 0 bytes in 0 blocks
==17283==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17283== 
==17283== All heap blocks were freed -- no leaks are possible
==17283== 
==17283== For counts of detected and suppressed errors, rerun with: -v
==17283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test49 ===
The Valgrind memory detector as below:
==17299== Memcheck, a memory error detector
==17299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17299== Command: ./impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.dealloc.out
==17299== Parent PID: 10074
==17299== 
==17299== 
==17299== HEAP SUMMARY:
==17299==     in use at exit: 0 bytes in 0 blocks
==17299==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17299== 
==17299== All heap blocks were freed -- no leaks are possible
==17299== 
==17299== For counts of detected and suppressed errors, rerun with: -v
==17299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test490 ===
The Valgrind memory detector as below:
==17326== Memcheck, a memory error detector
==17326== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17326== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17326== Command: ./impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.dealloc.out
==17326== Parent PID: 10074
==17326== 
==17326== 
==17326== HEAP SUMMARY:
==17326==     in use at exit: 0 bytes in 0 blocks
==17326==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17326== 
==17326== All heap blocks were freed -- no leaks are possible
==17326== 
==17326== For counts of detected and suppressed errors, rerun with: -v
==17326== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test491 ===
The Valgrind memory detector as below:
==17341== Memcheck, a memory error detector
==17341== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17341== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17341== Command: ./impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.dealloc.out
==17341== Parent PID: 10074
==17341== 
==17341== 
==17341== HEAP SUMMARY:
==17341==     in use at exit: 0 bytes in 0 blocks
==17341==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17341== 
==17341== All heap blocks were freed -- no leaks are possible
==17341== 
==17341== For counts of detected and suppressed errors, rerun with: -v
==17341== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test492 ===
The Valgrind memory detector as below:
==17356== Memcheck, a memory error detector
==17356== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17356== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17356== Command: ./impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.dealloc.out
==17356== Parent PID: 10074
==17356== 
==17356== 
==17356== HEAP SUMMARY:
==17356==     in use at exit: 0 bytes in 0 blocks
==17356==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17356== 
==17356== All heap blocks were freed -- no leaks are possible
==17356== 
==17356== For counts of detected and suppressed errors, rerun with: -v
==17356== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test493 ===
The Valgrind memory detector as below:
==17372== Memcheck, a memory error detector
==17372== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17372== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17372== Command: ./impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.dealloc.out
==17372== Parent PID: 10074
==17372== 
==17372== 
==17372== HEAP SUMMARY:
==17372==     in use at exit: 0 bytes in 0 blocks
==17372==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17372== 
==17372== All heap blocks were freed -- no leaks are possible
==17372== 
==17372== For counts of detected and suppressed errors, rerun with: -v
==17372== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test494 ===
The Valgrind memory detector as below:
==17387== Memcheck, a memory error detector
==17387== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17387== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17387== Command: ./impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.dealloc.out
==17387== Parent PID: 10074
==17387== 
==17387== 
==17387== HEAP SUMMARY:
==17387==     in use at exit: 0 bytes in 0 blocks
==17387==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17387== 
==17387== All heap blocks were freed -- no leaks are possible
==17387== 
==17387== For counts of detected and suppressed errors, rerun with: -v
==17387== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test495 ===
The Valgrind memory detector as below:
==17403== Memcheck, a memory error detector
==17403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17403== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17403== Command: ./impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.dealloc.out
==17403== Parent PID: 10074
==17403== 
==17403== 
==17403== HEAP SUMMARY:
==17403==     in use at exit: 0 bytes in 0 blocks
==17403==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17403== 
==17403== All heap blocks were freed -- no leaks are possible
==17403== 
==17403== For counts of detected and suppressed errors, rerun with: -v
==17403== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test496 ===
The Valgrind memory detector as below:
==17420== Memcheck, a memory error detector
==17420== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17420== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17420== Command: ./impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.dealloc.out
==17420== Parent PID: 10074
==17420== 
==17420== 
==17420== HEAP SUMMARY:
==17420==     in use at exit: 0 bytes in 0 blocks
==17420==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17420== 
==17420== All heap blocks were freed -- no leaks are possible
==17420== 
==17420== For counts of detected and suppressed errors, rerun with: -v
==17420== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test497 ===
The Valgrind memory detector as below:
==17435== Memcheck, a memory error detector
==17435== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17435== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17435== Command: ./impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.dealloc.out
==17435== Parent PID: 10074
==17435== 
==17435== 
==17435== HEAP SUMMARY:
==17435==     in use at exit: 0 bytes in 0 blocks
==17435==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17435== 
==17435== All heap blocks were freed -- no leaks are possible
==17435== 
==17435== For counts of detected and suppressed errors, rerun with: -v
==17435== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test498 ===
The Valgrind memory detector as below:
==17450== Memcheck, a memory error detector
==17450== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17450== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17450== Command: ./impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.dealloc.out
==17450== Parent PID: 10074
==17450== 
==17450== 
==17450== HEAP SUMMARY:
==17450==     in use at exit: 0 bytes in 0 blocks
==17450==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17450== 
==17450== All heap blocks were freed -- no leaks are possible
==17450== 
==17450== For counts of detected and suppressed errors, rerun with: -v
==17450== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test499 ===
The Valgrind memory detector as below:
==17466== Memcheck, a memory error detector
==17466== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17466== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17466== Command: ./impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.dealloc.out
==17466== Parent PID: 10074
==17466== 
==17466== 
==17466== HEAP SUMMARY:
==17466==     in use at exit: 0 bytes in 0 blocks
==17466==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17466== 
==17466== All heap blocks were freed -- no leaks are possible
==17466== 
==17466== For counts of detected and suppressed errors, rerun with: -v
==17466== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test5 ===
The Valgrind memory detector as below:
==17481== Memcheck, a memory error detector
==17481== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17481== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17481== Command: ./impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.dealloc.out
==17481== Parent PID: 10074
==17481== 
==17481== 
==17481== HEAP SUMMARY:
==17481==     in use at exit: 0 bytes in 0 blocks
==17481==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17481== 
==17481== All heap blocks were freed -- no leaks are possible
==17481== 
==17481== For counts of detected and suppressed errors, rerun with: -v
==17481== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test50 ===
The Valgrind memory detector as below:
==17496== Memcheck, a memory error detector
==17496== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17496== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17496== Command: ./impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.dealloc.out
==17496== Parent PID: 10074
==17496== 
==17496== 
==17496== HEAP SUMMARY:
==17496==     in use at exit: 0 bytes in 0 blocks
==17496==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17496== 
==17496== All heap blocks were freed -- no leaks are possible
==17496== 
==17496== For counts of detected and suppressed errors, rerun with: -v
==17496== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test500 ===
The Valgrind memory detector as below:
==17512== Memcheck, a memory error detector
==17512== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17512== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17512== Command: ./impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.dealloc.out
==17512== Parent PID: 10074
==17512== 
==17512== 
==17512== HEAP SUMMARY:
==17512==     in use at exit: 0 bytes in 0 blocks
==17512==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17512== 
==17512== All heap blocks were freed -- no leaks are possible
==17512== 
==17512== For counts of detected and suppressed errors, rerun with: -v
==17512== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test501 ===
The Valgrind memory detector as below:
==17528== Memcheck, a memory error detector
==17528== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17528== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17528== Command: ./impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.dealloc.out
==17528== Parent PID: 10074
==17528== 
==17528== 
==17528== HEAP SUMMARY:
==17528==     in use at exit: 0 bytes in 0 blocks
==17528==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17528== 
==17528== All heap blocks were freed -- no leaks are possible
==17528== 
==17528== For counts of detected and suppressed errors, rerun with: -v
==17528== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test502 ===
The Valgrind memory detector as below:
==17543== Memcheck, a memory error detector
==17543== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17543== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17543== Command: ./impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.dealloc.out
==17543== Parent PID: 10074
==17543== 
==17543== 
==17543== HEAP SUMMARY:
==17543==     in use at exit: 0 bytes in 0 blocks
==17543==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17543== 
==17543== All heap blocks were freed -- no leaks are possible
==17543== 
==17543== For counts of detected and suppressed errors, rerun with: -v
==17543== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test503 ===
The Valgrind memory detector as below:
==17558== Memcheck, a memory error detector
==17558== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17558== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17558== Command: ./impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.dealloc.out
==17558== Parent PID: 10074
==17558== 
==17558== 
==17558== HEAP SUMMARY:
==17558==     in use at exit: 0 bytes in 0 blocks
==17558==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17558== 
==17558== All heap blocks were freed -- no leaks are possible
==17558== 
==17558== For counts of detected and suppressed errors, rerun with: -v
==17558== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test504 ===
The Valgrind memory detector as below:
==17574== Memcheck, a memory error detector
==17574== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17574== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17574== Command: ./impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.dealloc.out
==17574== Parent PID: 10074
==17574== 
==17574== 
==17574== HEAP SUMMARY:
==17574==     in use at exit: 0 bytes in 0 blocks
==17574==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17574== 
==17574== All heap blocks were freed -- no leaks are possible
==17574== 
==17574== For counts of detected and suppressed errors, rerun with: -v
==17574== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test505 ===
The Valgrind memory detector as below:
==17590== Memcheck, a memory error detector
==17590== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17590== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17590== Command: ./impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.dealloc.out
==17590== Parent PID: 10074
==17590== 
==17590== 
==17590== HEAP SUMMARY:
==17590==     in use at exit: 0 bytes in 0 blocks
==17590==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17590== 
==17590== All heap blocks were freed -- no leaks are possible
==17590== 
==17590== For counts of detected and suppressed errors, rerun with: -v
==17590== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test506 ===
The Valgrind memory detector as below:
==17605== Memcheck, a memory error detector
==17605== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17605== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17605== Command: ./impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.dealloc.out
==17605== Parent PID: 10074
==17605== 
==17605== 
==17605== HEAP SUMMARY:
==17605==     in use at exit: 0 bytes in 0 blocks
==17605==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17605== 
==17605== All heap blocks were freed -- no leaks are possible
==17605== 
==17605== For counts of detected and suppressed errors, rerun with: -v
==17605== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test507 ===
The Valgrind memory detector as below:
==17622== Memcheck, a memory error detector
==17622== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17622== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17622== Command: ./impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.dealloc.out
==17622== Parent PID: 10074
==17622== 
==17622== 
==17622== HEAP SUMMARY:
==17622==     in use at exit: 0 bytes in 0 blocks
==17622==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17622== 
==17622== All heap blocks were freed -- no leaks are possible
==17622== 
==17622== For counts of detected and suppressed errors, rerun with: -v
==17622== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test508 ===
The Valgrind memory detector as below:
==17637== Memcheck, a memory error detector
==17637== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17637== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17637== Command: ./impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.dealloc.out
==17637== Parent PID: 10074
==17637== 
==17637== 
==17637== HEAP SUMMARY:
==17637==     in use at exit: 0 bytes in 0 blocks
==17637==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17637== 
==17637== All heap blocks were freed -- no leaks are possible
==17637== 
==17637== For counts of detected and suppressed errors, rerun with: -v
==17637== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test509 ===
The Valgrind memory detector as below:
==17653== Memcheck, a memory error detector
==17653== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17653== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17653== Command: ./impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.dealloc.out
==17653== Parent PID: 10074
==17653== 
==17653== 
==17653== HEAP SUMMARY:
==17653==     in use at exit: 0 bytes in 0 blocks
==17653==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17653== 
==17653== All heap blocks were freed -- no leaks are possible
==17653== 
==17653== For counts of detected and suppressed errors, rerun with: -v
==17653== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test51 ===
The Valgrind memory detector as below:
==17672== Memcheck, a memory error detector
==17672== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17672== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17672== Command: ./impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.dealloc.out
==17672== Parent PID: 10074
==17672== 
==17672== 
==17672== HEAP SUMMARY:
==17672==     in use at exit: 0 bytes in 0 blocks
==17672==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17672== 
==17672== All heap blocks were freed -- no leaks are possible
==17672== 
==17672== For counts of detected and suppressed errors, rerun with: -v
==17672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test510 ===
The Valgrind memory detector as below:
==17687== Memcheck, a memory error detector
==17687== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17687== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17687== Command: ./impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.dealloc.out
==17687== Parent PID: 10074
==17687== 
==17687== 
==17687== HEAP SUMMARY:
==17687==     in use at exit: 0 bytes in 0 blocks
==17687==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17687== 
==17687== All heap blocks were freed -- no leaks are possible
==17687== 
==17687== For counts of detected and suppressed errors, rerun with: -v
==17687== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test511 ===
The Valgrind memory detector as below:
==17702== Memcheck, a memory error detector
==17702== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17702== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17702== Command: ./impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.dealloc.out
==17702== Parent PID: 10074
==17702== 
==17702== 
==17702== HEAP SUMMARY:
==17702==     in use at exit: 0 bytes in 0 blocks
==17702==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17702== 
==17702== All heap blocks were freed -- no leaks are possible
==17702== 
==17702== For counts of detected and suppressed errors, rerun with: -v
==17702== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test512 ===
The Valgrind memory detector as below:
==17717== Memcheck, a memory error detector
==17717== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17717== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17717== Command: ./impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.dealloc.out
==17717== Parent PID: 10074
==17717== 
==17717== 
==17717== HEAP SUMMARY:
==17717==     in use at exit: 0 bytes in 0 blocks
==17717==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17717== 
==17717== All heap blocks were freed -- no leaks are possible
==17717== 
==17717== For counts of detected and suppressed errors, rerun with: -v
==17717== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test513 ===
The Valgrind memory detector as below:
==17733== Memcheck, a memory error detector
==17733== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17733== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17733== Command: ./impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.dealloc.out
==17733== Parent PID: 10074
==17733== 
==17733== 
==17733== HEAP SUMMARY:
==17733==     in use at exit: 0 bytes in 0 blocks
==17733==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17733== 
==17733== All heap blocks were freed -- no leaks are possible
==17733== 
==17733== For counts of detected and suppressed errors, rerun with: -v
==17733== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test514 ===
The Valgrind memory detector as below:
==17748== Memcheck, a memory error detector
==17748== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17748== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17748== Command: ./impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.dealloc.out
==17748== Parent PID: 10074
==17748== 
==17748== 
==17748== HEAP SUMMARY:
==17748==     in use at exit: 0 bytes in 0 blocks
==17748==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17748== 
==17748== All heap blocks were freed -- no leaks are possible
==17748== 
==17748== For counts of detected and suppressed errors, rerun with: -v
==17748== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test515 ===
The Valgrind memory detector as below:
==17763== Memcheck, a memory error detector
==17763== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17763== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17763== Command: ./impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.dealloc.out
==17763== Parent PID: 10074
==17763== 
==17763== 
==17763== HEAP SUMMARY:
==17763==     in use at exit: 0 bytes in 0 blocks
==17763==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17763== 
==17763== All heap blocks were freed -- no leaks are possible
==17763== 
==17763== For counts of detected and suppressed errors, rerun with: -v
==17763== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test516 ===
The Valgrind memory detector as below:
==17779== Memcheck, a memory error detector
==17779== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17779== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17779== Command: ./impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.dealloc.out
==17779== Parent PID: 10074
==17779== 
==17779== 
==17779== HEAP SUMMARY:
==17779==     in use at exit: 0 bytes in 0 blocks
==17779==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17779== 
==17779== All heap blocks were freed -- no leaks are possible
==17779== 
==17779== For counts of detected and suppressed errors, rerun with: -v
==17779== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test517 ===
The Valgrind memory detector as below:
==17794== Memcheck, a memory error detector
==17794== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17794== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17794== Command: ./impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.dealloc.out
==17794== Parent PID: 10074
==17794== 
==17794== 
==17794== HEAP SUMMARY:
==17794==     in use at exit: 0 bytes in 0 blocks
==17794==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17794== 
==17794== All heap blocks were freed -- no leaks are possible
==17794== 
==17794== For counts of detected and suppressed errors, rerun with: -v
==17794== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test518 ===
The Valgrind memory detector as below:
==17809== Memcheck, a memory error detector
==17809== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17809== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17809== Command: ./impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.dealloc.out
==17809== Parent PID: 10074
==17809== 
==17809== 
==17809== HEAP SUMMARY:
==17809==     in use at exit: 0 bytes in 0 blocks
==17809==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17809== 
==17809== All heap blocks were freed -- no leaks are possible
==17809== 
==17809== For counts of detected and suppressed errors, rerun with: -v
==17809== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test519 ===
The Valgrind memory detector as below:
==17824== Memcheck, a memory error detector
==17824== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17824== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17824== Command: ./impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.dealloc.out
==17824== Parent PID: 10074
==17824== 
==17824== 
==17824== HEAP SUMMARY:
==17824==     in use at exit: 0 bytes in 0 blocks
==17824==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17824== 
==17824== All heap blocks were freed -- no leaks are possible
==17824== 
==17824== For counts of detected and suppressed errors, rerun with: -v
==17824== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test52 ===
The Valgrind memory detector as below:
==17840== Memcheck, a memory error detector
==17840== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17840== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17840== Command: ./impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.dealloc.out
==17840== Parent PID: 10074
==17840== 
==17840== 
==17840== HEAP SUMMARY:
==17840==     in use at exit: 0 bytes in 0 blocks
==17840==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17840== 
==17840== All heap blocks were freed -- no leaks are possible
==17840== 
==17840== For counts of detected and suppressed errors, rerun with: -v
==17840== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test520 ===
The Valgrind memory detector as below:
==17855== Memcheck, a memory error detector
==17855== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17855== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17855== Command: ./impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.dealloc.out
==17855== Parent PID: 10074
==17855== 
==17855== 
==17855== HEAP SUMMARY:
==17855==     in use at exit: 0 bytes in 0 blocks
==17855==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17855== 
==17855== All heap blocks were freed -- no leaks are possible
==17855== 
==17855== For counts of detected and suppressed errors, rerun with: -v
==17855== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test521 ===
The Valgrind memory detector as below:
==17871== Memcheck, a memory error detector
==17871== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17871== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17871== Command: ./impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.dealloc.out
==17871== Parent PID: 10074
==17871== 
==17871== 
==17871== HEAP SUMMARY:
==17871==     in use at exit: 0 bytes in 0 blocks
==17871==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17871== 
==17871== All heap blocks were freed -- no leaks are possible
==17871== 
==17871== For counts of detected and suppressed errors, rerun with: -v
==17871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test522 ===
The Valgrind memory detector as below:
==17887== Memcheck, a memory error detector
==17887== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17887== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17887== Command: ./impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.dealloc.out
==17887== Parent PID: 10074
==17887== 
==17887== 
==17887== HEAP SUMMARY:
==17887==     in use at exit: 0 bytes in 0 blocks
==17887==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17887== 
==17887== All heap blocks were freed -- no leaks are possible
==17887== 
==17887== For counts of detected and suppressed errors, rerun with: -v
==17887== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test523 ===
The Valgrind memory detector as below:
==17902== Memcheck, a memory error detector
==17902== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17902== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17902== Command: ./impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.dealloc.out
==17902== Parent PID: 10074
==17902== 
==17902== 
==17902== HEAP SUMMARY:
==17902==     in use at exit: 0 bytes in 0 blocks
==17902==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17902== 
==17902== All heap blocks were freed -- no leaks are possible
==17902== 
==17902== For counts of detected and suppressed errors, rerun with: -v
==17902== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test524 ===
The Valgrind memory detector as below:
==17917== Memcheck, a memory error detector
==17917== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17917== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17917== Command: ./impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.dealloc.out
==17917== Parent PID: 10074
==17917== 
==17917== 
==17917== HEAP SUMMARY:
==17917==     in use at exit: 0 bytes in 0 blocks
==17917==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17917== 
==17917== All heap blocks were freed -- no leaks are possible
==17917== 
==17917== For counts of detected and suppressed errors, rerun with: -v
==17917== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test525 ===
The Valgrind memory detector as below:
==17932== Memcheck, a memory error detector
==17932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17932== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17932== Command: ./impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.dealloc.out
==17932== Parent PID: 10074
==17932== 
==17932== 
==17932== HEAP SUMMARY:
==17932==     in use at exit: 0 bytes in 0 blocks
==17932==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17932== 
==17932== All heap blocks were freed -- no leaks are possible
==17932== 
==17932== For counts of detected and suppressed errors, rerun with: -v
==17932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test526 ===
The Valgrind memory detector as below:
==17949== Memcheck, a memory error detector
==17949== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17949== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17949== Command: ./impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.dealloc.out
==17949== Parent PID: 10074
==17949== 
==17949== 
==17949== HEAP SUMMARY:
==17949==     in use at exit: 0 bytes in 0 blocks
==17949==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17949== 
==17949== All heap blocks were freed -- no leaks are possible
==17949== 
==17949== For counts of detected and suppressed errors, rerun with: -v
==17949== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test527 ===
The Valgrind memory detector as below:
==17965== Memcheck, a memory error detector
==17965== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17965== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17965== Command: ./impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.dealloc.out
==17965== Parent PID: 10074
==17965== 
==17965== 
==17965== HEAP SUMMARY:
==17965==     in use at exit: 0 bytes in 0 blocks
==17965==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17965== 
==17965== All heap blocks were freed -- no leaks are possible
==17965== 
==17965== For counts of detected and suppressed errors, rerun with: -v
==17965== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test528 ===
The Valgrind memory detector as below:
==17980== Memcheck, a memory error detector
==17980== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17980== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17980== Command: ./impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.dealloc.out
==17980== Parent PID: 10074
==17980== 
==17980== 
==17980== HEAP SUMMARY:
==17980==     in use at exit: 0 bytes in 0 blocks
==17980==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17980== 
==17980== All heap blocks were freed -- no leaks are possible
==17980== 
==17980== For counts of detected and suppressed errors, rerun with: -v
==17980== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test529 ===
The Valgrind memory detector as below:
==17996== Memcheck, a memory error detector
==17996== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17996== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17996== Command: ./impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.dealloc.out
==17996== Parent PID: 10074
==17996== 
==17996== 
==17996== HEAP SUMMARY:
==17996==     in use at exit: 0 bytes in 0 blocks
==17996==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==17996== 
==17996== All heap blocks were freed -- no leaks are possible
==17996== 
==17996== For counts of detected and suppressed errors, rerun with: -v
==17996== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test53 ===
The Valgrind memory detector as below:
==18011== Memcheck, a memory error detector
==18011== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18011== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18011== Command: ./impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.dealloc.out
==18011== Parent PID: 10074
==18011== 
==18011== 
==18011== HEAP SUMMARY:
==18011==     in use at exit: 0 bytes in 0 blocks
==18011==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18011== 
==18011== All heap blocks were freed -- no leaks are possible
==18011== 
==18011== For counts of detected and suppressed errors, rerun with: -v
==18011== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test530 ===
The Valgrind memory detector as below:
==18026== Memcheck, a memory error detector
==18026== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18026== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18026== Command: ./impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.dealloc.out
==18026== Parent PID: 10074
==18026== 
==18026== 
==18026== HEAP SUMMARY:
==18026==     in use at exit: 0 bytes in 0 blocks
==18026==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18026== 
==18026== All heap blocks were freed -- no leaks are possible
==18026== 
==18026== For counts of detected and suppressed errors, rerun with: -v
==18026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test531 ===
The Valgrind memory detector as below:
==18041== Memcheck, a memory error detector
==18041== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18041== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18041== Command: ./impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.dealloc.out
==18041== Parent PID: 10074
==18041== 
==18041== 
==18041== HEAP SUMMARY:
==18041==     in use at exit: 0 bytes in 0 blocks
==18041==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18041== 
==18041== All heap blocks were freed -- no leaks are possible
==18041== 
==18041== For counts of detected and suppressed errors, rerun with: -v
==18041== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test532 ===
The Valgrind memory detector as below:
==18057== Memcheck, a memory error detector
==18057== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18057== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18057== Command: ./impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.dealloc.out
==18057== Parent PID: 10074
==18057== 
==18057== 
==18057== HEAP SUMMARY:
==18057==     in use at exit: 0 bytes in 0 blocks
==18057==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18057== 
==18057== All heap blocks were freed -- no leaks are possible
==18057== 
==18057== For counts of detected and suppressed errors, rerun with: -v
==18057== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test533 ===
The Valgrind memory detector as below:
==18072== Memcheck, a memory error detector
==18072== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18072== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18072== Command: ./impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.dealloc.out
==18072== Parent PID: 10074
==18072== 
==18072== 
==18072== HEAP SUMMARY:
==18072==     in use at exit: 0 bytes in 0 blocks
==18072==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18072== 
==18072== All heap blocks were freed -- no leaks are possible
==18072== 
==18072== For counts of detected and suppressed errors, rerun with: -v
==18072== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test534 ===
The Valgrind memory detector as below:
==18087== Memcheck, a memory error detector
==18087== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18087== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18087== Command: ./impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.dealloc.out
==18087== Parent PID: 10074
==18087== 
==18087== 
==18087== HEAP SUMMARY:
==18087==     in use at exit: 0 bytes in 0 blocks
==18087==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18087== 
==18087== All heap blocks were freed -- no leaks are possible
==18087== 
==18087== For counts of detected and suppressed errors, rerun with: -v
==18087== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test535 ===
The Valgrind memory detector as below:
==18102== Memcheck, a memory error detector
==18102== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18102== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18102== Command: ./impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.dealloc.out
==18102== Parent PID: 10074
==18102== 
==18102== 
==18102== HEAP SUMMARY:
==18102==     in use at exit: 0 bytes in 0 blocks
==18102==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18102== 
==18102== All heap blocks were freed -- no leaks are possible
==18102== 
==18102== For counts of detected and suppressed errors, rerun with: -v
==18102== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test536 ===
The Valgrind memory detector as below:
==18118== Memcheck, a memory error detector
==18118== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18118== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18118== Command: ./impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.dealloc.out
==18118== Parent PID: 10074
==18118== 
==18118== 
==18118== HEAP SUMMARY:
==18118==     in use at exit: 0 bytes in 0 blocks
==18118==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18118== 
==18118== All heap blocks were freed -- no leaks are possible
==18118== 
==18118== For counts of detected and suppressed errors, rerun with: -v
==18118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test537 ===
The Valgrind memory detector as below:
==18133== Memcheck, a memory error detector
==18133== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18133== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18133== Command: ./impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.dealloc.out
==18133== Parent PID: 10074
==18133== 
==18133== 
==18133== HEAP SUMMARY:
==18133==     in use at exit: 0 bytes in 0 blocks
==18133==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18133== 
==18133== All heap blocks were freed -- no leaks are possible
==18133== 
==18133== For counts of detected and suppressed errors, rerun with: -v
==18133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test538 ===
The Valgrind memory detector as below:
==18148== Memcheck, a memory error detector
==18148== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18148== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18148== Command: ./impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.dealloc.out
==18148== Parent PID: 10074
==18148== 
==18148== 
==18148== HEAP SUMMARY:
==18148==     in use at exit: 0 bytes in 0 blocks
==18148==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18148== 
==18148== All heap blocks were freed -- no leaks are possible
==18148== 
==18148== For counts of detected and suppressed errors, rerun with: -v
==18148== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test539 ===
The Valgrind memory detector as below:
==18164== Memcheck, a memory error detector
==18164== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18164== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18164== Command: ./impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.dealloc.out
==18164== Parent PID: 10074
==18164== 
==18164== 
==18164== HEAP SUMMARY:
==18164==     in use at exit: 0 bytes in 0 blocks
==18164==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18164== 
==18164== All heap blocks were freed -- no leaks are possible
==18164== 
==18164== For counts of detected and suppressed errors, rerun with: -v
==18164== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test54 ===
The Valgrind memory detector as below:
==18180== Memcheck, a memory error detector
==18180== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18180== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18180== Command: ./impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.dealloc.out
==18180== Parent PID: 10074
==18180== 
==18180== 
==18180== HEAP SUMMARY:
==18180==     in use at exit: 0 bytes in 0 blocks
==18180==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18180== 
==18180== All heap blocks were freed -- no leaks are possible
==18180== 
==18180== For counts of detected and suppressed errors, rerun with: -v
==18180== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test540 ===
The Valgrind memory detector as below:
==18196== Memcheck, a memory error detector
==18196== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18196== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18196== Command: ./impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.dealloc.out
==18196== Parent PID: 10074
==18196== 
==18196== 
==18196== HEAP SUMMARY:
==18196==     in use at exit: 0 bytes in 0 blocks
==18196==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18196== 
==18196== All heap blocks were freed -- no leaks are possible
==18196== 
==18196== For counts of detected and suppressed errors, rerun with: -v
==18196== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test541 ===
The Valgrind memory detector as below:
==18213== Memcheck, a memory error detector
==18213== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18213== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18213== Command: ./impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.dealloc.out
==18213== Parent PID: 10074
==18213== 
==18213== 
==18213== HEAP SUMMARY:
==18213==     in use at exit: 0 bytes in 0 blocks
==18213==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18213== 
==18213== All heap blocks were freed -- no leaks are possible
==18213== 
==18213== For counts of detected and suppressed errors, rerun with: -v
==18213== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test542 ===
The Valgrind memory detector as below:
==18229== Memcheck, a memory error detector
==18229== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18229== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18229== Command: ./impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.dealloc.out
==18229== Parent PID: 10074
==18229== 
==18229== 
==18229== HEAP SUMMARY:
==18229==     in use at exit: 0 bytes in 0 blocks
==18229==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18229== 
==18229== All heap blocks were freed -- no leaks are possible
==18229== 
==18229== For counts of detected and suppressed errors, rerun with: -v
==18229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test543 ===
The Valgrind memory detector as below:
==18244== Memcheck, a memory error detector
==18244== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18244== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18244== Command: ./impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.dealloc.out
==18244== Parent PID: 10074
==18244== 
==18244== 
==18244== HEAP SUMMARY:
==18244==     in use at exit: 0 bytes in 0 blocks
==18244==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18244== 
==18244== All heap blocks were freed -- no leaks are possible
==18244== 
==18244== For counts of detected and suppressed errors, rerun with: -v
==18244== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test544 ===
The Valgrind memory detector as below:
==18259== Memcheck, a memory error detector
==18259== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18259== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18259== Command: ./impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.dealloc.out
==18259== Parent PID: 10074
==18259== 
==18259== 
==18259== HEAP SUMMARY:
==18259==     in use at exit: 0 bytes in 0 blocks
==18259==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18259== 
==18259== All heap blocks were freed -- no leaks are possible
==18259== 
==18259== For counts of detected and suppressed errors, rerun with: -v
==18259== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test545 ===
The Valgrind memory detector as below:
==18275== Memcheck, a memory error detector
==18275== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18275== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18275== Command: ./impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.dealloc.out
==18275== Parent PID: 10074
==18275== 
==18275== 
==18275== HEAP SUMMARY:
==18275==     in use at exit: 0 bytes in 0 blocks
==18275==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18275== 
==18275== All heap blocks were freed -- no leaks are possible
==18275== 
==18275== For counts of detected and suppressed errors, rerun with: -v
==18275== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test546 ===
The Valgrind memory detector as below:
==18290== Memcheck, a memory error detector
==18290== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18290== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18290== Command: ./impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.dealloc.out
==18290== Parent PID: 10074
==18290== 
==18290== 
==18290== HEAP SUMMARY:
==18290==     in use at exit: 0 bytes in 0 blocks
==18290==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18290== 
==18290== All heap blocks were freed -- no leaks are possible
==18290== 
==18290== For counts of detected and suppressed errors, rerun with: -v
==18290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test547 ===
The Valgrind memory detector as below:
==18305== Memcheck, a memory error detector
==18305== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18305== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18305== Command: ./impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.dealloc.out
==18305== Parent PID: 10074
==18305== 
==18305== 
==18305== HEAP SUMMARY:
==18305==     in use at exit: 0 bytes in 0 blocks
==18305==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18305== 
==18305== All heap blocks were freed -- no leaks are possible
==18305== 
==18305== For counts of detected and suppressed errors, rerun with: -v
==18305== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test548 ===
The Valgrind memory detector as below:
==18321== Memcheck, a memory error detector
==18321== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18321== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18321== Command: ./impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.dealloc.out
==18321== Parent PID: 10074
==18321== 
==18321== 
==18321== HEAP SUMMARY:
==18321==     in use at exit: 0 bytes in 0 blocks
==18321==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18321== 
==18321== All heap blocks were freed -- no leaks are possible
==18321== 
==18321== For counts of detected and suppressed errors, rerun with: -v
==18321== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test549 ===
The Valgrind memory detector as below:
==18336== Memcheck, a memory error detector
==18336== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18336== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18336== Command: ./impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.dealloc.out
==18336== Parent PID: 10074
==18336== 
==18336== 
==18336== HEAP SUMMARY:
==18336==     in use at exit: 0 bytes in 0 blocks
==18336==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18336== 
==18336== All heap blocks were freed -- no leaks are possible
==18336== 
==18336== For counts of detected and suppressed errors, rerun with: -v
==18336== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test55 ===
The Valgrind memory detector as below:
==18351== Memcheck, a memory error detector
==18351== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18351== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18351== Command: ./impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.dealloc.out
==18351== Parent PID: 10074
==18351== 
==18351== 
==18351== HEAP SUMMARY:
==18351==     in use at exit: 0 bytes in 0 blocks
==18351==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18351== 
==18351== All heap blocks were freed -- no leaks are possible
==18351== 
==18351== For counts of detected and suppressed errors, rerun with: -v
==18351== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test550 ===
The Valgrind memory detector as below:
==18367== Memcheck, a memory error detector
==18367== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18367== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18367== Command: ./impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.dealloc.out
==18367== Parent PID: 10074
==18367== 
==18367== 
==18367== HEAP SUMMARY:
==18367==     in use at exit: 0 bytes in 0 blocks
==18367==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18367== 
==18367== All heap blocks were freed -- no leaks are possible
==18367== 
==18367== For counts of detected and suppressed errors, rerun with: -v
==18367== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test551 ===
The Valgrind memory detector as below:
==18382== Memcheck, a memory error detector
==18382== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18382== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18382== Command: ./impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.dealloc.out
==18382== Parent PID: 10074
==18382== 
==18382== 
==18382== HEAP SUMMARY:
==18382==     in use at exit: 0 bytes in 0 blocks
==18382==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18382== 
==18382== All heap blocks were freed -- no leaks are possible
==18382== 
==18382== For counts of detected and suppressed errors, rerun with: -v
==18382== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test552 ===
The Valgrind memory detector as below:
==18398== Memcheck, a memory error detector
==18398== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18398== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18398== Command: ./impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.dealloc.out
==18398== Parent PID: 10074
==18398== 
==18398== 
==18398== HEAP SUMMARY:
==18398==     in use at exit: 0 bytes in 0 blocks
==18398==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18398== 
==18398== All heap blocks were freed -- no leaks are possible
==18398== 
==18398== For counts of detected and suppressed errors, rerun with: -v
==18398== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test553 ===
The Valgrind memory detector as below:
==18414== Memcheck, a memory error detector
==18414== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18414== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18414== Command: ./impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.dealloc.out
==18414== Parent PID: 10074
==18414== 
==18414== 
==18414== HEAP SUMMARY:
==18414==     in use at exit: 0 bytes in 0 blocks
==18414==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18414== 
==18414== All heap blocks were freed -- no leaks are possible
==18414== 
==18414== For counts of detected and suppressed errors, rerun with: -v
==18414== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test554 ===
The Valgrind memory detector as below:
==18429== Memcheck, a memory error detector
==18429== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18429== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18429== Command: ./impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.dealloc.out
==18429== Parent PID: 10074
==18429== 
==18429== 
==18429== HEAP SUMMARY:
==18429==     in use at exit: 0 bytes in 0 blocks
==18429==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18429== 
==18429== All heap blocks were freed -- no leaks are possible
==18429== 
==18429== For counts of detected and suppressed errors, rerun with: -v
==18429== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test555 ===
The Valgrind memory detector as below:
==18444== Memcheck, a memory error detector
==18444== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18444== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18444== Command: ./impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.dealloc.out
==18444== Parent PID: 10074
==18444== 
==18444== 
==18444== HEAP SUMMARY:
==18444==     in use at exit: 0 bytes in 0 blocks
==18444==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18444== 
==18444== All heap blocks were freed -- no leaks are possible
==18444== 
==18444== For counts of detected and suppressed errors, rerun with: -v
==18444== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test556 ===
The Valgrind memory detector as below:
==18460== Memcheck, a memory error detector
==18460== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18460== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18460== Command: ./impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.dealloc.out
==18460== Parent PID: 10074
==18460== 
==18460== 
==18460== HEAP SUMMARY:
==18460==     in use at exit: 0 bytes in 0 blocks
==18460==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18460== 
==18460== All heap blocks were freed -- no leaks are possible
==18460== 
==18460== For counts of detected and suppressed errors, rerun with: -v
==18460== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test557 ===
The Valgrind memory detector as below:
==18476== Memcheck, a memory error detector
==18476== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18476== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18476== Command: ./impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.dealloc.out
==18476== Parent PID: 10074
==18476== 
==18476== 
==18476== HEAP SUMMARY:
==18476==     in use at exit: 0 bytes in 0 blocks
==18476==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18476== 
==18476== All heap blocks were freed -- no leaks are possible
==18476== 
==18476== For counts of detected and suppressed errors, rerun with: -v
==18476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test558 ===
The Valgrind memory detector as below:
==18491== Memcheck, a memory error detector
==18491== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18491== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18491== Command: ./impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.dealloc.out
==18491== Parent PID: 10074
==18491== 
==18491== 
==18491== HEAP SUMMARY:
==18491==     in use at exit: 0 bytes in 0 blocks
==18491==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18491== 
==18491== All heap blocks were freed -- no leaks are possible
==18491== 
==18491== For counts of detected and suppressed errors, rerun with: -v
==18491== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test559 ===
The Valgrind memory detector as below:
==18507== Memcheck, a memory error detector
==18507== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18507== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18507== Command: ./impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.dealloc.out
==18507== Parent PID: 10074
==18507== 
==18507== 
==18507== HEAP SUMMARY:
==18507==     in use at exit: 0 bytes in 0 blocks
==18507==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18507== 
==18507== All heap blocks were freed -- no leaks are possible
==18507== 
==18507== For counts of detected and suppressed errors, rerun with: -v
==18507== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test56 ===
The Valgrind memory detector as below:
==18523== Memcheck, a memory error detector
==18523== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18523== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18523== Command: ./impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.dealloc.out
==18523== Parent PID: 10074
==18523== 
==18523== 
==18523== HEAP SUMMARY:
==18523==     in use at exit: 0 bytes in 0 blocks
==18523==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18523== 
==18523== All heap blocks were freed -- no leaks are possible
==18523== 
==18523== For counts of detected and suppressed errors, rerun with: -v
==18523== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test560 ===
The Valgrind memory detector as below:
==18538== Memcheck, a memory error detector
==18538== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18538== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18538== Command: ./impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.dealloc.out
==18538== Parent PID: 10074
==18538== 
==18538== 
==18538== HEAP SUMMARY:
==18538==     in use at exit: 0 bytes in 0 blocks
==18538==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18538== 
==18538== All heap blocks were freed -- no leaks are possible
==18538== 
==18538== For counts of detected and suppressed errors, rerun with: -v
==18538== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test561 ===
The Valgrind memory detector as below:
==18553== Memcheck, a memory error detector
==18553== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18553== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18553== Command: ./impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.dealloc.out
==18553== Parent PID: 10074
==18553== 
==18553== 
==18553== HEAP SUMMARY:
==18553==     in use at exit: 0 bytes in 0 blocks
==18553==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18553== 
==18553== All heap blocks were freed -- no leaks are possible
==18553== 
==18553== For counts of detected and suppressed errors, rerun with: -v
==18553== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test562 ===
The Valgrind memory detector as below:
==18570== Memcheck, a memory error detector
==18570== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18570== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18570== Command: ./impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.dealloc.out
==18570== Parent PID: 10074
==18570== 
==18570== 
==18570== HEAP SUMMARY:
==18570==     in use at exit: 0 bytes in 0 blocks
==18570==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18570== 
==18570== All heap blocks were freed -- no leaks are possible
==18570== 
==18570== For counts of detected and suppressed errors, rerun with: -v
==18570== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test563 ===
The Valgrind memory detector as below:
==18585== Memcheck, a memory error detector
==18585== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18585== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18585== Command: ./impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.dealloc.out
==18585== Parent PID: 10074
==18585== 
==18585== 
==18585== HEAP SUMMARY:
==18585==     in use at exit: 0 bytes in 0 blocks
==18585==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18585== 
==18585== All heap blocks were freed -- no leaks are possible
==18585== 
==18585== For counts of detected and suppressed errors, rerun with: -v
==18585== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test564 ===
The Valgrind memory detector as below:
==18600== Memcheck, a memory error detector
==18600== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18600== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18600== Command: ./impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.dealloc.out
==18600== Parent PID: 10074
==18600== 
==18600== 
==18600== HEAP SUMMARY:
==18600==     in use at exit: 0 bytes in 0 blocks
==18600==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18600== 
==18600== All heap blocks were freed -- no leaks are possible
==18600== 
==18600== For counts of detected and suppressed errors, rerun with: -v
==18600== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test565 ===
The Valgrind memory detector as below:
==18617== Memcheck, a memory error detector
==18617== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18617== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18617== Command: ./impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.dealloc.out
==18617== Parent PID: 10074
==18617== 
==18617== 
==18617== HEAP SUMMARY:
==18617==     in use at exit: 0 bytes in 0 blocks
==18617==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18617== 
==18617== All heap blocks were freed -- no leaks are possible
==18617== 
==18617== For counts of detected and suppressed errors, rerun with: -v
==18617== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test566 ===
The Valgrind memory detector as below:
==18636== Memcheck, a memory error detector
==18636== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18636== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18636== Command: ./impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.dealloc.out
==18636== Parent PID: 10074
==18636== 
==18636== 
==18636== HEAP SUMMARY:
==18636==     in use at exit: 0 bytes in 0 blocks
==18636==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18636== 
==18636== All heap blocks were freed -- no leaks are possible
==18636== 
==18636== For counts of detected and suppressed errors, rerun with: -v
==18636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test567 ===
The Valgrind memory detector as below:
==18652== Memcheck, a memory error detector
==18652== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18652== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18652== Command: ./impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.dealloc.out
==18652== Parent PID: 10074
==18652== 
==18652== 
==18652== HEAP SUMMARY:
==18652==     in use at exit: 0 bytes in 0 blocks
==18652==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18652== 
==18652== All heap blocks were freed -- no leaks are possible
==18652== 
==18652== For counts of detected and suppressed errors, rerun with: -v
==18652== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test568 ===
The Valgrind memory detector as below:
==18667== Memcheck, a memory error detector
==18667== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18667== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18667== Command: ./impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.dealloc.out
==18667== Parent PID: 10074
==18667== 
==18667== 
==18667== HEAP SUMMARY:
==18667==     in use at exit: 0 bytes in 0 blocks
==18667==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18667== 
==18667== All heap blocks were freed -- no leaks are possible
==18667== 
==18667== For counts of detected and suppressed errors, rerun with: -v
==18667== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test569 ===
The Valgrind memory detector as below:
==18683== Memcheck, a memory error detector
==18683== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18683== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18683== Command: ./impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.dealloc.out
==18683== Parent PID: 10074
==18683== 
==18683== 
==18683== HEAP SUMMARY:
==18683==     in use at exit: 0 bytes in 0 blocks
==18683==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18683== 
==18683== All heap blocks were freed -- no leaks are possible
==18683== 
==18683== For counts of detected and suppressed errors, rerun with: -v
==18683== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test57 ===
The Valgrind memory detector as below:
==18698== Memcheck, a memory error detector
==18698== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18698== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18698== Command: ./impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.dealloc.out
==18698== Parent PID: 10074
==18698== 
==18698== 
==18698== HEAP SUMMARY:
==18698==     in use at exit: 0 bytes in 0 blocks
==18698==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18698== 
==18698== All heap blocks were freed -- no leaks are possible
==18698== 
==18698== For counts of detected and suppressed errors, rerun with: -v
==18698== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test570 ===
The Valgrind memory detector as below:
==18713== Memcheck, a memory error detector
==18713== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18713== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18713== Command: ./impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.dealloc.out
==18713== Parent PID: 10074
==18713== 
==18713== 
==18713== HEAP SUMMARY:
==18713==     in use at exit: 0 bytes in 0 blocks
==18713==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18713== 
==18713== All heap blocks were freed -- no leaks are possible
==18713== 
==18713== For counts of detected and suppressed errors, rerun with: -v
==18713== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test571 ===
The Valgrind memory detector as below:
==18768== Memcheck, a memory error detector
==18768== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18768== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18768== Command: ./impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.dealloc.out
==18768== Parent PID: 10074
==18768== 
==18768== 
==18768== HEAP SUMMARY:
==18768==     in use at exit: 0 bytes in 0 blocks
==18768==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18768== 
==18768== All heap blocks were freed -- no leaks are possible
==18768== 
==18768== For counts of detected and suppressed errors, rerun with: -v
==18768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test572 ===
The Valgrind memory detector as below:
==18787== Memcheck, a memory error detector
==18787== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18787== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18787== Command: ./impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.dealloc.out
==18787== Parent PID: 10074
==18787== 
==18787== 
==18787== HEAP SUMMARY:
==18787==     in use at exit: 0 bytes in 0 blocks
==18787==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18787== 
==18787== All heap blocks were freed -- no leaks are possible
==18787== 
==18787== For counts of detected and suppressed errors, rerun with: -v
==18787== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test573 ===
The Valgrind memory detector as below:
==18803== Memcheck, a memory error detector
==18803== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18803== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18803== Command: ./impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.dealloc.out
==18803== Parent PID: 10074
==18803== 
==18803== 
==18803== HEAP SUMMARY:
==18803==     in use at exit: 0 bytes in 0 blocks
==18803==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18803== 
==18803== All heap blocks were freed -- no leaks are possible
==18803== 
==18803== For counts of detected and suppressed errors, rerun with: -v
==18803== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test574 ===
The Valgrind memory detector as below:
==18818== Memcheck, a memory error detector
==18818== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18818== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18818== Command: ./impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.dealloc.out
==18818== Parent PID: 10074
==18818== 
==18818== 
==18818== HEAP SUMMARY:
==18818==     in use at exit: 0 bytes in 0 blocks
==18818==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18818== 
==18818== All heap blocks were freed -- no leaks are possible
==18818== 
==18818== For counts of detected and suppressed errors, rerun with: -v
==18818== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test575 ===
The Valgrind memory detector as below:
==18834== Memcheck, a memory error detector
==18834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18834== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18834== Command: ./impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.dealloc.out
==18834== Parent PID: 10074
==18834== 
==18834== 
==18834== HEAP SUMMARY:
==18834==     in use at exit: 0 bytes in 0 blocks
==18834==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18834== 
==18834== All heap blocks were freed -- no leaks are possible
==18834== 
==18834== For counts of detected and suppressed errors, rerun with: -v
==18834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test576 ===
The Valgrind memory detector as below:
==18849== Memcheck, a memory error detector
==18849== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18849== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18849== Command: ./impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.dealloc.out
==18849== Parent PID: 10074
==18849== 
==18849== 
==18849== HEAP SUMMARY:
==18849==     in use at exit: 0 bytes in 0 blocks
==18849==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18849== 
==18849== All heap blocks were freed -- no leaks are possible
==18849== 
==18849== For counts of detected and suppressed errors, rerun with: -v
==18849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test577 ===
The Valgrind memory detector as below:
==18865== Memcheck, a memory error detector
==18865== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18865== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18865== Command: ./impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.dealloc.out
==18865== Parent PID: 10074
==18865== 
==18865== 
==18865== HEAP SUMMARY:
==18865==     in use at exit: 0 bytes in 0 blocks
==18865==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18865== 
==18865== All heap blocks were freed -- no leaks are possible
==18865== 
==18865== For counts of detected and suppressed errors, rerun with: -v
==18865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test578 ===
The Valgrind memory detector as below:
==18880== Memcheck, a memory error detector
==18880== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18880== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18880== Command: ./impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.dealloc.out
==18880== Parent PID: 10074
==18880== 
==18880== 
==18880== HEAP SUMMARY:
==18880==     in use at exit: 0 bytes in 0 blocks
==18880==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18880== 
==18880== All heap blocks were freed -- no leaks are possible
==18880== 
==18880== For counts of detected and suppressed errors, rerun with: -v
==18880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test579 ===
The Valgrind memory detector as below:
==18896== Memcheck, a memory error detector
==18896== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18896== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18896== Command: ./impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.dealloc.out
==18896== Parent PID: 10074
==18896== 
==18896== 
==18896== HEAP SUMMARY:
==18896==     in use at exit: 0 bytes in 0 blocks
==18896==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18896== 
==18896== All heap blocks were freed -- no leaks are possible
==18896== 
==18896== For counts of detected and suppressed errors, rerun with: -v
==18896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test58 ===
The Valgrind memory detector as below:
==18911== Memcheck, a memory error detector
==18911== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18911== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18911== Command: ./impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.dealloc.out
==18911== Parent PID: 10074
==18911== 
==18911== 
==18911== HEAP SUMMARY:
==18911==     in use at exit: 0 bytes in 0 blocks
==18911==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18911== 
==18911== All heap blocks were freed -- no leaks are possible
==18911== 
==18911== For counts of detected and suppressed errors, rerun with: -v
==18911== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test580 ===
The Valgrind memory detector as below:
==18926== Memcheck, a memory error detector
==18926== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18926== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18926== Command: ./impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.dealloc.out
==18926== Parent PID: 10074
==18926== 
==18926== 
==18926== HEAP SUMMARY:
==18926==     in use at exit: 0 bytes in 0 blocks
==18926==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18926== 
==18926== All heap blocks were freed -- no leaks are possible
==18926== 
==18926== For counts of detected and suppressed errors, rerun with: -v
==18926== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test581 ===
The Valgrind memory detector as below:
==18942== Memcheck, a memory error detector
==18942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18942== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18942== Command: ./impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.dealloc.out
==18942== Parent PID: 10074
==18942== 
==18942== 
==18942== HEAP SUMMARY:
==18942==     in use at exit: 0 bytes in 0 blocks
==18942==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18942== 
==18942== All heap blocks were freed -- no leaks are possible
==18942== 
==18942== For counts of detected and suppressed errors, rerun with: -v
==18942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test582 ===
The Valgrind memory detector as below:
==18957== Memcheck, a memory error detector
==18957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18957== Command: ./impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.dealloc.out
==18957== Parent PID: 10074
==18957== 
==18957== 
==18957== HEAP SUMMARY:
==18957==     in use at exit: 0 bytes in 0 blocks
==18957==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18957== 
==18957== All heap blocks were freed -- no leaks are possible
==18957== 
==18957== For counts of detected and suppressed errors, rerun with: -v
==18957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test583 ===
The Valgrind memory detector as below:
==18972== Memcheck, a memory error detector
==18972== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18972== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18972== Command: ./impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.dealloc.out
==18972== Parent PID: 10074
==18972== 
==18972== 
==18972== HEAP SUMMARY:
==18972==     in use at exit: 0 bytes in 0 blocks
==18972==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18972== 
==18972== All heap blocks were freed -- no leaks are possible
==18972== 
==18972== For counts of detected and suppressed errors, rerun with: -v
==18972== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test584 ===
The Valgrind memory detector as below:
==18987== Memcheck, a memory error detector
==18987== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18987== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18987== Command: ./impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.dealloc.out
==18987== Parent PID: 10074
==18987== 
==18987== 
==18987== HEAP SUMMARY:
==18987==     in use at exit: 0 bytes in 0 blocks
==18987==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==18987== 
==18987== All heap blocks were freed -- no leaks are possible
==18987== 
==18987== For counts of detected and suppressed errors, rerun with: -v
==18987== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test585 ===
The Valgrind memory detector as below:
==19003== Memcheck, a memory error detector
==19003== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19003== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19003== Command: ./impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.dealloc.out
==19003== Parent PID: 10074
==19003== 
==19003== 
==19003== HEAP SUMMARY:
==19003==     in use at exit: 0 bytes in 0 blocks
==19003==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19003== 
==19003== All heap blocks were freed -- no leaks are possible
==19003== 
==19003== For counts of detected and suppressed errors, rerun with: -v
==19003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test586 ===
The Valgrind memory detector as below:
==19019== Memcheck, a memory error detector
==19019== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19019== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19019== Command: ./impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.dealloc.out
==19019== Parent PID: 10074
==19019== 
==19019== 
==19019== HEAP SUMMARY:
==19019==     in use at exit: 0 bytes in 0 blocks
==19019==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19019== 
==19019== All heap blocks were freed -- no leaks are possible
==19019== 
==19019== For counts of detected and suppressed errors, rerun with: -v
==19019== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test587 ===
The Valgrind memory detector as below:
==19034== Memcheck, a memory error detector
==19034== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19034== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19034== Command: ./impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.dealloc.out
==19034== Parent PID: 10074
==19034== 
==19034== 
==19034== HEAP SUMMARY:
==19034==     in use at exit: 0 bytes in 0 blocks
==19034==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19034== 
==19034== All heap blocks were freed -- no leaks are possible
==19034== 
==19034== For counts of detected and suppressed errors, rerun with: -v
==19034== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test588 ===
The Valgrind memory detector as below:
==19051== Memcheck, a memory error detector
==19051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19051== Command: ./impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.dealloc.out
==19051== Parent PID: 10074
==19051== 
==19051== 
==19051== HEAP SUMMARY:
==19051==     in use at exit: 0 bytes in 0 blocks
==19051==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19051== 
==19051== All heap blocks were freed -- no leaks are possible
==19051== 
==19051== For counts of detected and suppressed errors, rerun with: -v
==19051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test589 ===
The Valgrind memory detector as below:
==19066== Memcheck, a memory error detector
==19066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19066== Command: ./impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.dealloc.out
==19066== Parent PID: 10074
==19066== 
==19066== 
==19066== HEAP SUMMARY:
==19066==     in use at exit: 0 bytes in 0 blocks
==19066==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19066== 
==19066== All heap blocks were freed -- no leaks are possible
==19066== 
==19066== For counts of detected and suppressed errors, rerun with: -v
==19066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test59 ===
The Valgrind memory detector as below:
==19081== Memcheck, a memory error detector
==19081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19081== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19081== Command: ./impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.dealloc.out
==19081== Parent PID: 10074
==19081== 
==19081== 
==19081== HEAP SUMMARY:
==19081==     in use at exit: 0 bytes in 0 blocks
==19081==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19081== 
==19081== All heap blocks were freed -- no leaks are possible
==19081== 
==19081== For counts of detected and suppressed errors, rerun with: -v
==19081== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test590 ===
The Valgrind memory detector as below:
==19096== Memcheck, a memory error detector
==19096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19096== Command: ./impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.dealloc.out
==19096== Parent PID: 10074
==19096== 
==19096== 
==19096== HEAP SUMMARY:
==19096==     in use at exit: 0 bytes in 0 blocks
==19096==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19096== 
==19096== All heap blocks were freed -- no leaks are possible
==19096== 
==19096== For counts of detected and suppressed errors, rerun with: -v
==19096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test591 ===
The Valgrind memory detector as below:
==19112== Memcheck, a memory error detector
==19112== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19112== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19112== Command: ./impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.dealloc.out
==19112== Parent PID: 10074
==19112== 
==19112== 
==19112== HEAP SUMMARY:
==19112==     in use at exit: 0 bytes in 0 blocks
==19112==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19112== 
==19112== All heap blocks were freed -- no leaks are possible
==19112== 
==19112== For counts of detected and suppressed errors, rerun with: -v
==19112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test592 ===
The Valgrind memory detector as below:
==19127== Memcheck, a memory error detector
==19127== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19127== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19127== Command: ./impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.dealloc.out
==19127== Parent PID: 10074
==19127== 
==19127== 
==19127== HEAP SUMMARY:
==19127==     in use at exit: 0 bytes in 0 blocks
==19127==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19127== 
==19127== All heap blocks were freed -- no leaks are possible
==19127== 
==19127== For counts of detected and suppressed errors, rerun with: -v
==19127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test593 ===
The Valgrind memory detector as below:
==19142== Memcheck, a memory error detector
==19142== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19142== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19142== Command: ./impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.dealloc.out
==19142== Parent PID: 10074
==19142== 
==19142== 
==19142== HEAP SUMMARY:
==19142==     in use at exit: 0 bytes in 0 blocks
==19142==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19142== 
==19142== All heap blocks were freed -- no leaks are possible
==19142== 
==19142== For counts of detected and suppressed errors, rerun with: -v
==19142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test594 ===
The Valgrind memory detector as below:
==19159== Memcheck, a memory error detector
==19159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19159== Command: ./impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.dealloc.out
==19159== Parent PID: 10074
==19159== 
==19159== 
==19159== HEAP SUMMARY:
==19159==     in use at exit: 0 bytes in 0 blocks
==19159==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19159== 
==19159== All heap blocks were freed -- no leaks are possible
==19159== 
==19159== For counts of detected and suppressed errors, rerun with: -v
==19159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test595 ===
The Valgrind memory detector as below:
==19174== Memcheck, a memory error detector
==19174== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19174== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19174== Command: ./impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.dealloc.out
==19174== Parent PID: 10074
==19174== 
==19174== 
==19174== HEAP SUMMARY:
==19174==     in use at exit: 0 bytes in 0 blocks
==19174==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19174== 
==19174== All heap blocks were freed -- no leaks are possible
==19174== 
==19174== For counts of detected and suppressed errors, rerun with: -v
==19174== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test596 ===
The Valgrind memory detector as below:
==19189== Memcheck, a memory error detector
==19189== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19189== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19189== Command: ./impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.dealloc.out
==19189== Parent PID: 10074
==19189== 
==19189== 
==19189== HEAP SUMMARY:
==19189==     in use at exit: 0 bytes in 0 blocks
==19189==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19189== 
==19189== All heap blocks were freed -- no leaks are possible
==19189== 
==19189== For counts of detected and suppressed errors, rerun with: -v
==19189== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test597 ===
The Valgrind memory detector as below:
==19205== Memcheck, a memory error detector
==19205== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19205== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19205== Command: ./impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.dealloc.out
==19205== Parent PID: 10074
==19205== 
==19205== 
==19205== HEAP SUMMARY:
==19205==     in use at exit: 0 bytes in 0 blocks
==19205==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19205== 
==19205== All heap blocks were freed -- no leaks are possible
==19205== 
==19205== For counts of detected and suppressed errors, rerun with: -v
==19205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test598 ===
The Valgrind memory detector as below:
==19220== Memcheck, a memory error detector
==19220== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19220== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19220== Command: ./impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.dealloc.out
==19220== Parent PID: 10074
==19220== 
==19220== 
==19220== HEAP SUMMARY:
==19220==     in use at exit: 0 bytes in 0 blocks
==19220==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19220== 
==19220== All heap blocks were freed -- no leaks are possible
==19220== 
==19220== For counts of detected and suppressed errors, rerun with: -v
==19220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test599 ===
The Valgrind memory detector as below:
==19235== Memcheck, a memory error detector
==19235== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19235== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19235== Command: ./impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.dealloc.out
==19235== Parent PID: 10074
==19235== 
==19235== 
==19235== HEAP SUMMARY:
==19235==     in use at exit: 0 bytes in 0 blocks
==19235==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19235== 
==19235== All heap blocks were freed -- no leaks are possible
==19235== 
==19235== For counts of detected and suppressed errors, rerun with: -v
==19235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test6 ===
The Valgrind memory detector as below:
==19250== Memcheck, a memory error detector
==19250== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19250== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19250== Command: ./impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.dealloc.out
==19250== Parent PID: 10074
==19250== 
==19250== 
==19250== HEAP SUMMARY:
==19250==     in use at exit: 0 bytes in 0 blocks
==19250==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19250== 
==19250== All heap blocks were freed -- no leaks are possible
==19250== 
==19250== For counts of detected and suppressed errors, rerun with: -v
==19250== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test60 ===
The Valgrind memory detector as below:
==19266== Memcheck, a memory error detector
==19266== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19266== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19266== Command: ./impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.dealloc.out
==19266== Parent PID: 10074
==19266== 
==19266== 
==19266== HEAP SUMMARY:
==19266==     in use at exit: 0 bytes in 0 blocks
==19266==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19266== 
==19266== All heap blocks were freed -- no leaks are possible
==19266== 
==19266== For counts of detected and suppressed errors, rerun with: -v
==19266== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test600 ===
The Valgrind memory detector as below:
==19281== Memcheck, a memory error detector
==19281== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19281== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19281== Command: ./impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.dealloc.out
==19281== Parent PID: 10074
==19281== 
==19281== 
==19281== HEAP SUMMARY:
==19281==     in use at exit: 0 bytes in 0 blocks
==19281==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19281== 
==19281== All heap blocks were freed -- no leaks are possible
==19281== 
==19281== For counts of detected and suppressed errors, rerun with: -v
==19281== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test601 ===
The Valgrind memory detector as below:
==19296== Memcheck, a memory error detector
==19296== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19296== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19296== Command: ./impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.dealloc.out
==19296== Parent PID: 10074
==19296== 
==19296== 
==19296== HEAP SUMMARY:
==19296==     in use at exit: 0 bytes in 0 blocks
==19296==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19296== 
==19296== All heap blocks were freed -- no leaks are possible
==19296== 
==19296== For counts of detected and suppressed errors, rerun with: -v
==19296== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test602 ===
The Valgrind memory detector as below:
==19319== Memcheck, a memory error detector
==19319== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19319== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19319== Command: ./impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.dealloc.out
==19319== Parent PID: 10074
==19319== 
==19319== 
==19319== HEAP SUMMARY:
==19319==     in use at exit: 0 bytes in 0 blocks
==19319==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19319== 
==19319== All heap blocks were freed -- no leaks are possible
==19319== 
==19319== For counts of detected and suppressed errors, rerun with: -v
==19319== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test603 ===
The Valgrind memory detector as below:
==19335== Memcheck, a memory error detector
==19335== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19335== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19335== Command: ./impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.dealloc.out
==19335== Parent PID: 10074
==19335== 
==19335== 
==19335== HEAP SUMMARY:
==19335==     in use at exit: 0 bytes in 0 blocks
==19335==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19335== 
==19335== All heap blocks were freed -- no leaks are possible
==19335== 
==19335== For counts of detected and suppressed errors, rerun with: -v
==19335== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test604 ===
The Valgrind memory detector as below:
==19351== Memcheck, a memory error detector
==19351== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19351== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19351== Command: ./impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.dealloc.out
==19351== Parent PID: 10074
==19351== 
==19351== 
==19351== HEAP SUMMARY:
==19351==     in use at exit: 0 bytes in 0 blocks
==19351==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19351== 
==19351== All heap blocks were freed -- no leaks are possible
==19351== 
==19351== For counts of detected and suppressed errors, rerun with: -v
==19351== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test605 ===
The Valgrind memory detector as below:
==19367== Memcheck, a memory error detector
==19367== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19367== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19367== Command: ./impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.dealloc.out
==19367== Parent PID: 10074
==19367== 
==19367== 
==19367== HEAP SUMMARY:
==19367==     in use at exit: 0 bytes in 0 blocks
==19367==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19367== 
==19367== All heap blocks were freed -- no leaks are possible
==19367== 
==19367== For counts of detected and suppressed errors, rerun with: -v
==19367== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test606 ===
The Valgrind memory detector as below:
==19382== Memcheck, a memory error detector
==19382== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19382== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19382== Command: ./impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.dealloc.out
==19382== Parent PID: 10074
==19382== 
==19382== 
==19382== HEAP SUMMARY:
==19382==     in use at exit: 0 bytes in 0 blocks
==19382==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19382== 
==19382== All heap blocks were freed -- no leaks are possible
==19382== 
==19382== For counts of detected and suppressed errors, rerun with: -v
==19382== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test607 ===
The Valgrind memory detector as below:
==19397== Memcheck, a memory error detector
==19397== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19397== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19397== Command: ./impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.dealloc.out
==19397== Parent PID: 10074
==19397== 
==19397== 
==19397== HEAP SUMMARY:
==19397==     in use at exit: 0 bytes in 0 blocks
==19397==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19397== 
==19397== All heap blocks were freed -- no leaks are possible
==19397== 
==19397== For counts of detected and suppressed errors, rerun with: -v
==19397== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test608 ===
The Valgrind memory detector as below:
==19413== Memcheck, a memory error detector
==19413== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19413== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19413== Command: ./impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.dealloc.out
==19413== Parent PID: 10074
==19413== 
==19413== 
==19413== HEAP SUMMARY:
==19413==     in use at exit: 0 bytes in 0 blocks
==19413==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19413== 
==19413== All heap blocks were freed -- no leaks are possible
==19413== 
==19413== For counts of detected and suppressed errors, rerun with: -v
==19413== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test609 ===
The Valgrind memory detector as below:
==19429== Memcheck, a memory error detector
==19429== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19429== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19429== Command: ./impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.dealloc.out
==19429== Parent PID: 10074
==19429== 
==19429== 
==19429== HEAP SUMMARY:
==19429==     in use at exit: 0 bytes in 0 blocks
==19429==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19429== 
==19429== All heap blocks were freed -- no leaks are possible
==19429== 
==19429== For counts of detected and suppressed errors, rerun with: -v
==19429== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test61 ===
The Valgrind memory detector as below:
==19444== Memcheck, a memory error detector
==19444== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19444== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19444== Command: ./impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.dealloc.out
==19444== Parent PID: 10074
==19444== 
==19444== 
==19444== HEAP SUMMARY:
==19444==     in use at exit: 0 bytes in 0 blocks
==19444==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19444== 
==19444== All heap blocks were freed -- no leaks are possible
==19444== 
==19444== For counts of detected and suppressed errors, rerun with: -v
==19444== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test610 ===
The Valgrind memory detector as below:
==19459== Memcheck, a memory error detector
==19459== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19459== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19459== Command: ./impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.dealloc.out
==19459== Parent PID: 10074
==19459== 
==19459== 
==19459== HEAP SUMMARY:
==19459==     in use at exit: 0 bytes in 0 blocks
==19459==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19459== 
==19459== All heap blocks were freed -- no leaks are possible
==19459== 
==19459== For counts of detected and suppressed errors, rerun with: -v
==19459== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test611 ===
The Valgrind memory detector as below:
==19475== Memcheck, a memory error detector
==19475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19475== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19475== Command: ./impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.dealloc.out
==19475== Parent PID: 10074
==19475== 
==19475== 
==19475== HEAP SUMMARY:
==19475==     in use at exit: 0 bytes in 0 blocks
==19475==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19475== 
==19475== All heap blocks were freed -- no leaks are possible
==19475== 
==19475== For counts of detected and suppressed errors, rerun with: -v
==19475== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test612 ===
The Valgrind memory detector as below:
==19490== Memcheck, a memory error detector
==19490== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19490== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19490== Command: ./impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.dealloc.out
==19490== Parent PID: 10074
==19490== 
==19490== 
==19490== HEAP SUMMARY:
==19490==     in use at exit: 0 bytes in 0 blocks
==19490==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19490== 
==19490== All heap blocks were freed -- no leaks are possible
==19490== 
==19490== For counts of detected and suppressed errors, rerun with: -v
==19490== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test613 ===
The Valgrind memory detector as below:
==19505== Memcheck, a memory error detector
==19505== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19505== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19505== Command: ./impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.dealloc.out
==19505== Parent PID: 10074
==19505== 
==19505== 
==19505== HEAP SUMMARY:
==19505==     in use at exit: 0 bytes in 0 blocks
==19505==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19505== 
==19505== All heap blocks were freed -- no leaks are possible
==19505== 
==19505== For counts of detected and suppressed errors, rerun with: -v
==19505== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test614 ===
The Valgrind memory detector as below:
==19521== Memcheck, a memory error detector
==19521== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19521== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19521== Command: ./impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.dealloc.out
==19521== Parent PID: 10074
==19521== 
==19521== 
==19521== HEAP SUMMARY:
==19521==     in use at exit: 0 bytes in 0 blocks
==19521==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19521== 
==19521== All heap blocks were freed -- no leaks are possible
==19521== 
==19521== For counts of detected and suppressed errors, rerun with: -v
==19521== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test615 ===
The Valgrind memory detector as below:
==19536== Memcheck, a memory error detector
==19536== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19536== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19536== Command: ./impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.dealloc.out
==19536== Parent PID: 10074
==19536== 
==19536== 
==19536== HEAP SUMMARY:
==19536==     in use at exit: 0 bytes in 0 blocks
==19536==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19536== 
==19536== All heap blocks were freed -- no leaks are possible
==19536== 
==19536== For counts of detected and suppressed errors, rerun with: -v
==19536== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test616 ===
The Valgrind memory detector as below:
==19551== Memcheck, a memory error detector
==19551== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19551== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19551== Command: ./impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.dealloc.out
==19551== Parent PID: 10074
==19551== 
==19551== 
==19551== HEAP SUMMARY:
==19551==     in use at exit: 0 bytes in 0 blocks
==19551==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19551== 
==19551== All heap blocks were freed -- no leaks are possible
==19551== 
==19551== For counts of detected and suppressed errors, rerun with: -v
==19551== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test617 ===
The Valgrind memory detector as below:
==19569== Memcheck, a memory error detector
==19569== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19569== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19569== Command: ./impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.dealloc.out
==19569== Parent PID: 10074
==19569== 
==19569== 
==19569== HEAP SUMMARY:
==19569==     in use at exit: 0 bytes in 0 blocks
==19569==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19569== 
==19569== All heap blocks were freed -- no leaks are possible
==19569== 
==19569== For counts of detected and suppressed errors, rerun with: -v
==19569== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test618 ===
The Valgrind memory detector as below:
==19584== Memcheck, a memory error detector
==19584== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19584== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19584== Command: ./impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.dealloc.out
==19584== Parent PID: 10074
==19584== 
==19584== 
==19584== HEAP SUMMARY:
==19584==     in use at exit: 0 bytes in 0 blocks
==19584==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19584== 
==19584== All heap blocks were freed -- no leaks are possible
==19584== 
==19584== For counts of detected and suppressed errors, rerun with: -v
==19584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test619 ===
The Valgrind memory detector as below:
==19599== Memcheck, a memory error detector
==19599== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19599== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19599== Command: ./impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.dealloc.out
==19599== Parent PID: 10074
==19599== 
==19599== 
==19599== HEAP SUMMARY:
==19599==     in use at exit: 0 bytes in 0 blocks
==19599==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19599== 
==19599== All heap blocks were freed -- no leaks are possible
==19599== 
==19599== For counts of detected and suppressed errors, rerun with: -v
==19599== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test62 ===
The Valgrind memory detector as below:
==19614== Memcheck, a memory error detector
==19614== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19614== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19614== Command: ./impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.dealloc.out
==19614== Parent PID: 10074
==19614== 
==19614== 
==19614== HEAP SUMMARY:
==19614==     in use at exit: 0 bytes in 0 blocks
==19614==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19614== 
==19614== All heap blocks were freed -- no leaks are possible
==19614== 
==19614== For counts of detected and suppressed errors, rerun with: -v
==19614== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test620 ===
The Valgrind memory detector as below:
==19630== Memcheck, a memory error detector
==19630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19630== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19630== Command: ./impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.dealloc.out
==19630== Parent PID: 10074
==19630== 
==19630== 
==19630== HEAP SUMMARY:
==19630==     in use at exit: 0 bytes in 0 blocks
==19630==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19630== 
==19630== All heap blocks were freed -- no leaks are possible
==19630== 
==19630== For counts of detected and suppressed errors, rerun with: -v
==19630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test621 ===
The Valgrind memory detector as below:
==19645== Memcheck, a memory error detector
==19645== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19645== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19645== Command: ./impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.dealloc.out
==19645== Parent PID: 10074
==19645== 
==19645== 
==19645== HEAP SUMMARY:
==19645==     in use at exit: 0 bytes in 0 blocks
==19645==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19645== 
==19645== All heap blocks were freed -- no leaks are possible
==19645== 
==19645== For counts of detected and suppressed errors, rerun with: -v
==19645== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test622 ===
The Valgrind memory detector as below:
==19661== Memcheck, a memory error detector
==19661== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19661== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19661== Command: ./impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.dealloc.out
==19661== Parent PID: 10074
==19661== 
==19661== 
==19661== HEAP SUMMARY:
==19661==     in use at exit: 0 bytes in 0 blocks
==19661==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19661== 
==19661== All heap blocks were freed -- no leaks are possible
==19661== 
==19661== For counts of detected and suppressed errors, rerun with: -v
==19661== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test623 ===
The Valgrind memory detector as below:
==19677== Memcheck, a memory error detector
==19677== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19677== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19677== Command: ./impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.dealloc.out
==19677== Parent PID: 10074
==19677== 
==19677== 
==19677== HEAP SUMMARY:
==19677==     in use at exit: 0 bytes in 0 blocks
==19677==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19677== 
==19677== All heap blocks were freed -- no leaks are possible
==19677== 
==19677== For counts of detected and suppressed errors, rerun with: -v
==19677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test624 ===
The Valgrind memory detector as below:
==19692== Memcheck, a memory error detector
==19692== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19692== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19692== Command: ./impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.dealloc.out
==19692== Parent PID: 10074
==19692== 
==19692== 
==19692== HEAP SUMMARY:
==19692==     in use at exit: 0 bytes in 0 blocks
==19692==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19692== 
==19692== All heap blocks were freed -- no leaks are possible
==19692== 
==19692== For counts of detected and suppressed errors, rerun with: -v
==19692== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test625 ===
The Valgrind memory detector as below:
==19707== Memcheck, a memory error detector
==19707== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19707== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19707== Command: ./impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.dealloc.out
==19707== Parent PID: 10074
==19707== 
==19707== 
==19707== HEAP SUMMARY:
==19707==     in use at exit: 0 bytes in 0 blocks
==19707==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19707== 
==19707== All heap blocks were freed -- no leaks are possible
==19707== 
==19707== For counts of detected and suppressed errors, rerun with: -v
==19707== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test626 ===
The Valgrind memory detector as below:
==19723== Memcheck, a memory error detector
==19723== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19723== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19723== Command: ./impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.dealloc.out
==19723== Parent PID: 10074
==19723== 
==19723== 
==19723== HEAP SUMMARY:
==19723==     in use at exit: 0 bytes in 0 blocks
==19723==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19723== 
==19723== All heap blocks were freed -- no leaks are possible
==19723== 
==19723== For counts of detected and suppressed errors, rerun with: -v
==19723== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test627 ===
The Valgrind memory detector as below:
==19738== Memcheck, a memory error detector
==19738== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19738== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19738== Command: ./impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.dealloc.out
==19738== Parent PID: 10074
==19738== 
==19738== 
==19738== HEAP SUMMARY:
==19738==     in use at exit: 0 bytes in 0 blocks
==19738==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19738== 
==19738== All heap blocks were freed -- no leaks are possible
==19738== 
==19738== For counts of detected and suppressed errors, rerun with: -v
==19738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test628 ===
The Valgrind memory detector as below:
==19753== Memcheck, a memory error detector
==19753== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19753== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19753== Command: ./impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.dealloc.out
==19753== Parent PID: 10074
==19753== 
==19753== 
==19753== HEAP SUMMARY:
==19753==     in use at exit: 0 bytes in 0 blocks
==19753==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19753== 
==19753== All heap blocks were freed -- no leaks are possible
==19753== 
==19753== For counts of detected and suppressed errors, rerun with: -v
==19753== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test629 ===
The Valgrind memory detector as below:
==19768== Memcheck, a memory error detector
==19768== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19768== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19768== Command: ./impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.dealloc.out
==19768== Parent PID: 10074
==19768== 
==19768== 
==19768== HEAP SUMMARY:
==19768==     in use at exit: 0 bytes in 0 blocks
==19768==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19768== 
==19768== All heap blocks were freed -- no leaks are possible
==19768== 
==19768== For counts of detected and suppressed errors, rerun with: -v
==19768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test63 ===
The Valgrind memory detector as below:
==19784== Memcheck, a memory error detector
==19784== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19784== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19784== Command: ./impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.dealloc.out
==19784== Parent PID: 10074
==19784== 
==19784== 
==19784== HEAP SUMMARY:
==19784==     in use at exit: 0 bytes in 0 blocks
==19784==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19784== 
==19784== All heap blocks were freed -- no leaks are possible
==19784== 
==19784== For counts of detected and suppressed errors, rerun with: -v
==19784== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test630 ===
The Valgrind memory detector as below:
==19799== Memcheck, a memory error detector
==19799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19799== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19799== Command: ./impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.dealloc.out
==19799== Parent PID: 10074
==19799== 
==19799== 
==19799== HEAP SUMMARY:
==19799==     in use at exit: 0 bytes in 0 blocks
==19799==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19799== 
==19799== All heap blocks were freed -- no leaks are possible
==19799== 
==19799== For counts of detected and suppressed errors, rerun with: -v
==19799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test631 ===
The Valgrind memory detector as below:
==19814== Memcheck, a memory error detector
==19814== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19814== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19814== Command: ./impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.dealloc.out
==19814== Parent PID: 10074
==19814== 
==19814== 
==19814== HEAP SUMMARY:
==19814==     in use at exit: 0 bytes in 0 blocks
==19814==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19814== 
==19814== All heap blocks were freed -- no leaks are possible
==19814== 
==19814== For counts of detected and suppressed errors, rerun with: -v
==19814== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test632 ===
The Valgrind memory detector as below:
==19829== Memcheck, a memory error detector
==19829== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19829== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19829== Command: ./impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.dealloc.out
==19829== Parent PID: 10074
==19829== 
==19829== 
==19829== HEAP SUMMARY:
==19829==     in use at exit: 0 bytes in 0 blocks
==19829==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19829== 
==19829== All heap blocks were freed -- no leaks are possible
==19829== 
==19829== For counts of detected and suppressed errors, rerun with: -v
==19829== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test633 ===
The Valgrind memory detector as below:
==19846== Memcheck, a memory error detector
==19846== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19846== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19846== Command: ./impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.dealloc.out
==19846== Parent PID: 10074
==19846== 
==19846== 
==19846== HEAP SUMMARY:
==19846==     in use at exit: 0 bytes in 0 blocks
==19846==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19846== 
==19846== All heap blocks were freed -- no leaks are possible
==19846== 
==19846== For counts of detected and suppressed errors, rerun with: -v
==19846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test634 ===
The Valgrind memory detector as below:
==19861== Memcheck, a memory error detector
==19861== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19861== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19861== Command: ./impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.dealloc.out
==19861== Parent PID: 10074
==19861== 
==19861== 
==19861== HEAP SUMMARY:
==19861==     in use at exit: 0 bytes in 0 blocks
==19861==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19861== 
==19861== All heap blocks were freed -- no leaks are possible
==19861== 
==19861== For counts of detected and suppressed errors, rerun with: -v
==19861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test635 ===
The Valgrind memory detector as below:
==19876== Memcheck, a memory error detector
==19876== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19876== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19876== Command: ./impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.dealloc.out
==19876== Parent PID: 10074
==19876== 
==19876== 
==19876== HEAP SUMMARY:
==19876==     in use at exit: 0 bytes in 0 blocks
==19876==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19876== 
==19876== All heap blocks were freed -- no leaks are possible
==19876== 
==19876== For counts of detected and suppressed errors, rerun with: -v
==19876== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test636 ===
The Valgrind memory detector as below:
==19892== Memcheck, a memory error detector
==19892== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19892== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19892== Command: ./impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.dealloc.out
==19892== Parent PID: 10074
==19892== 
==19892== 
==19892== HEAP SUMMARY:
==19892==     in use at exit: 0 bytes in 0 blocks
==19892==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19892== 
==19892== All heap blocks were freed -- no leaks are possible
==19892== 
==19892== For counts of detected and suppressed errors, rerun with: -v
==19892== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test637 ===
The Valgrind memory detector as below:
==19907== Memcheck, a memory error detector
==19907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19907== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19907== Command: ./impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.dealloc.out
==19907== Parent PID: 10074
==19907== 
==19907== 
==19907== HEAP SUMMARY:
==19907==     in use at exit: 0 bytes in 0 blocks
==19907==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19907== 
==19907== All heap blocks were freed -- no leaks are possible
==19907== 
==19907== For counts of detected and suppressed errors, rerun with: -v
==19907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test638 ===
The Valgrind memory detector as below:
==19922== Memcheck, a memory error detector
==19922== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19922== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19922== Command: ./impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.dealloc.out
==19922== Parent PID: 10074
==19922== 
==19922== 
==19922== HEAP SUMMARY:
==19922==     in use at exit: 0 bytes in 0 blocks
==19922==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19922== 
==19922== All heap blocks were freed -- no leaks are possible
==19922== 
==19922== For counts of detected and suppressed errors, rerun with: -v
==19922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test639 ===
The Valgrind memory detector as below:
==19955== Memcheck, a memory error detector
==19955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19955== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19955== Command: ./impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.dealloc.out
==19955== Parent PID: 10074
==19955== 
==19955== 
==19955== HEAP SUMMARY:
==19955==     in use at exit: 0 bytes in 0 blocks
==19955==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19955== 
==19955== All heap blocks were freed -- no leaks are possible
==19955== 
==19955== For counts of detected and suppressed errors, rerun with: -v
==19955== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test64 ===
The Valgrind memory detector as below:
==19970== Memcheck, a memory error detector
==19970== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19970== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19970== Command: ./impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.dealloc.out
==19970== Parent PID: 10074
==19970== 
==19970== 
==19970== HEAP SUMMARY:
==19970==     in use at exit: 0 bytes in 0 blocks
==19970==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19970== 
==19970== All heap blocks were freed -- no leaks are possible
==19970== 
==19970== For counts of detected and suppressed errors, rerun with: -v
==19970== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test640 ===
The Valgrind memory detector as below:
==19985== Memcheck, a memory error detector
==19985== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19985== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19985== Command: ./impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.dealloc.out
==19985== Parent PID: 10074
==19985== 
==19985== 
==19985== HEAP SUMMARY:
==19985==     in use at exit: 0 bytes in 0 blocks
==19985==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==19985== 
==19985== All heap blocks were freed -- no leaks are possible
==19985== 
==19985== For counts of detected and suppressed errors, rerun with: -v
==19985== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test641 ===
The Valgrind memory detector as below:
==20000== Memcheck, a memory error detector
==20000== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20000== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20000== Command: ./impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.dealloc.out
==20000== Parent PID: 10074
==20000== 
==20000== 
==20000== HEAP SUMMARY:
==20000==     in use at exit: 0 bytes in 0 blocks
==20000==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20000== 
==20000== All heap blocks were freed -- no leaks are possible
==20000== 
==20000== For counts of detected and suppressed errors, rerun with: -v
==20000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test642 ===
The Valgrind memory detector as below:
==20016== Memcheck, a memory error detector
==20016== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20016== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20016== Command: ./impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.dealloc.out
==20016== Parent PID: 10074
==20016== 
==20016== 
==20016== HEAP SUMMARY:
==20016==     in use at exit: 0 bytes in 0 blocks
==20016==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20016== 
==20016== All heap blocks were freed -- no leaks are possible
==20016== 
==20016== For counts of detected and suppressed errors, rerun with: -v
==20016== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test643 ===
The Valgrind memory detector as below:
==20031== Memcheck, a memory error detector
==20031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20031== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20031== Command: ./impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.dealloc.out
==20031== Parent PID: 10074
==20031== 
==20031== 
==20031== HEAP SUMMARY:
==20031==     in use at exit: 0 bytes in 0 blocks
==20031==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20031== 
==20031== All heap blocks were freed -- no leaks are possible
==20031== 
==20031== For counts of detected and suppressed errors, rerun with: -v
==20031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test644 ===
The Valgrind memory detector as below:
==20046== Memcheck, a memory error detector
==20046== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20046== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20046== Command: ./impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.dealloc.out
==20046== Parent PID: 10074
==20046== 
==20046== 
==20046== HEAP SUMMARY:
==20046==     in use at exit: 0 bytes in 0 blocks
==20046==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20046== 
==20046== All heap blocks were freed -- no leaks are possible
==20046== 
==20046== For counts of detected and suppressed errors, rerun with: -v
==20046== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test645 ===
The Valgrind memory detector as below:
==20061== Memcheck, a memory error detector
==20061== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20061== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20061== Command: ./impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.dealloc.out
==20061== Parent PID: 10074
==20061== 
==20061== 
==20061== HEAP SUMMARY:
==20061==     in use at exit: 0 bytes in 0 blocks
==20061==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20061== 
==20061== All heap blocks were freed -- no leaks are possible
==20061== 
==20061== For counts of detected and suppressed errors, rerun with: -v
==20061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test646 ===
The Valgrind memory detector as below:
==20077== Memcheck, a memory error detector
==20077== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20077== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20077== Command: ./impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.dealloc.out
==20077== Parent PID: 10074
==20077== 
==20077== 
==20077== HEAP SUMMARY:
==20077==     in use at exit: 0 bytes in 0 blocks
==20077==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20077== 
==20077== All heap blocks were freed -- no leaks are possible
==20077== 
==20077== For counts of detected and suppressed errors, rerun with: -v
==20077== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test647 ===
The Valgrind memory detector as below:
==20092== Memcheck, a memory error detector
==20092== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20092== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20092== Command: ./impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.dealloc.out
==20092== Parent PID: 10074
==20092== 
==20092== 
==20092== HEAP SUMMARY:
==20092==     in use at exit: 0 bytes in 0 blocks
==20092==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20092== 
==20092== All heap blocks were freed -- no leaks are possible
==20092== 
==20092== For counts of detected and suppressed errors, rerun with: -v
==20092== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test648 ===
The Valgrind memory detector as below:
==20107== Memcheck, a memory error detector
==20107== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20107== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20107== Command: ./impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.dealloc.out
==20107== Parent PID: 10074
==20107== 
==20107== 
==20107== HEAP SUMMARY:
==20107==     in use at exit: 0 bytes in 0 blocks
==20107==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20107== 
==20107== All heap blocks were freed -- no leaks are possible
==20107== 
==20107== For counts of detected and suppressed errors, rerun with: -v
==20107== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test649 ===
The Valgrind memory detector as below:
==20124== Memcheck, a memory error detector
==20124== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20124== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20124== Command: ./impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.dealloc.out
==20124== Parent PID: 10074
==20124== 
==20124== 
==20124== HEAP SUMMARY:
==20124==     in use at exit: 0 bytes in 0 blocks
==20124==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20124== 
==20124== All heap blocks were freed -- no leaks are possible
==20124== 
==20124== For counts of detected and suppressed errors, rerun with: -v
==20124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test65 ===
The Valgrind memory detector as below:
==20139== Memcheck, a memory error detector
==20139== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20139== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20139== Command: ./impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.dealloc.out
==20139== Parent PID: 10074
==20139== 
==20139== 
==20139== HEAP SUMMARY:
==20139==     in use at exit: 0 bytes in 0 blocks
==20139==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20139== 
==20139== All heap blocks were freed -- no leaks are possible
==20139== 
==20139== For counts of detected and suppressed errors, rerun with: -v
==20139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test650 ===
The Valgrind memory detector as below:
==20154== Memcheck, a memory error detector
==20154== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20154== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20154== Command: ./impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.dealloc.out
==20154== Parent PID: 10074
==20154== 
==20154== 
==20154== HEAP SUMMARY:
==20154==     in use at exit: 0 bytes in 0 blocks
==20154==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20154== 
==20154== All heap blocks were freed -- no leaks are possible
==20154== 
==20154== For counts of detected and suppressed errors, rerun with: -v
==20154== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test651 ===
The Valgrind memory detector as below:
==20169== Memcheck, a memory error detector
==20169== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20169== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20169== Command: ./impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.dealloc.out
==20169== Parent PID: 10074
==20169== 
==20169== 
==20169== HEAP SUMMARY:
==20169==     in use at exit: 0 bytes in 0 blocks
==20169==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20169== 
==20169== All heap blocks were freed -- no leaks are possible
==20169== 
==20169== For counts of detected and suppressed errors, rerun with: -v
==20169== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test652 ===
The Valgrind memory detector as below:
==20185== Memcheck, a memory error detector
==20185== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20185== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20185== Command: ./impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.dealloc.out
==20185== Parent PID: 10074
==20185== 
==20185== 
==20185== HEAP SUMMARY:
==20185==     in use at exit: 0 bytes in 0 blocks
==20185==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20185== 
==20185== All heap blocks were freed -- no leaks are possible
==20185== 
==20185== For counts of detected and suppressed errors, rerun with: -v
==20185== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test653 ===
The Valgrind memory detector as below:
==20200== Memcheck, a memory error detector
==20200== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20200== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20200== Command: ./impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.dealloc.out
==20200== Parent PID: 10074
==20200== 
==20200== 
==20200== HEAP SUMMARY:
==20200==     in use at exit: 0 bytes in 0 blocks
==20200==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20200== 
==20200== All heap blocks were freed -- no leaks are possible
==20200== 
==20200== For counts of detected and suppressed errors, rerun with: -v
==20200== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test654 ===
The Valgrind memory detector as below:
==20216== Memcheck, a memory error detector
==20216== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20216== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20216== Command: ./impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.dealloc.out
==20216== Parent PID: 10074
==20216== 
==20216== 
==20216== HEAP SUMMARY:
==20216==     in use at exit: 0 bytes in 0 blocks
==20216==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20216== 
==20216== All heap blocks were freed -- no leaks are possible
==20216== 
==20216== For counts of detected and suppressed errors, rerun with: -v
==20216== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test655 ===
The Valgrind memory detector as below:
==20232== Memcheck, a memory error detector
==20232== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20232== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20232== Command: ./impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.dealloc.out
==20232== Parent PID: 10074
==20232== 
==20232== 
==20232== HEAP SUMMARY:
==20232==     in use at exit: 0 bytes in 0 blocks
==20232==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20232== 
==20232== All heap blocks were freed -- no leaks are possible
==20232== 
==20232== For counts of detected and suppressed errors, rerun with: -v
==20232== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test656 ===
The Valgrind memory detector as below:
==20247== Memcheck, a memory error detector
==20247== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20247== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20247== Command: ./impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.dealloc.out
==20247== Parent PID: 10074
==20247== 
==20247== 
==20247== HEAP SUMMARY:
==20247==     in use at exit: 0 bytes in 0 blocks
==20247==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20247== 
==20247== All heap blocks were freed -- no leaks are possible
==20247== 
==20247== For counts of detected and suppressed errors, rerun with: -v
==20247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test657 ===
The Valgrind memory detector as below:
==20262== Memcheck, a memory error detector
==20262== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20262== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20262== Command: ./impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.dealloc.out
==20262== Parent PID: 10074
==20262== 
==20262== 
==20262== HEAP SUMMARY:
==20262==     in use at exit: 0 bytes in 0 blocks
==20262==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20262== 
==20262== All heap blocks were freed -- no leaks are possible
==20262== 
==20262== For counts of detected and suppressed errors, rerun with: -v
==20262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test658 ===
The Valgrind memory detector as below:
==20277== Memcheck, a memory error detector
==20277== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20277== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20277== Command: ./impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.dealloc.out
==20277== Parent PID: 10074
==20277== 
==20277== 
==20277== HEAP SUMMARY:
==20277==     in use at exit: 0 bytes in 0 blocks
==20277==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20277== 
==20277== All heap blocks were freed -- no leaks are possible
==20277== 
==20277== For counts of detected and suppressed errors, rerun with: -v
==20277== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test659 ===
The Valgrind memory detector as below:
==20294== Memcheck, a memory error detector
==20294== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20294== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20294== Command: ./impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.dealloc.out
==20294== Parent PID: 10074
==20294== 
==20294== 
==20294== HEAP SUMMARY:
==20294==     in use at exit: 0 bytes in 0 blocks
==20294==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20294== 
==20294== All heap blocks were freed -- no leaks are possible
==20294== 
==20294== For counts of detected and suppressed errors, rerun with: -v
==20294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test66 ===
The Valgrind memory detector as below:
==20309== Memcheck, a memory error detector
==20309== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20309== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20309== Command: ./impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.dealloc.out
==20309== Parent PID: 10074
==20309== 
==20309== 
==20309== HEAP SUMMARY:
==20309==     in use at exit: 0 bytes in 0 blocks
==20309==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20309== 
==20309== All heap blocks were freed -- no leaks are possible
==20309== 
==20309== For counts of detected and suppressed errors, rerun with: -v
==20309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test660 ===
The Valgrind memory detector as below:
==20324== Memcheck, a memory error detector
==20324== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20324== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20324== Command: ./impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.dealloc.out
==20324== Parent PID: 10074
==20324== 
==20324== 
==20324== HEAP SUMMARY:
==20324==     in use at exit: 0 bytes in 0 blocks
==20324==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20324== 
==20324== All heap blocks were freed -- no leaks are possible
==20324== 
==20324== For counts of detected and suppressed errors, rerun with: -v
==20324== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test661 ===
The Valgrind memory detector as below:
==20340== Memcheck, a memory error detector
==20340== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20340== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20340== Command: ./impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.dealloc.out
==20340== Parent PID: 10074
==20340== 
==20340== 
==20340== HEAP SUMMARY:
==20340==     in use at exit: 0 bytes in 0 blocks
==20340==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20340== 
==20340== All heap blocks were freed -- no leaks are possible
==20340== 
==20340== For counts of detected and suppressed errors, rerun with: -v
==20340== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test662 ===
The Valgrind memory detector as below:
==20355== Memcheck, a memory error detector
==20355== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20355== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20355== Command: ./impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.dealloc.out
==20355== Parent PID: 10074
==20355== 
==20355== 
==20355== HEAP SUMMARY:
==20355==     in use at exit: 0 bytes in 0 blocks
==20355==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20355== 
==20355== All heap blocks were freed -- no leaks are possible
==20355== 
==20355== For counts of detected and suppressed errors, rerun with: -v
==20355== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test663 ===
The Valgrind memory detector as below:
==20370== Memcheck, a memory error detector
==20370== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20370== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20370== Command: ./impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.dealloc.out
==20370== Parent PID: 10074
==20370== 
==20370== 
==20370== HEAP SUMMARY:
==20370==     in use at exit: 0 bytes in 0 blocks
==20370==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20370== 
==20370== All heap blocks were freed -- no leaks are possible
==20370== 
==20370== For counts of detected and suppressed errors, rerun with: -v
==20370== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test664 ===
The Valgrind memory detector as below:
==20385== Memcheck, a memory error detector
==20385== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20385== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20385== Command: ./impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.dealloc.out
==20385== Parent PID: 10074
==20385== 
==20385== 
==20385== HEAP SUMMARY:
==20385==     in use at exit: 0 bytes in 0 blocks
==20385==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20385== 
==20385== All heap blocks were freed -- no leaks are possible
==20385== 
==20385== For counts of detected and suppressed errors, rerun with: -v
==20385== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test665 ===
The Valgrind memory detector as below:
==20402== Memcheck, a memory error detector
==20402== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20402== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20402== Command: ./impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.dealloc.out
==20402== Parent PID: 10074
==20402== 
==20402== 
==20402== HEAP SUMMARY:
==20402==     in use at exit: 0 bytes in 0 blocks
==20402==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20402== 
==20402== All heap blocks were freed -- no leaks are possible
==20402== 
==20402== For counts of detected and suppressed errors, rerun with: -v
==20402== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test666 ===
The Valgrind memory detector as below:
==20417== Memcheck, a memory error detector
==20417== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20417== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20417== Command: ./impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.dealloc.out
==20417== Parent PID: 10074
==20417== 
==20417== 
==20417== HEAP SUMMARY:
==20417==     in use at exit: 0 bytes in 0 blocks
==20417==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20417== 
==20417== All heap blocks were freed -- no leaks are possible
==20417== 
==20417== For counts of detected and suppressed errors, rerun with: -v
==20417== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test667 ===
The Valgrind memory detector as below:
==20432== Memcheck, a memory error detector
==20432== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20432== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20432== Command: ./impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.dealloc.out
==20432== Parent PID: 10074
==20432== 
==20432== 
==20432== HEAP SUMMARY:
==20432==     in use at exit: 0 bytes in 0 blocks
==20432==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20432== 
==20432== All heap blocks were freed -- no leaks are possible
==20432== 
==20432== For counts of detected and suppressed errors, rerun with: -v
==20432== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test668 ===
The Valgrind memory detector as below:
==20447== Memcheck, a memory error detector
==20447== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20447== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20447== Command: ./impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.dealloc.out
==20447== Parent PID: 10074
==20447== 
==20447== 
==20447== HEAP SUMMARY:
==20447==     in use at exit: 0 bytes in 0 blocks
==20447==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20447== 
==20447== All heap blocks were freed -- no leaks are possible
==20447== 
==20447== For counts of detected and suppressed errors, rerun with: -v
==20447== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test669 ===
The Valgrind memory detector as below:
==20463== Memcheck, a memory error detector
==20463== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20463== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20463== Command: ./impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.dealloc.out
==20463== Parent PID: 10074
==20463== 
==20463== 
==20463== HEAP SUMMARY:
==20463==     in use at exit: 0 bytes in 0 blocks
==20463==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20463== 
==20463== All heap blocks were freed -- no leaks are possible
==20463== 
==20463== For counts of detected and suppressed errors, rerun with: -v
==20463== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test67 ===
The Valgrind memory detector as below:
==20478== Memcheck, a memory error detector
==20478== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20478== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20478== Command: ./impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.dealloc.out
==20478== Parent PID: 10074
==20478== 
==20478== 
==20478== HEAP SUMMARY:
==20478==     in use at exit: 0 bytes in 0 blocks
==20478==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20478== 
==20478== All heap blocks were freed -- no leaks are possible
==20478== 
==20478== For counts of detected and suppressed errors, rerun with: -v
==20478== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test670 ===
The Valgrind memory detector as below:
==20493== Memcheck, a memory error detector
==20493== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20493== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20493== Command: ./impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.dealloc.out
==20493== Parent PID: 10074
==20493== 
==20493== 
==20493== HEAP SUMMARY:
==20493==     in use at exit: 0 bytes in 0 blocks
==20493==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20493== 
==20493== All heap blocks were freed -- no leaks are possible
==20493== 
==20493== For counts of detected and suppressed errors, rerun with: -v
==20493== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test671 ===
The Valgrind memory detector as below:
==20509== Memcheck, a memory error detector
==20509== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20509== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20509== Command: ./impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.dealloc.out
==20509== Parent PID: 10074
==20509== 
==20509== 
==20509== HEAP SUMMARY:
==20509==     in use at exit: 0 bytes in 0 blocks
==20509==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20509== 
==20509== All heap blocks were freed -- no leaks are possible
==20509== 
==20509== For counts of detected and suppressed errors, rerun with: -v
==20509== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test672 ===
The Valgrind memory detector as below:
==20524== Memcheck, a memory error detector
==20524== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20524== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20524== Command: ./impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.dealloc.out
==20524== Parent PID: 10074
==20524== 
==20524== 
==20524== HEAP SUMMARY:
==20524==     in use at exit: 0 bytes in 0 blocks
==20524==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20524== 
==20524== All heap blocks were freed -- no leaks are possible
==20524== 
==20524== For counts of detected and suppressed errors, rerun with: -v
==20524== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test673 ===
The Valgrind memory detector as below:
==20539== Memcheck, a memory error detector
==20539== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20539== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20539== Command: ./impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.dealloc.out
==20539== Parent PID: 10074
==20539== 
==20539== 
==20539== HEAP SUMMARY:
==20539==     in use at exit: 0 bytes in 0 blocks
==20539==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20539== 
==20539== All heap blocks were freed -- no leaks are possible
==20539== 
==20539== For counts of detected and suppressed errors, rerun with: -v
==20539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test674 ===
The Valgrind memory detector as below:
==20554== Memcheck, a memory error detector
==20554== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20554== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20554== Command: ./impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.dealloc.out
==20554== Parent PID: 10074
==20554== 
==20554== 
==20554== HEAP SUMMARY:
==20554==     in use at exit: 0 bytes in 0 blocks
==20554==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20554== 
==20554== All heap blocks were freed -- no leaks are possible
==20554== 
==20554== For counts of detected and suppressed errors, rerun with: -v
==20554== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test675 ===
The Valgrind memory detector as below:
==20570== Memcheck, a memory error detector
==20570== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20570== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20570== Command: ./impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.dealloc.out
==20570== Parent PID: 10074
==20570== 
==20570== 
==20570== HEAP SUMMARY:
==20570==     in use at exit: 0 bytes in 0 blocks
==20570==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20570== 
==20570== All heap blocks were freed -- no leaks are possible
==20570== 
==20570== For counts of detected and suppressed errors, rerun with: -v
==20570== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test676 ===
The Valgrind memory detector as below:
==20585== Memcheck, a memory error detector
==20585== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20585== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20585== Command: ./impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.dealloc.out
==20585== Parent PID: 10074
==20585== 
==20585== 
==20585== HEAP SUMMARY:
==20585==     in use at exit: 0 bytes in 0 blocks
==20585==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20585== 
==20585== All heap blocks were freed -- no leaks are possible
==20585== 
==20585== For counts of detected and suppressed errors, rerun with: -v
==20585== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test677 ===
The Valgrind memory detector as below:
==20601== Memcheck, a memory error detector
==20601== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20601== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20601== Command: ./impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.dealloc.out
==20601== Parent PID: 10074
==20601== 
==20601== 
==20601== HEAP SUMMARY:
==20601==     in use at exit: 0 bytes in 0 blocks
==20601==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20601== 
==20601== All heap blocks were freed -- no leaks are possible
==20601== 
==20601== For counts of detected and suppressed errors, rerun with: -v
==20601== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test678 ===
The Valgrind memory detector as below:
==20617== Memcheck, a memory error detector
==20617== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20617== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20617== Command: ./impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.dealloc.out
==20617== Parent PID: 10074
==20617== 
==20617== 
==20617== HEAP SUMMARY:
==20617==     in use at exit: 0 bytes in 0 blocks
==20617==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20617== 
==20617== All heap blocks were freed -- no leaks are possible
==20617== 
==20617== For counts of detected and suppressed errors, rerun with: -v
==20617== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test679 ===
The Valgrind memory detector as below:
==20632== Memcheck, a memory error detector
==20632== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20632== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20632== Command: ./impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.dealloc.out
==20632== Parent PID: 10074
==20632== 
==20632== 
==20632== HEAP SUMMARY:
==20632==     in use at exit: 0 bytes in 0 blocks
==20632==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20632== 
==20632== All heap blocks were freed -- no leaks are possible
==20632== 
==20632== For counts of detected and suppressed errors, rerun with: -v
==20632== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test68 ===
The Valgrind memory detector as below:
==20647== Memcheck, a memory error detector
==20647== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20647== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20647== Command: ./impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.dealloc.out
==20647== Parent PID: 10074
==20647== 
==20647== 
==20647== HEAP SUMMARY:
==20647==     in use at exit: 0 bytes in 0 blocks
==20647==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20647== 
==20647== All heap blocks were freed -- no leaks are possible
==20647== 
==20647== For counts of detected and suppressed errors, rerun with: -v
==20647== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test680 ===
The Valgrind memory detector as below:
==20662== Memcheck, a memory error detector
==20662== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20662== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20662== Command: ./impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.dealloc.out
==20662== Parent PID: 10074
==20662== 
==20662== 
==20662== HEAP SUMMARY:
==20662==     in use at exit: 0 bytes in 0 blocks
==20662==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20662== 
==20662== All heap blocks were freed -- no leaks are possible
==20662== 
==20662== For counts of detected and suppressed errors, rerun with: -v
==20662== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test681 ===
The Valgrind memory detector as below:
==20679== Memcheck, a memory error detector
==20679== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20679== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20679== Command: ./impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.dealloc.out
==20679== Parent PID: 10074
==20679== 
==20679== 
==20679== HEAP SUMMARY:
==20679==     in use at exit: 0 bytes in 0 blocks
==20679==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20679== 
==20679== All heap blocks were freed -- no leaks are possible
==20679== 
==20679== For counts of detected and suppressed errors, rerun with: -v
==20679== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test682 ===
The Valgrind memory detector as below:
==20694== Memcheck, a memory error detector
==20694== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20694== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20694== Command: ./impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.dealloc.out
==20694== Parent PID: 10074
==20694== 
==20694== 
==20694== HEAP SUMMARY:
==20694==     in use at exit: 0 bytes in 0 blocks
==20694==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20694== 
==20694== All heap blocks were freed -- no leaks are possible
==20694== 
==20694== For counts of detected and suppressed errors, rerun with: -v
==20694== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test683 ===
The Valgrind memory detector as below:
==20710== Memcheck, a memory error detector
==20710== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20710== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20710== Command: ./impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.dealloc.out
==20710== Parent PID: 10074
==20710== 
==20710== 
==20710== HEAP SUMMARY:
==20710==     in use at exit: 0 bytes in 0 blocks
==20710==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20710== 
==20710== All heap blocks were freed -- no leaks are possible
==20710== 
==20710== For counts of detected and suppressed errors, rerun with: -v
==20710== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test684 ===
The Valgrind memory detector as below:
==20725== Memcheck, a memory error detector
==20725== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20725== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20725== Command: ./impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.dealloc.out
==20725== Parent PID: 10074
==20725== 
==20725== 
==20725== HEAP SUMMARY:
==20725==     in use at exit: 0 bytes in 0 blocks
==20725==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20725== 
==20725== All heap blocks were freed -- no leaks are possible
==20725== 
==20725== For counts of detected and suppressed errors, rerun with: -v
==20725== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test685 ===
The Valgrind memory detector as below:
==20740== Memcheck, a memory error detector
==20740== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20740== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20740== Command: ./impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.dealloc.out
==20740== Parent PID: 10074
==20740== 
==20740== 
==20740== HEAP SUMMARY:
==20740==     in use at exit: 0 bytes in 0 blocks
==20740==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20740== 
==20740== All heap blocks were freed -- no leaks are possible
==20740== 
==20740== For counts of detected and suppressed errors, rerun with: -v
==20740== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test686 ===
The Valgrind memory detector as below:
==20755== Memcheck, a memory error detector
==20755== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20755== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20755== Command: ./impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.dealloc.out
==20755== Parent PID: 10074
==20755== 
==20755== 
==20755== HEAP SUMMARY:
==20755==     in use at exit: 0 bytes in 0 blocks
==20755==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20755== 
==20755== All heap blocks were freed -- no leaks are possible
==20755== 
==20755== For counts of detected and suppressed errors, rerun with: -v
==20755== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test687 ===
The Valgrind memory detector as below:
==20771== Memcheck, a memory error detector
==20771== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20771== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20771== Command: ./impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.dealloc.out
==20771== Parent PID: 10074
==20771== 
==20771== 
==20771== HEAP SUMMARY:
==20771==     in use at exit: 0 bytes in 0 blocks
==20771==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20771== 
==20771== All heap blocks were freed -- no leaks are possible
==20771== 
==20771== For counts of detected and suppressed errors, rerun with: -v
==20771== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test688 ===
The Valgrind memory detector as below:
==20786== Memcheck, a memory error detector
==20786== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20786== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20786== Command: ./impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.dealloc.out
==20786== Parent PID: 10074
==20786== 
==20786== 
==20786== HEAP SUMMARY:
==20786==     in use at exit: 0 bytes in 0 blocks
==20786==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20786== 
==20786== All heap blocks were freed -- no leaks are possible
==20786== 
==20786== For counts of detected and suppressed errors, rerun with: -v
==20786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test689 ===
The Valgrind memory detector as below:
==20801== Memcheck, a memory error detector
==20801== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20801== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20801== Command: ./impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.dealloc.out
==20801== Parent PID: 10074
==20801== 
==20801== 
==20801== HEAP SUMMARY:
==20801==     in use at exit: 0 bytes in 0 blocks
==20801==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20801== 
==20801== All heap blocks were freed -- no leaks are possible
==20801== 
==20801== For counts of detected and suppressed errors, rerun with: -v
==20801== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test69 ===
The Valgrind memory detector as below:
==20817== Memcheck, a memory error detector
==20817== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20817== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20817== Command: ./impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.dealloc.out
==20817== Parent PID: 10074
==20817== 
==20817== 
==20817== HEAP SUMMARY:
==20817==     in use at exit: 0 bytes in 0 blocks
==20817==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20817== 
==20817== All heap blocks were freed -- no leaks are possible
==20817== 
==20817== For counts of detected and suppressed errors, rerun with: -v
==20817== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test690 ===
The Valgrind memory detector as below:
==20832== Memcheck, a memory error detector
==20832== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20832== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20832== Command: ./impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.dealloc.out
==20832== Parent PID: 10074
==20832== 
==20832== 
==20832== HEAP SUMMARY:
==20832==     in use at exit: 0 bytes in 0 blocks
==20832==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20832== 
==20832== All heap blocks were freed -- no leaks are possible
==20832== 
==20832== For counts of detected and suppressed errors, rerun with: -v
==20832== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test691 ===
The Valgrind memory detector as below:
==20847== Memcheck, a memory error detector
==20847== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20847== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20847== Command: ./impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.dealloc.out
==20847== Parent PID: 10074
==20847== 
==20847== 
==20847== HEAP SUMMARY:
==20847==     in use at exit: 0 bytes in 0 blocks
==20847==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20847== 
==20847== All heap blocks were freed -- no leaks are possible
==20847== 
==20847== For counts of detected and suppressed errors, rerun with: -v
==20847== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test692 ===
The Valgrind memory detector as below:
==20862== Memcheck, a memory error detector
==20862== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20862== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20862== Command: ./impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.dealloc.out
==20862== Parent PID: 10074
==20862== 
==20862== 
==20862== HEAP SUMMARY:
==20862==     in use at exit: 0 bytes in 0 blocks
==20862==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20862== 
==20862== All heap blocks were freed -- no leaks are possible
==20862== 
==20862== For counts of detected and suppressed errors, rerun with: -v
==20862== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test693 ===
The Valgrind memory detector as below:
==20878== Memcheck, a memory error detector
==20878== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20878== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20878== Command: ./impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.dealloc.out
==20878== Parent PID: 10074
==20878== 
==20878== 
==20878== HEAP SUMMARY:
==20878==     in use at exit: 0 bytes in 0 blocks
==20878==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20878== 
==20878== All heap blocks were freed -- no leaks are possible
==20878== 
==20878== For counts of detected and suppressed errors, rerun with: -v
==20878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test694 ===
The Valgrind memory detector as below:
==20893== Memcheck, a memory error detector
==20893== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20893== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20893== Command: ./impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.dealloc.out
==20893== Parent PID: 10074
==20893== 
==20893== 
==20893== HEAP SUMMARY:
==20893==     in use at exit: 0 bytes in 0 blocks
==20893==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20893== 
==20893== All heap blocks were freed -- no leaks are possible
==20893== 
==20893== For counts of detected and suppressed errors, rerun with: -v
==20893== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test695 ===
The Valgrind memory detector as below:
==20910== Memcheck, a memory error detector
==20910== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20910== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20910== Command: ./impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.dealloc.out
==20910== Parent PID: 10074
==20910== 
==20910== 
==20910== HEAP SUMMARY:
==20910==     in use at exit: 0 bytes in 0 blocks
==20910==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20910== 
==20910== All heap blocks were freed -- no leaks are possible
==20910== 
==20910== For counts of detected and suppressed errors, rerun with: -v
==20910== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test696 ===
The Valgrind memory detector as below:
==20925== Memcheck, a memory error detector
==20925== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20925== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20925== Command: ./impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.dealloc.out
==20925== Parent PID: 10074
==20925== 
==20925== 
==20925== HEAP SUMMARY:
==20925==     in use at exit: 0 bytes in 0 blocks
==20925==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20925== 
==20925== All heap blocks were freed -- no leaks are possible
==20925== 
==20925== For counts of detected and suppressed errors, rerun with: -v
==20925== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test697 ===
The Valgrind memory detector as below:
==20942== Memcheck, a memory error detector
==20942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20942== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20942== Command: ./impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.dealloc.out
==20942== Parent PID: 10074
==20942== 
==20942== 
==20942== HEAP SUMMARY:
==20942==     in use at exit: 0 bytes in 0 blocks
==20942==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20942== 
==20942== All heap blocks were freed -- no leaks are possible
==20942== 
==20942== For counts of detected and suppressed errors, rerun with: -v
==20942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test698 ===
The Valgrind memory detector as below:
==20957== Memcheck, a memory error detector
==20957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20957== Command: ./impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.dealloc.out
==20957== Parent PID: 10074
==20957== 
==20957== 
==20957== HEAP SUMMARY:
==20957==     in use at exit: 0 bytes in 0 blocks
==20957==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20957== 
==20957== All heap blocks were freed -- no leaks are possible
==20957== 
==20957== For counts of detected and suppressed errors, rerun with: -v
==20957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test699 ===
The Valgrind memory detector as below:
==20972== Memcheck, a memory error detector
==20972== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20972== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20972== Command: ./impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.dealloc.out
==20972== Parent PID: 10074
==20972== 
==20972== 
==20972== HEAP SUMMARY:
==20972==     in use at exit: 0 bytes in 0 blocks
==20972==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20972== 
==20972== All heap blocks were freed -- no leaks are possible
==20972== 
==20972== For counts of detected and suppressed errors, rerun with: -v
==20972== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test7 ===
The Valgrind memory detector as below:
==20988== Memcheck, a memory error detector
==20988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20988== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20988== Command: ./impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.dealloc.out
==20988== Parent PID: 10074
==20988== 
==20988== 
==20988== HEAP SUMMARY:
==20988==     in use at exit: 0 bytes in 0 blocks
==20988==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==20988== 
==20988== All heap blocks were freed -- no leaks are possible
==20988== 
==20988== For counts of detected and suppressed errors, rerun with: -v
==20988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test70 ===
The Valgrind memory detector as below:
==21003== Memcheck, a memory error detector
==21003== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21003== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21003== Command: ./impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.dealloc.out
==21003== Parent PID: 10074
==21003== 
==21003== 
==21003== HEAP SUMMARY:
==21003==     in use at exit: 0 bytes in 0 blocks
==21003==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21003== 
==21003== All heap blocks were freed -- no leaks are possible
==21003== 
==21003== For counts of detected and suppressed errors, rerun with: -v
==21003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test700 ===
The Valgrind memory detector as below:
==21018== Memcheck, a memory error detector
==21018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21018== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21018== Command: ./impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.dealloc.out
==21018== Parent PID: 10074
==21018== 
==21018== 
==21018== HEAP SUMMARY:
==21018==     in use at exit: 0 bytes in 0 blocks
==21018==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21018== 
==21018== All heap blocks were freed -- no leaks are possible
==21018== 
==21018== For counts of detected and suppressed errors, rerun with: -v
==21018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test701 ===
The Valgrind memory detector as below:
==21035== Memcheck, a memory error detector
==21035== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21035== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21035== Command: ./impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.dealloc.out
==21035== Parent PID: 10074
==21035== 
==21035== 
==21035== HEAP SUMMARY:
==21035==     in use at exit: 0 bytes in 0 blocks
==21035==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21035== 
==21035== All heap blocks were freed -- no leaks are possible
==21035== 
==21035== For counts of detected and suppressed errors, rerun with: -v
==21035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test702 ===
The Valgrind memory detector as below:
==21050== Memcheck, a memory error detector
==21050== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21050== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21050== Command: ./impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.dealloc.out
==21050== Parent PID: 10074
==21050== 
==21050== 
==21050== HEAP SUMMARY:
==21050==     in use at exit: 0 bytes in 0 blocks
==21050==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21050== 
==21050== All heap blocks were freed -- no leaks are possible
==21050== 
==21050== For counts of detected and suppressed errors, rerun with: -v
==21050== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test703 ===
The Valgrind memory detector as below:
==21065== Memcheck, a memory error detector
==21065== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21065== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21065== Command: ./impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.dealloc.out
==21065== Parent PID: 10074
==21065== 
==21065== 
==21065== HEAP SUMMARY:
==21065==     in use at exit: 0 bytes in 0 blocks
==21065==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21065== 
==21065== All heap blocks were freed -- no leaks are possible
==21065== 
==21065== For counts of detected and suppressed errors, rerun with: -v
==21065== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test704 ===
The Valgrind memory detector as below:
==21080== Memcheck, a memory error detector
==21080== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21080== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21080== Command: ./impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.dealloc.out
==21080== Parent PID: 10074
==21080== 
==21080== 
==21080== HEAP SUMMARY:
==21080==     in use at exit: 0 bytes in 0 blocks
==21080==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21080== 
==21080== All heap blocks were freed -- no leaks are possible
==21080== 
==21080== For counts of detected and suppressed errors, rerun with: -v
==21080== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test705 ===
The Valgrind memory detector as below:
==21096== Memcheck, a memory error detector
==21096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21096== Command: ./impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.dealloc.out
==21096== Parent PID: 10074
==21096== 
==21096== 
==21096== HEAP SUMMARY:
==21096==     in use at exit: 0 bytes in 0 blocks
==21096==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21096== 
==21096== All heap blocks were freed -- no leaks are possible
==21096== 
==21096== For counts of detected and suppressed errors, rerun with: -v
==21096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test706 ===
The Valgrind memory detector as below:
==21111== Memcheck, a memory error detector
==21111== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21111== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21111== Command: ./impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.dealloc.out
==21111== Parent PID: 10074
==21111== 
==21111== 
==21111== HEAP SUMMARY:
==21111==     in use at exit: 0 bytes in 0 blocks
==21111==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21111== 
==21111== All heap blocks were freed -- no leaks are possible
==21111== 
==21111== For counts of detected and suppressed errors, rerun with: -v
==21111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test707 ===
The Valgrind memory detector as below:
==21126== Memcheck, a memory error detector
==21126== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21126== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21126== Command: ./impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.dealloc.out
==21126== Parent PID: 10074
==21126== 
==21126== 
==21126== HEAP SUMMARY:
==21126==     in use at exit: 0 bytes in 0 blocks
==21126==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21126== 
==21126== All heap blocks were freed -- no leaks are possible
==21126== 
==21126== For counts of detected and suppressed errors, rerun with: -v
==21126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test708 ===
The Valgrind memory detector as below:
==21141== Memcheck, a memory error detector
==21141== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21141== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21141== Command: ./impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.dealloc.out
==21141== Parent PID: 10074
==21141== 
==21141== 
==21141== HEAP SUMMARY:
==21141==     in use at exit: 0 bytes in 0 blocks
==21141==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21141== 
==21141== All heap blocks were freed -- no leaks are possible
==21141== 
==21141== For counts of detected and suppressed errors, rerun with: -v
==21141== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test709 ===
The Valgrind memory detector as below:
==21157== Memcheck, a memory error detector
==21157== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21157== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21157== Command: ./impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.dealloc.out
==21157== Parent PID: 10074
==21157== 
==21157== 
==21157== HEAP SUMMARY:
==21157==     in use at exit: 0 bytes in 0 blocks
==21157==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21157== 
==21157== All heap blocks were freed -- no leaks are possible
==21157== 
==21157== For counts of detected and suppressed errors, rerun with: -v
==21157== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test71 ===
The Valgrind memory detector as below:
==21173== Memcheck, a memory error detector
==21173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21173== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21173== Command: ./impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.dealloc.out
==21173== Parent PID: 10074
==21173== 
==21173== 
==21173== HEAP SUMMARY:
==21173==     in use at exit: 0 bytes in 0 blocks
==21173==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21173== 
==21173== All heap blocks were freed -- no leaks are possible
==21173== 
==21173== For counts of detected and suppressed errors, rerun with: -v
==21173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test710 ===
The Valgrind memory detector as below:
==21204== Memcheck, a memory error detector
==21204== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21204== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21204== Command: ./impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.dealloc.out
==21204== Parent PID: 10074
==21204== 
==21204== 
==21204== HEAP SUMMARY:
==21204==     in use at exit: 0 bytes in 0 blocks
==21204==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21204== 
==21204== All heap blocks were freed -- no leaks are possible
==21204== 
==21204== For counts of detected and suppressed errors, rerun with: -v
==21204== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test711 ===
The Valgrind memory detector as below:
==21230== Memcheck, a memory error detector
==21230== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21230== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21230== Command: ./impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.dealloc.out
==21230== Parent PID: 10074
==21230== 
==21230== 
==21230== HEAP SUMMARY:
==21230==     in use at exit: 0 bytes in 0 blocks
==21230==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21230== 
==21230== All heap blocks were freed -- no leaks are possible
==21230== 
==21230== For counts of detected and suppressed errors, rerun with: -v
==21230== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test712 ===
The Valgrind memory detector as below:
==21247== Memcheck, a memory error detector
==21247== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21247== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21247== Command: ./impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.dealloc.out
==21247== Parent PID: 10074
==21247== 
==21247== 
==21247== HEAP SUMMARY:
==21247==     in use at exit: 0 bytes in 0 blocks
==21247==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21247== 
==21247== All heap blocks were freed -- no leaks are possible
==21247== 
==21247== For counts of detected and suppressed errors, rerun with: -v
==21247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test713 ===
The Valgrind memory detector as below:
==21265== Memcheck, a memory error detector
==21265== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21265== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21265== Command: ./impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.dealloc.out
==21265== Parent PID: 10074
==21265== 
==21265== 
==21265== HEAP SUMMARY:
==21265==     in use at exit: 0 bytes in 0 blocks
==21265==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21265== 
==21265== All heap blocks were freed -- no leaks are possible
==21265== 
==21265== For counts of detected and suppressed errors, rerun with: -v
==21265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test714 ===
The Valgrind memory detector as below:
==21280== Memcheck, a memory error detector
==21280== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21280== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21280== Command: ./impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.dealloc.out
==21280== Parent PID: 10074
==21280== 
==21280== 
==21280== HEAP SUMMARY:
==21280==     in use at exit: 0 bytes in 0 blocks
==21280==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21280== 
==21280== All heap blocks were freed -- no leaks are possible
==21280== 
==21280== For counts of detected and suppressed errors, rerun with: -v
==21280== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test715 ===
The Valgrind memory detector as below:
==21295== Memcheck, a memory error detector
==21295== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21295== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21295== Command: ./impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.dealloc.out
==21295== Parent PID: 10074
==21295== 
==21295== 
==21295== HEAP SUMMARY:
==21295==     in use at exit: 0 bytes in 0 blocks
==21295==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21295== 
==21295== All heap blocks were freed -- no leaks are possible
==21295== 
==21295== For counts of detected and suppressed errors, rerun with: -v
==21295== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test716 ===
The Valgrind memory detector as below:
==21311== Memcheck, a memory error detector
==21311== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21311== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21311== Command: ./impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.dealloc.out
==21311== Parent PID: 10074
==21311== 
==21311== 
==21311== HEAP SUMMARY:
==21311==     in use at exit: 0 bytes in 0 blocks
==21311==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21311== 
==21311== All heap blocks were freed -- no leaks are possible
==21311== 
==21311== For counts of detected and suppressed errors, rerun with: -v
==21311== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test717 ===
The Valgrind memory detector as below:
==21327== Memcheck, a memory error detector
==21327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21327== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21327== Command: ./impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.dealloc.out
==21327== Parent PID: 10074
==21327== 
==21327== 
==21327== HEAP SUMMARY:
==21327==     in use at exit: 0 bytes in 0 blocks
==21327==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21327== 
==21327== All heap blocks were freed -- no leaks are possible
==21327== 
==21327== For counts of detected and suppressed errors, rerun with: -v
==21327== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test718 ===
The Valgrind memory detector as below:
==21349== Memcheck, a memory error detector
==21349== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21349== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21349== Command: ./impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.dealloc.out
==21349== Parent PID: 10074
==21349== 
==21349== 
==21349== HEAP SUMMARY:
==21349==     in use at exit: 0 bytes in 0 blocks
==21349==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21349== 
==21349== All heap blocks were freed -- no leaks are possible
==21349== 
==21349== For counts of detected and suppressed errors, rerun with: -v
==21349== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test719 ===
The Valgrind memory detector as below:
==21421== Memcheck, a memory error detector
==21421== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21421== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21421== Command: ./impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.dealloc.out
==21421== Parent PID: 10074
==21421== 
==21421== 
==21421== HEAP SUMMARY:
==21421==     in use at exit: 0 bytes in 0 blocks
==21421==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21421== 
==21421== All heap blocks were freed -- no leaks are possible
==21421== 
==21421== For counts of detected and suppressed errors, rerun with: -v
==21421== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test72 ===
The Valgrind memory detector as below:
==21463== Memcheck, a memory error detector
==21463== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21463== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21463== Command: ./impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.dealloc.out
==21463== Parent PID: 10074
==21463== 
==21463== 
==21463== HEAP SUMMARY:
==21463==     in use at exit: 0 bytes in 0 blocks
==21463==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21463== 
==21463== All heap blocks were freed -- no leaks are possible
==21463== 
==21463== For counts of detected and suppressed errors, rerun with: -v
==21463== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test720 ===
The Valgrind memory detector as below:
==21478== Memcheck, a memory error detector
==21478== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21478== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21478== Command: ./impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.dealloc.out
==21478== Parent PID: 10074
==21478== 
==21478== 
==21478== HEAP SUMMARY:
==21478==     in use at exit: 0 bytes in 0 blocks
==21478==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21478== 
==21478== All heap blocks were freed -- no leaks are possible
==21478== 
==21478== For counts of detected and suppressed errors, rerun with: -v
==21478== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test73 ===
The Valgrind memory detector as below:
==21494== Memcheck, a memory error detector
==21494== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21494== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21494== Command: ./impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.dealloc.out
==21494== Parent PID: 10074
==21494== 
==21494== 
==21494== HEAP SUMMARY:
==21494==     in use at exit: 0 bytes in 0 blocks
==21494==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21494== 
==21494== All heap blocks were freed -- no leaks are possible
==21494== 
==21494== For counts of detected and suppressed errors, rerun with: -v
==21494== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test74 ===
The Valgrind memory detector as below:
==21509== Memcheck, a memory error detector
==21509== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21509== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21509== Command: ./impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.dealloc.out
==21509== Parent PID: 10074
==21509== 
==21509== 
==21509== HEAP SUMMARY:
==21509==     in use at exit: 0 bytes in 0 blocks
==21509==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21509== 
==21509== All heap blocks were freed -- no leaks are possible
==21509== 
==21509== For counts of detected and suppressed errors, rerun with: -v
==21509== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test75 ===
The Valgrind memory detector as below:
==21525== Memcheck, a memory error detector
==21525== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21525== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21525== Command: ./impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.dealloc.out
==21525== Parent PID: 10074
==21525== 
==21525== 
==21525== HEAP SUMMARY:
==21525==     in use at exit: 0 bytes in 0 blocks
==21525==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21525== 
==21525== All heap blocks were freed -- no leaks are possible
==21525== 
==21525== For counts of detected and suppressed errors, rerun with: -v
==21525== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test76 ===
The Valgrind memory detector as below:
==21556== Memcheck, a memory error detector
==21556== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21556== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21556== Command: ./impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.dealloc.out
==21556== Parent PID: 10074
==21556== 
==21556== 
==21556== HEAP SUMMARY:
==21556==     in use at exit: 0 bytes in 0 blocks
==21556==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21556== 
==21556== All heap blocks were freed -- no leaks are possible
==21556== 
==21556== For counts of detected and suppressed errors, rerun with: -v
==21556== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test77 ===
The Valgrind memory detector as below:
==21571== Memcheck, a memory error detector
==21571== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21571== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21571== Command: ./impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.dealloc.out
==21571== Parent PID: 10074
==21571== 
==21571== 
==21571== HEAP SUMMARY:
==21571==     in use at exit: 0 bytes in 0 blocks
==21571==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21571== 
==21571== All heap blocks were freed -- no leaks are possible
==21571== 
==21571== For counts of detected and suppressed errors, rerun with: -v
==21571== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test78 ===
The Valgrind memory detector as below:
==21586== Memcheck, a memory error detector
==21586== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21586== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21586== Command: ./impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.dealloc.out
==21586== Parent PID: 10074
==21586== 
==21586== 
==21586== HEAP SUMMARY:
==21586==     in use at exit: 0 bytes in 0 blocks
==21586==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21586== 
==21586== All heap blocks were freed -- no leaks are possible
==21586== 
==21586== For counts of detected and suppressed errors, rerun with: -v
==21586== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test79 ===
The Valgrind memory detector as below:
==21602== Memcheck, a memory error detector
==21602== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21602== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21602== Command: ./impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.dealloc.out
==21602== Parent PID: 10074
==21602== 
==21602== 
==21602== HEAP SUMMARY:
==21602==     in use at exit: 0 bytes in 0 blocks
==21602==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21602== 
==21602== All heap blocks were freed -- no leaks are possible
==21602== 
==21602== For counts of detected and suppressed errors, rerun with: -v
==21602== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test8 ===
The Valgrind memory detector as below:
==21617== Memcheck, a memory error detector
==21617== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21617== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21617== Command: ./impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.dealloc.out
==21617== Parent PID: 10074
==21617== 
==21617== 
==21617== HEAP SUMMARY:
==21617==     in use at exit: 0 bytes in 0 blocks
==21617==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21617== 
==21617== All heap blocks were freed -- no leaks are possible
==21617== 
==21617== For counts of detected and suppressed errors, rerun with: -v
==21617== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test80 ===
The Valgrind memory detector as below:
==21641== Memcheck, a memory error detector
==21641== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21641== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21641== Command: ./impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.dealloc.out
==21641== Parent PID: 10074
==21641== 
==21641== 
==21641== HEAP SUMMARY:
==21641==     in use at exit: 0 bytes in 0 blocks
==21641==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21641== 
==21641== All heap blocks were freed -- no leaks are possible
==21641== 
==21641== For counts of detected and suppressed errors, rerun with: -v
==21641== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test81 ===
The Valgrind memory detector as below:
==21657== Memcheck, a memory error detector
==21657== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21657== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21657== Command: ./impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.dealloc.out
==21657== Parent PID: 10074
==21657== 
==21657== 
==21657== HEAP SUMMARY:
==21657==     in use at exit: 0 bytes in 0 blocks
==21657==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21657== 
==21657== All heap blocks were freed -- no leaks are possible
==21657== 
==21657== For counts of detected and suppressed errors, rerun with: -v
==21657== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test82 ===
The Valgrind memory detector as below:
==21673== Memcheck, a memory error detector
==21673== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21673== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21673== Command: ./impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.dealloc.out
==21673== Parent PID: 10074
==21673== 
==21673== 
==21673== HEAP SUMMARY:
==21673==     in use at exit: 0 bytes in 0 blocks
==21673==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21673== 
==21673== All heap blocks were freed -- no leaks are possible
==21673== 
==21673== For counts of detected and suppressed errors, rerun with: -v
==21673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test83 ===
The Valgrind memory detector as below:
==21688== Memcheck, a memory error detector
==21688== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21688== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21688== Command: ./impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.dealloc.out
==21688== Parent PID: 10074
==21688== 
==21688== 
==21688== HEAP SUMMARY:
==21688==     in use at exit: 0 bytes in 0 blocks
==21688==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21688== 
==21688== All heap blocks were freed -- no leaks are possible
==21688== 
==21688== For counts of detected and suppressed errors, rerun with: -v
==21688== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test84 ===
The Valgrind memory detector as below:
==21703== Memcheck, a memory error detector
==21703== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21703== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21703== Command: ./impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.dealloc.out
==21703== Parent PID: 10074
==21703== 
==21703== 
==21703== HEAP SUMMARY:
==21703==     in use at exit: 0 bytes in 0 blocks
==21703==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21703== 
==21703== All heap blocks were freed -- no leaks are possible
==21703== 
==21703== For counts of detected and suppressed errors, rerun with: -v
==21703== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test85 ===
The Valgrind memory detector as below:
==21719== Memcheck, a memory error detector
==21719== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21719== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21719== Command: ./impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.dealloc.out
==21719== Parent PID: 10074
==21719== 
==21719== 
==21719== HEAP SUMMARY:
==21719==     in use at exit: 0 bytes in 0 blocks
==21719==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21719== 
==21719== All heap blocks were freed -- no leaks are possible
==21719== 
==21719== For counts of detected and suppressed errors, rerun with: -v
==21719== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test86 ===
The Valgrind memory detector as below:
==21734== Memcheck, a memory error detector
==21734== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21734== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21734== Command: ./impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.dealloc.out
==21734== Parent PID: 10074
==21734== 
==21734== 
==21734== HEAP SUMMARY:
==21734==     in use at exit: 0 bytes in 0 blocks
==21734==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21734== 
==21734== All heap blocks were freed -- no leaks are possible
==21734== 
==21734== For counts of detected and suppressed errors, rerun with: -v
==21734== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test87 ===
The Valgrind memory detector as below:
==21749== Memcheck, a memory error detector
==21749== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21749== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21749== Command: ./impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.dealloc.out
==21749== Parent PID: 10074
==21749== 
==21749== 
==21749== HEAP SUMMARY:
==21749==     in use at exit: 0 bytes in 0 blocks
==21749==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21749== 
==21749== All heap blocks were freed -- no leaks are possible
==21749== 
==21749== For counts of detected and suppressed errors, rerun with: -v
==21749== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test88 ===
The Valgrind memory detector as below:
==21765== Memcheck, a memory error detector
==21765== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21765== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21765== Command: ./impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.dealloc.out
==21765== Parent PID: 10074
==21765== 
==21765== 
==21765== HEAP SUMMARY:
==21765==     in use at exit: 0 bytes in 0 blocks
==21765==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21765== 
==21765== All heap blocks were freed -- no leaks are possible
==21765== 
==21765== For counts of detected and suppressed errors, rerun with: -v
==21765== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test89 ===
The Valgrind memory detector as below:
==21781== Memcheck, a memory error detector
==21781== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21781== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21781== Command: ./impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.dealloc.out
==21781== Parent PID: 10074
==21781== 
==21781== 
==21781== HEAP SUMMARY:
==21781==     in use at exit: 0 bytes in 0 blocks
==21781==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21781== 
==21781== All heap blocks were freed -- no leaks are possible
==21781== 
==21781== For counts of detected and suppressed errors, rerun with: -v
==21781== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test9 ===
The Valgrind memory detector as below:
==21796== Memcheck, a memory error detector
==21796== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21796== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21796== Command: ./impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.dealloc.out
==21796== Parent PID: 10074
==21796== 
==21796== 
==21796== HEAP SUMMARY:
==21796==     in use at exit: 0 bytes in 0 blocks
==21796==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21796== 
==21796== All heap blocks were freed -- no leaks are possible
==21796== 
==21796== For counts of detected and suppressed errors, rerun with: -v
==21796== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test90 ===
The Valgrind memory detector as below:
==21811== Memcheck, a memory error detector
==21811== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21811== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21811== Command: ./impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.dealloc.out
==21811== Parent PID: 10074
==21811== 
==21811== 
==21811== HEAP SUMMARY:
==21811==     in use at exit: 0 bytes in 0 blocks
==21811==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21811== 
==21811== All heap blocks were freed -- no leaks are possible
==21811== 
==21811== For counts of detected and suppressed errors, rerun with: -v
==21811== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test91 ===
The Valgrind memory detector as below:
==21827== Memcheck, a memory error detector
==21827== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21827== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21827== Command: ./impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.dealloc.out
==21827== Parent PID: 10074
==21827== 
==21827== 
==21827== HEAP SUMMARY:
==21827==     in use at exit: 0 bytes in 0 blocks
==21827==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21827== 
==21827== All heap blocks were freed -- no leaks are possible
==21827== 
==21827== For counts of detected and suppressed errors, rerun with: -v
==21827== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test92 ===
The Valgrind memory detector as below:
==21843== Memcheck, a memory error detector
==21843== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21843== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21843== Command: ./impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.dealloc.out
==21843== Parent PID: 10074
==21843== 
==21843== 
==21843== HEAP SUMMARY:
==21843==     in use at exit: 0 bytes in 0 blocks
==21843==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21843== 
==21843== All heap blocks were freed -- no leaks are possible
==21843== 
==21843== For counts of detected and suppressed errors, rerun with: -v
==21843== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test93 ===
The Valgrind memory detector as below:
==21858== Memcheck, a memory error detector
==21858== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21858== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21858== Command: ./impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.dealloc.out
==21858== Parent PID: 10074
==21858== 
==21858== 
==21858== HEAP SUMMARY:
==21858==     in use at exit: 0 bytes in 0 blocks
==21858==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21858== 
==21858== All heap blocks were freed -- no leaks are possible
==21858== 
==21858== For counts of detected and suppressed errors, rerun with: -v
==21858== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test94 ===
The Valgrind memory detector as below:
==21873== Memcheck, a memory error detector
==21873== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21873== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21873== Command: ./impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.dealloc.out
==21873== Parent PID: 10074
==21873== 
==21873== 
==21873== HEAP SUMMARY:
==21873==     in use at exit: 0 bytes in 0 blocks
==21873==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21873== 
==21873== All heap blocks were freed -- no leaks are possible
==21873== 
==21873== For counts of detected and suppressed errors, rerun with: -v
==21873== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test95 ===
The Valgrind memory detector as below:
==21890== Memcheck, a memory error detector
==21890== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21890== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21890== Command: ./impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.dealloc.out
==21890== Parent PID: 10074
==21890== 
==21890== 
==21890== HEAP SUMMARY:
==21890==     in use at exit: 0 bytes in 0 blocks
==21890==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21890== 
==21890== All heap blocks were freed -- no leaks are possible
==21890== 
==21890== For counts of detected and suppressed errors, rerun with: -v
==21890== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test96 ===
The Valgrind memory detector as below:
==21906== Memcheck, a memory error detector
==21906== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21906== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21906== Command: ./impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.dealloc.out
==21906== Parent PID: 10074
==21906== 
==21906== 
==21906== HEAP SUMMARY:
==21906==     in use at exit: 0 bytes in 0 blocks
==21906==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21906== 
==21906== All heap blocks were freed -- no leaks are possible
==21906== 
==21906== For counts of detected and suppressed errors, rerun with: -v
==21906== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test97 ===
The Valgrind memory detector as below:
==21922== Memcheck, a memory error detector
==21922== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21922== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21922== Command: ./impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.dealloc.out
==21922== Parent PID: 10074
==21922== 
==21922== 
==21922== HEAP SUMMARY:
==21922==     in use at exit: 0 bytes in 0 blocks
==21922==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21922== 
==21922== All heap blocks were freed -- no leaks are possible
==21922== 
==21922== For counts of detected and suppressed errors, rerun with: -v
==21922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test98 ===
The Valgrind memory detector as below:
==21937== Memcheck, a memory error detector
==21937== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21937== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21937== Command: ./impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.dealloc.out
==21937== Parent PID: 10074
==21937== 
==21937== 
==21937== HEAP SUMMARY:
==21937==     in use at exit: 0 bytes in 0 blocks
==21937==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21937== 
==21937== All heap blocks were freed -- no leaks are possible
==21937== 
==21937== For counts of detected and suppressed errors, rerun with: -v
==21937== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds


=== Test report for dealloc assignment_3Vars_test99 ===
The Valgrind memory detector as below:
==21953== Memcheck, a memory error detector
==21953== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21953== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21953== Command: ./impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.dealloc.out
==21953== Parent PID: 10074
==21953== 
==21953== 
==21953== HEAP SUMMARY:
==21953==     in use at exit: 0 bytes in 0 blocks
==21953==   total heap usage: 13 allocs, 13 frees, 8,672 bytes allocated
==21953== 
==21953== All heap blocks were freed -- no leaks are possible
==21953== 
==21953== For counts of detected and suppressed errors, rerun with: -v
==21953== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _ADD_DEALLOC macro on  ( a and _6 ) (LINE:28 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:34 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _ADD_DEALLOC macro on  ( b and _9 ) (LINE:36 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:42 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _ADD_DEALLOC macro on  ( c and _12 ) (LINE:44 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and b ) (LINE:46 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and b ) (LINE:48 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( c and a ) (LINE:52 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( b and c ) (LINE:54 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _ADD_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_2Vars_test1 ===
The Valgrind memory detector as below:
==21972== Memcheck, a memory error detector
==21972== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21972== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21972== Command: ./impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.nocopy_dealloc.out
==21972== Parent PID: 10074
==21972== 
==21972== 
==21972== HEAP SUMMARY:
==21972==     in use at exit: 0 bytes in 0 blocks
==21972==   total heap usage: 3 allocs, 3 frees, 8,272 bytes allocated
==21972== 
==21972== All heap blocks were freed -- no leaks are possible
==21972== 
==21972== For counts of detected and suppressed errors, rerun with: -v
==21972== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _5 ) (LINE:20 FILE: impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _5 ) (LINE:23 FILE: impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _8 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _8 ) (LINE:32 FILE: impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_2Vars_test2 ===
The Valgrind memory detector as below:
==21987== Memcheck, a memory error detector
==21987== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21987== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21987== Command: ./impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.nocopy_dealloc.out
==21987== Parent PID: 10074
==21987== 
==21987== 
==21987== HEAP SUMMARY:
==21987==     in use at exit: 0 bytes in 0 blocks
==21987==   total heap usage: 3 allocs, 3 frees, 8,272 bytes allocated
==21987== 
==21987== All heap blocks were freed -- no leaks are possible
==21987== 
==21987== For counts of detected and suppressed errors, rerun with: -v
==21987== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _5 ) (LINE:20 FILE: impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _5 ) (LINE:23 FILE: impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _8 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _8 ) (LINE:32 FILE: impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test1 ===
The Valgrind memory detector as below:
==22002== Memcheck, a memory error detector
==22002== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22002== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22002== Command: ./impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.nocopy_dealloc.out
==22002== Parent PID: 10074
==22002== 
==22002== 
==22002== HEAP SUMMARY:
==22002==     in use at exit: 40 bytes in 1 blocks
==22002==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22002== 
==22002== LEAK SUMMARY:
==22002==    definitely lost: 0 bytes in 0 blocks
==22002==    indirectly lost: 0 bytes in 0 blocks
==22002==      possibly lost: 0 bytes in 0 blocks
==22002==    still reachable: 40 bytes in 1 blocks
==22002==         suppressed: 0 bytes in 0 blocks
==22002== Reachable blocks (those to which a pointer was found) are not shown.
==22002== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22002== 
==22002== For counts of detected and suppressed errors, rerun with: -v
==22002== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test10 ===
The Valgrind memory detector as below:
==22018== Memcheck, a memory error detector
==22018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22018== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22018== Command: ./impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.nocopy_dealloc.out
==22018== Parent PID: 10074
==22018== 
==22018== 
==22018== HEAP SUMMARY:
==22018==     in use at exit: 40 bytes in 1 blocks
==22018==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22018== 
==22018== LEAK SUMMARY:
==22018==    definitely lost: 0 bytes in 0 blocks
==22018==    indirectly lost: 0 bytes in 0 blocks
==22018==      possibly lost: 0 bytes in 0 blocks
==22018==    still reachable: 40 bytes in 1 blocks
==22018==         suppressed: 0 bytes in 0 blocks
==22018== Reachable blocks (those to which a pointer was found) are not shown.
==22018== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22018== 
==22018== For counts of detected and suppressed errors, rerun with: -v
==22018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test100 ===
The Valgrind memory detector as below:
==22033== Memcheck, a memory error detector
==22033== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22033== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22033== Command: ./impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.nocopy_dealloc.out
==22033== Parent PID: 10074
==22033== 
==22033== 
==22033== HEAP SUMMARY:
==22033==     in use at exit: 40 bytes in 1 blocks
==22033==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22033== 
==22033== LEAK SUMMARY:
==22033==    definitely lost: 0 bytes in 0 blocks
==22033==    indirectly lost: 0 bytes in 0 blocks
==22033==      possibly lost: 0 bytes in 0 blocks
==22033==    still reachable: 40 bytes in 1 blocks
==22033==         suppressed: 0 bytes in 0 blocks
==22033== Reachable blocks (those to which a pointer was found) are not shown.
==22033== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22033== 
==22033== For counts of detected and suppressed errors, rerun with: -v
==22033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test101 ===
The Valgrind memory detector as below:
==22049== Memcheck, a memory error detector
==22049== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22049== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22049== Command: ./impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.nocopy_dealloc.out
==22049== Parent PID: 10074
==22049== 
==22049== 
==22049== HEAP SUMMARY:
==22049==     in use at exit: 40 bytes in 1 blocks
==22049==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22049== 
==22049== LEAK SUMMARY:
==22049==    definitely lost: 0 bytes in 0 blocks
==22049==    indirectly lost: 0 bytes in 0 blocks
==22049==      possibly lost: 0 bytes in 0 blocks
==22049==    still reachable: 40 bytes in 1 blocks
==22049==         suppressed: 0 bytes in 0 blocks
==22049== Reachable blocks (those to which a pointer was found) are not shown.
==22049== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22049== 
==22049== For counts of detected and suppressed errors, rerun with: -v
==22049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test102 ===
The Valgrind memory detector as below:
==22064== Memcheck, a memory error detector
==22064== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22064== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22064== Command: ./impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.nocopy_dealloc.out
==22064== Parent PID: 10074
==22064== 
==22064== 
==22064== HEAP SUMMARY:
==22064==     in use at exit: 40 bytes in 1 blocks
==22064==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22064== 
==22064== LEAK SUMMARY:
==22064==    definitely lost: 0 bytes in 0 blocks
==22064==    indirectly lost: 0 bytes in 0 blocks
==22064==      possibly lost: 0 bytes in 0 blocks
==22064==    still reachable: 40 bytes in 1 blocks
==22064==         suppressed: 0 bytes in 0 blocks
==22064== Reachable blocks (those to which a pointer was found) are not shown.
==22064== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22064== 
==22064== For counts of detected and suppressed errors, rerun with: -v
==22064== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test103 ===
The Valgrind memory detector as below:
==22080== Memcheck, a memory error detector
==22080== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22080== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22080== Command: ./impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.nocopy_dealloc.out
==22080== Parent PID: 10074
==22080== 
==22080== 
==22080== HEAP SUMMARY:
==22080==     in use at exit: 0 bytes in 0 blocks
==22080==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22080== 
==22080== All heap blocks were freed -- no leaks are possible
==22080== 
==22080== For counts of detected and suppressed errors, rerun with: -v
==22080== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test104 ===
The Valgrind memory detector as below:
==22095== Memcheck, a memory error detector
==22095== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22095== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22095== Command: ./impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.nocopy_dealloc.out
==22095== Parent PID: 10074
==22095== 
==22095== 
==22095== HEAP SUMMARY:
==22095==     in use at exit: 0 bytes in 0 blocks
==22095==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22095== 
==22095== All heap blocks were freed -- no leaks are possible
==22095== 
==22095== For counts of detected and suppressed errors, rerun with: -v
==22095== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test105 ===
The Valgrind memory detector as below:
==22110== Memcheck, a memory error detector
==22110== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22110== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22110== Command: ./impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.nocopy_dealloc.out
==22110== Parent PID: 10074
==22110== 
==22110== 
==22110== HEAP SUMMARY:
==22110==     in use at exit: 0 bytes in 0 blocks
==22110==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22110== 
==22110== All heap blocks were freed -- no leaks are possible
==22110== 
==22110== For counts of detected and suppressed errors, rerun with: -v
==22110== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test106 ===
The Valgrind memory detector as below:
==22126== Memcheck, a memory error detector
==22126== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22126== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22126== Command: ./impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.nocopy_dealloc.out
==22126== Parent PID: 10074
==22126== 
==22126== 
==22126== HEAP SUMMARY:
==22126==     in use at exit: 0 bytes in 0 blocks
==22126==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22126== 
==22126== All heap blocks were freed -- no leaks are possible
==22126== 
==22126== For counts of detected and suppressed errors, rerun with: -v
==22126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test107 ===
The Valgrind memory detector as below:
==22141== Memcheck, a memory error detector
==22141== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22141== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22141== Command: ./impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.nocopy_dealloc.out
==22141== Parent PID: 10074
==22141== 
==22141== 
==22141== HEAP SUMMARY:
==22141==     in use at exit: 40 bytes in 1 blocks
==22141==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22141== 
==22141== LEAK SUMMARY:
==22141==    definitely lost: 0 bytes in 0 blocks
==22141==    indirectly lost: 0 bytes in 0 blocks
==22141==      possibly lost: 0 bytes in 0 blocks
==22141==    still reachable: 40 bytes in 1 blocks
==22141==         suppressed: 0 bytes in 0 blocks
==22141== Reachable blocks (those to which a pointer was found) are not shown.
==22141== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22141== 
==22141== For counts of detected and suppressed errors, rerun with: -v
==22141== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test108 ===
The Valgrind memory detector as below:
==22156== Memcheck, a memory error detector
==22156== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22156== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22156== Command: ./impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.nocopy_dealloc.out
==22156== Parent PID: 10074
==22156== 
==22156== 
==22156== HEAP SUMMARY:
==22156==     in use at exit: 40 bytes in 1 blocks
==22156==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22156== 
==22156== LEAK SUMMARY:
==22156==    definitely lost: 0 bytes in 0 blocks
==22156==    indirectly lost: 0 bytes in 0 blocks
==22156==      possibly lost: 0 bytes in 0 blocks
==22156==    still reachable: 40 bytes in 1 blocks
==22156==         suppressed: 0 bytes in 0 blocks
==22156== Reachable blocks (those to which a pointer was found) are not shown.
==22156== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22156== 
==22156== For counts of detected and suppressed errors, rerun with: -v
==22156== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test109 ===
The Valgrind memory detector as below:
==22171== Memcheck, a memory error detector
==22171== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22171== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22171== Command: ./impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.nocopy_dealloc.out
==22171== Parent PID: 10074
==22171== 
==22171== 
==22171== HEAP SUMMARY:
==22171==     in use at exit: 40 bytes in 1 blocks
==22171==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22171== 
==22171== LEAK SUMMARY:
==22171==    definitely lost: 0 bytes in 0 blocks
==22171==    indirectly lost: 0 bytes in 0 blocks
==22171==      possibly lost: 0 bytes in 0 blocks
==22171==    still reachable: 40 bytes in 1 blocks
==22171==         suppressed: 0 bytes in 0 blocks
==22171== Reachable blocks (those to which a pointer was found) are not shown.
==22171== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22171== 
==22171== For counts of detected and suppressed errors, rerun with: -v
==22171== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test11 ===
The Valgrind memory detector as below:
==22187== Memcheck, a memory error detector
==22187== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22187== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22187== Command: ./impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.nocopy_dealloc.out
==22187== Parent PID: 10074
==22187== 
==22187== 
==22187== HEAP SUMMARY:
==22187==     in use at exit: 0 bytes in 0 blocks
==22187==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22187== 
==22187== All heap blocks were freed -- no leaks are possible
==22187== 
==22187== For counts of detected and suppressed errors, rerun with: -v
==22187== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test110 ===
The Valgrind memory detector as below:
==22202== Memcheck, a memory error detector
==22202== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22202== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22202== Command: ./impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.nocopy_dealloc.out
==22202== Parent PID: 10074
==22202== 
==22202== 
==22202== HEAP SUMMARY:
==22202==     in use at exit: 40 bytes in 1 blocks
==22202==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22202== 
==22202== LEAK SUMMARY:
==22202==    definitely lost: 0 bytes in 0 blocks
==22202==    indirectly lost: 0 bytes in 0 blocks
==22202==      possibly lost: 0 bytes in 0 blocks
==22202==    still reachable: 40 bytes in 1 blocks
==22202==         suppressed: 0 bytes in 0 blocks
==22202== Reachable blocks (those to which a pointer was found) are not shown.
==22202== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22202== 
==22202== For counts of detected and suppressed errors, rerun with: -v
==22202== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test111 ===
The Valgrind memory detector as below:
==22217== Memcheck, a memory error detector
==22217== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22217== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22217== Command: ./impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.nocopy_dealloc.out
==22217== Parent PID: 10074
==22217== 
==22217== 
==22217== HEAP SUMMARY:
==22217==     in use at exit: 0 bytes in 0 blocks
==22217==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22217== 
==22217== All heap blocks were freed -- no leaks are possible
==22217== 
==22217== For counts of detected and suppressed errors, rerun with: -v
==22217== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test112 ===
The Valgrind memory detector as below:
==22232== Memcheck, a memory error detector
==22232== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22232== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22232== Command: ./impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.nocopy_dealloc.out
==22232== Parent PID: 10074
==22232== 
==22232== 
==22232== HEAP SUMMARY:
==22232==     in use at exit: 0 bytes in 0 blocks
==22232==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22232== 
==22232== All heap blocks were freed -- no leaks are possible
==22232== 
==22232== For counts of detected and suppressed errors, rerun with: -v
==22232== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test113 ===
The Valgrind memory detector as below:
==22249== Memcheck, a memory error detector
==22249== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22249== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22249== Command: ./impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.nocopy_dealloc.out
==22249== Parent PID: 10074
==22249== 
==22249== 
==22249== HEAP SUMMARY:
==22249==     in use at exit: 40 bytes in 1 blocks
==22249==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22249== 
==22249== LEAK SUMMARY:
==22249==    definitely lost: 0 bytes in 0 blocks
==22249==    indirectly lost: 0 bytes in 0 blocks
==22249==      possibly lost: 0 bytes in 0 blocks
==22249==    still reachable: 40 bytes in 1 blocks
==22249==         suppressed: 0 bytes in 0 blocks
==22249== Reachable blocks (those to which a pointer was found) are not shown.
==22249== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22249== 
==22249== For counts of detected and suppressed errors, rerun with: -v
==22249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test114 ===
The Valgrind memory detector as below:
==22264== Memcheck, a memory error detector
==22264== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22264== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22264== Command: ./impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.nocopy_dealloc.out
==22264== Parent PID: 10074
==22264== 
==22264== 
==22264== HEAP SUMMARY:
==22264==     in use at exit: 0 bytes in 0 blocks
==22264==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22264== 
==22264== All heap blocks were freed -- no leaks are possible
==22264== 
==22264== For counts of detected and suppressed errors, rerun with: -v
==22264== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test115 ===
The Valgrind memory detector as below:
==22279== Memcheck, a memory error detector
==22279== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22279== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22279== Command: ./impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.nocopy_dealloc.out
==22279== Parent PID: 10074
==22279== 
==22279== 
==22279== HEAP SUMMARY:
==22279==     in use at exit: 40 bytes in 1 blocks
==22279==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22279== 
==22279== LEAK SUMMARY:
==22279==    definitely lost: 0 bytes in 0 blocks
==22279==    indirectly lost: 0 bytes in 0 blocks
==22279==      possibly lost: 0 bytes in 0 blocks
==22279==    still reachable: 40 bytes in 1 blocks
==22279==         suppressed: 0 bytes in 0 blocks
==22279== Reachable blocks (those to which a pointer was found) are not shown.
==22279== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22279== 
==22279== For counts of detected and suppressed errors, rerun with: -v
==22279== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test116 ===
The Valgrind memory detector as below:
==22294== Memcheck, a memory error detector
==22294== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22294== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22294== Command: ./impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.nocopy_dealloc.out
==22294== Parent PID: 10074
==22294== 
==22294== 
==22294== HEAP SUMMARY:
==22294==     in use at exit: 40 bytes in 1 blocks
==22294==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22294== 
==22294== LEAK SUMMARY:
==22294==    definitely lost: 0 bytes in 0 blocks
==22294==    indirectly lost: 0 bytes in 0 blocks
==22294==      possibly lost: 0 bytes in 0 blocks
==22294==    still reachable: 40 bytes in 1 blocks
==22294==         suppressed: 0 bytes in 0 blocks
==22294== Reachable blocks (those to which a pointer was found) are not shown.
==22294== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22294== 
==22294== For counts of detected and suppressed errors, rerun with: -v
==22294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test117 ===
The Valgrind memory detector as below:
==22344== Memcheck, a memory error detector
==22344== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22344== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22344== Command: ./impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.nocopy_dealloc.out
==22344== Parent PID: 10074
==22344== 
==22344== 
==22344== HEAP SUMMARY:
==22344==     in use at exit: 40 bytes in 1 blocks
==22344==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22344== 
==22344== LEAK SUMMARY:
==22344==    definitely lost: 0 bytes in 0 blocks
==22344==    indirectly lost: 0 bytes in 0 blocks
==22344==      possibly lost: 0 bytes in 0 blocks
==22344==    still reachable: 40 bytes in 1 blocks
==22344==         suppressed: 0 bytes in 0 blocks
==22344== Reachable blocks (those to which a pointer was found) are not shown.
==22344== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22344== 
==22344== For counts of detected and suppressed errors, rerun with: -v
==22344== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test118 ===
The Valgrind memory detector as below:
==22363== Memcheck, a memory error detector
==22363== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22363== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22363== Command: ./impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.nocopy_dealloc.out
==22363== Parent PID: 10074
==22363== 
==22363== 
==22363== HEAP SUMMARY:
==22363==     in use at exit: 40 bytes in 1 blocks
==22363==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22363== 
==22363== LEAK SUMMARY:
==22363==    definitely lost: 0 bytes in 0 blocks
==22363==    indirectly lost: 0 bytes in 0 blocks
==22363==      possibly lost: 0 bytes in 0 blocks
==22363==    still reachable: 40 bytes in 1 blocks
==22363==         suppressed: 0 bytes in 0 blocks
==22363== Reachable blocks (those to which a pointer was found) are not shown.
==22363== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22363== 
==22363== For counts of detected and suppressed errors, rerun with: -v
==22363== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test119 ===
The Valgrind memory detector as below:
==22383== Memcheck, a memory error detector
==22383== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22383== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22383== Command: ./impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.nocopy_dealloc.out
==22383== Parent PID: 10074
==22383== 
==22383== 
==22383== HEAP SUMMARY:
==22383==     in use at exit: 40 bytes in 1 blocks
==22383==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22383== 
==22383== LEAK SUMMARY:
==22383==    definitely lost: 0 bytes in 0 blocks
==22383==    indirectly lost: 0 bytes in 0 blocks
==22383==      possibly lost: 0 bytes in 0 blocks
==22383==    still reachable: 40 bytes in 1 blocks
==22383==         suppressed: 0 bytes in 0 blocks
==22383== Reachable blocks (those to which a pointer was found) are not shown.
==22383== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22383== 
==22383== For counts of detected and suppressed errors, rerun with: -v
==22383== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test12 ===
The Valgrind memory detector as below:
==22398== Memcheck, a memory error detector
==22398== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22398== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22398== Command: ./impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.nocopy_dealloc.out
==22398== Parent PID: 10074
==22398== 
==22398== 
==22398== HEAP SUMMARY:
==22398==     in use at exit: 0 bytes in 0 blocks
==22398==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22398== 
==22398== All heap blocks were freed -- no leaks are possible
==22398== 
==22398== For counts of detected and suppressed errors, rerun with: -v
==22398== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test120 ===
The Valgrind memory detector as below:
==22414== Memcheck, a memory error detector
==22414== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22414== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22414== Command: ./impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.nocopy_dealloc.out
==22414== Parent PID: 10074
==22414== 
==22414== 
==22414== HEAP SUMMARY:
==22414==     in use at exit: 40 bytes in 1 blocks
==22414==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22414== 
==22414== LEAK SUMMARY:
==22414==    definitely lost: 0 bytes in 0 blocks
==22414==    indirectly lost: 0 bytes in 0 blocks
==22414==      possibly lost: 0 bytes in 0 blocks
==22414==    still reachable: 40 bytes in 1 blocks
==22414==         suppressed: 0 bytes in 0 blocks
==22414== Reachable blocks (those to which a pointer was found) are not shown.
==22414== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22414== 
==22414== For counts of detected and suppressed errors, rerun with: -v
==22414== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test121 ===
The Valgrind memory detector as below:
==22429== Memcheck, a memory error detector
==22429== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22429== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22429== Command: ./impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.nocopy_dealloc.out
==22429== Parent PID: 10074
==22429== 
==22429== 
==22429== HEAP SUMMARY:
==22429==     in use at exit: 0 bytes in 0 blocks
==22429==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22429== 
==22429== All heap blocks were freed -- no leaks are possible
==22429== 
==22429== For counts of detected and suppressed errors, rerun with: -v
==22429== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test122 ===
The Valgrind memory detector as below:
==22444== Memcheck, a memory error detector
==22444== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22444== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22444== Command: ./impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.nocopy_dealloc.out
==22444== Parent PID: 10074
==22444== 
==22444== 
==22444== HEAP SUMMARY:
==22444==     in use at exit: 0 bytes in 0 blocks
==22444==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22444== 
==22444== All heap blocks were freed -- no leaks are possible
==22444== 
==22444== For counts of detected and suppressed errors, rerun with: -v
==22444== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test123 ===
The Valgrind memory detector as below:
==22460== Memcheck, a memory error detector
==22460== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22460== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22460== Command: ./impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.nocopy_dealloc.out
==22460== Parent PID: 10074
==22460== 
==22460== 
==22460== HEAP SUMMARY:
==22460==     in use at exit: 40 bytes in 1 blocks
==22460==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22460== 
==22460== LEAK SUMMARY:
==22460==    definitely lost: 0 bytes in 0 blocks
==22460==    indirectly lost: 0 bytes in 0 blocks
==22460==      possibly lost: 0 bytes in 0 blocks
==22460==    still reachable: 40 bytes in 1 blocks
==22460==         suppressed: 0 bytes in 0 blocks
==22460== Reachable blocks (those to which a pointer was found) are not shown.
==22460== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22460== 
==22460== For counts of detected and suppressed errors, rerun with: -v
==22460== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test124 ===
The Valgrind memory detector as below:
==22475== Memcheck, a memory error detector
==22475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22475== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22475== Command: ./impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.nocopy_dealloc.out
==22475== Parent PID: 10074
==22475== 
==22475== 
==22475== HEAP SUMMARY:
==22475==     in use at exit: 0 bytes in 0 blocks
==22475==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22475== 
==22475== All heap blocks were freed -- no leaks are possible
==22475== 
==22475== For counts of detected and suppressed errors, rerun with: -v
==22475== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test125 ===
The Valgrind memory detector as below:
==22490== Memcheck, a memory error detector
==22490== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22490== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22490== Command: ./impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.nocopy_dealloc.out
==22490== Parent PID: 10074
==22490== 
==22490== 
==22490== HEAP SUMMARY:
==22490==     in use at exit: 40 bytes in 1 blocks
==22490==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22490== 
==22490== LEAK SUMMARY:
==22490==    definitely lost: 0 bytes in 0 blocks
==22490==    indirectly lost: 0 bytes in 0 blocks
==22490==      possibly lost: 0 bytes in 0 blocks
==22490==    still reachable: 40 bytes in 1 blocks
==22490==         suppressed: 0 bytes in 0 blocks
==22490== Reachable blocks (those to which a pointer was found) are not shown.
==22490== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22490== 
==22490== For counts of detected and suppressed errors, rerun with: -v
==22490== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test126 ===
The Valgrind memory detector as below:
==22505== Memcheck, a memory error detector
==22505== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22505== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22505== Command: ./impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.nocopy_dealloc.out
==22505== Parent PID: 10074
==22505== 
==22505== 
==22505== HEAP SUMMARY:
==22505==     in use at exit: 0 bytes in 0 blocks
==22505==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22505== 
==22505== All heap blocks were freed -- no leaks are possible
==22505== 
==22505== For counts of detected and suppressed errors, rerun with: -v
==22505== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test127 ===
The Valgrind memory detector as below:
==22521== Memcheck, a memory error detector
==22521== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22521== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22521== Command: ./impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.nocopy_dealloc.out
==22521== Parent PID: 10074
==22521== 
==22521== 
==22521== HEAP SUMMARY:
==22521==     in use at exit: 0 bytes in 0 blocks
==22521==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22521== 
==22521== All heap blocks were freed -- no leaks are possible
==22521== 
==22521== For counts of detected and suppressed errors, rerun with: -v
==22521== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test128 ===
The Valgrind memory detector as below:
==22536== Memcheck, a memory error detector
==22536== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22536== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22536== Command: ./impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.nocopy_dealloc.out
==22536== Parent PID: 10074
==22536== 
==22536== 
==22536== HEAP SUMMARY:
==22536==     in use at exit: 40 bytes in 1 blocks
==22536==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22536== 
==22536== LEAK SUMMARY:
==22536==    definitely lost: 0 bytes in 0 blocks
==22536==    indirectly lost: 0 bytes in 0 blocks
==22536==      possibly lost: 0 bytes in 0 blocks
==22536==    still reachable: 40 bytes in 1 blocks
==22536==         suppressed: 0 bytes in 0 blocks
==22536== Reachable blocks (those to which a pointer was found) are not shown.
==22536== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22536== 
==22536== For counts of detected and suppressed errors, rerun with: -v
==22536== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test129 ===
The Valgrind memory detector as below:
==22552== Memcheck, a memory error detector
==22552== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22552== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22552== Command: ./impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.nocopy_dealloc.out
==22552== Parent PID: 10074
==22552== 
==22552== 
==22552== HEAP SUMMARY:
==22552==     in use at exit: 40 bytes in 1 blocks
==22552==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22552== 
==22552== LEAK SUMMARY:
==22552==    definitely lost: 0 bytes in 0 blocks
==22552==    indirectly lost: 0 bytes in 0 blocks
==22552==      possibly lost: 0 bytes in 0 blocks
==22552==    still reachable: 40 bytes in 1 blocks
==22552==         suppressed: 0 bytes in 0 blocks
==22552== Reachable blocks (those to which a pointer was found) are not shown.
==22552== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22552== 
==22552== For counts of detected and suppressed errors, rerun with: -v
==22552== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test13 ===
The Valgrind memory detector as below:
==22569== Memcheck, a memory error detector
==22569== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22569== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22569== Command: ./impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.nocopy_dealloc.out
==22569== Parent PID: 10074
==22569== 
==22569== 
==22569== HEAP SUMMARY:
==22569==     in use at exit: 40 bytes in 1 blocks
==22569==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22569== 
==22569== LEAK SUMMARY:
==22569==    definitely lost: 0 bytes in 0 blocks
==22569==    indirectly lost: 0 bytes in 0 blocks
==22569==      possibly lost: 0 bytes in 0 blocks
==22569==    still reachable: 40 bytes in 1 blocks
==22569==         suppressed: 0 bytes in 0 blocks
==22569== Reachable blocks (those to which a pointer was found) are not shown.
==22569== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22569== 
==22569== For counts of detected and suppressed errors, rerun with: -v
==22569== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test130 ===
The Valgrind memory detector as below:
==22584== Memcheck, a memory error detector
==22584== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22584== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22584== Command: ./impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.nocopy_dealloc.out
==22584== Parent PID: 10074
==22584== 
==22584== 
==22584== HEAP SUMMARY:
==22584==     in use at exit: 0 bytes in 0 blocks
==22584==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22584== 
==22584== All heap blocks were freed -- no leaks are possible
==22584== 
==22584== For counts of detected and suppressed errors, rerun with: -v
==22584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test131 ===
The Valgrind memory detector as below:
==22599== Memcheck, a memory error detector
==22599== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22599== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22599== Command: ./impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.nocopy_dealloc.out
==22599== Parent PID: 10074
==22599== 
==22599== 
==22599== HEAP SUMMARY:
==22599==     in use at exit: 0 bytes in 0 blocks
==22599==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22599== 
==22599== All heap blocks were freed -- no leaks are possible
==22599== 
==22599== For counts of detected and suppressed errors, rerun with: -v
==22599== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test132 ===
The Valgrind memory detector as below:
==22614== Memcheck, a memory error detector
==22614== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22614== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22614== Command: ./impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.nocopy_dealloc.out
==22614== Parent PID: 10074
==22614== 
==22614== 
==22614== HEAP SUMMARY:
==22614==     in use at exit: 0 bytes in 0 blocks
==22614==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22614== 
==22614== All heap blocks were freed -- no leaks are possible
==22614== 
==22614== For counts of detected and suppressed errors, rerun with: -v
==22614== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test133 ===
The Valgrind memory detector as below:
==22630== Memcheck, a memory error detector
==22630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22630== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22630== Command: ./impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.nocopy_dealloc.out
==22630== Parent PID: 10074
==22630== 
==22630== 
==22630== HEAP SUMMARY:
==22630==     in use at exit: 40 bytes in 1 blocks
==22630==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22630== 
==22630== LEAK SUMMARY:
==22630==    definitely lost: 0 bytes in 0 blocks
==22630==    indirectly lost: 0 bytes in 0 blocks
==22630==      possibly lost: 0 bytes in 0 blocks
==22630==    still reachable: 40 bytes in 1 blocks
==22630==         suppressed: 0 bytes in 0 blocks
==22630== Reachable blocks (those to which a pointer was found) are not shown.
==22630== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22630== 
==22630== For counts of detected and suppressed errors, rerun with: -v
==22630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test134 ===
The Valgrind memory detector as below:
==22646== Memcheck, a memory error detector
==22646== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22646== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22646== Command: ./impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.nocopy_dealloc.out
==22646== Parent PID: 10074
==22646== 
==22646== 
==22646== HEAP SUMMARY:
==22646==     in use at exit: 0 bytes in 0 blocks
==22646==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22646== 
==22646== All heap blocks were freed -- no leaks are possible
==22646== 
==22646== For counts of detected and suppressed errors, rerun with: -v
==22646== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test135 ===
The Valgrind memory detector as below:
==22661== Memcheck, a memory error detector
==22661== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22661== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22661== Command: ./impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.nocopy_dealloc.out
==22661== Parent PID: 10074
==22661== 
==22661== 
==22661== HEAP SUMMARY:
==22661==     in use at exit: 0 bytes in 0 blocks
==22661==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22661== 
==22661== All heap blocks were freed -- no leaks are possible
==22661== 
==22661== For counts of detected and suppressed errors, rerun with: -v
==22661== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test136 ===
The Valgrind memory detector as below:
==22677== Memcheck, a memory error detector
==22677== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22677== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22677== Command: ./impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.nocopy_dealloc.out
==22677== Parent PID: 10074
==22677== 
==22677== 
==22677== HEAP SUMMARY:
==22677==     in use at exit: 40 bytes in 1 blocks
==22677==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22677== 
==22677== LEAK SUMMARY:
==22677==    definitely lost: 0 bytes in 0 blocks
==22677==    indirectly lost: 0 bytes in 0 blocks
==22677==      possibly lost: 0 bytes in 0 blocks
==22677==    still reachable: 40 bytes in 1 blocks
==22677==         suppressed: 0 bytes in 0 blocks
==22677== Reachable blocks (those to which a pointer was found) are not shown.
==22677== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22677== 
==22677== For counts of detected and suppressed errors, rerun with: -v
==22677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test137 ===
The Valgrind memory detector as below:
==22692== Memcheck, a memory error detector
==22692== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22692== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22692== Command: ./impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.nocopy_dealloc.out
==22692== Parent PID: 10074
==22692== 
==22692== 
==22692== HEAP SUMMARY:
==22692==     in use at exit: 40 bytes in 1 blocks
==22692==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22692== 
==22692== LEAK SUMMARY:
==22692==    definitely lost: 0 bytes in 0 blocks
==22692==    indirectly lost: 0 bytes in 0 blocks
==22692==      possibly lost: 0 bytes in 0 blocks
==22692==    still reachable: 40 bytes in 1 blocks
==22692==         suppressed: 0 bytes in 0 blocks
==22692== Reachable blocks (those to which a pointer was found) are not shown.
==22692== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22692== 
==22692== For counts of detected and suppressed errors, rerun with: -v
==22692== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test138 ===
The Valgrind memory detector as below:
==22707== Memcheck, a memory error detector
==22707== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22707== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22707== Command: ./impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.nocopy_dealloc.out
==22707== Parent PID: 10074
==22707== 
==22707== 
==22707== HEAP SUMMARY:
==22707==     in use at exit: 40 bytes in 1 blocks
==22707==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22707== 
==22707== LEAK SUMMARY:
==22707==    definitely lost: 0 bytes in 0 blocks
==22707==    indirectly lost: 0 bytes in 0 blocks
==22707==      possibly lost: 0 bytes in 0 blocks
==22707==    still reachable: 40 bytes in 1 blocks
==22707==         suppressed: 0 bytes in 0 blocks
==22707== Reachable blocks (those to which a pointer was found) are not shown.
==22707== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22707== 
==22707== For counts of detected and suppressed errors, rerun with: -v
==22707== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test139 ===
The Valgrind memory detector as below:
==22722== Memcheck, a memory error detector
==22722== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22722== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22722== Command: ./impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.nocopy_dealloc.out
==22722== Parent PID: 10074
==22722== 
==22722== 
==22722== HEAP SUMMARY:
==22722==     in use at exit: 0 bytes in 0 blocks
==22722==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22722== 
==22722== All heap blocks were freed -- no leaks are possible
==22722== 
==22722== For counts of detected and suppressed errors, rerun with: -v
==22722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test14 ===
The Valgrind memory detector as below:
==22738== Memcheck, a memory error detector
==22738== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22738== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22738== Command: ./impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.nocopy_dealloc.out
==22738== Parent PID: 10074
==22738== 
==22738== 
==22738== HEAP SUMMARY:
==22738==     in use at exit: 0 bytes in 0 blocks
==22738==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22738== 
==22738== All heap blocks were freed -- no leaks are possible
==22738== 
==22738== For counts of detected and suppressed errors, rerun with: -v
==22738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test140 ===
The Valgrind memory detector as below:
==22753== Memcheck, a memory error detector
==22753== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22753== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22753== Command: ./impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.nocopy_dealloc.out
==22753== Parent PID: 10074
==22753== 
==22753== 
==22753== HEAP SUMMARY:
==22753==     in use at exit: 0 bytes in 0 blocks
==22753==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22753== 
==22753== All heap blocks were freed -- no leaks are possible
==22753== 
==22753== For counts of detected and suppressed errors, rerun with: -v
==22753== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test141 ===
The Valgrind memory detector as below:
==22768== Memcheck, a memory error detector
==22768== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22768== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22768== Command: ./impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.nocopy_dealloc.out
==22768== Parent PID: 10074
==22768== 
==22768== 
==22768== HEAP SUMMARY:
==22768==     in use at exit: 40 bytes in 1 blocks
==22768==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22768== 
==22768== LEAK SUMMARY:
==22768==    definitely lost: 0 bytes in 0 blocks
==22768==    indirectly lost: 0 bytes in 0 blocks
==22768==      possibly lost: 0 bytes in 0 blocks
==22768==    still reachable: 40 bytes in 1 blocks
==22768==         suppressed: 0 bytes in 0 blocks
==22768== Reachable blocks (those to which a pointer was found) are not shown.
==22768== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22768== 
==22768== For counts of detected and suppressed errors, rerun with: -v
==22768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test142 ===
The Valgrind memory detector as below:
==22783== Memcheck, a memory error detector
==22783== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22783== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22783== Command: ./impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.nocopy_dealloc.out
==22783== Parent PID: 10074
==22783== 
==22783== 
==22783== HEAP SUMMARY:
==22783==     in use at exit: 0 bytes in 0 blocks
==22783==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22783== 
==22783== All heap blocks were freed -- no leaks are possible
==22783== 
==22783== For counts of detected and suppressed errors, rerun with: -v
==22783== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test143 ===
The Valgrind memory detector as below:
==22799== Memcheck, a memory error detector
==22799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22799== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22799== Command: ./impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.nocopy_dealloc.out
==22799== Parent PID: 10074
==22799== 
==22799== 
==22799== HEAP SUMMARY:
==22799==     in use at exit: 40 bytes in 1 blocks
==22799==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22799== 
==22799== LEAK SUMMARY:
==22799==    definitely lost: 0 bytes in 0 blocks
==22799==    indirectly lost: 0 bytes in 0 blocks
==22799==      possibly lost: 0 bytes in 0 blocks
==22799==    still reachable: 40 bytes in 1 blocks
==22799==         suppressed: 0 bytes in 0 blocks
==22799== Reachable blocks (those to which a pointer was found) are not shown.
==22799== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22799== 
==22799== For counts of detected and suppressed errors, rerun with: -v
==22799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test144 ===
The Valgrind memory detector as below:
==22814== Memcheck, a memory error detector
==22814== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22814== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22814== Command: ./impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.nocopy_dealloc.out
==22814== Parent PID: 10074
==22814== 
==22814== 
==22814== HEAP SUMMARY:
==22814==     in use at exit: 40 bytes in 1 blocks
==22814==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22814== 
==22814== LEAK SUMMARY:
==22814==    definitely lost: 0 bytes in 0 blocks
==22814==    indirectly lost: 0 bytes in 0 blocks
==22814==      possibly lost: 0 bytes in 0 blocks
==22814==    still reachable: 40 bytes in 1 blocks
==22814==         suppressed: 0 bytes in 0 blocks
==22814== Reachable blocks (those to which a pointer was found) are not shown.
==22814== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22814== 
==22814== For counts of detected and suppressed errors, rerun with: -v
==22814== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test145 ===
The Valgrind memory detector as below:
==22829== Memcheck, a memory error detector
==22829== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22829== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22829== Command: ./impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.nocopy_dealloc.out
==22829== Parent PID: 10074
==22829== 
==22829== 
==22829== HEAP SUMMARY:
==22829==     in use at exit: 40 bytes in 1 blocks
==22829==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22829== 
==22829== LEAK SUMMARY:
==22829==    definitely lost: 0 bytes in 0 blocks
==22829==    indirectly lost: 0 bytes in 0 blocks
==22829==      possibly lost: 0 bytes in 0 blocks
==22829==    still reachable: 40 bytes in 1 blocks
==22829==         suppressed: 0 bytes in 0 blocks
==22829== Reachable blocks (those to which a pointer was found) are not shown.
==22829== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22829== 
==22829== For counts of detected and suppressed errors, rerun with: -v
==22829== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test146 ===
The Valgrind memory detector as below:
==22846== Memcheck, a memory error detector
==22846== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22846== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22846== Command: ./impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.nocopy_dealloc.out
==22846== Parent PID: 10074
==22846== 
==22846== 
==22846== HEAP SUMMARY:
==22846==     in use at exit: 0 bytes in 0 blocks
==22846==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22846== 
==22846== All heap blocks were freed -- no leaks are possible
==22846== 
==22846== For counts of detected and suppressed errors, rerun with: -v
==22846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test147 ===
The Valgrind memory detector as below:
==22861== Memcheck, a memory error detector
==22861== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22861== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22861== Command: ./impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.nocopy_dealloc.out
==22861== Parent PID: 10074
==22861== 
==22861== 
==22861== HEAP SUMMARY:
==22861==     in use at exit: 0 bytes in 0 blocks
==22861==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22861== 
==22861== All heap blocks were freed -- no leaks are possible
==22861== 
==22861== For counts of detected and suppressed errors, rerun with: -v
==22861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test148 ===
The Valgrind memory detector as below:
==22877== Memcheck, a memory error detector
==22877== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22877== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22877== Command: ./impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.nocopy_dealloc.out
==22877== Parent PID: 10074
==22877== 
==22877== 
==22877== HEAP SUMMARY:
==22877==     in use at exit: 40 bytes in 1 blocks
==22877==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22877== 
==22877== LEAK SUMMARY:
==22877==    definitely lost: 0 bytes in 0 blocks
==22877==    indirectly lost: 0 bytes in 0 blocks
==22877==      possibly lost: 0 bytes in 0 blocks
==22877==    still reachable: 40 bytes in 1 blocks
==22877==         suppressed: 0 bytes in 0 blocks
==22877== Reachable blocks (those to which a pointer was found) are not shown.
==22877== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22877== 
==22877== For counts of detected and suppressed errors, rerun with: -v
==22877== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test149 ===
The Valgrind memory detector as below:
==22892== Memcheck, a memory error detector
==22892== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22892== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22892== Command: ./impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.nocopy_dealloc.out
==22892== Parent PID: 10074
==22892== 
==22892== 
==22892== HEAP SUMMARY:
==22892==     in use at exit: 0 bytes in 0 blocks
==22892==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22892== 
==22892== All heap blocks were freed -- no leaks are possible
==22892== 
==22892== For counts of detected and suppressed errors, rerun with: -v
==22892== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test15 ===
The Valgrind memory detector as below:
==22908== Memcheck, a memory error detector
==22908== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22908== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22908== Command: ./impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.nocopy_dealloc.out
==22908== Parent PID: 10074
==22908== 
==22908== 
==22908== HEAP SUMMARY:
==22908==     in use at exit: 0 bytes in 0 blocks
==22908==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22908== 
==22908== All heap blocks were freed -- no leaks are possible
==22908== 
==22908== For counts of detected and suppressed errors, rerun with: -v
==22908== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test150 ===
The Valgrind memory detector as below:
==22923== Memcheck, a memory error detector
==22923== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22923== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22923== Command: ./impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.nocopy_dealloc.out
==22923== Parent PID: 10074
==22923== 
==22923== 
==22923== HEAP SUMMARY:
==22923==     in use at exit: 0 bytes in 0 blocks
==22923==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22923== 
==22923== All heap blocks were freed -- no leaks are possible
==22923== 
==22923== For counts of detected and suppressed errors, rerun with: -v
==22923== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test151 ===
The Valgrind memory detector as below:
==22938== Memcheck, a memory error detector
==22938== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22938== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22938== Command: ./impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.nocopy_dealloc.out
==22938== Parent PID: 10074
==22938== 
==22938== 
==22938== HEAP SUMMARY:
==22938==     in use at exit: 40 bytes in 1 blocks
==22938==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22938== 
==22938== LEAK SUMMARY:
==22938==    definitely lost: 0 bytes in 0 blocks
==22938==    indirectly lost: 0 bytes in 0 blocks
==22938==      possibly lost: 0 bytes in 0 blocks
==22938==    still reachable: 40 bytes in 1 blocks
==22938==         suppressed: 0 bytes in 0 blocks
==22938== Reachable blocks (those to which a pointer was found) are not shown.
==22938== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22938== 
==22938== For counts of detected and suppressed errors, rerun with: -v
==22938== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test152 ===
The Valgrind memory detector as below:
==22955== Memcheck, a memory error detector
==22955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22955== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22955== Command: ./impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.nocopy_dealloc.out
==22955== Parent PID: 10074
==22955== 
==22955== 
==22955== HEAP SUMMARY:
==22955==     in use at exit: 40 bytes in 1 blocks
==22955==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22955== 
==22955== LEAK SUMMARY:
==22955==    definitely lost: 0 bytes in 0 blocks
==22955==    indirectly lost: 0 bytes in 0 blocks
==22955==      possibly lost: 0 bytes in 0 blocks
==22955==    still reachable: 40 bytes in 1 blocks
==22955==         suppressed: 0 bytes in 0 blocks
==22955== Reachable blocks (those to which a pointer was found) are not shown.
==22955== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22955== 
==22955== For counts of detected and suppressed errors, rerun with: -v
==22955== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test153 ===
The Valgrind memory detector as below:
==22970== Memcheck, a memory error detector
==22970== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22970== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22970== Command: ./impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.nocopy_dealloc.out
==22970== Parent PID: 10074
==22970== 
==22970== 
==22970== HEAP SUMMARY:
==22970==     in use at exit: 40 bytes in 1 blocks
==22970==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22970== 
==22970== LEAK SUMMARY:
==22970==    definitely lost: 0 bytes in 0 blocks
==22970==    indirectly lost: 0 bytes in 0 blocks
==22970==      possibly lost: 0 bytes in 0 blocks
==22970==    still reachable: 40 bytes in 1 blocks
==22970==         suppressed: 0 bytes in 0 blocks
==22970== Reachable blocks (those to which a pointer was found) are not shown.
==22970== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22970== 
==22970== For counts of detected and suppressed errors, rerun with: -v
==22970== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test154 ===
The Valgrind memory detector as below:
==22985== Memcheck, a memory error detector
==22985== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22985== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22985== Command: ./impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.nocopy_dealloc.out
==22985== Parent PID: 10074
==22985== 
==22985== 
==22985== HEAP SUMMARY:
==22985==     in use at exit: 40 bytes in 1 blocks
==22985==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==22985== 
==22985== LEAK SUMMARY:
==22985==    definitely lost: 0 bytes in 0 blocks
==22985==    indirectly lost: 0 bytes in 0 blocks
==22985==      possibly lost: 0 bytes in 0 blocks
==22985==    still reachable: 40 bytes in 1 blocks
==22985==         suppressed: 0 bytes in 0 blocks
==22985== Reachable blocks (those to which a pointer was found) are not shown.
==22985== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22985== 
==22985== For counts of detected and suppressed errors, rerun with: -v
==22985== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test155 ===
The Valgrind memory detector as below:
==23001== Memcheck, a memory error detector
==23001== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23001== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23001== Command: ./impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.nocopy_dealloc.out
==23001== Parent PID: 10074
==23001== 
==23001== 
==23001== HEAP SUMMARY:
==23001==     in use at exit: 40 bytes in 1 blocks
==23001==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23001== 
==23001== LEAK SUMMARY:
==23001==    definitely lost: 0 bytes in 0 blocks
==23001==    indirectly lost: 0 bytes in 0 blocks
==23001==      possibly lost: 0 bytes in 0 blocks
==23001==    still reachable: 40 bytes in 1 blocks
==23001==         suppressed: 0 bytes in 0 blocks
==23001== Reachable blocks (those to which a pointer was found) are not shown.
==23001== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23001== 
==23001== For counts of detected and suppressed errors, rerun with: -v
==23001== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test156 ===
The Valgrind memory detector as below:
==23016== Memcheck, a memory error detector
==23016== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23016== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23016== Command: ./impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.nocopy_dealloc.out
==23016== Parent PID: 10074
==23016== 
==23016== 
==23016== HEAP SUMMARY:
==23016==     in use at exit: 40 bytes in 1 blocks
==23016==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23016== 
==23016== LEAK SUMMARY:
==23016==    definitely lost: 0 bytes in 0 blocks
==23016==    indirectly lost: 0 bytes in 0 blocks
==23016==      possibly lost: 0 bytes in 0 blocks
==23016==    still reachable: 40 bytes in 1 blocks
==23016==         suppressed: 0 bytes in 0 blocks
==23016== Reachable blocks (those to which a pointer was found) are not shown.
==23016== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23016== 
==23016== For counts of detected and suppressed errors, rerun with: -v
==23016== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test157 ===
The Valgrind memory detector as below:
==23031== Memcheck, a memory error detector
==23031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23031== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23031== Command: ./impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.nocopy_dealloc.out
==23031== Parent PID: 10074
==23031== 
==23031== 
==23031== HEAP SUMMARY:
==23031==     in use at exit: 40 bytes in 1 blocks
==23031==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23031== 
==23031== LEAK SUMMARY:
==23031==    definitely lost: 0 bytes in 0 blocks
==23031==    indirectly lost: 0 bytes in 0 blocks
==23031==      possibly lost: 0 bytes in 0 blocks
==23031==    still reachable: 40 bytes in 1 blocks
==23031==         suppressed: 0 bytes in 0 blocks
==23031== Reachable blocks (those to which a pointer was found) are not shown.
==23031== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23031== 
==23031== For counts of detected and suppressed errors, rerun with: -v
==23031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test158 ===
The Valgrind memory detector as below:
==23046== Memcheck, a memory error detector
==23046== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23046== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23046== Command: ./impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.nocopy_dealloc.out
==23046== Parent PID: 10074
==23046== 
==23046== 
==23046== HEAP SUMMARY:
==23046==     in use at exit: 40 bytes in 1 blocks
==23046==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23046== 
==23046== LEAK SUMMARY:
==23046==    definitely lost: 0 bytes in 0 blocks
==23046==    indirectly lost: 0 bytes in 0 blocks
==23046==      possibly lost: 0 bytes in 0 blocks
==23046==    still reachable: 40 bytes in 1 blocks
==23046==         suppressed: 0 bytes in 0 blocks
==23046== Reachable blocks (those to which a pointer was found) are not shown.
==23046== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23046== 
==23046== For counts of detected and suppressed errors, rerun with: -v
==23046== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test159 ===
The Valgrind memory detector as below:
==23062== Memcheck, a memory error detector
==23062== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23062== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23062== Command: ./impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.nocopy_dealloc.out
==23062== Parent PID: 10074
==23062== 
==23062== 
==23062== HEAP SUMMARY:
==23062==     in use at exit: 0 bytes in 0 blocks
==23062==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23062== 
==23062== All heap blocks were freed -- no leaks are possible
==23062== 
==23062== For counts of detected and suppressed errors, rerun with: -v
==23062== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test16 ===
The Valgrind memory detector as below:
==23077== Memcheck, a memory error detector
==23077== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23077== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23077== Command: ./impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.nocopy_dealloc.out
==23077== Parent PID: 10074
==23077== 
==23077== 
==23077== HEAP SUMMARY:
==23077==     in use at exit: 40 bytes in 1 blocks
==23077==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23077== 
==23077== LEAK SUMMARY:
==23077==    definitely lost: 0 bytes in 0 blocks
==23077==    indirectly lost: 0 bytes in 0 blocks
==23077==      possibly lost: 0 bytes in 0 blocks
==23077==    still reachable: 40 bytes in 1 blocks
==23077==         suppressed: 0 bytes in 0 blocks
==23077== Reachable blocks (those to which a pointer was found) are not shown.
==23077== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23077== 
==23077== For counts of detected and suppressed errors, rerun with: -v
==23077== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test160 ===
The Valgrind memory detector as below:
==23094== Memcheck, a memory error detector
==23094== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23094== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23094== Command: ./impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.nocopy_dealloc.out
==23094== Parent PID: 10074
==23094== 
==23094== 
==23094== HEAP SUMMARY:
==23094==     in use at exit: 0 bytes in 0 blocks
==23094==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23094== 
==23094== All heap blocks were freed -- no leaks are possible
==23094== 
==23094== For counts of detected and suppressed errors, rerun with: -v
==23094== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test161 ===
The Valgrind memory detector as below:
==23109== Memcheck, a memory error detector
==23109== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23109== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23109== Command: ./impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.nocopy_dealloc.out
==23109== Parent PID: 10074
==23109== 
==23109== 
==23109== HEAP SUMMARY:
==23109==     in use at exit: 0 bytes in 0 blocks
==23109==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23109== 
==23109== All heap blocks were freed -- no leaks are possible
==23109== 
==23109== For counts of detected and suppressed errors, rerun with: -v
==23109== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test162 ===
The Valgrind memory detector as below:
==23124== Memcheck, a memory error detector
==23124== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23124== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23124== Command: ./impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.nocopy_dealloc.out
==23124== Parent PID: 10074
==23124== 
==23124== 
==23124== HEAP SUMMARY:
==23124==     in use at exit: 0 bytes in 0 blocks
==23124==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23124== 
==23124== All heap blocks were freed -- no leaks are possible
==23124== 
==23124== For counts of detected and suppressed errors, rerun with: -v
==23124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test163 ===
The Valgrind memory detector as below:
==23139== Memcheck, a memory error detector
==23139== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23139== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23139== Command: ./impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.nocopy_dealloc.out
==23139== Parent PID: 10074
==23139== 
==23139== 
==23139== HEAP SUMMARY:
==23139==     in use at exit: 0 bytes in 0 blocks
==23139==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23139== 
==23139== All heap blocks were freed -- no leaks are possible
==23139== 
==23139== For counts of detected and suppressed errors, rerun with: -v
==23139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test164 ===
The Valgrind memory detector as below:
==23155== Memcheck, a memory error detector
==23155== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23155== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23155== Command: ./impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.nocopy_dealloc.out
==23155== Parent PID: 10074
==23155== 
==23155== 
==23155== HEAP SUMMARY:
==23155==     in use at exit: 0 bytes in 0 blocks
==23155==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23155== 
==23155== All heap blocks were freed -- no leaks are possible
==23155== 
==23155== For counts of detected and suppressed errors, rerun with: -v
==23155== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test165 ===
The Valgrind memory detector as below:
==23171== Memcheck, a memory error detector
==23171== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23171== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23171== Command: ./impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.nocopy_dealloc.out
==23171== Parent PID: 10074
==23171== 
==23171== 
==23171== HEAP SUMMARY:
==23171==     in use at exit: 40 bytes in 1 blocks
==23171==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23171== 
==23171== LEAK SUMMARY:
==23171==    definitely lost: 0 bytes in 0 blocks
==23171==    indirectly lost: 0 bytes in 0 blocks
==23171==      possibly lost: 0 bytes in 0 blocks
==23171==    still reachable: 40 bytes in 1 blocks
==23171==         suppressed: 0 bytes in 0 blocks
==23171== Reachable blocks (those to which a pointer was found) are not shown.
==23171== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23171== 
==23171== For counts of detected and suppressed errors, rerun with: -v
==23171== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test166 ===
The Valgrind memory detector as below:
==23186== Memcheck, a memory error detector
==23186== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23186== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23186== Command: ./impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.nocopy_dealloc.out
==23186== Parent PID: 10074
==23186== 
==23186== 
==23186== HEAP SUMMARY:
==23186==     in use at exit: 40 bytes in 1 blocks
==23186==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23186== 
==23186== LEAK SUMMARY:
==23186==    definitely lost: 0 bytes in 0 blocks
==23186==    indirectly lost: 0 bytes in 0 blocks
==23186==      possibly lost: 0 bytes in 0 blocks
==23186==    still reachable: 40 bytes in 1 blocks
==23186==         suppressed: 0 bytes in 0 blocks
==23186== Reachable blocks (those to which a pointer was found) are not shown.
==23186== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23186== 
==23186== For counts of detected and suppressed errors, rerun with: -v
==23186== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test167 ===
The Valgrind memory detector as below:
==23203== Memcheck, a memory error detector
==23203== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23203== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23203== Command: ./impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.nocopy_dealloc.out
==23203== Parent PID: 10074
==23203== 
==23203== 
==23203== HEAP SUMMARY:
==23203==     in use at exit: 40 bytes in 1 blocks
==23203==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23203== 
==23203== LEAK SUMMARY:
==23203==    definitely lost: 0 bytes in 0 blocks
==23203==    indirectly lost: 0 bytes in 0 blocks
==23203==      possibly lost: 0 bytes in 0 blocks
==23203==    still reachable: 40 bytes in 1 blocks
==23203==         suppressed: 0 bytes in 0 blocks
==23203== Reachable blocks (those to which a pointer was found) are not shown.
==23203== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23203== 
==23203== For counts of detected and suppressed errors, rerun with: -v
==23203== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test168 ===
The Valgrind memory detector as below:
==23218== Memcheck, a memory error detector
==23218== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23218== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23218== Command: ./impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.nocopy_dealloc.out
==23218== Parent PID: 10074
==23218== 
==23218== 
==23218== HEAP SUMMARY:
==23218==     in use at exit: 0 bytes in 0 blocks
==23218==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23218== 
==23218== All heap blocks were freed -- no leaks are possible
==23218== 
==23218== For counts of detected and suppressed errors, rerun with: -v
==23218== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test169 ===
The Valgrind memory detector as below:
==23233== Memcheck, a memory error detector
==23233== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23233== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23233== Command: ./impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.nocopy_dealloc.out
==23233== Parent PID: 10074
==23233== 
==23233== 
==23233== HEAP SUMMARY:
==23233==     in use at exit: 40 bytes in 1 blocks
==23233==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23233== 
==23233== LEAK SUMMARY:
==23233==    definitely lost: 0 bytes in 0 blocks
==23233==    indirectly lost: 0 bytes in 0 blocks
==23233==      possibly lost: 0 bytes in 0 blocks
==23233==    still reachable: 40 bytes in 1 blocks
==23233==         suppressed: 0 bytes in 0 blocks
==23233== Reachable blocks (those to which a pointer was found) are not shown.
==23233== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23233== 
==23233== For counts of detected and suppressed errors, rerun with: -v
==23233== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test17 ===
The Valgrind memory detector as below:
==23249== Memcheck, a memory error detector
==23249== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23249== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23249== Command: ./impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.nocopy_dealloc.out
==23249== Parent PID: 10074
==23249== 
==23249== 
==23249== HEAP SUMMARY:
==23249==     in use at exit: 0 bytes in 0 blocks
==23249==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23249== 
==23249== All heap blocks were freed -- no leaks are possible
==23249== 
==23249== For counts of detected and suppressed errors, rerun with: -v
==23249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test170 ===
The Valgrind memory detector as below:
==23264== Memcheck, a memory error detector
==23264== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23264== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23264== Command: ./impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.nocopy_dealloc.out
==23264== Parent PID: 10074
==23264== 
==23264== 
==23264== HEAP SUMMARY:
==23264==     in use at exit: 0 bytes in 0 blocks
==23264==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23264== 
==23264== All heap blocks were freed -- no leaks are possible
==23264== 
==23264== For counts of detected and suppressed errors, rerun with: -v
==23264== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test171 ===
The Valgrind memory detector as below:
==23279== Memcheck, a memory error detector
==23279== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23279== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23279== Command: ./impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.nocopy_dealloc.out
==23279== Parent PID: 10074
==23279== 
==23279== 
==23279== HEAP SUMMARY:
==23279==     in use at exit: 0 bytes in 0 blocks
==23279==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23279== 
==23279== All heap blocks were freed -- no leaks are possible
==23279== 
==23279== For counts of detected and suppressed errors, rerun with: -v
==23279== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test172 ===
The Valgrind memory detector as below:
==23295== Memcheck, a memory error detector
==23295== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23295== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23295== Command: ./impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.nocopy_dealloc.out
==23295== Parent PID: 10074
==23295== 
==23295== 
==23295== HEAP SUMMARY:
==23295==     in use at exit: 0 bytes in 0 blocks
==23295==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23295== 
==23295== All heap blocks were freed -- no leaks are possible
==23295== 
==23295== For counts of detected and suppressed errors, rerun with: -v
==23295== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test173 ===
The Valgrind memory detector as below:
==23312== Memcheck, a memory error detector
==23312== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23312== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23312== Command: ./impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.nocopy_dealloc.out
==23312== Parent PID: 10074
==23312== 
==23312== 
==23312== HEAP SUMMARY:
==23312==     in use at exit: 40 bytes in 1 blocks
==23312==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23312== 
==23312== LEAK SUMMARY:
==23312==    definitely lost: 0 bytes in 0 blocks
==23312==    indirectly lost: 0 bytes in 0 blocks
==23312==      possibly lost: 0 bytes in 0 blocks
==23312==    still reachable: 40 bytes in 1 blocks
==23312==         suppressed: 0 bytes in 0 blocks
==23312== Reachable blocks (those to which a pointer was found) are not shown.
==23312== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23312== 
==23312== For counts of detected and suppressed errors, rerun with: -v
==23312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test174 ===
The Valgrind memory detector as below:
==23327== Memcheck, a memory error detector
==23327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23327== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23327== Command: ./impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.nocopy_dealloc.out
==23327== Parent PID: 10074
==23327== 
==23327== 
==23327== HEAP SUMMARY:
==23327==     in use at exit: 40 bytes in 1 blocks
==23327==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23327== 
==23327== LEAK SUMMARY:
==23327==    definitely lost: 0 bytes in 0 blocks
==23327==    indirectly lost: 0 bytes in 0 blocks
==23327==      possibly lost: 0 bytes in 0 blocks
==23327==    still reachable: 40 bytes in 1 blocks
==23327==         suppressed: 0 bytes in 0 blocks
==23327== Reachable blocks (those to which a pointer was found) are not shown.
==23327== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23327== 
==23327== For counts of detected and suppressed errors, rerun with: -v
==23327== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test175 ===
The Valgrind memory detector as below:
==23344== Memcheck, a memory error detector
==23344== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23344== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23344== Command: ./impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.nocopy_dealloc.out
==23344== Parent PID: 10074
==23344== 
==23344== 
==23344== HEAP SUMMARY:
==23344==     in use at exit: 40 bytes in 1 blocks
==23344==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23344== 
==23344== LEAK SUMMARY:
==23344==    definitely lost: 0 bytes in 0 blocks
==23344==    indirectly lost: 0 bytes in 0 blocks
==23344==      possibly lost: 0 bytes in 0 blocks
==23344==    still reachable: 40 bytes in 1 blocks
==23344==         suppressed: 0 bytes in 0 blocks
==23344== Reachable blocks (those to which a pointer was found) are not shown.
==23344== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23344== 
==23344== For counts of detected and suppressed errors, rerun with: -v
==23344== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test176 ===
The Valgrind memory detector as below:
==23359== Memcheck, a memory error detector
==23359== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23359== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23359== Command: ./impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.nocopy_dealloc.out
==23359== Parent PID: 10074
==23359== 
==23359== 
==23359== HEAP SUMMARY:
==23359==     in use at exit: 40 bytes in 1 blocks
==23359==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23359== 
==23359== LEAK SUMMARY:
==23359==    definitely lost: 0 bytes in 0 blocks
==23359==    indirectly lost: 0 bytes in 0 blocks
==23359==      possibly lost: 0 bytes in 0 blocks
==23359==    still reachable: 40 bytes in 1 blocks
==23359==         suppressed: 0 bytes in 0 blocks
==23359== Reachable blocks (those to which a pointer was found) are not shown.
==23359== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23359== 
==23359== For counts of detected and suppressed errors, rerun with: -v
==23359== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test177 ===
The Valgrind memory detector as below:
==23375== Memcheck, a memory error detector
==23375== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23375== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23375== Command: ./impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.nocopy_dealloc.out
==23375== Parent PID: 10074
==23375== 
==23375== 
==23375== HEAP SUMMARY:
==23375==     in use at exit: 40 bytes in 1 blocks
==23375==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23375== 
==23375== LEAK SUMMARY:
==23375==    definitely lost: 0 bytes in 0 blocks
==23375==    indirectly lost: 0 bytes in 0 blocks
==23375==      possibly lost: 0 bytes in 0 blocks
==23375==    still reachable: 40 bytes in 1 blocks
==23375==         suppressed: 0 bytes in 0 blocks
==23375== Reachable blocks (those to which a pointer was found) are not shown.
==23375== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23375== 
==23375== For counts of detected and suppressed errors, rerun with: -v
==23375== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test178 ===
The Valgrind memory detector as below:
==23391== Memcheck, a memory error detector
==23391== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23391== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23391== Command: ./impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.nocopy_dealloc.out
==23391== Parent PID: 10074
==23391== 
==23391== 
==23391== HEAP SUMMARY:
==23391==     in use at exit: 40 bytes in 1 blocks
==23391==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23391== 
==23391== LEAK SUMMARY:
==23391==    definitely lost: 0 bytes in 0 blocks
==23391==    indirectly lost: 0 bytes in 0 blocks
==23391==      possibly lost: 0 bytes in 0 blocks
==23391==    still reachable: 40 bytes in 1 blocks
==23391==         suppressed: 0 bytes in 0 blocks
==23391== Reachable blocks (those to which a pointer was found) are not shown.
==23391== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23391== 
==23391== For counts of detected and suppressed errors, rerun with: -v
==23391== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test179 ===
The Valgrind memory detector as below:
==23406== Memcheck, a memory error detector
==23406== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23406== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23406== Command: ./impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.nocopy_dealloc.out
==23406== Parent PID: 10074
==23406== 
==23406== 
==23406== HEAP SUMMARY:
==23406==     in use at exit: 40 bytes in 1 blocks
==23406==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23406== 
==23406== LEAK SUMMARY:
==23406==    definitely lost: 0 bytes in 0 blocks
==23406==    indirectly lost: 0 bytes in 0 blocks
==23406==      possibly lost: 0 bytes in 0 blocks
==23406==    still reachable: 40 bytes in 1 blocks
==23406==         suppressed: 0 bytes in 0 blocks
==23406== Reachable blocks (those to which a pointer was found) are not shown.
==23406== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23406== 
==23406== For counts of detected and suppressed errors, rerun with: -v
==23406== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test18 ===
The Valgrind memory detector as below:
==23421== Memcheck, a memory error detector
==23421== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23421== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23421== Command: ./impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.nocopy_dealloc.out
==23421== Parent PID: 10074
==23421== 
==23421== 
==23421== HEAP SUMMARY:
==23421==     in use at exit: 0 bytes in 0 blocks
==23421==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23421== 
==23421== All heap blocks were freed -- no leaks are possible
==23421== 
==23421== For counts of detected and suppressed errors, rerun with: -v
==23421== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test180 ===
The Valgrind memory detector as below:
==23437== Memcheck, a memory error detector
==23437== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23437== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23437== Command: ./impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.nocopy_dealloc.out
==23437== Parent PID: 10074
==23437== 
==23437== 
==23437== HEAP SUMMARY:
==23437==     in use at exit: 40 bytes in 1 blocks
==23437==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23437== 
==23437== LEAK SUMMARY:
==23437==    definitely lost: 0 bytes in 0 blocks
==23437==    indirectly lost: 0 bytes in 0 blocks
==23437==      possibly lost: 0 bytes in 0 blocks
==23437==    still reachable: 40 bytes in 1 blocks
==23437==         suppressed: 0 bytes in 0 blocks
==23437== Reachable blocks (those to which a pointer was found) are not shown.
==23437== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23437== 
==23437== For counts of detected and suppressed errors, rerun with: -v
==23437== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test181 ===
The Valgrind memory detector as below:
==23452== Memcheck, a memory error detector
==23452== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23452== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23452== Command: ./impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.nocopy_dealloc.out
==23452== Parent PID: 10074
==23452== 
==23452== 
==23452== HEAP SUMMARY:
==23452==     in use at exit: 40 bytes in 1 blocks
==23452==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23452== 
==23452== LEAK SUMMARY:
==23452==    definitely lost: 0 bytes in 0 blocks
==23452==    indirectly lost: 0 bytes in 0 blocks
==23452==      possibly lost: 0 bytes in 0 blocks
==23452==    still reachable: 40 bytes in 1 blocks
==23452==         suppressed: 0 bytes in 0 blocks
==23452== Reachable blocks (those to which a pointer was found) are not shown.
==23452== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23452== 
==23452== For counts of detected and suppressed errors, rerun with: -v
==23452== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test182 ===
The Valgrind memory detector as below:
==23467== Memcheck, a memory error detector
==23467== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23467== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23467== Command: ./impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.nocopy_dealloc.out
==23467== Parent PID: 10074
==23467== 
==23467== 
==23467== HEAP SUMMARY:
==23467==     in use at exit: 40 bytes in 1 blocks
==23467==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23467== 
==23467== LEAK SUMMARY:
==23467==    definitely lost: 0 bytes in 0 blocks
==23467==    indirectly lost: 0 bytes in 0 blocks
==23467==      possibly lost: 0 bytes in 0 blocks
==23467==    still reachable: 40 bytes in 1 blocks
==23467==         suppressed: 0 bytes in 0 blocks
==23467== Reachable blocks (those to which a pointer was found) are not shown.
==23467== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23467== 
==23467== For counts of detected and suppressed errors, rerun with: -v
==23467== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test183 ===
The Valgrind memory detector as below:
==23483== Memcheck, a memory error detector
==23483== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23483== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23483== Command: ./impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.nocopy_dealloc.out
==23483== Parent PID: 10074
==23483== 
==23483== 
==23483== HEAP SUMMARY:
==23483==     in use at exit: 40 bytes in 1 blocks
==23483==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23483== 
==23483== LEAK SUMMARY:
==23483==    definitely lost: 0 bytes in 0 blocks
==23483==    indirectly lost: 0 bytes in 0 blocks
==23483==      possibly lost: 0 bytes in 0 blocks
==23483==    still reachable: 40 bytes in 1 blocks
==23483==         suppressed: 0 bytes in 0 blocks
==23483== Reachable blocks (those to which a pointer was found) are not shown.
==23483== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23483== 
==23483== For counts of detected and suppressed errors, rerun with: -v
==23483== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test184 ===
The Valgrind memory detector as below:
==23498== Memcheck, a memory error detector
==23498== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23498== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23498== Command: ./impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.nocopy_dealloc.out
==23498== Parent PID: 10074
==23498== 
==23498== 
==23498== HEAP SUMMARY:
==23498==     in use at exit: 40 bytes in 1 blocks
==23498==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23498== 
==23498== LEAK SUMMARY:
==23498==    definitely lost: 0 bytes in 0 blocks
==23498==    indirectly lost: 0 bytes in 0 blocks
==23498==      possibly lost: 0 bytes in 0 blocks
==23498==    still reachable: 40 bytes in 1 blocks
==23498==         suppressed: 0 bytes in 0 blocks
==23498== Reachable blocks (those to which a pointer was found) are not shown.
==23498== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23498== 
==23498== For counts of detected and suppressed errors, rerun with: -v
==23498== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test185 ===
The Valgrind memory detector as below:
==23513== Memcheck, a memory error detector
==23513== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23513== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23513== Command: ./impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.nocopy_dealloc.out
==23513== Parent PID: 10074
==23513== 
==23513== 
==23513== HEAP SUMMARY:
==23513==     in use at exit: 40 bytes in 1 blocks
==23513==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23513== 
==23513== LEAK SUMMARY:
==23513==    definitely lost: 0 bytes in 0 blocks
==23513==    indirectly lost: 0 bytes in 0 blocks
==23513==      possibly lost: 0 bytes in 0 blocks
==23513==    still reachable: 40 bytes in 1 blocks
==23513==         suppressed: 0 bytes in 0 blocks
==23513== Reachable blocks (those to which a pointer was found) are not shown.
==23513== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23513== 
==23513== For counts of detected and suppressed errors, rerun with: -v
==23513== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test186 ===
The Valgrind memory detector as below:
==23529== Memcheck, a memory error detector
==23529== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23529== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23529== Command: ./impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.nocopy_dealloc.out
==23529== Parent PID: 10074
==23529== 
==23529== 
==23529== HEAP SUMMARY:
==23529==     in use at exit: 40 bytes in 1 blocks
==23529==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23529== 
==23529== LEAK SUMMARY:
==23529==    definitely lost: 0 bytes in 0 blocks
==23529==    indirectly lost: 0 bytes in 0 blocks
==23529==      possibly lost: 0 bytes in 0 blocks
==23529==    still reachable: 40 bytes in 1 blocks
==23529==         suppressed: 0 bytes in 0 blocks
==23529== Reachable blocks (those to which a pointer was found) are not shown.
==23529== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23529== 
==23529== For counts of detected and suppressed errors, rerun with: -v
==23529== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test187 ===
The Valgrind memory detector as below:
==23544== Memcheck, a memory error detector
==23544== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23544== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23544== Command: ./impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.nocopy_dealloc.out
==23544== Parent PID: 10074
==23544== 
==23544== 
==23544== HEAP SUMMARY:
==23544==     in use at exit: 40 bytes in 1 blocks
==23544==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23544== 
==23544== LEAK SUMMARY:
==23544==    definitely lost: 0 bytes in 0 blocks
==23544==    indirectly lost: 0 bytes in 0 blocks
==23544==      possibly lost: 0 bytes in 0 blocks
==23544==    still reachable: 40 bytes in 1 blocks
==23544==         suppressed: 0 bytes in 0 blocks
==23544== Reachable blocks (those to which a pointer was found) are not shown.
==23544== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23544== 
==23544== For counts of detected and suppressed errors, rerun with: -v
==23544== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test188 ===
The Valgrind memory detector as below:
==23559== Memcheck, a memory error detector
==23559== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23559== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23559== Command: ./impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.nocopy_dealloc.out
==23559== Parent PID: 10074
==23559== 
==23559== 
==23559== HEAP SUMMARY:
==23559==     in use at exit: 40 bytes in 1 blocks
==23559==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23559== 
==23559== LEAK SUMMARY:
==23559==    definitely lost: 0 bytes in 0 blocks
==23559==    indirectly lost: 0 bytes in 0 blocks
==23559==      possibly lost: 0 bytes in 0 blocks
==23559==    still reachable: 40 bytes in 1 blocks
==23559==         suppressed: 0 bytes in 0 blocks
==23559== Reachable blocks (those to which a pointer was found) are not shown.
==23559== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23559== 
==23559== For counts of detected and suppressed errors, rerun with: -v
==23559== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test189 ===
The Valgrind memory detector as below:
==23574== Memcheck, a memory error detector
==23574== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23574== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23574== Command: ./impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.nocopy_dealloc.out
==23574== Parent PID: 10074
==23574== 
==23574== 
==23574== HEAP SUMMARY:
==23574==     in use at exit: 0 bytes in 0 blocks
==23574==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23574== 
==23574== All heap blocks were freed -- no leaks are possible
==23574== 
==23574== For counts of detected and suppressed errors, rerun with: -v
==23574== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test19 ===
The Valgrind memory detector as below:
==23591== Memcheck, a memory error detector
==23591== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23591== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23591== Command: ./impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.nocopy_dealloc.out
==23591== Parent PID: 10074
==23591== 
==23591== 
==23591== HEAP SUMMARY:
==23591==     in use at exit: 0 bytes in 0 blocks
==23591==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23591== 
==23591== All heap blocks were freed -- no leaks are possible
==23591== 
==23591== For counts of detected and suppressed errors, rerun with: -v
==23591== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test190 ===
The Valgrind memory detector as below:
==23606== Memcheck, a memory error detector
==23606== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23606== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23606== Command: ./impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.nocopy_dealloc.out
==23606== Parent PID: 10074
==23606== 
==23606== 
==23606== HEAP SUMMARY:
==23606==     in use at exit: 0 bytes in 0 blocks
==23606==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23606== 
==23606== All heap blocks were freed -- no leaks are possible
==23606== 
==23606== For counts of detected and suppressed errors, rerun with: -v
==23606== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test191 ===
The Valgrind memory detector as below:
==23623== Memcheck, a memory error detector
==23623== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23623== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23623== Command: ./impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.nocopy_dealloc.out
==23623== Parent PID: 10074
==23623== 
==23623== 
==23623== HEAP SUMMARY:
==23623==     in use at exit: 0 bytes in 0 blocks
==23623==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23623== 
==23623== All heap blocks were freed -- no leaks are possible
==23623== 
==23623== For counts of detected and suppressed errors, rerun with: -v
==23623== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test192 ===
The Valgrind memory detector as below:
==23639== Memcheck, a memory error detector
==23639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23639== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23639== Command: ./impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.nocopy_dealloc.out
==23639== Parent PID: 10074
==23639== 
==23639== 
==23639== HEAP SUMMARY:
==23639==     in use at exit: 0 bytes in 0 blocks
==23639==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23639== 
==23639== All heap blocks were freed -- no leaks are possible
==23639== 
==23639== For counts of detected and suppressed errors, rerun with: -v
==23639== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test193 ===
The Valgrind memory detector as below:
==23655== Memcheck, a memory error detector
==23655== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23655== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23655== Command: ./impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.nocopy_dealloc.out
==23655== Parent PID: 10074
==23655== 
==23655== 
==23655== HEAP SUMMARY:
==23655==     in use at exit: 0 bytes in 0 blocks
==23655==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23655== 
==23655== All heap blocks were freed -- no leaks are possible
==23655== 
==23655== For counts of detected and suppressed errors, rerun with: -v
==23655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test194 ===
The Valgrind memory detector as below:
==23670== Memcheck, a memory error detector
==23670== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23670== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23670== Command: ./impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.nocopy_dealloc.out
==23670== Parent PID: 10074
==23670== 
==23670== 
==23670== HEAP SUMMARY:
==23670==     in use at exit: 0 bytes in 0 blocks
==23670==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23670== 
==23670== All heap blocks were freed -- no leaks are possible
==23670== 
==23670== For counts of detected and suppressed errors, rerun with: -v
==23670== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test195 ===
The Valgrind memory detector as below:
==23686== Memcheck, a memory error detector
==23686== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23686== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23686== Command: ./impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.nocopy_dealloc.out
==23686== Parent PID: 10074
==23686== 
==23686== 
==23686== HEAP SUMMARY:
==23686==     in use at exit: 0 bytes in 0 blocks
==23686==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23686== 
==23686== All heap blocks were freed -- no leaks are possible
==23686== 
==23686== For counts of detected and suppressed errors, rerun with: -v
==23686== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test196 ===
The Valgrind memory detector as below:
==23701== Memcheck, a memory error detector
==23701== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23701== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23701== Command: ./impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.nocopy_dealloc.out
==23701== Parent PID: 10074
==23701== 
==23701== 
==23701== HEAP SUMMARY:
==23701==     in use at exit: 40 bytes in 1 blocks
==23701==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23701== 
==23701== LEAK SUMMARY:
==23701==    definitely lost: 0 bytes in 0 blocks
==23701==    indirectly lost: 0 bytes in 0 blocks
==23701==      possibly lost: 0 bytes in 0 blocks
==23701==    still reachable: 40 bytes in 1 blocks
==23701==         suppressed: 0 bytes in 0 blocks
==23701== Reachable blocks (those to which a pointer was found) are not shown.
==23701== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23701== 
==23701== For counts of detected and suppressed errors, rerun with: -v
==23701== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test197 ===
The Valgrind memory detector as below:
==23716== Memcheck, a memory error detector
==23716== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23716== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23716== Command: ./impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.nocopy_dealloc.out
==23716== Parent PID: 10074
==23716== 
==23716== 
==23716== HEAP SUMMARY:
==23716==     in use at exit: 40 bytes in 1 blocks
==23716==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23716== 
==23716== LEAK SUMMARY:
==23716==    definitely lost: 0 bytes in 0 blocks
==23716==    indirectly lost: 0 bytes in 0 blocks
==23716==      possibly lost: 0 bytes in 0 blocks
==23716==    still reachable: 40 bytes in 1 blocks
==23716==         suppressed: 0 bytes in 0 blocks
==23716== Reachable blocks (those to which a pointer was found) are not shown.
==23716== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23716== 
==23716== For counts of detected and suppressed errors, rerun with: -v
==23716== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test198 ===
The Valgrind memory detector as below:
==23731== Memcheck, a memory error detector
==23731== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23731== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23731== Command: ./impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.nocopy_dealloc.out
==23731== Parent PID: 10074
==23731== 
==23731== 
==23731== HEAP SUMMARY:
==23731==     in use at exit: 40 bytes in 1 blocks
==23731==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23731== 
==23731== LEAK SUMMARY:
==23731==    definitely lost: 0 bytes in 0 blocks
==23731==    indirectly lost: 0 bytes in 0 blocks
==23731==      possibly lost: 0 bytes in 0 blocks
==23731==    still reachable: 40 bytes in 1 blocks
==23731==         suppressed: 0 bytes in 0 blocks
==23731== Reachable blocks (those to which a pointer was found) are not shown.
==23731== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23731== 
==23731== For counts of detected and suppressed errors, rerun with: -v
==23731== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test199 ===
The Valgrind memory detector as below:
==23747== Memcheck, a memory error detector
==23747== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23747== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23747== Command: ./impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.nocopy_dealloc.out
==23747== Parent PID: 10074
==23747== 
==23747== 
==23747== HEAP SUMMARY:
==23747==     in use at exit: 40 bytes in 1 blocks
==23747==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23747== 
==23747== LEAK SUMMARY:
==23747==    definitely lost: 0 bytes in 0 blocks
==23747==    indirectly lost: 0 bytes in 0 blocks
==23747==      possibly lost: 0 bytes in 0 blocks
==23747==    still reachable: 40 bytes in 1 blocks
==23747==         suppressed: 0 bytes in 0 blocks
==23747== Reachable blocks (those to which a pointer was found) are not shown.
==23747== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23747== 
==23747== For counts of detected and suppressed errors, rerun with: -v
==23747== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test2 ===
The Valgrind memory detector as below:
==23762== Memcheck, a memory error detector
==23762== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23762== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23762== Command: ./impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.nocopy_dealloc.out
==23762== Parent PID: 10074
==23762== 
==23762== 
==23762== HEAP SUMMARY:
==23762==     in use at exit: 40 bytes in 1 blocks
==23762==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23762== 
==23762== LEAK SUMMARY:
==23762==    definitely lost: 0 bytes in 0 blocks
==23762==    indirectly lost: 0 bytes in 0 blocks
==23762==      possibly lost: 0 bytes in 0 blocks
==23762==    still reachable: 40 bytes in 1 blocks
==23762==         suppressed: 0 bytes in 0 blocks
==23762== Reachable blocks (those to which a pointer was found) are not shown.
==23762== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23762== 
==23762== For counts of detected and suppressed errors, rerun with: -v
==23762== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test20 ===
The Valgrind memory detector as below:
==23777== Memcheck, a memory error detector
==23777== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23777== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23777== Command: ./impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.nocopy_dealloc.out
==23777== Parent PID: 10074
==23777== 
==23777== 
==23777== HEAP SUMMARY:
==23777==     in use at exit: 0 bytes in 0 blocks
==23777==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23777== 
==23777== All heap blocks were freed -- no leaks are possible
==23777== 
==23777== For counts of detected and suppressed errors, rerun with: -v
==23777== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test200 ===
The Valgrind memory detector as below:
==23792== Memcheck, a memory error detector
==23792== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23792== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23792== Command: ./impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.nocopy_dealloc.out
==23792== Parent PID: 10074
==23792== 
==23792== 
==23792== HEAP SUMMARY:
==23792==     in use at exit: 40 bytes in 1 blocks
==23792==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23792== 
==23792== LEAK SUMMARY:
==23792==    definitely lost: 0 bytes in 0 blocks
==23792==    indirectly lost: 0 bytes in 0 blocks
==23792==      possibly lost: 0 bytes in 0 blocks
==23792==    still reachable: 40 bytes in 1 blocks
==23792==         suppressed: 0 bytes in 0 blocks
==23792== Reachable blocks (those to which a pointer was found) are not shown.
==23792== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23792== 
==23792== For counts of detected and suppressed errors, rerun with: -v
==23792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test201 ===
The Valgrind memory detector as below:
==23808== Memcheck, a memory error detector
==23808== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23808== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23808== Command: ./impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.nocopy_dealloc.out
==23808== Parent PID: 10074
==23808== 
==23808== 
==23808== HEAP SUMMARY:
==23808==     in use at exit: 0 bytes in 0 blocks
==23808==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23808== 
==23808== All heap blocks were freed -- no leaks are possible
==23808== 
==23808== For counts of detected and suppressed errors, rerun with: -v
==23808== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test202 ===
The Valgrind memory detector as below:
==23823== Memcheck, a memory error detector
==23823== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23823== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23823== Command: ./impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.nocopy_dealloc.out
==23823== Parent PID: 10074
==23823== 
==23823== 
==23823== HEAP SUMMARY:
==23823==     in use at exit: 0 bytes in 0 blocks
==23823==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23823== 
==23823== All heap blocks were freed -- no leaks are possible
==23823== 
==23823== For counts of detected and suppressed errors, rerun with: -v
==23823== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test203 ===
The Valgrind memory detector as below:
==23838== Memcheck, a memory error detector
==23838== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23838== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23838== Command: ./impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.nocopy_dealloc.out
==23838== Parent PID: 10074
==23838== 
==23838== 
==23838== HEAP SUMMARY:
==23838==     in use at exit: 0 bytes in 0 blocks
==23838==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23838== 
==23838== All heap blocks were freed -- no leaks are possible
==23838== 
==23838== For counts of detected and suppressed errors, rerun with: -v
==23838== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test204 ===
The Valgrind memory detector as below:
==23853== Memcheck, a memory error detector
==23853== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23853== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23853== Command: ./impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.nocopy_dealloc.out
==23853== Parent PID: 10074
==23853== 
==23853== 
==23853== HEAP SUMMARY:
==23853==     in use at exit: 0 bytes in 0 blocks
==23853==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23853== 
==23853== All heap blocks were freed -- no leaks are possible
==23853== 
==23853== For counts of detected and suppressed errors, rerun with: -v
==23853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test205 ===
The Valgrind memory detector as below:
==23870== Memcheck, a memory error detector
==23870== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23870== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23870== Command: ./impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.nocopy_dealloc.out
==23870== Parent PID: 10074
==23870== 
==23870== 
==23870== HEAP SUMMARY:
==23870==     in use at exit: 0 bytes in 0 blocks
==23870==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23870== 
==23870== All heap blocks were freed -- no leaks are possible
==23870== 
==23870== For counts of detected and suppressed errors, rerun with: -v
==23870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test206 ===
The Valgrind memory detector as below:
==23885== Memcheck, a memory error detector
==23885== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23885== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23885== Command: ./impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.nocopy_dealloc.out
==23885== Parent PID: 10074
==23885== 
==23885== 
==23885== HEAP SUMMARY:
==23885==     in use at exit: 0 bytes in 0 blocks
==23885==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23885== 
==23885== All heap blocks were freed -- no leaks are possible
==23885== 
==23885== For counts of detected and suppressed errors, rerun with: -v
==23885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test207 ===
The Valgrind memory detector as below:
==23900== Memcheck, a memory error detector
==23900== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23900== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23900== Command: ./impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.nocopy_dealloc.out
==23900== Parent PID: 10074
==23900== 
==23900== 
==23900== HEAP SUMMARY:
==23900==     in use at exit: 0 bytes in 0 blocks
==23900==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23900== 
==23900== All heap blocks were freed -- no leaks are possible
==23900== 
==23900== For counts of detected and suppressed errors, rerun with: -v
==23900== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test208 ===
The Valgrind memory detector as below:
==23916== Memcheck, a memory error detector
==23916== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23916== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23916== Command: ./impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.nocopy_dealloc.out
==23916== Parent PID: 10074
==23916== 
==23916== 
==23916== HEAP SUMMARY:
==23916==     in use at exit: 0 bytes in 0 blocks
==23916==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23916== 
==23916== All heap blocks were freed -- no leaks are possible
==23916== 
==23916== For counts of detected and suppressed errors, rerun with: -v
==23916== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test209 ===
The Valgrind memory detector as below:
==23932== Memcheck, a memory error detector
==23932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23932== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23932== Command: ./impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.nocopy_dealloc.out
==23932== Parent PID: 10074
==23932== 
==23932== 
==23932== HEAP SUMMARY:
==23932==     in use at exit: 40 bytes in 1 blocks
==23932==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23932== 
==23932== LEAK SUMMARY:
==23932==    definitely lost: 0 bytes in 0 blocks
==23932==    indirectly lost: 0 bytes in 0 blocks
==23932==      possibly lost: 0 bytes in 0 blocks
==23932==    still reachable: 40 bytes in 1 blocks
==23932==         suppressed: 0 bytes in 0 blocks
==23932== Reachable blocks (those to which a pointer was found) are not shown.
==23932== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23932== 
==23932== For counts of detected and suppressed errors, rerun with: -v
==23932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test21 ===
The Valgrind memory detector as below:
==23951== Memcheck, a memory error detector
==23951== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23951== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23951== Command: ./impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.nocopy_dealloc.out
==23951== Parent PID: 10074
==23951== 
==23951== 
==23951== HEAP SUMMARY:
==23951==     in use at exit: 40 bytes in 1 blocks
==23951==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==23951== 
==23951== LEAK SUMMARY:
==23951==    definitely lost: 0 bytes in 0 blocks
==23951==    indirectly lost: 0 bytes in 0 blocks
==23951==      possibly lost: 0 bytes in 0 blocks
==23951==    still reachable: 40 bytes in 1 blocks
==23951==         suppressed: 0 bytes in 0 blocks
==23951== Reachable blocks (those to which a pointer was found) are not shown.
==23951== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23951== 
==23951== For counts of detected and suppressed errors, rerun with: -v
==23951== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test210 ===
The Valgrind memory detector as below:
==23966== Memcheck, a memory error detector
==23966== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23966== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23966== Command: ./impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.nocopy_dealloc.out
==23966== Parent PID: 10074
==23966== 
==23966== 
==23966== HEAP SUMMARY:
==23966==     in use at exit: 0 bytes in 0 blocks
==23966==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23966== 
==23966== All heap blocks were freed -- no leaks are possible
==23966== 
==23966== For counts of detected and suppressed errors, rerun with: -v
==23966== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test211 ===
The Valgrind memory detector as below:
==23982== Memcheck, a memory error detector
==23982== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23982== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23982== Command: ./impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.nocopy_dealloc.out
==23982== Parent PID: 10074
==23982== 
==23982== 
==23982== HEAP SUMMARY:
==23982==     in use at exit: 0 bytes in 0 blocks
==23982==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23982== 
==23982== All heap blocks were freed -- no leaks are possible
==23982== 
==23982== For counts of detected and suppressed errors, rerun with: -v
==23982== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test212 ===
The Valgrind memory detector as below:
==23997== Memcheck, a memory error detector
==23997== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23997== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23997== Command: ./impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.nocopy_dealloc.out
==23997== Parent PID: 10074
==23997== 
==23997== 
==23997== HEAP SUMMARY:
==23997==     in use at exit: 0 bytes in 0 blocks
==23997==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23997== 
==23997== All heap blocks were freed -- no leaks are possible
==23997== 
==23997== For counts of detected and suppressed errors, rerun with: -v
==23997== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test213 ===
The Valgrind memory detector as below:
==24012== Memcheck, a memory error detector
==24012== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24012== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24012== Command: ./impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.nocopy_dealloc.out
==24012== Parent PID: 10074
==24012== 
==24012== 
==24012== HEAP SUMMARY:
==24012==     in use at exit: 40 bytes in 1 blocks
==24012==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24012== 
==24012== LEAK SUMMARY:
==24012==    definitely lost: 0 bytes in 0 blocks
==24012==    indirectly lost: 0 bytes in 0 blocks
==24012==      possibly lost: 0 bytes in 0 blocks
==24012==    still reachable: 40 bytes in 1 blocks
==24012==         suppressed: 0 bytes in 0 blocks
==24012== Reachable blocks (those to which a pointer was found) are not shown.
==24012== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24012== 
==24012== For counts of detected and suppressed errors, rerun with: -v
==24012== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test214 ===
The Valgrind memory detector as below:
==24028== Memcheck, a memory error detector
==24028== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24028== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24028== Command: ./impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.nocopy_dealloc.out
==24028== Parent PID: 10074
==24028== 
==24028== 
==24028== HEAP SUMMARY:
==24028==     in use at exit: 0 bytes in 0 blocks
==24028==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24028== 
==24028== All heap blocks were freed -- no leaks are possible
==24028== 
==24028== For counts of detected and suppressed errors, rerun with: -v
==24028== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test215 ===
The Valgrind memory detector as below:
==24043== Memcheck, a memory error detector
==24043== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24043== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24043== Command: ./impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.nocopy_dealloc.out
==24043== Parent PID: 10074
==24043== 
==24043== 
==24043== HEAP SUMMARY:
==24043==     in use at exit: 0 bytes in 0 blocks
==24043==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24043== 
==24043== All heap blocks were freed -- no leaks are possible
==24043== 
==24043== For counts of detected and suppressed errors, rerun with: -v
==24043== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test216 ===
The Valgrind memory detector as below:
==24058== Memcheck, a memory error detector
==24058== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24058== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24058== Command: ./impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.nocopy_dealloc.out
==24058== Parent PID: 10074
==24058== 
==24058== 
==24058== HEAP SUMMARY:
==24058==     in use at exit: 0 bytes in 0 blocks
==24058==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24058== 
==24058== All heap blocks were freed -- no leaks are possible
==24058== 
==24058== For counts of detected and suppressed errors, rerun with: -v
==24058== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test217 ===
The Valgrind memory detector as below:
==24073== Memcheck, a memory error detector
==24073== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24073== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24073== Command: ./impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.nocopy_dealloc.out
==24073== Parent PID: 10074
==24073== 
==24073== 
==24073== HEAP SUMMARY:
==24073==     in use at exit: 0 bytes in 0 blocks
==24073==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24073== 
==24073== All heap blocks were freed -- no leaks are possible
==24073== 
==24073== For counts of detected and suppressed errors, rerun with: -v
==24073== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test218 ===
The Valgrind memory detector as below:
==24089== Memcheck, a memory error detector
==24089== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24089== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24089== Command: ./impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.nocopy_dealloc.out
==24089== Parent PID: 10074
==24089== 
==24089== 
==24089== HEAP SUMMARY:
==24089==     in use at exit: 0 bytes in 0 blocks
==24089==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24089== 
==24089== All heap blocks were freed -- no leaks are possible
==24089== 
==24089== For counts of detected and suppressed errors, rerun with: -v
==24089== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test219 ===
The Valgrind memory detector as below:
==24105== Memcheck, a memory error detector
==24105== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24105== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24105== Command: ./impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.nocopy_dealloc.out
==24105== Parent PID: 10074
==24105== 
==24105== 
==24105== HEAP SUMMARY:
==24105==     in use at exit: 40 bytes in 1 blocks
==24105==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24105== 
==24105== LEAK SUMMARY:
==24105==    definitely lost: 0 bytes in 0 blocks
==24105==    indirectly lost: 0 bytes in 0 blocks
==24105==      possibly lost: 0 bytes in 0 blocks
==24105==    still reachable: 40 bytes in 1 blocks
==24105==         suppressed: 0 bytes in 0 blocks
==24105== Reachable blocks (those to which a pointer was found) are not shown.
==24105== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24105== 
==24105== For counts of detected and suppressed errors, rerun with: -v
==24105== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test22 ===
The Valgrind memory detector as below:
==24120== Memcheck, a memory error detector
==24120== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24120== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24120== Command: ./impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.nocopy_dealloc.out
==24120== Parent PID: 10074
==24120== 
==24120== 
==24120== HEAP SUMMARY:
==24120==     in use at exit: 0 bytes in 0 blocks
==24120==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24120== 
==24120== All heap blocks were freed -- no leaks are possible
==24120== 
==24120== For counts of detected and suppressed errors, rerun with: -v
==24120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test220 ===
The Valgrind memory detector as below:
==24138== Memcheck, a memory error detector
==24138== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24138== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24138== Command: ./impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.nocopy_dealloc.out
==24138== Parent PID: 10074
==24138== 
==24138== 
==24138== HEAP SUMMARY:
==24138==     in use at exit: 0 bytes in 0 blocks
==24138==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24138== 
==24138== All heap blocks were freed -- no leaks are possible
==24138== 
==24138== For counts of detected and suppressed errors, rerun with: -v
==24138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test221 ===
The Valgrind memory detector as below:
==24153== Memcheck, a memory error detector
==24153== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24153== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24153== Command: ./impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.nocopy_dealloc.out
==24153== Parent PID: 10074
==24153== 
==24153== 
==24153== HEAP SUMMARY:
==24153==     in use at exit: 0 bytes in 0 blocks
==24153==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24153== 
==24153== All heap blocks were freed -- no leaks are possible
==24153== 
==24153== For counts of detected and suppressed errors, rerun with: -v
==24153== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test222 ===
The Valgrind memory detector as below:
==24168== Memcheck, a memory error detector
==24168== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24168== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24168== Command: ./impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.nocopy_dealloc.out
==24168== Parent PID: 10074
==24168== 
==24168== 
==24168== HEAP SUMMARY:
==24168==     in use at exit: 0 bytes in 0 blocks
==24168==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24168== 
==24168== All heap blocks were freed -- no leaks are possible
==24168== 
==24168== For counts of detected and suppressed errors, rerun with: -v
==24168== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test223 ===
The Valgrind memory detector as below:
==24183== Memcheck, a memory error detector
==24183== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24183== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24183== Command: ./impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.nocopy_dealloc.out
==24183== Parent PID: 10074
==24183== 
==24183== 
==24183== HEAP SUMMARY:
==24183==     in use at exit: 0 bytes in 0 blocks
==24183==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24183== 
==24183== All heap blocks were freed -- no leaks are possible
==24183== 
==24183== For counts of detected and suppressed errors, rerun with: -v
==24183== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test224 ===
The Valgrind memory detector as below:
==24199== Memcheck, a memory error detector
==24199== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24199== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24199== Command: ./impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.nocopy_dealloc.out
==24199== Parent PID: 10074
==24199== 
==24199== 
==24199== HEAP SUMMARY:
==24199==     in use at exit: 0 bytes in 0 blocks
==24199==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24199== 
==24199== All heap blocks were freed -- no leaks are possible
==24199== 
==24199== For counts of detected and suppressed errors, rerun with: -v
==24199== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test225 ===
The Valgrind memory detector as below:
==24214== Memcheck, a memory error detector
==24214== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24214== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24214== Command: ./impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.nocopy_dealloc.out
==24214== Parent PID: 10074
==24214== 
==24214== 
==24214== HEAP SUMMARY:
==24214==     in use at exit: 0 bytes in 0 blocks
==24214==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24214== 
==24214== All heap blocks were freed -- no leaks are possible
==24214== 
==24214== For counts of detected and suppressed errors, rerun with: -v
==24214== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test226 ===
The Valgrind memory detector as below:
==24229== Memcheck, a memory error detector
==24229== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24229== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24229== Command: ./impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.nocopy_dealloc.out
==24229== Parent PID: 10074
==24229== 
==24229== 
==24229== HEAP SUMMARY:
==24229==     in use at exit: 0 bytes in 0 blocks
==24229==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24229== 
==24229== All heap blocks were freed -- no leaks are possible
==24229== 
==24229== For counts of detected and suppressed errors, rerun with: -v
==24229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test227 ===
The Valgrind memory detector as below:
==24244== Memcheck, a memory error detector
==24244== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24244== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24244== Command: ./impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.nocopy_dealloc.out
==24244== Parent PID: 10074
==24244== 
==24244== 
==24244== HEAP SUMMARY:
==24244==     in use at exit: 0 bytes in 0 blocks
==24244==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24244== 
==24244== All heap blocks were freed -- no leaks are possible
==24244== 
==24244== For counts of detected and suppressed errors, rerun with: -v
==24244== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test228 ===
The Valgrind memory detector as below:
==24260== Memcheck, a memory error detector
==24260== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24260== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24260== Command: ./impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.nocopy_dealloc.out
==24260== Parent PID: 10074
==24260== 
==24260== 
==24260== HEAP SUMMARY:
==24260==     in use at exit: 0 bytes in 0 blocks
==24260==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24260== 
==24260== All heap blocks were freed -- no leaks are possible
==24260== 
==24260== For counts of detected and suppressed errors, rerun with: -v
==24260== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test229 ===
The Valgrind memory detector as below:
==24275== Memcheck, a memory error detector
==24275== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24275== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24275== Command: ./impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.nocopy_dealloc.out
==24275== Parent PID: 10074
==24275== 
==24275== 
==24275== HEAP SUMMARY:
==24275==     in use at exit: 40 bytes in 1 blocks
==24275==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24275== 
==24275== LEAK SUMMARY:
==24275==    definitely lost: 0 bytes in 0 blocks
==24275==    indirectly lost: 0 bytes in 0 blocks
==24275==      possibly lost: 0 bytes in 0 blocks
==24275==    still reachable: 40 bytes in 1 blocks
==24275==         suppressed: 0 bytes in 0 blocks
==24275== Reachable blocks (those to which a pointer was found) are not shown.
==24275== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24275== 
==24275== For counts of detected and suppressed errors, rerun with: -v
==24275== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test23 ===
The Valgrind memory detector as below:
==24290== Memcheck, a memory error detector
==24290== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24290== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24290== Command: ./impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.nocopy_dealloc.out
==24290== Parent PID: 10074
==24290== 
==24290== 
==24290== HEAP SUMMARY:
==24290==     in use at exit: 40 bytes in 1 blocks
==24290==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24290== 
==24290== LEAK SUMMARY:
==24290==    definitely lost: 0 bytes in 0 blocks
==24290==    indirectly lost: 0 bytes in 0 blocks
==24290==      possibly lost: 0 bytes in 0 blocks
==24290==    still reachable: 40 bytes in 1 blocks
==24290==         suppressed: 0 bytes in 0 blocks
==24290== Reachable blocks (those to which a pointer was found) are not shown.
==24290== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24290== 
==24290== For counts of detected and suppressed errors, rerun with: -v
==24290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test230 ===
The Valgrind memory detector as below:
==24307== Memcheck, a memory error detector
==24307== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24307== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24307== Command: ./impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.nocopy_dealloc.out
==24307== Parent PID: 10074
==24307== 
==24307== 
==24307== HEAP SUMMARY:
==24307==     in use at exit: 0 bytes in 0 blocks
==24307==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24307== 
==24307== All heap blocks were freed -- no leaks are possible
==24307== 
==24307== For counts of detected and suppressed errors, rerun with: -v
==24307== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test231 ===
The Valgrind memory detector as below:
==24322== Memcheck, a memory error detector
==24322== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24322== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24322== Command: ./impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.nocopy_dealloc.out
==24322== Parent PID: 10074
==24322== 
==24322== 
==24322== HEAP SUMMARY:
==24322==     in use at exit: 0 bytes in 0 blocks
==24322==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24322== 
==24322== All heap blocks were freed -- no leaks are possible
==24322== 
==24322== For counts of detected and suppressed errors, rerun with: -v
==24322== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test232 ===
The Valgrind memory detector as below:
==24337== Memcheck, a memory error detector
==24337== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24337== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24337== Command: ./impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.nocopy_dealloc.out
==24337== Parent PID: 10074
==24337== 
==24337== 
==24337== HEAP SUMMARY:
==24337==     in use at exit: 0 bytes in 0 blocks
==24337==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24337== 
==24337== All heap blocks were freed -- no leaks are possible
==24337== 
==24337== For counts of detected and suppressed errors, rerun with: -v
==24337== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test233 ===
The Valgrind memory detector as below:
==24352== Memcheck, a memory error detector
==24352== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24352== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24352== Command: ./impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.nocopy_dealloc.out
==24352== Parent PID: 10074
==24352== 
==24352== 
==24352== HEAP SUMMARY:
==24352==     in use at exit: 0 bytes in 0 blocks
==24352==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24352== 
==24352== All heap blocks were freed -- no leaks are possible
==24352== 
==24352== For counts of detected and suppressed errors, rerun with: -v
==24352== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test234 ===
The Valgrind memory detector as below:
==24368== Memcheck, a memory error detector
==24368== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24368== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24368== Command: ./impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.nocopy_dealloc.out
==24368== Parent PID: 10074
==24368== 
==24368== 
==24368== HEAP SUMMARY:
==24368==     in use at exit: 0 bytes in 0 blocks
==24368==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24368== 
==24368== All heap blocks were freed -- no leaks are possible
==24368== 
==24368== For counts of detected and suppressed errors, rerun with: -v
==24368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test235 ===
The Valgrind memory detector as below:
==24383== Memcheck, a memory error detector
==24383== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24383== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24383== Command: ./impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.nocopy_dealloc.out
==24383== Parent PID: 10074
==24383== 
==24383== 
==24383== HEAP SUMMARY:
==24383==     in use at exit: 40 bytes in 1 blocks
==24383==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24383== 
==24383== LEAK SUMMARY:
==24383==    definitely lost: 0 bytes in 0 blocks
==24383==    indirectly lost: 0 bytes in 0 blocks
==24383==      possibly lost: 0 bytes in 0 blocks
==24383==    still reachable: 40 bytes in 1 blocks
==24383==         suppressed: 0 bytes in 0 blocks
==24383== Reachable blocks (those to which a pointer was found) are not shown.
==24383== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24383== 
==24383== For counts of detected and suppressed errors, rerun with: -v
==24383== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test236 ===
The Valgrind memory detector as below:
==24398== Memcheck, a memory error detector
==24398== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24398== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24398== Command: ./impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.nocopy_dealloc.out
==24398== Parent PID: 10074
==24398== 
==24398== 
==24398== HEAP SUMMARY:
==24398==     in use at exit: 40 bytes in 1 blocks
==24398==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24398== 
==24398== LEAK SUMMARY:
==24398==    definitely lost: 0 bytes in 0 blocks
==24398==    indirectly lost: 0 bytes in 0 blocks
==24398==      possibly lost: 0 bytes in 0 blocks
==24398==    still reachable: 40 bytes in 1 blocks
==24398==         suppressed: 0 bytes in 0 blocks
==24398== Reachable blocks (those to which a pointer was found) are not shown.
==24398== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24398== 
==24398== For counts of detected and suppressed errors, rerun with: -v
==24398== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test237 ===
The Valgrind memory detector as below:
==24413== Memcheck, a memory error detector
==24413== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24413== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24413== Command: ./impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.nocopy_dealloc.out
==24413== Parent PID: 10074
==24413== 
==24413== 
==24413== HEAP SUMMARY:
==24413==     in use at exit: 40 bytes in 1 blocks
==24413==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24413== 
==24413== LEAK SUMMARY:
==24413==    definitely lost: 0 bytes in 0 blocks
==24413==    indirectly lost: 0 bytes in 0 blocks
==24413==      possibly lost: 0 bytes in 0 blocks
==24413==    still reachable: 40 bytes in 1 blocks
==24413==         suppressed: 0 bytes in 0 blocks
==24413== Reachable blocks (those to which a pointer was found) are not shown.
==24413== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24413== 
==24413== For counts of detected and suppressed errors, rerun with: -v
==24413== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test238 ===
The Valgrind memory detector as below:
==24430== Memcheck, a memory error detector
==24430== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24430== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24430== Command: ./impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.nocopy_dealloc.out
==24430== Parent PID: 10074
==24430== 
==24430== 
==24430== HEAP SUMMARY:
==24430==     in use at exit: 40 bytes in 1 blocks
==24430==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24430== 
==24430== LEAK SUMMARY:
==24430==    definitely lost: 0 bytes in 0 blocks
==24430==    indirectly lost: 0 bytes in 0 blocks
==24430==      possibly lost: 0 bytes in 0 blocks
==24430==    still reachable: 40 bytes in 1 blocks
==24430==         suppressed: 0 bytes in 0 blocks
==24430== Reachable blocks (those to which a pointer was found) are not shown.
==24430== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24430== 
==24430== For counts of detected and suppressed errors, rerun with: -v
==24430== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test239 ===
The Valgrind memory detector as below:
==24445== Memcheck, a memory error detector
==24445== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24445== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24445== Command: ./impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.nocopy_dealloc.out
==24445== Parent PID: 10074
==24445== 
==24445== 
==24445== HEAP SUMMARY:
==24445==     in use at exit: 40 bytes in 1 blocks
==24445==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24445== 
==24445== LEAK SUMMARY:
==24445==    definitely lost: 0 bytes in 0 blocks
==24445==    indirectly lost: 0 bytes in 0 blocks
==24445==      possibly lost: 0 bytes in 0 blocks
==24445==    still reachable: 40 bytes in 1 blocks
==24445==         suppressed: 0 bytes in 0 blocks
==24445== Reachable blocks (those to which a pointer was found) are not shown.
==24445== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24445== 
==24445== For counts of detected and suppressed errors, rerun with: -v
==24445== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test24 ===
The Valgrind memory detector as below:
==24460== Memcheck, a memory error detector
==24460== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24460== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24460== Command: ./impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.nocopy_dealloc.out
==24460== Parent PID: 10074
==24460== 
==24460== 
==24460== HEAP SUMMARY:
==24460==     in use at exit: 0 bytes in 0 blocks
==24460==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24460== 
==24460== All heap blocks were freed -- no leaks are possible
==24460== 
==24460== For counts of detected and suppressed errors, rerun with: -v
==24460== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test240 ===
The Valgrind memory detector as below:
==24476== Memcheck, a memory error detector
==24476== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24476== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24476== Command: ./impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.nocopy_dealloc.out
==24476== Parent PID: 10074
==24476== 
==24476== 
==24476== HEAP SUMMARY:
==24476==     in use at exit: 0 bytes in 0 blocks
==24476==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24476== 
==24476== All heap blocks were freed -- no leaks are possible
==24476== 
==24476== For counts of detected and suppressed errors, rerun with: -v
==24476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test241 ===
The Valgrind memory detector as below:
==24493== Memcheck, a memory error detector
==24493== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24493== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24493== Command: ./impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.nocopy_dealloc.out
==24493== Parent PID: 10074
==24493== 
==24493== 
==24493== HEAP SUMMARY:
==24493==     in use at exit: 0 bytes in 0 blocks
==24493==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24493== 
==24493== All heap blocks were freed -- no leaks are possible
==24493== 
==24493== For counts of detected and suppressed errors, rerun with: -v
==24493== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test242 ===
The Valgrind memory detector as below:
==24508== Memcheck, a memory error detector
==24508== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24508== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24508== Command: ./impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.nocopy_dealloc.out
==24508== Parent PID: 10074
==24508== 
==24508== 
==24508== HEAP SUMMARY:
==24508==     in use at exit: 0 bytes in 0 blocks
==24508==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24508== 
==24508== All heap blocks were freed -- no leaks are possible
==24508== 
==24508== For counts of detected and suppressed errors, rerun with: -v
==24508== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test243 ===
The Valgrind memory detector as below:
==24523== Memcheck, a memory error detector
==24523== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24523== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24523== Command: ./impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.nocopy_dealloc.out
==24523== Parent PID: 10074
==24523== 
==24523== 
==24523== HEAP SUMMARY:
==24523==     in use at exit: 0 bytes in 0 blocks
==24523==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24523== 
==24523== All heap blocks were freed -- no leaks are possible
==24523== 
==24523== For counts of detected and suppressed errors, rerun with: -v
==24523== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test244 ===
The Valgrind memory detector as below:
==24539== Memcheck, a memory error detector
==24539== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24539== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24539== Command: ./impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.nocopy_dealloc.out
==24539== Parent PID: 10074
==24539== 
==24539== 
==24539== HEAP SUMMARY:
==24539==     in use at exit: 40 bytes in 1 blocks
==24539==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24539== 
==24539== LEAK SUMMARY:
==24539==    definitely lost: 0 bytes in 0 blocks
==24539==    indirectly lost: 0 bytes in 0 blocks
==24539==      possibly lost: 0 bytes in 0 blocks
==24539==    still reachable: 40 bytes in 1 blocks
==24539==         suppressed: 0 bytes in 0 blocks
==24539== Reachable blocks (those to which a pointer was found) are not shown.
==24539== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24539== 
==24539== For counts of detected and suppressed errors, rerun with: -v
==24539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test245 ===
The Valgrind memory detector as below:
==24554== Memcheck, a memory error detector
==24554== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24554== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24554== Command: ./impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.nocopy_dealloc.out
==24554== Parent PID: 10074
==24554== 
==24554== 
==24554== HEAP SUMMARY:
==24554==     in use at exit: 0 bytes in 0 blocks
==24554==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24554== 
==24554== All heap blocks were freed -- no leaks are possible
==24554== 
==24554== For counts of detected and suppressed errors, rerun with: -v
==24554== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test246 ===
The Valgrind memory detector as below:
==24569== Memcheck, a memory error detector
==24569== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24569== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24569== Command: ./impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.nocopy_dealloc.out
==24569== Parent PID: 10074
==24569== 
==24569== 
==24569== HEAP SUMMARY:
==24569==     in use at exit: 0 bytes in 0 blocks
==24569==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24569== 
==24569== All heap blocks were freed -- no leaks are possible
==24569== 
==24569== For counts of detected and suppressed errors, rerun with: -v
==24569== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test247 ===
The Valgrind memory detector as below:
==24584== Memcheck, a memory error detector
==24584== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24584== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24584== Command: ./impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.nocopy_dealloc.out
==24584== Parent PID: 10074
==24584== 
==24584== 
==24584== HEAP SUMMARY:
==24584==     in use at exit: 40 bytes in 1 blocks
==24584==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24584== 
==24584== LEAK SUMMARY:
==24584==    definitely lost: 0 bytes in 0 blocks
==24584==    indirectly lost: 0 bytes in 0 blocks
==24584==      possibly lost: 0 bytes in 0 blocks
==24584==    still reachable: 40 bytes in 1 blocks
==24584==         suppressed: 0 bytes in 0 blocks
==24584== Reachable blocks (those to which a pointer was found) are not shown.
==24584== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24584== 
==24584== For counts of detected and suppressed errors, rerun with: -v
==24584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test248 ===
The Valgrind memory detector as below:
==24600== Memcheck, a memory error detector
==24600== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24600== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24600== Command: ./impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.nocopy_dealloc.out
==24600== Parent PID: 10074
==24600== 
==24600== 
==24600== HEAP SUMMARY:
==24600==     in use at exit: 40 bytes in 1 blocks
==24600==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24600== 
==24600== LEAK SUMMARY:
==24600==    definitely lost: 0 bytes in 0 blocks
==24600==    indirectly lost: 0 bytes in 0 blocks
==24600==      possibly lost: 0 bytes in 0 blocks
==24600==    still reachable: 40 bytes in 1 blocks
==24600==         suppressed: 0 bytes in 0 blocks
==24600== Reachable blocks (those to which a pointer was found) are not shown.
==24600== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24600== 
==24600== For counts of detected and suppressed errors, rerun with: -v
==24600== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test249 ===
The Valgrind memory detector as below:
==24615== Memcheck, a memory error detector
==24615== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24615== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24615== Command: ./impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.nocopy_dealloc.out
==24615== Parent PID: 10074
==24615== 
==24615== 
==24615== HEAP SUMMARY:
==24615==     in use at exit: 40 bytes in 1 blocks
==24615==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24615== 
==24615== LEAK SUMMARY:
==24615==    definitely lost: 0 bytes in 0 blocks
==24615==    indirectly lost: 0 bytes in 0 blocks
==24615==      possibly lost: 0 bytes in 0 blocks
==24615==    still reachable: 40 bytes in 1 blocks
==24615==         suppressed: 0 bytes in 0 blocks
==24615== Reachable blocks (those to which a pointer was found) are not shown.
==24615== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24615== 
==24615== For counts of detected and suppressed errors, rerun with: -v
==24615== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test25 ===
The Valgrind memory detector as below:
==24631== Memcheck, a memory error detector
==24631== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24631== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24631== Command: ./impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.nocopy_dealloc.out
==24631== Parent PID: 10074
==24631== 
==24631== 
==24631== HEAP SUMMARY:
==24631==     in use at exit: 40 bytes in 1 blocks
==24631==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24631== 
==24631== LEAK SUMMARY:
==24631==    definitely lost: 0 bytes in 0 blocks
==24631==    indirectly lost: 0 bytes in 0 blocks
==24631==      possibly lost: 0 bytes in 0 blocks
==24631==    still reachable: 40 bytes in 1 blocks
==24631==         suppressed: 0 bytes in 0 blocks
==24631== Reachable blocks (those to which a pointer was found) are not shown.
==24631== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24631== 
==24631== For counts of detected and suppressed errors, rerun with: -v
==24631== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test250 ===
The Valgrind memory detector as below:
==24646== Memcheck, a memory error detector
==24646== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24646== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24646== Command: ./impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.nocopy_dealloc.out
==24646== Parent PID: 10074
==24646== 
==24646== 
==24646== HEAP SUMMARY:
==24646==     in use at exit: 40 bytes in 1 blocks
==24646==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24646== 
==24646== LEAK SUMMARY:
==24646==    definitely lost: 0 bytes in 0 blocks
==24646==    indirectly lost: 0 bytes in 0 blocks
==24646==      possibly lost: 0 bytes in 0 blocks
==24646==    still reachable: 40 bytes in 1 blocks
==24646==         suppressed: 0 bytes in 0 blocks
==24646== Reachable blocks (those to which a pointer was found) are not shown.
==24646== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24646== 
==24646== For counts of detected and suppressed errors, rerun with: -v
==24646== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test251 ===
The Valgrind memory detector as below:
==24661== Memcheck, a memory error detector
==24661== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24661== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24661== Command: ./impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.nocopy_dealloc.out
==24661== Parent PID: 10074
==24661== 
==24661== 
==24661== HEAP SUMMARY:
==24661==     in use at exit: 0 bytes in 0 blocks
==24661==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24661== 
==24661== All heap blocks were freed -- no leaks are possible
==24661== 
==24661== For counts of detected and suppressed errors, rerun with: -v
==24661== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test252 ===
The Valgrind memory detector as below:
==24676== Memcheck, a memory error detector
==24676== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24676== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24676== Command: ./impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.nocopy_dealloc.out
==24676== Parent PID: 10074
==24676== 
==24676== 
==24676== HEAP SUMMARY:
==24676==     in use at exit: 40 bytes in 1 blocks
==24676==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24676== 
==24676== LEAK SUMMARY:
==24676==    definitely lost: 0 bytes in 0 blocks
==24676==    indirectly lost: 0 bytes in 0 blocks
==24676==      possibly lost: 0 bytes in 0 blocks
==24676==    still reachable: 40 bytes in 1 blocks
==24676==         suppressed: 0 bytes in 0 blocks
==24676== Reachable blocks (those to which a pointer was found) are not shown.
==24676== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24676== 
==24676== For counts of detected and suppressed errors, rerun with: -v
==24676== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test253 ===
The Valgrind memory detector as below:
==24693== Memcheck, a memory error detector
==24693== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24693== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24693== Command: ./impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.nocopy_dealloc.out
==24693== Parent PID: 10074
==24693== 
==24693== 
==24693== HEAP SUMMARY:
==24693==     in use at exit: 0 bytes in 0 blocks
==24693==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24693== 
==24693== All heap blocks were freed -- no leaks are possible
==24693== 
==24693== For counts of detected and suppressed errors, rerun with: -v
==24693== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test254 ===
The Valgrind memory detector as below:
==24708== Memcheck, a memory error detector
==24708== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24708== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24708== Command: ./impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.nocopy_dealloc.out
==24708== Parent PID: 10074
==24708== 
==24708== 
==24708== HEAP SUMMARY:
==24708==     in use at exit: 0 bytes in 0 blocks
==24708==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24708== 
==24708== All heap blocks were freed -- no leaks are possible
==24708== 
==24708== For counts of detected and suppressed errors, rerun with: -v
==24708== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test255 ===
The Valgrind memory detector as below:
==24723== Memcheck, a memory error detector
==24723== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24723== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24723== Command: ./impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.nocopy_dealloc.out
==24723== Parent PID: 10074
==24723== 
==24723== 
==24723== HEAP SUMMARY:
==24723==     in use at exit: 0 bytes in 0 blocks
==24723==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24723== 
==24723== All heap blocks were freed -- no leaks are possible
==24723== 
==24723== For counts of detected and suppressed errors, rerun with: -v
==24723== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test256 ===
The Valgrind memory detector as below:
==24739== Memcheck, a memory error detector
==24739== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24739== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24739== Command: ./impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.nocopy_dealloc.out
==24739== Parent PID: 10074
==24739== 
==24739== 
==24739== HEAP SUMMARY:
==24739==     in use at exit: 0 bytes in 0 blocks
==24739==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24739== 
==24739== All heap blocks were freed -- no leaks are possible
==24739== 
==24739== For counts of detected and suppressed errors, rerun with: -v
==24739== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test257 ===
The Valgrind memory detector as below:
==24754== Memcheck, a memory error detector
==24754== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24754== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24754== Command: ./impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.nocopy_dealloc.out
==24754== Parent PID: 10074
==24754== 
==24754== 
==24754== HEAP SUMMARY:
==24754==     in use at exit: 0 bytes in 0 blocks
==24754==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24754== 
==24754== All heap blocks were freed -- no leaks are possible
==24754== 
==24754== For counts of detected and suppressed errors, rerun with: -v
==24754== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test258 ===
The Valgrind memory detector as below:
==24769== Memcheck, a memory error detector
==24769== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24769== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24769== Command: ./impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.nocopy_dealloc.out
==24769== Parent PID: 10074
==24769== 
==24769== 
==24769== HEAP SUMMARY:
==24769==     in use at exit: 0 bytes in 0 blocks
==24769==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24769== 
==24769== All heap blocks were freed -- no leaks are possible
==24769== 
==24769== For counts of detected and suppressed errors, rerun with: -v
==24769== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test259 ===
The Valgrind memory detector as below:
==24785== Memcheck, a memory error detector
==24785== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24785== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24785== Command: ./impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.nocopy_dealloc.out
==24785== Parent PID: 10074
==24785== 
==24785== 
==24785== HEAP SUMMARY:
==24785==     in use at exit: 0 bytes in 0 blocks
==24785==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24785== 
==24785== All heap blocks were freed -- no leaks are possible
==24785== 
==24785== For counts of detected and suppressed errors, rerun with: -v
==24785== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test26 ===
The Valgrind memory detector as below:
==24800== Memcheck, a memory error detector
==24800== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24800== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24800== Command: ./impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.nocopy_dealloc.out
==24800== Parent PID: 10074
==24800== 
==24800== 
==24800== HEAP SUMMARY:
==24800==     in use at exit: 0 bytes in 0 blocks
==24800==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24800== 
==24800== All heap blocks were freed -- no leaks are possible
==24800== 
==24800== For counts of detected and suppressed errors, rerun with: -v
==24800== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test260 ===
The Valgrind memory detector as below:
==24815== Memcheck, a memory error detector
==24815== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24815== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24815== Command: ./impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.nocopy_dealloc.out
==24815== Parent PID: 10074
==24815== 
==24815== 
==24815== HEAP SUMMARY:
==24815==     in use at exit: 0 bytes in 0 blocks
==24815==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24815== 
==24815== All heap blocks were freed -- no leaks are possible
==24815== 
==24815== For counts of detected and suppressed errors, rerun with: -v
==24815== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test261 ===
The Valgrind memory detector as below:
==24830== Memcheck, a memory error detector
==24830== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24830== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24830== Command: ./impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.nocopy_dealloc.out
==24830== Parent PID: 10074
==24830== 
==24830== 
==24830== HEAP SUMMARY:
==24830==     in use at exit: 0 bytes in 0 blocks
==24830==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24830== 
==24830== All heap blocks were freed -- no leaks are possible
==24830== 
==24830== For counts of detected and suppressed errors, rerun with: -v
==24830== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test262 ===
The Valgrind memory detector as below:
==24846== Memcheck, a memory error detector
==24846== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24846== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24846== Command: ./impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.nocopy_dealloc.out
==24846== Parent PID: 10074
==24846== 
==24846== 
==24846== HEAP SUMMARY:
==24846==     in use at exit: 0 bytes in 0 blocks
==24846==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24846== 
==24846== All heap blocks were freed -- no leaks are possible
==24846== 
==24846== For counts of detected and suppressed errors, rerun with: -v
==24846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test263 ===
The Valgrind memory detector as below:
==24861== Memcheck, a memory error detector
==24861== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24861== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24861== Command: ./impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.nocopy_dealloc.out
==24861== Parent PID: 10074
==24861== 
==24861== 
==24861== HEAP SUMMARY:
==24861==     in use at exit: 40 bytes in 1 blocks
==24861==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24861== 
==24861== LEAK SUMMARY:
==24861==    definitely lost: 0 bytes in 0 blocks
==24861==    indirectly lost: 0 bytes in 0 blocks
==24861==      possibly lost: 0 bytes in 0 blocks
==24861==    still reachable: 40 bytes in 1 blocks
==24861==         suppressed: 0 bytes in 0 blocks
==24861== Reachable blocks (those to which a pointer was found) are not shown.
==24861== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24861== 
==24861== For counts of detected and suppressed errors, rerun with: -v
==24861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test264 ===
The Valgrind memory detector as below:
==24876== Memcheck, a memory error detector
==24876== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24876== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24876== Command: ./impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.nocopy_dealloc.out
==24876== Parent PID: 10074
==24876== 
==24876== 
==24876== HEAP SUMMARY:
==24876==     in use at exit: 0 bytes in 0 blocks
==24876==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24876== 
==24876== All heap blocks were freed -- no leaks are possible
==24876== 
==24876== For counts of detected and suppressed errors, rerun with: -v
==24876== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test265 ===
The Valgrind memory detector as below:
==24891== Memcheck, a memory error detector
==24891== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24891== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24891== Command: ./impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.nocopy_dealloc.out
==24891== Parent PID: 10074
==24891== 
==24891== 
==24891== HEAP SUMMARY:
==24891==     in use at exit: 40 bytes in 1 blocks
==24891==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==24891== 
==24891== LEAK SUMMARY:
==24891==    definitely lost: 0 bytes in 0 blocks
==24891==    indirectly lost: 0 bytes in 0 blocks
==24891==      possibly lost: 0 bytes in 0 blocks
==24891==    still reachable: 40 bytes in 1 blocks
==24891==         suppressed: 0 bytes in 0 blocks
==24891== Reachable blocks (those to which a pointer was found) are not shown.
==24891== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24891== 
==24891== For counts of detected and suppressed errors, rerun with: -v
==24891== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test266 ===
The Valgrind memory detector as below:
==24907== Memcheck, a memory error detector
==24907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24907== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24907== Command: ./impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.nocopy_dealloc.out
==24907== Parent PID: 10074
==24907== 
==24907== 
==24907== HEAP SUMMARY:
==24907==     in use at exit: 0 bytes in 0 blocks
==24907==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24907== 
==24907== All heap blocks were freed -- no leaks are possible
==24907== 
==24907== For counts of detected and suppressed errors, rerun with: -v
==24907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test267 ===
The Valgrind memory detector as below:
==24922== Memcheck, a memory error detector
==24922== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24922== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24922== Command: ./impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.nocopy_dealloc.out
==24922== Parent PID: 10074
==24922== 
==24922== 
==24922== HEAP SUMMARY:
==24922==     in use at exit: 0 bytes in 0 blocks
==24922==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24922== 
==24922== All heap blocks were freed -- no leaks are possible
==24922== 
==24922== For counts of detected and suppressed errors, rerun with: -v
==24922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test268 ===
The Valgrind memory detector as below:
==24937== Memcheck, a memory error detector
==24937== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24937== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24937== Command: ./impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.nocopy_dealloc.out
==24937== Parent PID: 10074
==24937== 
==24937== 
==24937== HEAP SUMMARY:
==24937==     in use at exit: 0 bytes in 0 blocks
==24937==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24937== 
==24937== All heap blocks were freed -- no leaks are possible
==24937== 
==24937== For counts of detected and suppressed errors, rerun with: -v
==24937== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test269 ===
The Valgrind memory detector as below:
==24955== Memcheck, a memory error detector
==24955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24955== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24955== Command: ./impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.nocopy_dealloc.out
==24955== Parent PID: 10074
==24955== 
==24955== 
==24955== HEAP SUMMARY:
==24955==     in use at exit: 0 bytes in 0 blocks
==24955==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24955== 
==24955== All heap blocks were freed -- no leaks are possible
==24955== 
==24955== For counts of detected and suppressed errors, rerun with: -v
==24955== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test27 ===
The Valgrind memory detector as below:
==24970== Memcheck, a memory error detector
==24970== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24970== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24970== Command: ./impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.nocopy_dealloc.out
==24970== Parent PID: 10074
==24970== 
==24970== 
==24970== HEAP SUMMARY:
==24970==     in use at exit: 0 bytes in 0 blocks
==24970==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24970== 
==24970== All heap blocks were freed -- no leaks are possible
==24970== 
==24970== For counts of detected and suppressed errors, rerun with: -v
==24970== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test270 ===
The Valgrind memory detector as below:
==24985== Memcheck, a memory error detector
==24985== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==24985== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==24985== Command: ./impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.nocopy_dealloc.out
==24985== Parent PID: 10074
==24985== 
==24985== 
==24985== HEAP SUMMARY:
==24985==     in use at exit: 0 bytes in 0 blocks
==24985==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==24985== 
==24985== All heap blocks were freed -- no leaks are possible
==24985== 
==24985== For counts of detected and suppressed errors, rerun with: -v
==24985== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test271 ===
The Valgrind memory detector as below:
==25000== Memcheck, a memory error detector
==25000== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25000== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25000== Command: ./impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.nocopy_dealloc.out
==25000== Parent PID: 10074
==25000== 
==25000== 
==25000== HEAP SUMMARY:
==25000==     in use at exit: 0 bytes in 0 blocks
==25000==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25000== 
==25000== All heap blocks were freed -- no leaks are possible
==25000== 
==25000== For counts of detected and suppressed errors, rerun with: -v
==25000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test272 ===
The Valgrind memory detector as below:
==25016== Memcheck, a memory error detector
==25016== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25016== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25016== Command: ./impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.nocopy_dealloc.out
==25016== Parent PID: 10074
==25016== 
==25016== 
==25016== HEAP SUMMARY:
==25016==     in use at exit: 40 bytes in 1 blocks
==25016==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25016== 
==25016== LEAK SUMMARY:
==25016==    definitely lost: 0 bytes in 0 blocks
==25016==    indirectly lost: 0 bytes in 0 blocks
==25016==      possibly lost: 0 bytes in 0 blocks
==25016==    still reachable: 40 bytes in 1 blocks
==25016==         suppressed: 0 bytes in 0 blocks
==25016== Reachable blocks (those to which a pointer was found) are not shown.
==25016== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25016== 
==25016== For counts of detected and suppressed errors, rerun with: -v
==25016== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test273 ===
The Valgrind memory detector as below:
==25031== Memcheck, a memory error detector
==25031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25031== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25031== Command: ./impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.nocopy_dealloc.out
==25031== Parent PID: 10074
==25031== 
==25031== 
==25031== HEAP SUMMARY:
==25031==     in use at exit: 0 bytes in 0 blocks
==25031==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25031== 
==25031== All heap blocks were freed -- no leaks are possible
==25031== 
==25031== For counts of detected and suppressed errors, rerun with: -v
==25031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test274 ===
The Valgrind memory detector as below:
==25047== Memcheck, a memory error detector
==25047== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25047== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25047== Command: ./impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.nocopy_dealloc.out
==25047== Parent PID: 10074
==25047== 
==25047== 
==25047== HEAP SUMMARY:
==25047==     in use at exit: 0 bytes in 0 blocks
==25047==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25047== 
==25047== All heap blocks were freed -- no leaks are possible
==25047== 
==25047== For counts of detected and suppressed errors, rerun with: -v
==25047== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test275 ===
The Valgrind memory detector as below:
==25105== Memcheck, a memory error detector
==25105== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25105== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25105== Command: ./impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.nocopy_dealloc.out
==25105== Parent PID: 10074
==25105== 
==25105== 
==25105== HEAP SUMMARY:
==25105==     in use at exit: 0 bytes in 0 blocks
==25105==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25105== 
==25105== All heap blocks were freed -- no leaks are possible
==25105== 
==25105== For counts of detected and suppressed errors, rerun with: -v
==25105== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test276 ===
The Valgrind memory detector as below:
==25120== Memcheck, a memory error detector
==25120== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25120== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25120== Command: ./impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.nocopy_dealloc.out
==25120== Parent PID: 10074
==25120== 
==25120== 
==25120== HEAP SUMMARY:
==25120==     in use at exit: 0 bytes in 0 blocks
==25120==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25120== 
==25120== All heap blocks were freed -- no leaks are possible
==25120== 
==25120== For counts of detected and suppressed errors, rerun with: -v
==25120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test277 ===
The Valgrind memory detector as below:
==25135== Memcheck, a memory error detector
==25135== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25135== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25135== Command: ./impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.nocopy_dealloc.out
==25135== Parent PID: 10074
==25135== 
==25135== 
==25135== HEAP SUMMARY:
==25135==     in use at exit: 0 bytes in 0 blocks
==25135==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25135== 
==25135== All heap blocks were freed -- no leaks are possible
==25135== 
==25135== For counts of detected and suppressed errors, rerun with: -v
==25135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test278 ===
The Valgrind memory detector as below:
==25151== Memcheck, a memory error detector
==25151== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25151== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25151== Command: ./impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.nocopy_dealloc.out
==25151== Parent PID: 10074
==25151== 
==25151== 
==25151== HEAP SUMMARY:
==25151==     in use at exit: 0 bytes in 0 blocks
==25151==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25151== 
==25151== All heap blocks were freed -- no leaks are possible
==25151== 
==25151== For counts of detected and suppressed errors, rerun with: -v
==25151== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test279 ===
The Valgrind memory detector as below:
==25166== Memcheck, a memory error detector
==25166== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25166== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25166== Command: ./impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.nocopy_dealloc.out
==25166== Parent PID: 10074
==25166== 
==25166== 
==25166== HEAP SUMMARY:
==25166==     in use at exit: 0 bytes in 0 blocks
==25166==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25166== 
==25166== All heap blocks were freed -- no leaks are possible
==25166== 
==25166== For counts of detected and suppressed errors, rerun with: -v
==25166== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test28 ===
The Valgrind memory detector as below:
==25181== Memcheck, a memory error detector
==25181== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25181== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25181== Command: ./impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.nocopy_dealloc.out
==25181== Parent PID: 10074
==25181== 
==25181== 
==25181== HEAP SUMMARY:
==25181==     in use at exit: 0 bytes in 0 blocks
==25181==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25181== 
==25181== All heap blocks were freed -- no leaks are possible
==25181== 
==25181== For counts of detected and suppressed errors, rerun with: -v
==25181== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test280 ===
The Valgrind memory detector as below:
==25198== Memcheck, a memory error detector
==25198== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25198== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25198== Command: ./impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.nocopy_dealloc.out
==25198== Parent PID: 10074
==25198== 
==25198== 
==25198== HEAP SUMMARY:
==25198==     in use at exit: 0 bytes in 0 blocks
==25198==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25198== 
==25198== All heap blocks were freed -- no leaks are possible
==25198== 
==25198== For counts of detected and suppressed errors, rerun with: -v
==25198== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test281 ===
The Valgrind memory detector as below:
==25214== Memcheck, a memory error detector
==25214== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25214== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25214== Command: ./impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.nocopy_dealloc.out
==25214== Parent PID: 10074
==25214== 
==25214== 
==25214== HEAP SUMMARY:
==25214==     in use at exit: 40 bytes in 1 blocks
==25214==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25214== 
==25214== LEAK SUMMARY:
==25214==    definitely lost: 0 bytes in 0 blocks
==25214==    indirectly lost: 0 bytes in 0 blocks
==25214==      possibly lost: 0 bytes in 0 blocks
==25214==    still reachable: 40 bytes in 1 blocks
==25214==         suppressed: 0 bytes in 0 blocks
==25214== Reachable blocks (those to which a pointer was found) are not shown.
==25214== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25214== 
==25214== For counts of detected and suppressed errors, rerun with: -v
==25214== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test282 ===
The Valgrind memory detector as below:
==25229== Memcheck, a memory error detector
==25229== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25229== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25229== Command: ./impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.nocopy_dealloc.out
==25229== Parent PID: 10074
==25229== 
==25229== 
==25229== HEAP SUMMARY:
==25229==     in use at exit: 40 bytes in 1 blocks
==25229==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25229== 
==25229== LEAK SUMMARY:
==25229==    definitely lost: 0 bytes in 0 blocks
==25229==    indirectly lost: 0 bytes in 0 blocks
==25229==      possibly lost: 0 bytes in 0 blocks
==25229==    still reachable: 40 bytes in 1 blocks
==25229==         suppressed: 0 bytes in 0 blocks
==25229== Reachable blocks (those to which a pointer was found) are not shown.
==25229== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25229== 
==25229== For counts of detected and suppressed errors, rerun with: -v
==25229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test283 ===
The Valgrind memory detector as below:
==25244== Memcheck, a memory error detector
==25244== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25244== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25244== Command: ./impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.nocopy_dealloc.out
==25244== Parent PID: 10074
==25244== 
==25244== 
==25244== HEAP SUMMARY:
==25244==     in use at exit: 0 bytes in 0 blocks
==25244==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25244== 
==25244== All heap blocks were freed -- no leaks are possible
==25244== 
==25244== For counts of detected and suppressed errors, rerun with: -v
==25244== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test284 ===
The Valgrind memory detector as below:
==25259== Memcheck, a memory error detector
==25259== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25259== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25259== Command: ./impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.nocopy_dealloc.out
==25259== Parent PID: 10074
==25259== 
==25259== 
==25259== HEAP SUMMARY:
==25259==     in use at exit: 40 bytes in 1 blocks
==25259==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25259== 
==25259== LEAK SUMMARY:
==25259==    definitely lost: 0 bytes in 0 blocks
==25259==    indirectly lost: 0 bytes in 0 blocks
==25259==      possibly lost: 0 bytes in 0 blocks
==25259==    still reachable: 40 bytes in 1 blocks
==25259==         suppressed: 0 bytes in 0 blocks
==25259== Reachable blocks (those to which a pointer was found) are not shown.
==25259== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25259== 
==25259== For counts of detected and suppressed errors, rerun with: -v
==25259== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test285 ===
The Valgrind memory detector as below:
==25276== Memcheck, a memory error detector
==25276== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25276== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25276== Command: ./impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.nocopy_dealloc.out
==25276== Parent PID: 10074
==25276== 
==25276== 
==25276== HEAP SUMMARY:
==25276==     in use at exit: 0 bytes in 0 blocks
==25276==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25276== 
==25276== All heap blocks were freed -- no leaks are possible
==25276== 
==25276== For counts of detected and suppressed errors, rerun with: -v
==25276== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test286 ===
The Valgrind memory detector as below:
==25291== Memcheck, a memory error detector
==25291== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25291== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25291== Command: ./impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.nocopy_dealloc.out
==25291== Parent PID: 10074
==25291== 
==25291== 
==25291== HEAP SUMMARY:
==25291==     in use at exit: 0 bytes in 0 blocks
==25291==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25291== 
==25291== All heap blocks were freed -- no leaks are possible
==25291== 
==25291== For counts of detected and suppressed errors, rerun with: -v
==25291== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test287 ===
The Valgrind memory detector as below:
==25306== Memcheck, a memory error detector
==25306== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25306== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25306== Command: ./impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.nocopy_dealloc.out
==25306== Parent PID: 10074
==25306== 
==25306== 
==25306== HEAP SUMMARY:
==25306==     in use at exit: 40 bytes in 1 blocks
==25306==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25306== 
==25306== LEAK SUMMARY:
==25306==    definitely lost: 0 bytes in 0 blocks
==25306==    indirectly lost: 0 bytes in 0 blocks
==25306==      possibly lost: 0 bytes in 0 blocks
==25306==    still reachable: 40 bytes in 1 blocks
==25306==         suppressed: 0 bytes in 0 blocks
==25306== Reachable blocks (those to which a pointer was found) are not shown.
==25306== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25306== 
==25306== For counts of detected and suppressed errors, rerun with: -v
==25306== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test288 ===
The Valgrind memory detector as below:
==25322== Memcheck, a memory error detector
==25322== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25322== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25322== Command: ./impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.nocopy_dealloc.out
==25322== Parent PID: 10074
==25322== 
==25322== 
==25322== HEAP SUMMARY:
==25322==     in use at exit: 40 bytes in 1 blocks
==25322==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25322== 
==25322== LEAK SUMMARY:
==25322==    definitely lost: 0 bytes in 0 blocks
==25322==    indirectly lost: 0 bytes in 0 blocks
==25322==      possibly lost: 0 bytes in 0 blocks
==25322==    still reachable: 40 bytes in 1 blocks
==25322==         suppressed: 0 bytes in 0 blocks
==25322== Reachable blocks (those to which a pointer was found) are not shown.
==25322== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25322== 
==25322== For counts of detected and suppressed errors, rerun with: -v
==25322== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test289 ===
The Valgrind memory detector as below:
==25337== Memcheck, a memory error detector
==25337== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25337== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25337== Command: ./impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.nocopy_dealloc.out
==25337== Parent PID: 10074
==25337== 
==25337== 
==25337== HEAP SUMMARY:
==25337==     in use at exit: 40 bytes in 1 blocks
==25337==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25337== 
==25337== LEAK SUMMARY:
==25337==    definitely lost: 0 bytes in 0 blocks
==25337==    indirectly lost: 0 bytes in 0 blocks
==25337==      possibly lost: 0 bytes in 0 blocks
==25337==    still reachable: 40 bytes in 1 blocks
==25337==         suppressed: 0 bytes in 0 blocks
==25337== Reachable blocks (those to which a pointer was found) are not shown.
==25337== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25337== 
==25337== For counts of detected and suppressed errors, rerun with: -v
==25337== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test29 ===
The Valgrind memory detector as below:
==25352== Memcheck, a memory error detector
==25352== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25352== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25352== Command: ./impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.nocopy_dealloc.out
==25352== Parent PID: 10074
==25352== 
==25352== 
==25352== HEAP SUMMARY:
==25352==     in use at exit: 0 bytes in 0 blocks
==25352==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25352== 
==25352== All heap blocks were freed -- no leaks are possible
==25352== 
==25352== For counts of detected and suppressed errors, rerun with: -v
==25352== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test290 ===
The Valgrind memory detector as below:
==25368== Memcheck, a memory error detector
==25368== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25368== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25368== Command: ./impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.nocopy_dealloc.out
==25368== Parent PID: 10074
==25368== 
==25368== 
==25368== HEAP SUMMARY:
==25368==     in use at exit: 40 bytes in 1 blocks
==25368==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25368== 
==25368== LEAK SUMMARY:
==25368==    definitely lost: 0 bytes in 0 blocks
==25368==    indirectly lost: 0 bytes in 0 blocks
==25368==      possibly lost: 0 bytes in 0 blocks
==25368==    still reachable: 40 bytes in 1 blocks
==25368==         suppressed: 0 bytes in 0 blocks
==25368== Reachable blocks (those to which a pointer was found) are not shown.
==25368== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25368== 
==25368== For counts of detected and suppressed errors, rerun with: -v
==25368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test291 ===
The Valgrind memory detector as below:
==25384== Memcheck, a memory error detector
==25384== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25384== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25384== Command: ./impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.nocopy_dealloc.out
==25384== Parent PID: 10074
==25384== 
==25384== 
==25384== HEAP SUMMARY:
==25384==     in use at exit: 0 bytes in 0 blocks
==25384==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25384== 
==25384== All heap blocks were freed -- no leaks are possible
==25384== 
==25384== For counts of detected and suppressed errors, rerun with: -v
==25384== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test292 ===
The Valgrind memory detector as below:
==25399== Memcheck, a memory error detector
==25399== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25399== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25399== Command: ./impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.nocopy_dealloc.out
==25399== Parent PID: 10074
==25399== 
==25399== 
==25399== HEAP SUMMARY:
==25399==     in use at exit: 40 bytes in 1 blocks
==25399==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25399== 
==25399== LEAK SUMMARY:
==25399==    definitely lost: 0 bytes in 0 blocks
==25399==    indirectly lost: 0 bytes in 0 blocks
==25399==      possibly lost: 0 bytes in 0 blocks
==25399==    still reachable: 40 bytes in 1 blocks
==25399==         suppressed: 0 bytes in 0 blocks
==25399== Reachable blocks (those to which a pointer was found) are not shown.
==25399== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25399== 
==25399== For counts of detected and suppressed errors, rerun with: -v
==25399== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test293 ===
The Valgrind memory detector as below:
==25414== Memcheck, a memory error detector
==25414== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25414== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25414== Command: ./impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.nocopy_dealloc.out
==25414== Parent PID: 10074
==25414== 
==25414== 
==25414== HEAP SUMMARY:
==25414==     in use at exit: 0 bytes in 0 blocks
==25414==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25414== 
==25414== All heap blocks were freed -- no leaks are possible
==25414== 
==25414== For counts of detected and suppressed errors, rerun with: -v
==25414== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test294 ===
The Valgrind memory detector as below:
==25429== Memcheck, a memory error detector
==25429== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25429== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25429== Command: ./impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.nocopy_dealloc.out
==25429== Parent PID: 10074
==25429== 
==25429== 
==25429== HEAP SUMMARY:
==25429==     in use at exit: 40 bytes in 1 blocks
==25429==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25429== 
==25429== LEAK SUMMARY:
==25429==    definitely lost: 0 bytes in 0 blocks
==25429==    indirectly lost: 0 bytes in 0 blocks
==25429==      possibly lost: 0 bytes in 0 blocks
==25429==    still reachable: 40 bytes in 1 blocks
==25429==         suppressed: 0 bytes in 0 blocks
==25429== Reachable blocks (those to which a pointer was found) are not shown.
==25429== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25429== 
==25429== For counts of detected and suppressed errors, rerun with: -v
==25429== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test295 ===
The Valgrind memory detector as below:
==25445== Memcheck, a memory error detector
==25445== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25445== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25445== Command: ./impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.nocopy_dealloc.out
==25445== Parent PID: 10074
==25445== 
==25445== 
==25445== HEAP SUMMARY:
==25445==     in use at exit: 40 bytes in 1 blocks
==25445==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25445== 
==25445== LEAK SUMMARY:
==25445==    definitely lost: 0 bytes in 0 blocks
==25445==    indirectly lost: 0 bytes in 0 blocks
==25445==      possibly lost: 0 bytes in 0 blocks
==25445==    still reachable: 40 bytes in 1 blocks
==25445==         suppressed: 0 bytes in 0 blocks
==25445== Reachable blocks (those to which a pointer was found) are not shown.
==25445== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25445== 
==25445== For counts of detected and suppressed errors, rerun with: -v
==25445== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test296 ===
The Valgrind memory detector as below:
==25460== Memcheck, a memory error detector
==25460== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25460== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25460== Command: ./impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.nocopy_dealloc.out
==25460== Parent PID: 10074
==25460== 
==25460== 
==25460== HEAP SUMMARY:
==25460==     in use at exit: 0 bytes in 0 blocks
==25460==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25460== 
==25460== All heap blocks were freed -- no leaks are possible
==25460== 
==25460== For counts of detected and suppressed errors, rerun with: -v
==25460== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test297 ===
The Valgrind memory detector as below:
==25475== Memcheck, a memory error detector
==25475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25475== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25475== Command: ./impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.nocopy_dealloc.out
==25475== Parent PID: 10074
==25475== 
==25475== 
==25475== HEAP SUMMARY:
==25475==     in use at exit: 0 bytes in 0 blocks
==25475==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25475== 
==25475== All heap blocks were freed -- no leaks are possible
==25475== 
==25475== For counts of detected and suppressed errors, rerun with: -v
==25475== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test298 ===
The Valgrind memory detector as below:
==25491== Memcheck, a memory error detector
==25491== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25491== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25491== Command: ./impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.nocopy_dealloc.out
==25491== Parent PID: 10074
==25491== 
==25491== 
==25491== HEAP SUMMARY:
==25491==     in use at exit: 0 bytes in 0 blocks
==25491==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25491== 
==25491== All heap blocks were freed -- no leaks are possible
==25491== 
==25491== For counts of detected and suppressed errors, rerun with: -v
==25491== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test299 ===
The Valgrind memory detector as below:
==25506== Memcheck, a memory error detector
==25506== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25506== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25506== Command: ./impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.nocopy_dealloc.out
==25506== Parent PID: 10074
==25506== 
==25506== 
==25506== HEAP SUMMARY:
==25506==     in use at exit: 40 bytes in 1 blocks
==25506==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25506== 
==25506== LEAK SUMMARY:
==25506==    definitely lost: 0 bytes in 0 blocks
==25506==    indirectly lost: 0 bytes in 0 blocks
==25506==      possibly lost: 0 bytes in 0 blocks
==25506==    still reachable: 40 bytes in 1 blocks
==25506==         suppressed: 0 bytes in 0 blocks
==25506== Reachable blocks (those to which a pointer was found) are not shown.
==25506== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25506== 
==25506== For counts of detected and suppressed errors, rerun with: -v
==25506== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test3 ===
The Valgrind memory detector as below:
==25521== Memcheck, a memory error detector
==25521== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25521== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25521== Command: ./impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.nocopy_dealloc.out
==25521== Parent PID: 10074
==25521== 
==25521== 
==25521== HEAP SUMMARY:
==25521==     in use at exit: 40 bytes in 1 blocks
==25521==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25521== 
==25521== LEAK SUMMARY:
==25521==    definitely lost: 0 bytes in 0 blocks
==25521==    indirectly lost: 0 bytes in 0 blocks
==25521==      possibly lost: 0 bytes in 0 blocks
==25521==    still reachable: 40 bytes in 1 blocks
==25521==         suppressed: 0 bytes in 0 blocks
==25521== Reachable blocks (those to which a pointer was found) are not shown.
==25521== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25521== 
==25521== For counts of detected and suppressed errors, rerun with: -v
==25521== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test30 ===
The Valgrind memory detector as below:
==25536== Memcheck, a memory error detector
==25536== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25536== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25536== Command: ./impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.nocopy_dealloc.out
==25536== Parent PID: 10074
==25536== 
==25536== 
==25536== HEAP SUMMARY:
==25536==     in use at exit: 0 bytes in 0 blocks
==25536==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25536== 
==25536== All heap blocks were freed -- no leaks are possible
==25536== 
==25536== For counts of detected and suppressed errors, rerun with: -v
==25536== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test300 ===
The Valgrind memory detector as below:
==25553== Memcheck, a memory error detector
==25553== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25553== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25553== Command: ./impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.nocopy_dealloc.out
==25553== Parent PID: 10074
==25553== 
==25553== 
==25553== HEAP SUMMARY:
==25553==     in use at exit: 40 bytes in 1 blocks
==25553==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25553== 
==25553== LEAK SUMMARY:
==25553==    definitely lost: 0 bytes in 0 blocks
==25553==    indirectly lost: 0 bytes in 0 blocks
==25553==      possibly lost: 0 bytes in 0 blocks
==25553==    still reachable: 40 bytes in 1 blocks
==25553==         suppressed: 0 bytes in 0 blocks
==25553== Reachable blocks (those to which a pointer was found) are not shown.
==25553== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25553== 
==25553== For counts of detected and suppressed errors, rerun with: -v
==25553== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test301 ===
The Valgrind memory detector as below:
==25568== Memcheck, a memory error detector
==25568== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25568== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25568== Command: ./impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.nocopy_dealloc.out
==25568== Parent PID: 10074
==25568== 
==25568== 
==25568== HEAP SUMMARY:
==25568==     in use at exit: 0 bytes in 0 blocks
==25568==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25568== 
==25568== All heap blocks were freed -- no leaks are possible
==25568== 
==25568== For counts of detected and suppressed errors, rerun with: -v
==25568== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test302 ===
The Valgrind memory detector as below:
==25583== Memcheck, a memory error detector
==25583== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25583== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25583== Command: ./impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.nocopy_dealloc.out
==25583== Parent PID: 10074
==25583== 
==25583== 
==25583== HEAP SUMMARY:
==25583==     in use at exit: 0 bytes in 0 blocks
==25583==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25583== 
==25583== All heap blocks were freed -- no leaks are possible
==25583== 
==25583== For counts of detected and suppressed errors, rerun with: -v
==25583== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test303 ===
The Valgrind memory detector as below:
==25599== Memcheck, a memory error detector
==25599== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25599== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25599== Command: ./impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.nocopy_dealloc.out
==25599== Parent PID: 10074
==25599== 
==25599== 
==25599== HEAP SUMMARY:
==25599==     in use at exit: 0 bytes in 0 blocks
==25599==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25599== 
==25599== All heap blocks were freed -- no leaks are possible
==25599== 
==25599== For counts of detected and suppressed errors, rerun with: -v
==25599== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test304 ===
The Valgrind memory detector as below:
==25614== Memcheck, a memory error detector
==25614== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25614== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25614== Command: ./impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.nocopy_dealloc.out
==25614== Parent PID: 10074
==25614== 
==25614== 
==25614== HEAP SUMMARY:
==25614==     in use at exit: 40 bytes in 1 blocks
==25614==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25614== 
==25614== LEAK SUMMARY:
==25614==    definitely lost: 0 bytes in 0 blocks
==25614==    indirectly lost: 0 bytes in 0 blocks
==25614==      possibly lost: 0 bytes in 0 blocks
==25614==    still reachable: 40 bytes in 1 blocks
==25614==         suppressed: 0 bytes in 0 blocks
==25614== Reachable blocks (those to which a pointer was found) are not shown.
==25614== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25614== 
==25614== For counts of detected and suppressed errors, rerun with: -v
==25614== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test305 ===
The Valgrind memory detector as below:
==25629== Memcheck, a memory error detector
==25629== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25629== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25629== Command: ./impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.nocopy_dealloc.out
==25629== Parent PID: 10074
==25629== 
==25629== 
==25629== HEAP SUMMARY:
==25629==     in use at exit: 0 bytes in 0 blocks
==25629==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25629== 
==25629== All heap blocks were freed -- no leaks are possible
==25629== 
==25629== For counts of detected and suppressed errors, rerun with: -v
==25629== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test306 ===
The Valgrind memory detector as below:
==25645== Memcheck, a memory error detector
==25645== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25645== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25645== Command: ./impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.nocopy_dealloc.out
==25645== Parent PID: 10074
==25645== 
==25645== 
==25645== HEAP SUMMARY:
==25645==     in use at exit: 40 bytes in 1 blocks
==25645==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25645== 
==25645== LEAK SUMMARY:
==25645==    definitely lost: 0 bytes in 0 blocks
==25645==    indirectly lost: 0 bytes in 0 blocks
==25645==      possibly lost: 0 bytes in 0 blocks
==25645==    still reachable: 40 bytes in 1 blocks
==25645==         suppressed: 0 bytes in 0 blocks
==25645== Reachable blocks (those to which a pointer was found) are not shown.
==25645== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25645== 
==25645== For counts of detected and suppressed errors, rerun with: -v
==25645== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test307 ===
The Valgrind memory detector as below:
==25660== Memcheck, a memory error detector
==25660== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25660== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25660== Command: ./impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.nocopy_dealloc.out
==25660== Parent PID: 10074
==25660== 
==25660== 
==25660== HEAP SUMMARY:
==25660==     in use at exit: 0 bytes in 0 blocks
==25660==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25660== 
==25660== All heap blocks were freed -- no leaks are possible
==25660== 
==25660== For counts of detected and suppressed errors, rerun with: -v
==25660== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test308 ===
The Valgrind memory detector as below:
==25675== Memcheck, a memory error detector
==25675== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25675== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25675== Command: ./impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.nocopy_dealloc.out
==25675== Parent PID: 10074
==25675== 
==25675== 
==25675== HEAP SUMMARY:
==25675==     in use at exit: 40 bytes in 1 blocks
==25675==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25675== 
==25675== LEAK SUMMARY:
==25675==    definitely lost: 0 bytes in 0 blocks
==25675==    indirectly lost: 0 bytes in 0 blocks
==25675==      possibly lost: 0 bytes in 0 blocks
==25675==    still reachable: 40 bytes in 1 blocks
==25675==         suppressed: 0 bytes in 0 blocks
==25675== Reachable blocks (those to which a pointer was found) are not shown.
==25675== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25675== 
==25675== For counts of detected and suppressed errors, rerun with: -v
==25675== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test309 ===
The Valgrind memory detector as below:
==25691== Memcheck, a memory error detector
==25691== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25691== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25691== Command: ./impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.nocopy_dealloc.out
==25691== Parent PID: 10074
==25691== 
==25691== 
==25691== HEAP SUMMARY:
==25691==     in use at exit: 0 bytes in 0 blocks
==25691==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25691== 
==25691== All heap blocks were freed -- no leaks are possible
==25691== 
==25691== For counts of detected and suppressed errors, rerun with: -v
==25691== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test31 ===
The Valgrind memory detector as below:
==25706== Memcheck, a memory error detector
==25706== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25706== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25706== Command: ./impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.nocopy_dealloc.out
==25706== Parent PID: 10074
==25706== 
==25706== 
==25706== HEAP SUMMARY:
==25706==     in use at exit: 0 bytes in 0 blocks
==25706==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25706== 
==25706== All heap blocks were freed -- no leaks are possible
==25706== 
==25706== For counts of detected and suppressed errors, rerun with: -v
==25706== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test310 ===
The Valgrind memory detector as below:
==25721== Memcheck, a memory error detector
==25721== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25721== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25721== Command: ./impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.nocopy_dealloc.out
==25721== Parent PID: 10074
==25721== 
==25721== 
==25721== HEAP SUMMARY:
==25721==     in use at exit: 0 bytes in 0 blocks
==25721==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25721== 
==25721== All heap blocks were freed -- no leaks are possible
==25721== 
==25721== For counts of detected and suppressed errors, rerun with: -v
==25721== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test311 ===
The Valgrind memory detector as below:
==25737== Memcheck, a memory error detector
==25737== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25737== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25737== Command: ./impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.nocopy_dealloc.out
==25737== Parent PID: 10074
==25737== 
==25737== 
==25737== HEAP SUMMARY:
==25737==     in use at exit: 40 bytes in 1 blocks
==25737==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25737== 
==25737== LEAK SUMMARY:
==25737==    definitely lost: 0 bytes in 0 blocks
==25737==    indirectly lost: 0 bytes in 0 blocks
==25737==      possibly lost: 0 bytes in 0 blocks
==25737==    still reachable: 40 bytes in 1 blocks
==25737==         suppressed: 0 bytes in 0 blocks
==25737== Reachable blocks (those to which a pointer was found) are not shown.
==25737== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25737== 
==25737== For counts of detected and suppressed errors, rerun with: -v
==25737== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test312 ===
The Valgrind memory detector as below:
==25752== Memcheck, a memory error detector
==25752== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25752== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25752== Command: ./impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.nocopy_dealloc.out
==25752== Parent PID: 10074
==25752== 
==25752== 
==25752== HEAP SUMMARY:
==25752==     in use at exit: 0 bytes in 0 blocks
==25752==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==25752== 
==25752== All heap blocks were freed -- no leaks are possible
==25752== 
==25752== For counts of detected and suppressed errors, rerun with: -v
==25752== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test313 ===
The Valgrind memory detector as below:
==25767== Memcheck, a memory error detector
==25767== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25767== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25767== Command: ./impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.nocopy_dealloc.out
==25767== Parent PID: 10074
==25767== 
==25767== 
==25767== HEAP SUMMARY:
==25767==     in use at exit: 40 bytes in 1 blocks
==25767==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25767== 
==25767== LEAK SUMMARY:
==25767==    definitely lost: 0 bytes in 0 blocks
==25767==    indirectly lost: 0 bytes in 0 blocks
==25767==      possibly lost: 0 bytes in 0 blocks
==25767==    still reachable: 40 bytes in 1 blocks
==25767==         suppressed: 0 bytes in 0 blocks
==25767== Reachable blocks (those to which a pointer was found) are not shown.
==25767== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25767== 
==25767== For counts of detected and suppressed errors, rerun with: -v
==25767== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test314 ===
The Valgrind memory detector as below:
==25782== Memcheck, a memory error detector
==25782== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25782== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25782== Command: ./impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.nocopy_dealloc.out
==25782== Parent PID: 10074
==25782== 
==25782== 
==25782== HEAP SUMMARY:
==25782==     in use at exit: 40 bytes in 1 blocks
==25782==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25782== 
==25782== LEAK SUMMARY:
==25782==    definitely lost: 0 bytes in 0 blocks
==25782==    indirectly lost: 0 bytes in 0 blocks
==25782==      possibly lost: 0 bytes in 0 blocks
==25782==    still reachable: 40 bytes in 1 blocks
==25782==         suppressed: 0 bytes in 0 blocks
==25782== Reachable blocks (those to which a pointer was found) are not shown.
==25782== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25782== 
==25782== For counts of detected and suppressed errors, rerun with: -v
==25782== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test315 ===
The Valgrind memory detector as below:
==25799== Memcheck, a memory error detector
==25799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25799== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25799== Command: ./impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.nocopy_dealloc.out
==25799== Parent PID: 10074
==25799== 
==25799== 
==25799== HEAP SUMMARY:
==25799==     in use at exit: 40 bytes in 1 blocks
==25799==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25799== 
==25799== LEAK SUMMARY:
==25799==    definitely lost: 0 bytes in 0 blocks
==25799==    indirectly lost: 0 bytes in 0 blocks
==25799==      possibly lost: 0 bytes in 0 blocks
==25799==    still reachable: 40 bytes in 1 blocks
==25799==         suppressed: 0 bytes in 0 blocks
==25799== Reachable blocks (those to which a pointer was found) are not shown.
==25799== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25799== 
==25799== For counts of detected and suppressed errors, rerun with: -v
==25799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test316 ===
The Valgrind memory detector as below:
==25814== Memcheck, a memory error detector
==25814== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25814== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25814== Command: ./impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.nocopy_dealloc.out
==25814== Parent PID: 10074
==25814== 
==25814== 
==25814== HEAP SUMMARY:
==25814==     in use at exit: 40 bytes in 1 blocks
==25814==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25814== 
==25814== LEAK SUMMARY:
==25814==    definitely lost: 0 bytes in 0 blocks
==25814==    indirectly lost: 0 bytes in 0 blocks
==25814==      possibly lost: 0 bytes in 0 blocks
==25814==    still reachable: 40 bytes in 1 blocks
==25814==         suppressed: 0 bytes in 0 blocks
==25814== Reachable blocks (those to which a pointer was found) are not shown.
==25814== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25814== 
==25814== For counts of detected and suppressed errors, rerun with: -v
==25814== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test317 ===
The Valgrind memory detector as below:
==25830== Memcheck, a memory error detector
==25830== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25830== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25830== Command: ./impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.nocopy_dealloc.out
==25830== Parent PID: 10074
==25830== 
==25830== 
==25830== HEAP SUMMARY:
==25830==     in use at exit: 40 bytes in 1 blocks
==25830==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25830== 
==25830== LEAK SUMMARY:
==25830==    definitely lost: 0 bytes in 0 blocks
==25830==    indirectly lost: 0 bytes in 0 blocks
==25830==      possibly lost: 0 bytes in 0 blocks
==25830==    still reachable: 40 bytes in 1 blocks
==25830==         suppressed: 0 bytes in 0 blocks
==25830== Reachable blocks (those to which a pointer was found) are not shown.
==25830== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25830== 
==25830== For counts of detected and suppressed errors, rerun with: -v
==25830== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test318 ===
The Valgrind memory detector as below:
==25846== Memcheck, a memory error detector
==25846== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25846== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25846== Command: ./impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.nocopy_dealloc.out
==25846== Parent PID: 10074
==25846== 
==25846== 
==25846== HEAP SUMMARY:
==25846==     in use at exit: 40 bytes in 1 blocks
==25846==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25846== 
==25846== LEAK SUMMARY:
==25846==    definitely lost: 0 bytes in 0 blocks
==25846==    indirectly lost: 0 bytes in 0 blocks
==25846==      possibly lost: 0 bytes in 0 blocks
==25846==    still reachable: 40 bytes in 1 blocks
==25846==         suppressed: 0 bytes in 0 blocks
==25846== Reachable blocks (those to which a pointer was found) are not shown.
==25846== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25846== 
==25846== For counts of detected and suppressed errors, rerun with: -v
==25846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test319 ===
The Valgrind memory detector as below:
==25861== Memcheck, a memory error detector
==25861== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25861== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25861== Command: ./impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.nocopy_dealloc.out
==25861== Parent PID: 10074
==25861== 
==25861== 
==25861== HEAP SUMMARY:
==25861==     in use at exit: 40 bytes in 1 blocks
==25861==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25861== 
==25861== LEAK SUMMARY:
==25861==    definitely lost: 0 bytes in 0 blocks
==25861==    indirectly lost: 0 bytes in 0 blocks
==25861==      possibly lost: 0 bytes in 0 blocks
==25861==    still reachable: 40 bytes in 1 blocks
==25861==         suppressed: 0 bytes in 0 blocks
==25861== Reachable blocks (those to which a pointer was found) are not shown.
==25861== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25861== 
==25861== For counts of detected and suppressed errors, rerun with: -v
==25861== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test32 ===
The Valgrind memory detector as below:
==25876== Memcheck, a memory error detector
==25876== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25876== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25876== Command: ./impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.nocopy_dealloc.out
==25876== Parent PID: 10074
==25876== 
==25876== 
==25876== HEAP SUMMARY:
==25876==     in use at exit: 40 bytes in 1 blocks
==25876==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25876== 
==25876== LEAK SUMMARY:
==25876==    definitely lost: 0 bytes in 0 blocks
==25876==    indirectly lost: 0 bytes in 0 blocks
==25876==      possibly lost: 0 bytes in 0 blocks
==25876==    still reachable: 40 bytes in 1 blocks
==25876==         suppressed: 0 bytes in 0 blocks
==25876== Reachable blocks (those to which a pointer was found) are not shown.
==25876== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25876== 
==25876== For counts of detected and suppressed errors, rerun with: -v
==25876== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test320 ===
The Valgrind memory detector as below:
==25892== Memcheck, a memory error detector
==25892== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25892== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25892== Command: ./impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.nocopy_dealloc.out
==25892== Parent PID: 10074
==25892== 
==25892== 
==25892== HEAP SUMMARY:
==25892==     in use at exit: 40 bytes in 1 blocks
==25892==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25892== 
==25892== LEAK SUMMARY:
==25892==    definitely lost: 0 bytes in 0 blocks
==25892==    indirectly lost: 0 bytes in 0 blocks
==25892==      possibly lost: 0 bytes in 0 blocks
==25892==    still reachable: 40 bytes in 1 blocks
==25892==         suppressed: 0 bytes in 0 blocks
==25892== Reachable blocks (those to which a pointer was found) are not shown.
==25892== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25892== 
==25892== For counts of detected and suppressed errors, rerun with: -v
==25892== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test321 ===
The Valgrind memory detector as below:
==25907== Memcheck, a memory error detector
==25907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25907== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25907== Command: ./impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.nocopy_dealloc.out
==25907== Parent PID: 10074
==25907== 
==25907== 
==25907== HEAP SUMMARY:
==25907==     in use at exit: 40 bytes in 1 blocks
==25907==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25907== 
==25907== LEAK SUMMARY:
==25907==    definitely lost: 0 bytes in 0 blocks
==25907==    indirectly lost: 0 bytes in 0 blocks
==25907==      possibly lost: 0 bytes in 0 blocks
==25907==    still reachable: 40 bytes in 1 blocks
==25907==         suppressed: 0 bytes in 0 blocks
==25907== Reachable blocks (those to which a pointer was found) are not shown.
==25907== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25907== 
==25907== For counts of detected and suppressed errors, rerun with: -v
==25907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test322 ===
The Valgrind memory detector as below:
==25922== Memcheck, a memory error detector
==25922== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25922== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25922== Command: ./impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.nocopy_dealloc.out
==25922== Parent PID: 10074
==25922== 
==25922== 
==25922== HEAP SUMMARY:
==25922==     in use at exit: 40 bytes in 1 blocks
==25922==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25922== 
==25922== LEAK SUMMARY:
==25922==    definitely lost: 0 bytes in 0 blocks
==25922==    indirectly lost: 0 bytes in 0 blocks
==25922==      possibly lost: 0 bytes in 0 blocks
==25922==    still reachable: 40 bytes in 1 blocks
==25922==         suppressed: 0 bytes in 0 blocks
==25922== Reachable blocks (those to which a pointer was found) are not shown.
==25922== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25922== 
==25922== For counts of detected and suppressed errors, rerun with: -v
==25922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test323 ===
The Valgrind memory detector as below:
==25937== Memcheck, a memory error detector
==25937== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25937== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25937== Command: ./impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.nocopy_dealloc.out
==25937== Parent PID: 10074
==25937== 
==25937== 
==25937== HEAP SUMMARY:
==25937==     in use at exit: 40 bytes in 1 blocks
==25937==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25937== 
==25937== LEAK SUMMARY:
==25937==    definitely lost: 0 bytes in 0 blocks
==25937==    indirectly lost: 0 bytes in 0 blocks
==25937==      possibly lost: 0 bytes in 0 blocks
==25937==    still reachable: 40 bytes in 1 blocks
==25937==         suppressed: 0 bytes in 0 blocks
==25937== Reachable blocks (those to which a pointer was found) are not shown.
==25937== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25937== 
==25937== For counts of detected and suppressed errors, rerun with: -v
==25937== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test324 ===
The Valgrind memory detector as below:
==25953== Memcheck, a memory error detector
==25953== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25953== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25953== Command: ./impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.nocopy_dealloc.out
==25953== Parent PID: 10074
==25953== 
==25953== 
==25953== HEAP SUMMARY:
==25953==     in use at exit: 40 bytes in 1 blocks
==25953==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25953== 
==25953== LEAK SUMMARY:
==25953==    definitely lost: 0 bytes in 0 blocks
==25953==    indirectly lost: 0 bytes in 0 blocks
==25953==      possibly lost: 0 bytes in 0 blocks
==25953==    still reachable: 40 bytes in 1 blocks
==25953==         suppressed: 0 bytes in 0 blocks
==25953== Reachable blocks (those to which a pointer was found) are not shown.
==25953== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25953== 
==25953== For counts of detected and suppressed errors, rerun with: -v
==25953== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test325 ===
The Valgrind memory detector as below:
==25968== Memcheck, a memory error detector
==25968== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25968== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25968== Command: ./impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.nocopy_dealloc.out
==25968== Parent PID: 10074
==25968== 
==25968== 
==25968== HEAP SUMMARY:
==25968==     in use at exit: 40 bytes in 1 blocks
==25968==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25968== 
==25968== LEAK SUMMARY:
==25968==    definitely lost: 0 bytes in 0 blocks
==25968==    indirectly lost: 0 bytes in 0 blocks
==25968==      possibly lost: 0 bytes in 0 blocks
==25968==    still reachable: 40 bytes in 1 blocks
==25968==         suppressed: 0 bytes in 0 blocks
==25968== Reachable blocks (those to which a pointer was found) are not shown.
==25968== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25968== 
==25968== For counts of detected and suppressed errors, rerun with: -v
==25968== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test326 ===
The Valgrind memory detector as below:
==25986== Memcheck, a memory error detector
==25986== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25986== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==25986== Command: ./impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.nocopy_dealloc.out
==25986== Parent PID: 10074
==25986== 
==25986== 
==25986== HEAP SUMMARY:
==25986==     in use at exit: 40 bytes in 1 blocks
==25986==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==25986== 
==25986== LEAK SUMMARY:
==25986==    definitely lost: 0 bytes in 0 blocks
==25986==    indirectly lost: 0 bytes in 0 blocks
==25986==      possibly lost: 0 bytes in 0 blocks
==25986==    still reachable: 40 bytes in 1 blocks
==25986==         suppressed: 0 bytes in 0 blocks
==25986== Reachable blocks (those to which a pointer was found) are not shown.
==25986== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25986== 
==25986== For counts of detected and suppressed errors, rerun with: -v
==25986== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test327 ===
The Valgrind memory detector as below:
==26002== Memcheck, a memory error detector
==26002== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26002== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26002== Command: ./impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.nocopy_dealloc.out
==26002== Parent PID: 10074
==26002== 
==26002== 
==26002== HEAP SUMMARY:
==26002==     in use at exit: 0 bytes in 0 blocks
==26002==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26002== 
==26002== All heap blocks were freed -- no leaks are possible
==26002== 
==26002== For counts of detected and suppressed errors, rerun with: -v
==26002== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test328 ===
The Valgrind memory detector as below:
==26017== Memcheck, a memory error detector
==26017== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26017== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26017== Command: ./impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.nocopy_dealloc.out
==26017== Parent PID: 10074
==26017== 
==26017== 
==26017== HEAP SUMMARY:
==26017==     in use at exit: 0 bytes in 0 blocks
==26017==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26017== 
==26017== All heap blocks were freed -- no leaks are possible
==26017== 
==26017== For counts of detected and suppressed errors, rerun with: -v
==26017== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test329 ===
The Valgrind memory detector as below:
==26032== Memcheck, a memory error detector
==26032== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26032== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26032== Command: ./impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.nocopy_dealloc.out
==26032== Parent PID: 10074
==26032== 
==26032== 
==26032== HEAP SUMMARY:
==26032==     in use at exit: 0 bytes in 0 blocks
==26032==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26032== 
==26032== All heap blocks were freed -- no leaks are possible
==26032== 
==26032== For counts of detected and suppressed errors, rerun with: -v
==26032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test33 ===
The Valgrind memory detector as below:
==26051== Memcheck, a memory error detector
==26051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26051== Command: ./impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.nocopy_dealloc.out
==26051== Parent PID: 10074
==26051== 
==26051== 
==26051== HEAP SUMMARY:
==26051==     in use at exit: 0 bytes in 0 blocks
==26051==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26051== 
==26051== All heap blocks were freed -- no leaks are possible
==26051== 
==26051== For counts of detected and suppressed errors, rerun with: -v
==26051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test330 ===
The Valgrind memory detector as below:
==26066== Memcheck, a memory error detector
==26066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26066== Command: ./impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.nocopy_dealloc.out
==26066== Parent PID: 10074
==26066== 
==26066== 
==26066== HEAP SUMMARY:
==26066==     in use at exit: 0 bytes in 0 blocks
==26066==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26066== 
==26066== All heap blocks were freed -- no leaks are possible
==26066== 
==26066== For counts of detected and suppressed errors, rerun with: -v
==26066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test331 ===
The Valgrind memory detector as below:
==26081== Memcheck, a memory error detector
==26081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26081== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26081== Command: ./impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.nocopy_dealloc.out
==26081== Parent PID: 10074
==26081== 
==26081== 
==26081== HEAP SUMMARY:
==26081==     in use at exit: 0 bytes in 0 blocks
==26081==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26081== 
==26081== All heap blocks were freed -- no leaks are possible
==26081== 
==26081== For counts of detected and suppressed errors, rerun with: -v
==26081== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test332 ===
The Valgrind memory detector as below:
==26096== Memcheck, a memory error detector
==26096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26096== Command: ./impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.nocopy_dealloc.out
==26096== Parent PID: 10074
==26096== 
==26096== 
==26096== HEAP SUMMARY:
==26096==     in use at exit: 40 bytes in 1 blocks
==26096==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26096== 
==26096== LEAK SUMMARY:
==26096==    definitely lost: 0 bytes in 0 blocks
==26096==    indirectly lost: 0 bytes in 0 blocks
==26096==      possibly lost: 0 bytes in 0 blocks
==26096==    still reachable: 40 bytes in 1 blocks
==26096==         suppressed: 0 bytes in 0 blocks
==26096== Reachable blocks (those to which a pointer was found) are not shown.
==26096== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26096== 
==26096== For counts of detected and suppressed errors, rerun with: -v
==26096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test333 ===
The Valgrind memory detector as below:
==26112== Memcheck, a memory error detector
==26112== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26112== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26112== Command: ./impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.nocopy_dealloc.out
==26112== Parent PID: 10074
==26112== 
==26112== 
==26112== HEAP SUMMARY:
==26112==     in use at exit: 40 bytes in 1 blocks
==26112==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26112== 
==26112== LEAK SUMMARY:
==26112==    definitely lost: 0 bytes in 0 blocks
==26112==    indirectly lost: 0 bytes in 0 blocks
==26112==      possibly lost: 0 bytes in 0 blocks
==26112==    still reachable: 40 bytes in 1 blocks
==26112==         suppressed: 0 bytes in 0 blocks
==26112== Reachable blocks (those to which a pointer was found) are not shown.
==26112== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26112== 
==26112== For counts of detected and suppressed errors, rerun with: -v
==26112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test334 ===
The Valgrind memory detector as below:
==26127== Memcheck, a memory error detector
==26127== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26127== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26127== Command: ./impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.nocopy_dealloc.out
==26127== Parent PID: 10074
==26127== 
==26127== 
==26127== HEAP SUMMARY:
==26127==     in use at exit: 40 bytes in 1 blocks
==26127==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26127== 
==26127== LEAK SUMMARY:
==26127==    definitely lost: 0 bytes in 0 blocks
==26127==    indirectly lost: 0 bytes in 0 blocks
==26127==      possibly lost: 0 bytes in 0 blocks
==26127==    still reachable: 40 bytes in 1 blocks
==26127==         suppressed: 0 bytes in 0 blocks
==26127== Reachable blocks (those to which a pointer was found) are not shown.
==26127== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26127== 
==26127== For counts of detected and suppressed errors, rerun with: -v
==26127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test335 ===
The Valgrind memory detector as below:
==26142== Memcheck, a memory error detector
==26142== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26142== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26142== Command: ./impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.nocopy_dealloc.out
==26142== Parent PID: 10074
==26142== 
==26142== 
==26142== HEAP SUMMARY:
==26142==     in use at exit: 0 bytes in 0 blocks
==26142==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26142== 
==26142== All heap blocks were freed -- no leaks are possible
==26142== 
==26142== For counts of detected and suppressed errors, rerun with: -v
==26142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test336 ===
The Valgrind memory detector as below:
==26158== Memcheck, a memory error detector
==26158== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26158== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26158== Command: ./impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.nocopy_dealloc.out
==26158== Parent PID: 10074
==26158== 
==26158== 
==26158== HEAP SUMMARY:
==26158==     in use at exit: 0 bytes in 0 blocks
==26158==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26158== 
==26158== All heap blocks were freed -- no leaks are possible
==26158== 
==26158== For counts of detected and suppressed errors, rerun with: -v
==26158== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test337 ===
The Valgrind memory detector as below:
==26173== Memcheck, a memory error detector
==26173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26173== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26173== Command: ./impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.nocopy_dealloc.out
==26173== Parent PID: 10074
==26173== 
==26173== 
==26173== HEAP SUMMARY:
==26173==     in use at exit: 0 bytes in 0 blocks
==26173==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26173== 
==26173== All heap blocks were freed -- no leaks are possible
==26173== 
==26173== For counts of detected and suppressed errors, rerun with: -v
==26173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test338 ===
The Valgrind memory detector as below:
==26188== Memcheck, a memory error detector
==26188== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26188== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26188== Command: ./impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.nocopy_dealloc.out
==26188== Parent PID: 10074
==26188== 
==26188== 
==26188== HEAP SUMMARY:
==26188==     in use at exit: 0 bytes in 0 blocks
==26188==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26188== 
==26188== All heap blocks were freed -- no leaks are possible
==26188== 
==26188== For counts of detected and suppressed errors, rerun with: -v
==26188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test339 ===
The Valgrind memory detector as below:
==26204== Memcheck, a memory error detector
==26204== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26204== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26204== Command: ./impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.nocopy_dealloc.out
==26204== Parent PID: 10074
==26204== 
==26204== 
==26204== HEAP SUMMARY:
==26204==     in use at exit: 40 bytes in 1 blocks
==26204==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26204== 
==26204== LEAK SUMMARY:
==26204==    definitely lost: 0 bytes in 0 blocks
==26204==    indirectly lost: 0 bytes in 0 blocks
==26204==      possibly lost: 0 bytes in 0 blocks
==26204==    still reachable: 40 bytes in 1 blocks
==26204==         suppressed: 0 bytes in 0 blocks
==26204== Reachable blocks (those to which a pointer was found) are not shown.
==26204== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26204== 
==26204== For counts of detected and suppressed errors, rerun with: -v
==26204== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test34 ===
The Valgrind memory detector as below:
==26219== Memcheck, a memory error detector
==26219== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26219== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26219== Command: ./impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.nocopy_dealloc.out
==26219== Parent PID: 10074
==26219== 
==26219== 
==26219== HEAP SUMMARY:
==26219==     in use at exit: 0 bytes in 0 blocks
==26219==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26219== 
==26219== All heap blocks were freed -- no leaks are possible
==26219== 
==26219== For counts of detected and suppressed errors, rerun with: -v
==26219== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test340 ===
The Valgrind memory detector as below:
==26234== Memcheck, a memory error detector
==26234== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26234== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26234== Command: ./impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.nocopy_dealloc.out
==26234== Parent PID: 10074
==26234== 
==26234== 
==26234== HEAP SUMMARY:
==26234==     in use at exit: 40 bytes in 1 blocks
==26234==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26234== 
==26234== LEAK SUMMARY:
==26234==    definitely lost: 0 bytes in 0 blocks
==26234==    indirectly lost: 0 bytes in 0 blocks
==26234==      possibly lost: 0 bytes in 0 blocks
==26234==    still reachable: 40 bytes in 1 blocks
==26234==         suppressed: 0 bytes in 0 blocks
==26234== Reachable blocks (those to which a pointer was found) are not shown.
==26234== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26234== 
==26234== For counts of detected and suppressed errors, rerun with: -v
==26234== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test341 ===
The Valgrind memory detector as below:
==26250== Memcheck, a memory error detector
==26250== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26250== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26250== Command: ./impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.nocopy_dealloc.out
==26250== Parent PID: 10074
==26250== 
==26250== 
==26250== HEAP SUMMARY:
==26250==     in use at exit: 0 bytes in 0 blocks
==26250==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26250== 
==26250== All heap blocks were freed -- no leaks are possible
==26250== 
==26250== For counts of detected and suppressed errors, rerun with: -v
==26250== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test342 ===
The Valgrind memory detector as below:
==26265== Memcheck, a memory error detector
==26265== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26265== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26265== Command: ./impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.nocopy_dealloc.out
==26265== Parent PID: 10074
==26265== 
==26265== 
==26265== HEAP SUMMARY:
==26265==     in use at exit: 0 bytes in 0 blocks
==26265==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26265== 
==26265== All heap blocks were freed -- no leaks are possible
==26265== 
==26265== For counts of detected and suppressed errors, rerun with: -v
==26265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test343 ===
The Valgrind memory detector as below:
==26281== Memcheck, a memory error detector
==26281== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26281== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26281== Command: ./impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.nocopy_dealloc.out
==26281== Parent PID: 10074
==26281== 
==26281== 
==26281== HEAP SUMMARY:
==26281==     in use at exit: 0 bytes in 0 blocks
==26281==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26281== 
==26281== All heap blocks were freed -- no leaks are possible
==26281== 
==26281== For counts of detected and suppressed errors, rerun with: -v
==26281== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test344 ===
The Valgrind memory detector as below:
==26300== Memcheck, a memory error detector
==26300== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26300== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26300== Command: ./impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.nocopy_dealloc.out
==26300== Parent PID: 10074
==26300== 
==26300== 
==26300== HEAP SUMMARY:
==26300==     in use at exit: 40 bytes in 1 blocks
==26300==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26300== 
==26300== LEAK SUMMARY:
==26300==    definitely lost: 0 bytes in 0 blocks
==26300==    indirectly lost: 0 bytes in 0 blocks
==26300==      possibly lost: 0 bytes in 0 blocks
==26300==    still reachable: 40 bytes in 1 blocks
==26300==         suppressed: 0 bytes in 0 blocks
==26300== Reachable blocks (those to which a pointer was found) are not shown.
==26300== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26300== 
==26300== For counts of detected and suppressed errors, rerun with: -v
==26300== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test345 ===
The Valgrind memory detector as below:
==26316== Memcheck, a memory error detector
==26316== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26316== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26316== Command: ./impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.nocopy_dealloc.out
==26316== Parent PID: 10074
==26316== 
==26316== 
==26316== HEAP SUMMARY:
==26316==     in use at exit: 40 bytes in 1 blocks
==26316==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26316== 
==26316== LEAK SUMMARY:
==26316==    definitely lost: 0 bytes in 0 blocks
==26316==    indirectly lost: 0 bytes in 0 blocks
==26316==      possibly lost: 0 bytes in 0 blocks
==26316==    still reachable: 40 bytes in 1 blocks
==26316==         suppressed: 0 bytes in 0 blocks
==26316== Reachable blocks (those to which a pointer was found) are not shown.
==26316== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26316== 
==26316== For counts of detected and suppressed errors, rerun with: -v
==26316== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test346 ===
The Valgrind memory detector as below:
==26331== Memcheck, a memory error detector
==26331== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26331== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26331== Command: ./impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.nocopy_dealloc.out
==26331== Parent PID: 10074
==26331== 
==26331== 
==26331== HEAP SUMMARY:
==26331==     in use at exit: 0 bytes in 0 blocks
==26331==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26331== 
==26331== All heap blocks were freed -- no leaks are possible
==26331== 
==26331== For counts of detected and suppressed errors, rerun with: -v
==26331== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test347 ===
The Valgrind memory detector as below:
==26346== Memcheck, a memory error detector
==26346== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26346== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26346== Command: ./impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.nocopy_dealloc.out
==26346== Parent PID: 10074
==26346== 
==26346== 
==26346== HEAP SUMMARY:
==26346==     in use at exit: 0 bytes in 0 blocks
==26346==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26346== 
==26346== All heap blocks were freed -- no leaks are possible
==26346== 
==26346== For counts of detected and suppressed errors, rerun with: -v
==26346== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test348 ===
The Valgrind memory detector as below:
==26362== Memcheck, a memory error detector
==26362== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26362== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26362== Command: ./impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.nocopy_dealloc.out
==26362== Parent PID: 10074
==26362== 
==26362== 
==26362== HEAP SUMMARY:
==26362==     in use at exit: 0 bytes in 0 blocks
==26362==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26362== 
==26362== All heap blocks were freed -- no leaks are possible
==26362== 
==26362== For counts of detected and suppressed errors, rerun with: -v
==26362== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test349 ===
The Valgrind memory detector as below:
==26377== Memcheck, a memory error detector
==26377== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26377== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26377== Command: ./impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.nocopy_dealloc.out
==26377== Parent PID: 10074
==26377== 
==26377== 
==26377== HEAP SUMMARY:
==26377==     in use at exit: 40 bytes in 1 blocks
==26377==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26377== 
==26377== LEAK SUMMARY:
==26377==    definitely lost: 0 bytes in 0 blocks
==26377==    indirectly lost: 0 bytes in 0 blocks
==26377==      possibly lost: 0 bytes in 0 blocks
==26377==    still reachable: 40 bytes in 1 blocks
==26377==         suppressed: 0 bytes in 0 blocks
==26377== Reachable blocks (those to which a pointer was found) are not shown.
==26377== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26377== 
==26377== For counts of detected and suppressed errors, rerun with: -v
==26377== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test35 ===
The Valgrind memory detector as below:
==26392== Memcheck, a memory error detector
==26392== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26392== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26392== Command: ./impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.nocopy_dealloc.out
==26392== Parent PID: 10074
==26392== 
==26392== 
==26392== HEAP SUMMARY:
==26392==     in use at exit: 0 bytes in 0 blocks
==26392==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26392== 
==26392== All heap blocks were freed -- no leaks are possible
==26392== 
==26392== For counts of detected and suppressed errors, rerun with: -v
==26392== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test350 ===
The Valgrind memory detector as below:
==26408== Memcheck, a memory error detector
==26408== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26408== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26408== Command: ./impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.nocopy_dealloc.out
==26408== Parent PID: 10074
==26408== 
==26408== 
==26408== HEAP SUMMARY:
==26408==     in use at exit: 40 bytes in 1 blocks
==26408==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26408== 
==26408== LEAK SUMMARY:
==26408==    definitely lost: 0 bytes in 0 blocks
==26408==    indirectly lost: 0 bytes in 0 blocks
==26408==      possibly lost: 0 bytes in 0 blocks
==26408==    still reachable: 40 bytes in 1 blocks
==26408==         suppressed: 0 bytes in 0 blocks
==26408== Reachable blocks (those to which a pointer was found) are not shown.
==26408== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26408== 
==26408== For counts of detected and suppressed errors, rerun with: -v
==26408== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test351 ===
The Valgrind memory detector as below:
==26423== Memcheck, a memory error detector
==26423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26423== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26423== Command: ./impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.nocopy_dealloc.out
==26423== Parent PID: 10074
==26423== 
==26423== 
==26423== HEAP SUMMARY:
==26423==     in use at exit: 40 bytes in 1 blocks
==26423==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26423== 
==26423== LEAK SUMMARY:
==26423==    definitely lost: 0 bytes in 0 blocks
==26423==    indirectly lost: 0 bytes in 0 blocks
==26423==      possibly lost: 0 bytes in 0 blocks
==26423==    still reachable: 40 bytes in 1 blocks
==26423==         suppressed: 0 bytes in 0 blocks
==26423== Reachable blocks (those to which a pointer was found) are not shown.
==26423== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26423== 
==26423== For counts of detected and suppressed errors, rerun with: -v
==26423== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test352 ===
The Valgrind memory detector as below:
==26438== Memcheck, a memory error detector
==26438== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26438== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26438== Command: ./impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.nocopy_dealloc.out
==26438== Parent PID: 10074
==26438== 
==26438== 
==26438== HEAP SUMMARY:
==26438==     in use at exit: 40 bytes in 1 blocks
==26438==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26438== 
==26438== LEAK SUMMARY:
==26438==    definitely lost: 0 bytes in 0 blocks
==26438==    indirectly lost: 0 bytes in 0 blocks
==26438==      possibly lost: 0 bytes in 0 blocks
==26438==    still reachable: 40 bytes in 1 blocks
==26438==         suppressed: 0 bytes in 0 blocks
==26438== Reachable blocks (those to which a pointer was found) are not shown.
==26438== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26438== 
==26438== For counts of detected and suppressed errors, rerun with: -v
==26438== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test353 ===
The Valgrind memory detector as below:
==26453== Memcheck, a memory error detector
==26453== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26453== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26453== Command: ./impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.nocopy_dealloc.out
==26453== Parent PID: 10074
==26453== 
==26453== 
==26453== HEAP SUMMARY:
==26453==     in use at exit: 40 bytes in 1 blocks
==26453==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26453== 
==26453== LEAK SUMMARY:
==26453==    definitely lost: 0 bytes in 0 blocks
==26453==    indirectly lost: 0 bytes in 0 blocks
==26453==      possibly lost: 0 bytes in 0 blocks
==26453==    still reachable: 40 bytes in 1 blocks
==26453==         suppressed: 0 bytes in 0 blocks
==26453== Reachable blocks (those to which a pointer was found) are not shown.
==26453== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26453== 
==26453== For counts of detected and suppressed errors, rerun with: -v
==26453== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test354 ===
The Valgrind memory detector as below:
==26469== Memcheck, a memory error detector
==26469== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26469== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26469== Command: ./impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.nocopy_dealloc.out
==26469== Parent PID: 10074
==26469== 
==26469== 
==26469== HEAP SUMMARY:
==26469==     in use at exit: 40 bytes in 1 blocks
==26469==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26469== 
==26469== LEAK SUMMARY:
==26469==    definitely lost: 0 bytes in 0 blocks
==26469==    indirectly lost: 0 bytes in 0 blocks
==26469==      possibly lost: 0 bytes in 0 blocks
==26469==    still reachable: 40 bytes in 1 blocks
==26469==         suppressed: 0 bytes in 0 blocks
==26469== Reachable blocks (those to which a pointer was found) are not shown.
==26469== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26469== 
==26469== For counts of detected and suppressed errors, rerun with: -v
==26469== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test355 ===
The Valgrind memory detector as below:
==26484== Memcheck, a memory error detector
==26484== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26484== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26484== Command: ./impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.nocopy_dealloc.out
==26484== Parent PID: 10074
==26484== 
==26484== 
==26484== HEAP SUMMARY:
==26484==     in use at exit: 0 bytes in 0 blocks
==26484==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26484== 
==26484== All heap blocks were freed -- no leaks are possible
==26484== 
==26484== For counts of detected and suppressed errors, rerun with: -v
==26484== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test356 ===
The Valgrind memory detector as below:
==26499== Memcheck, a memory error detector
==26499== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26499== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26499== Command: ./impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.nocopy_dealloc.out
==26499== Parent PID: 10074
==26499== 
==26499== 
==26499== HEAP SUMMARY:
==26499==     in use at exit: 40 bytes in 1 blocks
==26499==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26499== 
==26499== LEAK SUMMARY:
==26499==    definitely lost: 0 bytes in 0 blocks
==26499==    indirectly lost: 0 bytes in 0 blocks
==26499==      possibly lost: 0 bytes in 0 blocks
==26499==    still reachable: 40 bytes in 1 blocks
==26499==         suppressed: 0 bytes in 0 blocks
==26499== Reachable blocks (those to which a pointer was found) are not shown.
==26499== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26499== 
==26499== For counts of detected and suppressed errors, rerun with: -v
==26499== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test357 ===
The Valgrind memory detector as below:
==26515== Memcheck, a memory error detector
==26515== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26515== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26515== Command: ./impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.nocopy_dealloc.out
==26515== Parent PID: 10074
==26515== 
==26515== 
==26515== HEAP SUMMARY:
==26515==     in use at exit: 0 bytes in 0 blocks
==26515==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26515== 
==26515== All heap blocks were freed -- no leaks are possible
==26515== 
==26515== For counts of detected and suppressed errors, rerun with: -v
==26515== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test358 ===
The Valgrind memory detector as below:
==26530== Memcheck, a memory error detector
==26530== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26530== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26530== Command: ./impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.nocopy_dealloc.out
==26530== Parent PID: 10074
==26530== 
==26530== 
==26530== HEAP SUMMARY:
==26530==     in use at exit: 0 bytes in 0 blocks
==26530==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26530== 
==26530== All heap blocks were freed -- no leaks are possible
==26530== 
==26530== For counts of detected and suppressed errors, rerun with: -v
==26530== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test359 ===
The Valgrind memory detector as below:
==26545== Memcheck, a memory error detector
==26545== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26545== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26545== Command: ./impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.nocopy_dealloc.out
==26545== Parent PID: 10074
==26545== 
==26545== 
==26545== HEAP SUMMARY:
==26545==     in use at exit: 40 bytes in 1 blocks
==26545==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26545== 
==26545== LEAK SUMMARY:
==26545==    definitely lost: 0 bytes in 0 blocks
==26545==    indirectly lost: 0 bytes in 0 blocks
==26545==      possibly lost: 0 bytes in 0 blocks
==26545==    still reachable: 40 bytes in 1 blocks
==26545==         suppressed: 0 bytes in 0 blocks
==26545== Reachable blocks (those to which a pointer was found) are not shown.
==26545== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26545== 
==26545== For counts of detected and suppressed errors, rerun with: -v
==26545== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test36 ===
The Valgrind memory detector as below:
==26560== Memcheck, a memory error detector
==26560== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26560== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26560== Command: ./impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.nocopy_dealloc.out
==26560== Parent PID: 10074
==26560== 
==26560== 
==26560== HEAP SUMMARY:
==26560==     in use at exit: 0 bytes in 0 blocks
==26560==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26560== 
==26560== All heap blocks were freed -- no leaks are possible
==26560== 
==26560== For counts of detected and suppressed errors, rerun with: -v
==26560== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test360 ===
The Valgrind memory detector as below:
==26577== Memcheck, a memory error detector
==26577== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26577== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26577== Command: ./impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.nocopy_dealloc.out
==26577== Parent PID: 10074
==26577== 
==26577== 
==26577== HEAP SUMMARY:
==26577==     in use at exit: 40 bytes in 1 blocks
==26577==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26577== 
==26577== LEAK SUMMARY:
==26577==    definitely lost: 0 bytes in 0 blocks
==26577==    indirectly lost: 0 bytes in 0 blocks
==26577==      possibly lost: 0 bytes in 0 blocks
==26577==    still reachable: 40 bytes in 1 blocks
==26577==         suppressed: 0 bytes in 0 blocks
==26577== Reachable blocks (those to which a pointer was found) are not shown.
==26577== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26577== 
==26577== For counts of detected and suppressed errors, rerun with: -v
==26577== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test361 ===
The Valgrind memory detector as below:
==26592== Memcheck, a memory error detector
==26592== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26592== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26592== Command: ./impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.nocopy_dealloc.out
==26592== Parent PID: 10074
==26592== 
==26592== 
==26592== HEAP SUMMARY:
==26592==     in use at exit: 40 bytes in 1 blocks
==26592==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26592== 
==26592== LEAK SUMMARY:
==26592==    definitely lost: 0 bytes in 0 blocks
==26592==    indirectly lost: 0 bytes in 0 blocks
==26592==      possibly lost: 0 bytes in 0 blocks
==26592==    still reachable: 40 bytes in 1 blocks
==26592==         suppressed: 0 bytes in 0 blocks
==26592== Reachable blocks (those to which a pointer was found) are not shown.
==26592== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26592== 
==26592== For counts of detected and suppressed errors, rerun with: -v
==26592== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test362 ===
The Valgrind memory detector as below:
==26607== Memcheck, a memory error detector
==26607== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26607== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26607== Command: ./impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.nocopy_dealloc.out
==26607== Parent PID: 10074
==26607== 
==26607== 
==26607== HEAP SUMMARY:
==26607==     in use at exit: 40 bytes in 1 blocks
==26607==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26607== 
==26607== LEAK SUMMARY:
==26607==    definitely lost: 0 bytes in 0 blocks
==26607==    indirectly lost: 0 bytes in 0 blocks
==26607==      possibly lost: 0 bytes in 0 blocks
==26607==    still reachable: 40 bytes in 1 blocks
==26607==         suppressed: 0 bytes in 0 blocks
==26607== Reachable blocks (those to which a pointer was found) are not shown.
==26607== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26607== 
==26607== For counts of detected and suppressed errors, rerun with: -v
==26607== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test363 ===
The Valgrind memory detector as below:
==26623== Memcheck, a memory error detector
==26623== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26623== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26623== Command: ./impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.nocopy_dealloc.out
==26623== Parent PID: 10074
==26623== 
==26623== 
==26623== HEAP SUMMARY:
==26623==     in use at exit: 40 bytes in 1 blocks
==26623==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26623== 
==26623== LEAK SUMMARY:
==26623==    definitely lost: 0 bytes in 0 blocks
==26623==    indirectly lost: 0 bytes in 0 blocks
==26623==      possibly lost: 0 bytes in 0 blocks
==26623==    still reachable: 40 bytes in 1 blocks
==26623==         suppressed: 0 bytes in 0 blocks
==26623== Reachable blocks (those to which a pointer was found) are not shown.
==26623== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26623== 
==26623== For counts of detected and suppressed errors, rerun with: -v
==26623== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test364 ===
The Valgrind memory detector as below:
==26638== Memcheck, a memory error detector
==26638== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26638== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26638== Command: ./impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.nocopy_dealloc.out
==26638== Parent PID: 10074
==26638== 
==26638== 
==26638== HEAP SUMMARY:
==26638==     in use at exit: 40 bytes in 1 blocks
==26638==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26638== 
==26638== LEAK SUMMARY:
==26638==    definitely lost: 0 bytes in 0 blocks
==26638==    indirectly lost: 0 bytes in 0 blocks
==26638==      possibly lost: 0 bytes in 0 blocks
==26638==    still reachable: 40 bytes in 1 blocks
==26638==         suppressed: 0 bytes in 0 blocks
==26638== Reachable blocks (those to which a pointer was found) are not shown.
==26638== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26638== 
==26638== For counts of detected and suppressed errors, rerun with: -v
==26638== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test365 ===
The Valgrind memory detector as below:
==26653== Memcheck, a memory error detector
==26653== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26653== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26653== Command: ./impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.nocopy_dealloc.out
==26653== Parent PID: 10074
==26653== 
==26653== 
==26653== HEAP SUMMARY:
==26653==     in use at exit: 40 bytes in 1 blocks
==26653==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26653== 
==26653== LEAK SUMMARY:
==26653==    definitely lost: 0 bytes in 0 blocks
==26653==    indirectly lost: 0 bytes in 0 blocks
==26653==      possibly lost: 0 bytes in 0 blocks
==26653==    still reachable: 40 bytes in 1 blocks
==26653==         suppressed: 0 bytes in 0 blocks
==26653== Reachable blocks (those to which a pointer was found) are not shown.
==26653== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26653== 
==26653== For counts of detected and suppressed errors, rerun with: -v
==26653== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test366 ===
The Valgrind memory detector as below:
==26669== Memcheck, a memory error detector
==26669== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26669== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26669== Command: ./impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.nocopy_dealloc.out
==26669== Parent PID: 10074
==26669== 
==26669== 
==26669== HEAP SUMMARY:
==26669==     in use at exit: 40 bytes in 1 blocks
==26669==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26669== 
==26669== LEAK SUMMARY:
==26669==    definitely lost: 0 bytes in 0 blocks
==26669==    indirectly lost: 0 bytes in 0 blocks
==26669==      possibly lost: 0 bytes in 0 blocks
==26669==    still reachable: 40 bytes in 1 blocks
==26669==         suppressed: 0 bytes in 0 blocks
==26669== Reachable blocks (those to which a pointer was found) are not shown.
==26669== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26669== 
==26669== For counts of detected and suppressed errors, rerun with: -v
==26669== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test367 ===
The Valgrind memory detector as below:
==26685== Memcheck, a memory error detector
==26685== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26685== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26685== Command: ./impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.nocopy_dealloc.out
==26685== Parent PID: 10074
==26685== 
==26685== 
==26685== HEAP SUMMARY:
==26685==     in use at exit: 0 bytes in 0 blocks
==26685==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26685== 
==26685== All heap blocks were freed -- no leaks are possible
==26685== 
==26685== For counts of detected and suppressed errors, rerun with: -v
==26685== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test368 ===
The Valgrind memory detector as below:
==26700== Memcheck, a memory error detector
==26700== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26700== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26700== Command: ./impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.nocopy_dealloc.out
==26700== Parent PID: 10074
==26700== 
==26700== 
==26700== HEAP SUMMARY:
==26700==     in use at exit: 40 bytes in 1 blocks
==26700==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26700== 
==26700== LEAK SUMMARY:
==26700==    definitely lost: 0 bytes in 0 blocks
==26700==    indirectly lost: 0 bytes in 0 blocks
==26700==      possibly lost: 0 bytes in 0 blocks
==26700==    still reachable: 40 bytes in 1 blocks
==26700==         suppressed: 0 bytes in 0 blocks
==26700== Reachable blocks (those to which a pointer was found) are not shown.
==26700== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26700== 
==26700== For counts of detected and suppressed errors, rerun with: -v
==26700== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test369 ===
The Valgrind memory detector as below:
==26715== Memcheck, a memory error detector
==26715== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26715== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26715== Command: ./impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.nocopy_dealloc.out
==26715== Parent PID: 10074
==26715== 
==26715== 
==26715== HEAP SUMMARY:
==26715==     in use at exit: 40 bytes in 1 blocks
==26715==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26715== 
==26715== LEAK SUMMARY:
==26715==    definitely lost: 0 bytes in 0 blocks
==26715==    indirectly lost: 0 bytes in 0 blocks
==26715==      possibly lost: 0 bytes in 0 blocks
==26715==    still reachable: 40 bytes in 1 blocks
==26715==         suppressed: 0 bytes in 0 blocks
==26715== Reachable blocks (those to which a pointer was found) are not shown.
==26715== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26715== 
==26715== For counts of detected and suppressed errors, rerun with: -v
==26715== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test37 ===
The Valgrind memory detector as below:
==26731== Memcheck, a memory error detector
==26731== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26731== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26731== Command: ./impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.nocopy_dealloc.out
==26731== Parent PID: 10074
==26731== 
==26731== 
==26731== HEAP SUMMARY:
==26731==     in use at exit: 40 bytes in 1 blocks
==26731==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26731== 
==26731== LEAK SUMMARY:
==26731==    definitely lost: 0 bytes in 0 blocks
==26731==    indirectly lost: 0 bytes in 0 blocks
==26731==      possibly lost: 0 bytes in 0 blocks
==26731==    still reachable: 40 bytes in 1 blocks
==26731==         suppressed: 0 bytes in 0 blocks
==26731== Reachable blocks (those to which a pointer was found) are not shown.
==26731== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26731== 
==26731== For counts of detected and suppressed errors, rerun with: -v
==26731== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test370 ===
The Valgrind memory detector as below:
==26746== Memcheck, a memory error detector
==26746== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26746== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26746== Command: ./impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.nocopy_dealloc.out
==26746== Parent PID: 10074
==26746== 
==26746== 
==26746== HEAP SUMMARY:
==26746==     in use at exit: 40 bytes in 1 blocks
==26746==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26746== 
==26746== LEAK SUMMARY:
==26746==    definitely lost: 0 bytes in 0 blocks
==26746==    indirectly lost: 0 bytes in 0 blocks
==26746==      possibly lost: 0 bytes in 0 blocks
==26746==    still reachable: 40 bytes in 1 blocks
==26746==         suppressed: 0 bytes in 0 blocks
==26746== Reachable blocks (those to which a pointer was found) are not shown.
==26746== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26746== 
==26746== For counts of detected and suppressed errors, rerun with: -v
==26746== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test371 ===
The Valgrind memory detector as below:
==26761== Memcheck, a memory error detector
==26761== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26761== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26761== Command: ./impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.nocopy_dealloc.out
==26761== Parent PID: 10074
==26761== 
==26761== 
==26761== HEAP SUMMARY:
==26761==     in use at exit: 0 bytes in 0 blocks
==26761==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26761== 
==26761== All heap blocks were freed -- no leaks are possible
==26761== 
==26761== For counts of detected and suppressed errors, rerun with: -v
==26761== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test372 ===
The Valgrind memory detector as below:
==26777== Memcheck, a memory error detector
==26777== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26777== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26777== Command: ./impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.nocopy_dealloc.out
==26777== Parent PID: 10074
==26777== 
==26777== 
==26777== HEAP SUMMARY:
==26777==     in use at exit: 0 bytes in 0 blocks
==26777==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26777== 
==26777== All heap blocks were freed -- no leaks are possible
==26777== 
==26777== For counts of detected and suppressed errors, rerun with: -v
==26777== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test373 ===
The Valgrind memory detector as below:
==26792== Memcheck, a memory error detector
==26792== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26792== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26792== Command: ./impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.nocopy_dealloc.out
==26792== Parent PID: 10074
==26792== 
==26792== 
==26792== HEAP SUMMARY:
==26792==     in use at exit: 0 bytes in 0 blocks
==26792==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26792== 
==26792== All heap blocks were freed -- no leaks are possible
==26792== 
==26792== For counts of detected and suppressed errors, rerun with: -v
==26792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test374 ===
The Valgrind memory detector as below:
==26807== Memcheck, a memory error detector
==26807== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26807== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26807== Command: ./impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.nocopy_dealloc.out
==26807== Parent PID: 10074
==26807== 
==26807== 
==26807== HEAP SUMMARY:
==26807==     in use at exit: 0 bytes in 0 blocks
==26807==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26807== 
==26807== All heap blocks were freed -- no leaks are possible
==26807== 
==26807== For counts of detected and suppressed errors, rerun with: -v
==26807== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test375 ===
The Valgrind memory detector as below:
==26822== Memcheck, a memory error detector
==26822== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26822== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26822== Command: ./impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.nocopy_dealloc.out
==26822== Parent PID: 10074
==26822== 
==26822== 
==26822== HEAP SUMMARY:
==26822==     in use at exit: 40 bytes in 1 blocks
==26822==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26822== 
==26822== LEAK SUMMARY:
==26822==    definitely lost: 0 bytes in 0 blocks
==26822==    indirectly lost: 0 bytes in 0 blocks
==26822==      possibly lost: 0 bytes in 0 blocks
==26822==    still reachable: 40 bytes in 1 blocks
==26822==         suppressed: 0 bytes in 0 blocks
==26822== Reachable blocks (those to which a pointer was found) are not shown.
==26822== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26822== 
==26822== For counts of detected and suppressed errors, rerun with: -v
==26822== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test376 ===
The Valgrind memory detector as below:
==26839== Memcheck, a memory error detector
==26839== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26839== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26839== Command: ./impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.nocopy_dealloc.out
==26839== Parent PID: 10074
==26839== 
==26839== 
==26839== HEAP SUMMARY:
==26839==     in use at exit: 40 bytes in 1 blocks
==26839==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26839== 
==26839== LEAK SUMMARY:
==26839==    definitely lost: 0 bytes in 0 blocks
==26839==    indirectly lost: 0 bytes in 0 blocks
==26839==      possibly lost: 0 bytes in 0 blocks
==26839==    still reachable: 40 bytes in 1 blocks
==26839==         suppressed: 0 bytes in 0 blocks
==26839== Reachable blocks (those to which a pointer was found) are not shown.
==26839== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26839== 
==26839== For counts of detected and suppressed errors, rerun with: -v
==26839== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test377 ===
The Valgrind memory detector as below:
==26854== Memcheck, a memory error detector
==26854== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26854== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26854== Command: ./impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.nocopy_dealloc.out
==26854== Parent PID: 10074
==26854== 
==26854== 
==26854== HEAP SUMMARY:
==26854==     in use at exit: 0 bytes in 0 blocks
==26854==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26854== 
==26854== All heap blocks were freed -- no leaks are possible
==26854== 
==26854== For counts of detected and suppressed errors, rerun with: -v
==26854== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test378 ===
The Valgrind memory detector as below:
==26869== Memcheck, a memory error detector
==26869== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26869== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26869== Command: ./impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.nocopy_dealloc.out
==26869== Parent PID: 10074
==26869== 
==26869== 
==26869== HEAP SUMMARY:
==26869==     in use at exit: 0 bytes in 0 blocks
==26869==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==26869== 
==26869== All heap blocks were freed -- no leaks are possible
==26869== 
==26869== For counts of detected and suppressed errors, rerun with: -v
==26869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test379 ===
The Valgrind memory detector as below:
==26885== Memcheck, a memory error detector
==26885== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26885== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26885== Command: ./impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.nocopy_dealloc.out
==26885== Parent PID: 10074
==26885== 
==26885== 
==26885== HEAP SUMMARY:
==26885==     in use at exit: 40 bytes in 1 blocks
==26885==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26885== 
==26885== LEAK SUMMARY:
==26885==    definitely lost: 0 bytes in 0 blocks
==26885==    indirectly lost: 0 bytes in 0 blocks
==26885==      possibly lost: 0 bytes in 0 blocks
==26885==    still reachable: 40 bytes in 1 blocks
==26885==         suppressed: 0 bytes in 0 blocks
==26885== Reachable blocks (those to which a pointer was found) are not shown.
==26885== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26885== 
==26885== For counts of detected and suppressed errors, rerun with: -v
==26885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test38 ===
The Valgrind memory detector as below:
==26900== Memcheck, a memory error detector
==26900== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26900== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26900== Command: ./impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.nocopy_dealloc.out
==26900== Parent PID: 10074
==26900== 
==26900== 
==26900== HEAP SUMMARY:
==26900==     in use at exit: 40 bytes in 1 blocks
==26900==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26900== 
==26900== LEAK SUMMARY:
==26900==    definitely lost: 0 bytes in 0 blocks
==26900==    indirectly lost: 0 bytes in 0 blocks
==26900==      possibly lost: 0 bytes in 0 blocks
==26900==    still reachable: 40 bytes in 1 blocks
==26900==         suppressed: 0 bytes in 0 blocks
==26900== Reachable blocks (those to which a pointer was found) are not shown.
==26900== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26900== 
==26900== For counts of detected and suppressed errors, rerun with: -v
==26900== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test380 ===
The Valgrind memory detector as below:
==26916== Memcheck, a memory error detector
==26916== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26916== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26916== Command: ./impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.nocopy_dealloc.out
==26916== Parent PID: 10074
==26916== 
==26916== 
==26916== HEAP SUMMARY:
==26916==     in use at exit: 40 bytes in 1 blocks
==26916==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26916== 
==26916== LEAK SUMMARY:
==26916==    definitely lost: 0 bytes in 0 blocks
==26916==    indirectly lost: 0 bytes in 0 blocks
==26916==      possibly lost: 0 bytes in 0 blocks
==26916==    still reachable: 40 bytes in 1 blocks
==26916==         suppressed: 0 bytes in 0 blocks
==26916== Reachable blocks (those to which a pointer was found) are not shown.
==26916== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26916== 
==26916== For counts of detected and suppressed errors, rerun with: -v
==26916== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test381 ===
The Valgrind memory detector as below:
==26932== Memcheck, a memory error detector
==26932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26932== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26932== Command: ./impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.nocopy_dealloc.out
==26932== Parent PID: 10074
==26932== 
==26932== 
==26932== HEAP SUMMARY:
==26932==     in use at exit: 40 bytes in 1 blocks
==26932==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26932== 
==26932== LEAK SUMMARY:
==26932==    definitely lost: 0 bytes in 0 blocks
==26932==    indirectly lost: 0 bytes in 0 blocks
==26932==      possibly lost: 0 bytes in 0 blocks
==26932==    still reachable: 40 bytes in 1 blocks
==26932==         suppressed: 0 bytes in 0 blocks
==26932== Reachable blocks (those to which a pointer was found) are not shown.
==26932== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26932== 
==26932== For counts of detected and suppressed errors, rerun with: -v
==26932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test382 ===
The Valgrind memory detector as below:
==26947== Memcheck, a memory error detector
==26947== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26947== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26947== Command: ./impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.nocopy_dealloc.out
==26947== Parent PID: 10074
==26947== 
==26947== 
==26947== HEAP SUMMARY:
==26947==     in use at exit: 40 bytes in 1 blocks
==26947==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26947== 
==26947== LEAK SUMMARY:
==26947==    definitely lost: 0 bytes in 0 blocks
==26947==    indirectly lost: 0 bytes in 0 blocks
==26947==      possibly lost: 0 bytes in 0 blocks
==26947==    still reachable: 40 bytes in 1 blocks
==26947==         suppressed: 0 bytes in 0 blocks
==26947== Reachable blocks (those to which a pointer was found) are not shown.
==26947== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26947== 
==26947== For counts of detected and suppressed errors, rerun with: -v
==26947== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test383 ===
The Valgrind memory detector as below:
==26962== Memcheck, a memory error detector
==26962== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26962== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26962== Command: ./impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.nocopy_dealloc.out
==26962== Parent PID: 10074
==26962== 
==26962== 
==26962== HEAP SUMMARY:
==26962==     in use at exit: 40 bytes in 1 blocks
==26962==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26962== 
==26962== LEAK SUMMARY:
==26962==    definitely lost: 0 bytes in 0 blocks
==26962==    indirectly lost: 0 bytes in 0 blocks
==26962==      possibly lost: 0 bytes in 0 blocks
==26962==    still reachable: 40 bytes in 1 blocks
==26962==         suppressed: 0 bytes in 0 blocks
==26962== Reachable blocks (those to which a pointer was found) are not shown.
==26962== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26962== 
==26962== For counts of detected and suppressed errors, rerun with: -v
==26962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test384 ===
The Valgrind memory detector as below:
==26979== Memcheck, a memory error detector
==26979== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26979== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26979== Command: ./impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.nocopy_dealloc.out
==26979== Parent PID: 10074
==26979== 
==26979== 
==26979== HEAP SUMMARY:
==26979==     in use at exit: 40 bytes in 1 blocks
==26979==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26979== 
==26979== LEAK SUMMARY:
==26979==    definitely lost: 0 bytes in 0 blocks
==26979==    indirectly lost: 0 bytes in 0 blocks
==26979==      possibly lost: 0 bytes in 0 blocks
==26979==    still reachable: 40 bytes in 1 blocks
==26979==         suppressed: 0 bytes in 0 blocks
==26979== Reachable blocks (those to which a pointer was found) are not shown.
==26979== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26979== 
==26979== For counts of detected and suppressed errors, rerun with: -v
==26979== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test385 ===
The Valgrind memory detector as below:
==26994== Memcheck, a memory error detector
==26994== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26994== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==26994== Command: ./impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.nocopy_dealloc.out
==26994== Parent PID: 10074
==26994== 
==26994== 
==26994== HEAP SUMMARY:
==26994==     in use at exit: 40 bytes in 1 blocks
==26994==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==26994== 
==26994== LEAK SUMMARY:
==26994==    definitely lost: 0 bytes in 0 blocks
==26994==    indirectly lost: 0 bytes in 0 blocks
==26994==      possibly lost: 0 bytes in 0 blocks
==26994==    still reachable: 40 bytes in 1 blocks
==26994==         suppressed: 0 bytes in 0 blocks
==26994== Reachable blocks (those to which a pointer was found) are not shown.
==26994== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26994== 
==26994== For counts of detected and suppressed errors, rerun with: -v
==26994== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test386 ===
The Valgrind memory detector as below:
==27009== Memcheck, a memory error detector
==27009== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27009== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27009== Command: ./impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.nocopy_dealloc.out
==27009== Parent PID: 10074
==27009== 
==27009== 
==27009== HEAP SUMMARY:
==27009==     in use at exit: 0 bytes in 0 blocks
==27009==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27009== 
==27009== All heap blocks were freed -- no leaks are possible
==27009== 
==27009== For counts of detected and suppressed errors, rerun with: -v
==27009== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test387 ===
The Valgrind memory detector as below:
==27024== Memcheck, a memory error detector
==27024== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27024== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27024== Command: ./impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.nocopy_dealloc.out
==27024== Parent PID: 10074
==27024== 
==27024== 
==27024== HEAP SUMMARY:
==27024==     in use at exit: 0 bytes in 0 blocks
==27024==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27024== 
==27024== All heap blocks were freed -- no leaks are possible
==27024== 
==27024== For counts of detected and suppressed errors, rerun with: -v
==27024== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test388 ===
The Valgrind memory detector as below:
==27040== Memcheck, a memory error detector
==27040== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27040== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27040== Command: ./impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.nocopy_dealloc.out
==27040== Parent PID: 10074
==27040== 
==27040== 
==27040== HEAP SUMMARY:
==27040==     in use at exit: 0 bytes in 0 blocks
==27040==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27040== 
==27040== All heap blocks were freed -- no leaks are possible
==27040== 
==27040== For counts of detected and suppressed errors, rerun with: -v
==27040== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test389 ===
The Valgrind memory detector as below:
==27056== Memcheck, a memory error detector
==27056== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27056== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27056== Command: ./impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.nocopy_dealloc.out
==27056== Parent PID: 10074
==27056== 
==27056== 
==27056== HEAP SUMMARY:
==27056==     in use at exit: 0 bytes in 0 blocks
==27056==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27056== 
==27056== All heap blocks were freed -- no leaks are possible
==27056== 
==27056== For counts of detected and suppressed errors, rerun with: -v
==27056== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test39 ===
The Valgrind memory detector as below:
==27071== Memcheck, a memory error detector
==27071== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27071== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27071== Command: ./impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.nocopy_dealloc.out
==27071== Parent PID: 10074
==27071== 
==27071== 
==27071== HEAP SUMMARY:
==27071==     in use at exit: 40 bytes in 1 blocks
==27071==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27071== 
==27071== LEAK SUMMARY:
==27071==    definitely lost: 0 bytes in 0 blocks
==27071==    indirectly lost: 0 bytes in 0 blocks
==27071==      possibly lost: 0 bytes in 0 blocks
==27071==    still reachable: 40 bytes in 1 blocks
==27071==         suppressed: 0 bytes in 0 blocks
==27071== Reachable blocks (those to which a pointer was found) are not shown.
==27071== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27071== 
==27071== For counts of detected and suppressed errors, rerun with: -v
==27071== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test390 ===
The Valgrind memory detector as below:
==27087== Memcheck, a memory error detector
==27087== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27087== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27087== Command: ./impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.nocopy_dealloc.out
==27087== Parent PID: 10074
==27087== 
==27087== 
==27087== HEAP SUMMARY:
==27087==     in use at exit: 40 bytes in 1 blocks
==27087==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27087== 
==27087== LEAK SUMMARY:
==27087==    definitely lost: 0 bytes in 0 blocks
==27087==    indirectly lost: 0 bytes in 0 blocks
==27087==      possibly lost: 0 bytes in 0 blocks
==27087==    still reachable: 40 bytes in 1 blocks
==27087==         suppressed: 0 bytes in 0 blocks
==27087== Reachable blocks (those to which a pointer was found) are not shown.
==27087== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27087== 
==27087== For counts of detected and suppressed errors, rerun with: -v
==27087== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test391 ===
The Valgrind memory detector as below:
==27103== Memcheck, a memory error detector
==27103== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27103== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27103== Command: ./impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.nocopy_dealloc.out
==27103== Parent PID: 10074
==27103== 
==27103== 
==27103== HEAP SUMMARY:
==27103==     in use at exit: 0 bytes in 0 blocks
==27103==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27103== 
==27103== All heap blocks were freed -- no leaks are possible
==27103== 
==27103== For counts of detected and suppressed errors, rerun with: -v
==27103== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test392 ===
The Valgrind memory detector as below:
==27118== Memcheck, a memory error detector
==27118== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27118== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27118== Command: ./impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.nocopy_dealloc.out
==27118== Parent PID: 10074
==27118== 
==27118== 
==27118== HEAP SUMMARY:
==27118==     in use at exit: 0 bytes in 0 blocks
==27118==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27118== 
==27118== All heap blocks were freed -- no leaks are possible
==27118== 
==27118== For counts of detected and suppressed errors, rerun with: -v
==27118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test393 ===
The Valgrind memory detector as below:
==27133== Memcheck, a memory error detector
==27133== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27133== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27133== Command: ./impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.nocopy_dealloc.out
==27133== Parent PID: 10074
==27133== 
==27133== 
==27133== HEAP SUMMARY:
==27133==     in use at exit: 0 bytes in 0 blocks
==27133==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27133== 
==27133== All heap blocks were freed -- no leaks are possible
==27133== 
==27133== For counts of detected and suppressed errors, rerun with: -v
==27133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test394 ===
The Valgrind memory detector as below:
==27149== Memcheck, a memory error detector
==27149== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27149== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27149== Command: ./impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.nocopy_dealloc.out
==27149== Parent PID: 10074
==27149== 
==27149== 
==27149== HEAP SUMMARY:
==27149==     in use at exit: 40 bytes in 1 blocks
==27149==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27149== 
==27149== LEAK SUMMARY:
==27149==    definitely lost: 0 bytes in 0 blocks
==27149==    indirectly lost: 0 bytes in 0 blocks
==27149==      possibly lost: 0 bytes in 0 blocks
==27149==    still reachable: 40 bytes in 1 blocks
==27149==         suppressed: 0 bytes in 0 blocks
==27149== Reachable blocks (those to which a pointer was found) are not shown.
==27149== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27149== 
==27149== For counts of detected and suppressed errors, rerun with: -v
==27149== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test395 ===
The Valgrind memory detector as below:
==27165== Memcheck, a memory error detector
==27165== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27165== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27165== Command: ./impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.nocopy_dealloc.out
==27165== Parent PID: 10074
==27165== 
==27165== 
==27165== HEAP SUMMARY:
==27165==     in use at exit: 0 bytes in 0 blocks
==27165==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27165== 
==27165== All heap blocks were freed -- no leaks are possible
==27165== 
==27165== For counts of detected and suppressed errors, rerun with: -v
==27165== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test396 ===
The Valgrind memory detector as below:
==27180== Memcheck, a memory error detector
==27180== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27180== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27180== Command: ./impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.nocopy_dealloc.out
==27180== Parent PID: 10074
==27180== 
==27180== 
==27180== HEAP SUMMARY:
==27180==     in use at exit: 40 bytes in 1 blocks
==27180==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27180== 
==27180== LEAK SUMMARY:
==27180==    definitely lost: 0 bytes in 0 blocks
==27180==    indirectly lost: 0 bytes in 0 blocks
==27180==      possibly lost: 0 bytes in 0 blocks
==27180==    still reachable: 40 bytes in 1 blocks
==27180==         suppressed: 0 bytes in 0 blocks
==27180== Reachable blocks (those to which a pointer was found) are not shown.
==27180== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27180== 
==27180== For counts of detected and suppressed errors, rerun with: -v
==27180== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test397 ===
The Valgrind memory detector as below:
==27195== Memcheck, a memory error detector
==27195== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27195== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27195== Command: ./impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.nocopy_dealloc.out
==27195== Parent PID: 10074
==27195== 
==27195== 
==27195== HEAP SUMMARY:
==27195==     in use at exit: 40 bytes in 1 blocks
==27195==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27195== 
==27195== LEAK SUMMARY:
==27195==    definitely lost: 0 bytes in 0 blocks
==27195==    indirectly lost: 0 bytes in 0 blocks
==27195==      possibly lost: 0 bytes in 0 blocks
==27195==    still reachable: 40 bytes in 1 blocks
==27195==         suppressed: 0 bytes in 0 blocks
==27195== Reachable blocks (those to which a pointer was found) are not shown.
==27195== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27195== 
==27195== For counts of detected and suppressed errors, rerun with: -v
==27195== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test398 ===
The Valgrind memory detector as below:
==27211== Memcheck, a memory error detector
==27211== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27211== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27211== Command: ./impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.nocopy_dealloc.out
==27211== Parent PID: 10074
==27211== 
==27211== 
==27211== HEAP SUMMARY:
==27211==     in use at exit: 40 bytes in 1 blocks
==27211==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27211== 
==27211== LEAK SUMMARY:
==27211==    definitely lost: 0 bytes in 0 blocks
==27211==    indirectly lost: 0 bytes in 0 blocks
==27211==      possibly lost: 0 bytes in 0 blocks
==27211==    still reachable: 40 bytes in 1 blocks
==27211==         suppressed: 0 bytes in 0 blocks
==27211== Reachable blocks (those to which a pointer was found) are not shown.
==27211== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27211== 
==27211== For counts of detected and suppressed errors, rerun with: -v
==27211== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test399 ===
The Valgrind memory detector as below:
==27226== Memcheck, a memory error detector
==27226== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27226== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27226== Command: ./impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.nocopy_dealloc.out
==27226== Parent PID: 10074
==27226== 
==27226== 
==27226== HEAP SUMMARY:
==27226==     in use at exit: 0 bytes in 0 blocks
==27226==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27226== 
==27226== All heap blocks were freed -- no leaks are possible
==27226== 
==27226== For counts of detected and suppressed errors, rerun with: -v
==27226== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test4 ===
The Valgrind memory detector as below:
==27241== Memcheck, a memory error detector
==27241== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27241== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27241== Command: ./impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.nocopy_dealloc.out
==27241== Parent PID: 10074
==27241== 
==27241== 
==27241== HEAP SUMMARY:
==27241==     in use at exit: 0 bytes in 0 blocks
==27241==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27241== 
==27241== All heap blocks were freed -- no leaks are possible
==27241== 
==27241== For counts of detected and suppressed errors, rerun with: -v
==27241== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test40 ===
The Valgrind memory detector as below:
==27257== Memcheck, a memory error detector
==27257== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27257== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27257== Command: ./impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.nocopy_dealloc.out
==27257== Parent PID: 10074
==27257== 
==27257== 
==27257== HEAP SUMMARY:
==27257==     in use at exit: 0 bytes in 0 blocks
==27257==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27257== 
==27257== All heap blocks were freed -- no leaks are possible
==27257== 
==27257== For counts of detected and suppressed errors, rerun with: -v
==27257== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test400 ===
The Valgrind memory detector as below:
==27272== Memcheck, a memory error detector
==27272== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27272== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27272== Command: ./impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.nocopy_dealloc.out
==27272== Parent PID: 10074
==27272== 
==27272== 
==27272== HEAP SUMMARY:
==27272==     in use at exit: 0 bytes in 0 blocks
==27272==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27272== 
==27272== All heap blocks were freed -- no leaks are possible
==27272== 
==27272== For counts of detected and suppressed errors, rerun with: -v
==27272== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test401 ===
The Valgrind memory detector as below:
==27287== Memcheck, a memory error detector
==27287== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27287== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27287== Command: ./impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.nocopy_dealloc.out
==27287== Parent PID: 10074
==27287== 
==27287== 
==27287== HEAP SUMMARY:
==27287==     in use at exit: 40 bytes in 1 blocks
==27287==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27287== 
==27287== LEAK SUMMARY:
==27287==    definitely lost: 0 bytes in 0 blocks
==27287==    indirectly lost: 0 bytes in 0 blocks
==27287==      possibly lost: 0 bytes in 0 blocks
==27287==    still reachable: 40 bytes in 1 blocks
==27287==         suppressed: 0 bytes in 0 blocks
==27287== Reachable blocks (those to which a pointer was found) are not shown.
==27287== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27287== 
==27287== For counts of detected and suppressed errors, rerun with: -v
==27287== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test402 ===
The Valgrind memory detector as below:
==27306== Memcheck, a memory error detector
==27306== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27306== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27306== Command: ./impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.nocopy_dealloc.out
==27306== Parent PID: 10074
==27306== 
==27306== 
==27306== HEAP SUMMARY:
==27306==     in use at exit: 0 bytes in 0 blocks
==27306==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27306== 
==27306== All heap blocks were freed -- no leaks are possible
==27306== 
==27306== For counts of detected and suppressed errors, rerun with: -v
==27306== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test403 ===
The Valgrind memory detector as below:
==27323== Memcheck, a memory error detector
==27323== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27323== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27323== Command: ./impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.nocopy_dealloc.out
==27323== Parent PID: 10074
==27323== 
==27323== 
==27323== HEAP SUMMARY:
==27323==     in use at exit: 40 bytes in 1 blocks
==27323==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27323== 
==27323== LEAK SUMMARY:
==27323==    definitely lost: 0 bytes in 0 blocks
==27323==    indirectly lost: 0 bytes in 0 blocks
==27323==      possibly lost: 0 bytes in 0 blocks
==27323==    still reachable: 40 bytes in 1 blocks
==27323==         suppressed: 0 bytes in 0 blocks
==27323== Reachable blocks (those to which a pointer was found) are not shown.
==27323== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27323== 
==27323== For counts of detected and suppressed errors, rerun with: -v
==27323== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test404 ===
The Valgrind memory detector as below:
==27338== Memcheck, a memory error detector
==27338== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27338== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27338== Command: ./impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.nocopy_dealloc.out
==27338== Parent PID: 10074
==27338== 
==27338== 
==27338== HEAP SUMMARY:
==27338==     in use at exit: 0 bytes in 0 blocks
==27338==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27338== 
==27338== All heap blocks were freed -- no leaks are possible
==27338== 
==27338== For counts of detected and suppressed errors, rerun with: -v
==27338== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test405 ===
The Valgrind memory detector as below:
==27353== Memcheck, a memory error detector
==27353== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27353== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27353== Command: ./impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.nocopy_dealloc.out
==27353== Parent PID: 10074
==27353== 
==27353== 
==27353== HEAP SUMMARY:
==27353==     in use at exit: 40 bytes in 1 blocks
==27353==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27353== 
==27353== LEAK SUMMARY:
==27353==    definitely lost: 0 bytes in 0 blocks
==27353==    indirectly lost: 0 bytes in 0 blocks
==27353==      possibly lost: 0 bytes in 0 blocks
==27353==    still reachable: 40 bytes in 1 blocks
==27353==         suppressed: 0 bytes in 0 blocks
==27353== Reachable blocks (those to which a pointer was found) are not shown.
==27353== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27353== 
==27353== For counts of detected and suppressed errors, rerun with: -v
==27353== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test406 ===
The Valgrind memory detector as below:
==27369== Memcheck, a memory error detector
==27369== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27369== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27369== Command: ./impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.nocopy_dealloc.out
==27369== Parent PID: 10074
==27369== 
==27369== 
==27369== HEAP SUMMARY:
==27369==     in use at exit: 40 bytes in 1 blocks
==27369==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27369== 
==27369== LEAK SUMMARY:
==27369==    definitely lost: 0 bytes in 0 blocks
==27369==    indirectly lost: 0 bytes in 0 blocks
==27369==      possibly lost: 0 bytes in 0 blocks
==27369==    still reachable: 40 bytes in 1 blocks
==27369==         suppressed: 0 bytes in 0 blocks
==27369== Reachable blocks (those to which a pointer was found) are not shown.
==27369== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27369== 
==27369== For counts of detected and suppressed errors, rerun with: -v
==27369== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test407 ===
The Valgrind memory detector as below:
==27385== Memcheck, a memory error detector
==27385== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27385== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27385== Command: ./impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.nocopy_dealloc.out
==27385== Parent PID: 10074
==27385== 
==27385== 
==27385== HEAP SUMMARY:
==27385==     in use at exit: 0 bytes in 0 blocks
==27385==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27385== 
==27385== All heap blocks were freed -- no leaks are possible
==27385== 
==27385== For counts of detected and suppressed errors, rerun with: -v
==27385== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test408 ===
The Valgrind memory detector as below:
==27400== Memcheck, a memory error detector
==27400== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27400== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27400== Command: ./impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.nocopy_dealloc.out
==27400== Parent PID: 10074
==27400== 
==27400== 
==27400== HEAP SUMMARY:
==27400==     in use at exit: 40 bytes in 1 blocks
==27400==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27400== 
==27400== LEAK SUMMARY:
==27400==    definitely lost: 0 bytes in 0 blocks
==27400==    indirectly lost: 0 bytes in 0 blocks
==27400==      possibly lost: 0 bytes in 0 blocks
==27400==    still reachable: 40 bytes in 1 blocks
==27400==         suppressed: 0 bytes in 0 blocks
==27400== Reachable blocks (those to which a pointer was found) are not shown.
==27400== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27400== 
==27400== For counts of detected and suppressed errors, rerun with: -v
==27400== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test409 ===
The Valgrind memory detector as below:
==27415== Memcheck, a memory error detector
==27415== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27415== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27415== Command: ./impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.nocopy_dealloc.out
==27415== Parent PID: 10074
==27415== 
==27415== 
==27415== HEAP SUMMARY:
==27415==     in use at exit: 0 bytes in 0 blocks
==27415==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27415== 
==27415== All heap blocks were freed -- no leaks are possible
==27415== 
==27415== For counts of detected and suppressed errors, rerun with: -v
==27415== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test41 ===
The Valgrind memory detector as below:
==27431== Memcheck, a memory error detector
==27431== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27431== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27431== Command: ./impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.nocopy_dealloc.out
==27431== Parent PID: 10074
==27431== 
==27431== 
==27431== HEAP SUMMARY:
==27431==     in use at exit: 0 bytes in 0 blocks
==27431==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27431== 
==27431== All heap blocks were freed -- no leaks are possible
==27431== 
==27431== For counts of detected and suppressed errors, rerun with: -v
==27431== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test410 ===
The Valgrind memory detector as below:
==27446== Memcheck, a memory error detector
==27446== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27446== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27446== Command: ./impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.nocopy_dealloc.out
==27446== Parent PID: 10074
==27446== 
==27446== 
==27446== HEAP SUMMARY:
==27446==     in use at exit: 40 bytes in 1 blocks
==27446==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27446== 
==27446== LEAK SUMMARY:
==27446==    definitely lost: 0 bytes in 0 blocks
==27446==    indirectly lost: 0 bytes in 0 blocks
==27446==      possibly lost: 0 bytes in 0 blocks
==27446==    still reachable: 40 bytes in 1 blocks
==27446==         suppressed: 0 bytes in 0 blocks
==27446== Reachable blocks (those to which a pointer was found) are not shown.
==27446== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27446== 
==27446== For counts of detected and suppressed errors, rerun with: -v
==27446== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test411 ===
The Valgrind memory detector as below:
==27461== Memcheck, a memory error detector
==27461== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27461== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27461== Command: ./impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.nocopy_dealloc.out
==27461== Parent PID: 10074
==27461== 
==27461== 
==27461== HEAP SUMMARY:
==27461==     in use at exit: 0 bytes in 0 blocks
==27461==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27461== 
==27461== All heap blocks were freed -- no leaks are possible
==27461== 
==27461== For counts of detected and suppressed errors, rerun with: -v
==27461== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test412 ===
The Valgrind memory detector as below:
==27476== Memcheck, a memory error detector
==27476== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27476== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27476== Command: ./impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.nocopy_dealloc.out
==27476== Parent PID: 10074
==27476== 
==27476== 
==27476== HEAP SUMMARY:
==27476==     in use at exit: 0 bytes in 0 blocks
==27476==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27476== 
==27476== All heap blocks were freed -- no leaks are possible
==27476== 
==27476== For counts of detected and suppressed errors, rerun with: -v
==27476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test413 ===
The Valgrind memory detector as below:
==27492== Memcheck, a memory error detector
==27492== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27492== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27492== Command: ./impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.nocopy_dealloc.out
==27492== Parent PID: 10074
==27492== 
==27492== 
==27492== HEAP SUMMARY:
==27492==     in use at exit: 40 bytes in 1 blocks
==27492==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27492== 
==27492== LEAK SUMMARY:
==27492==    definitely lost: 0 bytes in 0 blocks
==27492==    indirectly lost: 0 bytes in 0 blocks
==27492==      possibly lost: 0 bytes in 0 blocks
==27492==    still reachable: 40 bytes in 1 blocks
==27492==         suppressed: 0 bytes in 0 blocks
==27492== Reachable blocks (those to which a pointer was found) are not shown.
==27492== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27492== 
==27492== For counts of detected and suppressed errors, rerun with: -v
==27492== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test414 ===
The Valgrind memory detector as below:
==27507== Memcheck, a memory error detector
==27507== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27507== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27507== Command: ./impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.nocopy_dealloc.out
==27507== Parent PID: 10074
==27507== 
==27507== 
==27507== HEAP SUMMARY:
==27507==     in use at exit: 0 bytes in 0 blocks
==27507==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27507== 
==27507== All heap blocks were freed -- no leaks are possible
==27507== 
==27507== For counts of detected and suppressed errors, rerun with: -v
==27507== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test415 ===
The Valgrind memory detector as below:
==27522== Memcheck, a memory error detector
==27522== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27522== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27522== Command: ./impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.nocopy_dealloc.out
==27522== Parent PID: 10074
==27522== 
==27522== 
==27522== HEAP SUMMARY:
==27522==     in use at exit: 40 bytes in 1 blocks
==27522==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27522== 
==27522== LEAK SUMMARY:
==27522==    definitely lost: 0 bytes in 0 blocks
==27522==    indirectly lost: 0 bytes in 0 blocks
==27522==      possibly lost: 0 bytes in 0 blocks
==27522==    still reachable: 40 bytes in 1 blocks
==27522==         suppressed: 0 bytes in 0 blocks
==27522== Reachable blocks (those to which a pointer was found) are not shown.
==27522== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27522== 
==27522== For counts of detected and suppressed errors, rerun with: -v
==27522== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test416 ===
The Valgrind memory detector as below:
==27539== Memcheck, a memory error detector
==27539== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27539== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27539== Command: ./impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.nocopy_dealloc.out
==27539== Parent PID: 10074
==27539== 
==27539== 
==27539== HEAP SUMMARY:
==27539==     in use at exit: 40 bytes in 1 blocks
==27539==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27539== 
==27539== LEAK SUMMARY:
==27539==    definitely lost: 0 bytes in 0 blocks
==27539==    indirectly lost: 0 bytes in 0 blocks
==27539==      possibly lost: 0 bytes in 0 blocks
==27539==    still reachable: 40 bytes in 1 blocks
==27539==         suppressed: 0 bytes in 0 blocks
==27539== Reachable blocks (those to which a pointer was found) are not shown.
==27539== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27539== 
==27539== For counts of detected and suppressed errors, rerun with: -v
==27539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test417 ===
The Valgrind memory detector as below:
==27554== Memcheck, a memory error detector
==27554== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27554== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27554== Command: ./impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.nocopy_dealloc.out
==27554== Parent PID: 10074
==27554== 
==27554== 
==27554== HEAP SUMMARY:
==27554==     in use at exit: 40 bytes in 1 blocks
==27554==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27554== 
==27554== LEAK SUMMARY:
==27554==    definitely lost: 0 bytes in 0 blocks
==27554==    indirectly lost: 0 bytes in 0 blocks
==27554==      possibly lost: 0 bytes in 0 blocks
==27554==    still reachable: 40 bytes in 1 blocks
==27554==         suppressed: 0 bytes in 0 blocks
==27554== Reachable blocks (those to which a pointer was found) are not shown.
==27554== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27554== 
==27554== For counts of detected and suppressed errors, rerun with: -v
==27554== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test418 ===
The Valgrind memory detector as below:
==27569== Memcheck, a memory error detector
==27569== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27569== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27569== Command: ./impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.nocopy_dealloc.out
==27569== Parent PID: 10074
==27569== 
==27569== 
==27569== HEAP SUMMARY:
==27569==     in use at exit: 40 bytes in 1 blocks
==27569==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27569== 
==27569== LEAK SUMMARY:
==27569==    definitely lost: 0 bytes in 0 blocks
==27569==    indirectly lost: 0 bytes in 0 blocks
==27569==      possibly lost: 0 bytes in 0 blocks
==27569==    still reachable: 40 bytes in 1 blocks
==27569==         suppressed: 0 bytes in 0 blocks
==27569== Reachable blocks (those to which a pointer was found) are not shown.
==27569== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27569== 
==27569== For counts of detected and suppressed errors, rerun with: -v
==27569== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test419 ===
The Valgrind memory detector as below:
==27584== Memcheck, a memory error detector
==27584== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27584== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27584== Command: ./impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.nocopy_dealloc.out
==27584== Parent PID: 10074
==27584== 
==27584== 
==27584== HEAP SUMMARY:
==27584==     in use at exit: 40 bytes in 1 blocks
==27584==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27584== 
==27584== LEAK SUMMARY:
==27584==    definitely lost: 0 bytes in 0 blocks
==27584==    indirectly lost: 0 bytes in 0 blocks
==27584==      possibly lost: 0 bytes in 0 blocks
==27584==    still reachable: 40 bytes in 1 blocks
==27584==         suppressed: 0 bytes in 0 blocks
==27584== Reachable blocks (those to which a pointer was found) are not shown.
==27584== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27584== 
==27584== For counts of detected and suppressed errors, rerun with: -v
==27584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test42 ===
The Valgrind memory detector as below:
==27600== Memcheck, a memory error detector
==27600== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27600== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27600== Command: ./impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.nocopy_dealloc.out
==27600== Parent PID: 10074
==27600== 
==27600== 
==27600== HEAP SUMMARY:
==27600==     in use at exit: 0 bytes in 0 blocks
==27600==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27600== 
==27600== All heap blocks were freed -- no leaks are possible
==27600== 
==27600== For counts of detected and suppressed errors, rerun with: -v
==27600== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test420 ===
The Valgrind memory detector as below:
==27615== Memcheck, a memory error detector
==27615== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27615== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27615== Command: ./impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.nocopy_dealloc.out
==27615== Parent PID: 10074
==27615== 
==27615== 
==27615== HEAP SUMMARY:
==27615==     in use at exit: 40 bytes in 1 blocks
==27615==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27615== 
==27615== LEAK SUMMARY:
==27615==    definitely lost: 0 bytes in 0 blocks
==27615==    indirectly lost: 0 bytes in 0 blocks
==27615==      possibly lost: 0 bytes in 0 blocks
==27615==    still reachable: 40 bytes in 1 blocks
==27615==         suppressed: 0 bytes in 0 blocks
==27615== Reachable blocks (those to which a pointer was found) are not shown.
==27615== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27615== 
==27615== For counts of detected and suppressed errors, rerun with: -v
==27615== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test421 ===
The Valgrind memory detector as below:
==27630== Memcheck, a memory error detector
==27630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27630== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27630== Command: ./impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.nocopy_dealloc.out
==27630== Parent PID: 10074
==27630== 
==27630== 
==27630== HEAP SUMMARY:
==27630==     in use at exit: 0 bytes in 0 blocks
==27630==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27630== 
==27630== All heap blocks were freed -- no leaks are possible
==27630== 
==27630== For counts of detected and suppressed errors, rerun with: -v
==27630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test422 ===
The Valgrind memory detector as below:
==27646== Memcheck, a memory error detector
==27646== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27646== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27646== Command: ./impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.nocopy_dealloc.out
==27646== Parent PID: 10074
==27646== 
==27646== 
==27646== HEAP SUMMARY:
==27646==     in use at exit: 0 bytes in 0 blocks
==27646==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27646== 
==27646== All heap blocks were freed -- no leaks are possible
==27646== 
==27646== For counts of detected and suppressed errors, rerun with: -v
==27646== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test423 ===
The Valgrind memory detector as below:
==27662== Memcheck, a memory error detector
==27662== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27662== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27662== Command: ./impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.nocopy_dealloc.out
==27662== Parent PID: 10074
==27662== 
==27662== 
==27662== HEAP SUMMARY:
==27662==     in use at exit: 0 bytes in 0 blocks
==27662==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27662== 
==27662== All heap blocks were freed -- no leaks are possible
==27662== 
==27662== For counts of detected and suppressed errors, rerun with: -v
==27662== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test424 ===
The Valgrind memory detector as below:
==27677== Memcheck, a memory error detector
==27677== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27677== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27677== Command: ./impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.nocopy_dealloc.out
==27677== Parent PID: 10074
==27677== 
==27677== 
==27677== HEAP SUMMARY:
==27677==     in use at exit: 40 bytes in 1 blocks
==27677==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27677== 
==27677== LEAK SUMMARY:
==27677==    definitely lost: 0 bytes in 0 blocks
==27677==    indirectly lost: 0 bytes in 0 blocks
==27677==      possibly lost: 0 bytes in 0 blocks
==27677==    still reachable: 40 bytes in 1 blocks
==27677==         suppressed: 0 bytes in 0 blocks
==27677== Reachable blocks (those to which a pointer was found) are not shown.
==27677== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27677== 
==27677== For counts of detected and suppressed errors, rerun with: -v
==27677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test425 ===
The Valgrind memory detector as below:
==27692== Memcheck, a memory error detector
==27692== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27692== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27692== Command: ./impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.nocopy_dealloc.out
==27692== Parent PID: 10074
==27692== 
==27692== 
==27692== HEAP SUMMARY:
==27692==     in use at exit: 40 bytes in 1 blocks
==27692==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27692== 
==27692== LEAK SUMMARY:
==27692==    definitely lost: 0 bytes in 0 blocks
==27692==    indirectly lost: 0 bytes in 0 blocks
==27692==      possibly lost: 0 bytes in 0 blocks
==27692==    still reachable: 40 bytes in 1 blocks
==27692==         suppressed: 0 bytes in 0 blocks
==27692== Reachable blocks (those to which a pointer was found) are not shown.
==27692== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27692== 
==27692== For counts of detected and suppressed errors, rerun with: -v
==27692== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test426 ===
The Valgrind memory detector as below:
==27708== Memcheck, a memory error detector
==27708== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27708== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27708== Command: ./impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.nocopy_dealloc.out
==27708== Parent PID: 10074
==27708== 
==27708== 
==27708== HEAP SUMMARY:
==27708==     in use at exit: 40 bytes in 1 blocks
==27708==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27708== 
==27708== LEAK SUMMARY:
==27708==    definitely lost: 0 bytes in 0 blocks
==27708==    indirectly lost: 0 bytes in 0 blocks
==27708==      possibly lost: 0 bytes in 0 blocks
==27708==    still reachable: 40 bytes in 1 blocks
==27708==         suppressed: 0 bytes in 0 blocks
==27708== Reachable blocks (those to which a pointer was found) are not shown.
==27708== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27708== 
==27708== For counts of detected and suppressed errors, rerun with: -v
==27708== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test427 ===
The Valgrind memory detector as below:
==27723== Memcheck, a memory error detector
==27723== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27723== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27723== Command: ./impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.nocopy_dealloc.out
==27723== Parent PID: 10074
==27723== 
==27723== 
==27723== HEAP SUMMARY:
==27723==     in use at exit: 40 bytes in 1 blocks
==27723==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27723== 
==27723== LEAK SUMMARY:
==27723==    definitely lost: 0 bytes in 0 blocks
==27723==    indirectly lost: 0 bytes in 0 blocks
==27723==      possibly lost: 0 bytes in 0 blocks
==27723==    still reachable: 40 bytes in 1 blocks
==27723==         suppressed: 0 bytes in 0 blocks
==27723== Reachable blocks (those to which a pointer was found) are not shown.
==27723== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27723== 
==27723== For counts of detected and suppressed errors, rerun with: -v
==27723== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test428 ===
The Valgrind memory detector as below:
==27738== Memcheck, a memory error detector
==27738== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27738== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27738== Command: ./impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.nocopy_dealloc.out
==27738== Parent PID: 10074
==27738== 
==27738== 
==27738== HEAP SUMMARY:
==27738==     in use at exit: 40 bytes in 1 blocks
==27738==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27738== 
==27738== LEAK SUMMARY:
==27738==    definitely lost: 0 bytes in 0 blocks
==27738==    indirectly lost: 0 bytes in 0 blocks
==27738==      possibly lost: 0 bytes in 0 blocks
==27738==    still reachable: 40 bytes in 1 blocks
==27738==         suppressed: 0 bytes in 0 blocks
==27738== Reachable blocks (those to which a pointer was found) are not shown.
==27738== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27738== 
==27738== For counts of detected and suppressed errors, rerun with: -v
==27738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test429 ===
The Valgrind memory detector as below:
==27754== Memcheck, a memory error detector
==27754== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27754== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27754== Command: ./impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.nocopy_dealloc.out
==27754== Parent PID: 10074
==27754== 
==27754== 
==27754== HEAP SUMMARY:
==27754==     in use at exit: 0 bytes in 0 blocks
==27754==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27754== 
==27754== All heap blocks were freed -- no leaks are possible
==27754== 
==27754== For counts of detected and suppressed errors, rerun with: -v
==27754== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test43 ===
The Valgrind memory detector as below:
==27769== Memcheck, a memory error detector
==27769== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27769== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27769== Command: ./impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.nocopy_dealloc.out
==27769== Parent PID: 10074
==27769== 
==27769== 
==27769== HEAP SUMMARY:
==27769==     in use at exit: 0 bytes in 0 blocks
==27769==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27769== 
==27769== All heap blocks were freed -- no leaks are possible
==27769== 
==27769== For counts of detected and suppressed errors, rerun with: -v
==27769== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test430 ===
The Valgrind memory detector as below:
==27784== Memcheck, a memory error detector
==27784== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27784== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27784== Command: ./impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.nocopy_dealloc.out
==27784== Parent PID: 10074
==27784== 
==27784== 
==27784== HEAP SUMMARY:
==27784==     in use at exit: 0 bytes in 0 blocks
==27784==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27784== 
==27784== All heap blocks were freed -- no leaks are possible
==27784== 
==27784== For counts of detected and suppressed errors, rerun with: -v
==27784== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test431 ===
The Valgrind memory detector as below:
==27799== Memcheck, a memory error detector
==27799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27799== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27799== Command: ./impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.nocopy_dealloc.out
==27799== Parent PID: 10074
==27799== 
==27799== 
==27799== HEAP SUMMARY:
==27799==     in use at exit: 0 bytes in 0 blocks
==27799==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27799== 
==27799== All heap blocks were freed -- no leaks are possible
==27799== 
==27799== For counts of detected and suppressed errors, rerun with: -v
==27799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test432 ===
The Valgrind memory detector as below:
==27816== Memcheck, a memory error detector
==27816== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27816== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27816== Command: ./impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.nocopy_dealloc.out
==27816== Parent PID: 10074
==27816== 
==27816== 
==27816== HEAP SUMMARY:
==27816==     in use at exit: 0 bytes in 0 blocks
==27816==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27816== 
==27816== All heap blocks were freed -- no leaks are possible
==27816== 
==27816== For counts of detected and suppressed errors, rerun with: -v
==27816== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test433 ===
The Valgrind memory detector as below:
==27832== Memcheck, a memory error detector
==27832== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27832== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27832== Command: ./impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.nocopy_dealloc.out
==27832== Parent PID: 10074
==27832== 
==27832== 
==27832== HEAP SUMMARY:
==27832==     in use at exit: 0 bytes in 0 blocks
==27832==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27832== 
==27832== All heap blocks were freed -- no leaks are possible
==27832== 
==27832== For counts of detected and suppressed errors, rerun with: -v
==27832== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test434 ===
The Valgrind memory detector as below:
==27848== Memcheck, a memory error detector
==27848== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27848== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27848== Command: ./impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.nocopy_dealloc.out
==27848== Parent PID: 10074
==27848== 
==27848== 
==27848== HEAP SUMMARY:
==27848==     in use at exit: 40 bytes in 1 blocks
==27848==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27848== 
==27848== LEAK SUMMARY:
==27848==    definitely lost: 0 bytes in 0 blocks
==27848==    indirectly lost: 0 bytes in 0 blocks
==27848==      possibly lost: 0 bytes in 0 blocks
==27848==    still reachable: 40 bytes in 1 blocks
==27848==         suppressed: 0 bytes in 0 blocks
==27848== Reachable blocks (those to which a pointer was found) are not shown.
==27848== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27848== 
==27848== For counts of detected and suppressed errors, rerun with: -v
==27848== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test435 ===
The Valgrind memory detector as below:
==27865== Memcheck, a memory error detector
==27865== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27865== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27865== Command: ./impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.nocopy_dealloc.out
==27865== Parent PID: 10074
==27865== 
==27865== 
==27865== HEAP SUMMARY:
==27865==     in use at exit: 40 bytes in 1 blocks
==27865==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27865== 
==27865== LEAK SUMMARY:
==27865==    definitely lost: 0 bytes in 0 blocks
==27865==    indirectly lost: 0 bytes in 0 blocks
==27865==      possibly lost: 0 bytes in 0 blocks
==27865==    still reachable: 40 bytes in 1 blocks
==27865==         suppressed: 0 bytes in 0 blocks
==27865== Reachable blocks (those to which a pointer was found) are not shown.
==27865== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27865== 
==27865== For counts of detected and suppressed errors, rerun with: -v
==27865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test436 ===
The Valgrind memory detector as below:
==27880== Memcheck, a memory error detector
==27880== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27880== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27880== Command: ./impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.nocopy_dealloc.out
==27880== Parent PID: 10074
==27880== 
==27880== 
==27880== HEAP SUMMARY:
==27880==     in use at exit: 40 bytes in 1 blocks
==27880==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27880== 
==27880== LEAK SUMMARY:
==27880==    definitely lost: 0 bytes in 0 blocks
==27880==    indirectly lost: 0 bytes in 0 blocks
==27880==      possibly lost: 0 bytes in 0 blocks
==27880==    still reachable: 40 bytes in 1 blocks
==27880==         suppressed: 0 bytes in 0 blocks
==27880== Reachable blocks (those to which a pointer was found) are not shown.
==27880== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27880== 
==27880== For counts of detected and suppressed errors, rerun with: -v
==27880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test437 ===
The Valgrind memory detector as below:
==27895== Memcheck, a memory error detector
==27895== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27895== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27895== Command: ./impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.nocopy_dealloc.out
==27895== Parent PID: 10074
==27895== 
==27895== 
==27895== HEAP SUMMARY:
==27895==     in use at exit: 40 bytes in 1 blocks
==27895==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27895== 
==27895== LEAK SUMMARY:
==27895==    definitely lost: 0 bytes in 0 blocks
==27895==    indirectly lost: 0 bytes in 0 blocks
==27895==      possibly lost: 0 bytes in 0 blocks
==27895==    still reachable: 40 bytes in 1 blocks
==27895==         suppressed: 0 bytes in 0 blocks
==27895== Reachable blocks (those to which a pointer was found) are not shown.
==27895== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27895== 
==27895== For counts of detected and suppressed errors, rerun with: -v
==27895== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test438 ===
The Valgrind memory detector as below:
==27910== Memcheck, a memory error detector
==27910== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27910== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27910== Command: ./impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.nocopy_dealloc.out
==27910== Parent PID: 10074
==27910== 
==27910== 
==27910== HEAP SUMMARY:
==27910==     in use at exit: 40 bytes in 1 blocks
==27910==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==27910== 
==27910== LEAK SUMMARY:
==27910==    definitely lost: 0 bytes in 0 blocks
==27910==    indirectly lost: 0 bytes in 0 blocks
==27910==      possibly lost: 0 bytes in 0 blocks
==27910==    still reachable: 40 bytes in 1 blocks
==27910==         suppressed: 0 bytes in 0 blocks
==27910== Reachable blocks (those to which a pointer was found) are not shown.
==27910== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27910== 
==27910== For counts of detected and suppressed errors, rerun with: -v
==27910== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test439 ===
The Valgrind memory detector as below:
==27926== Memcheck, a memory error detector
==27926== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27926== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27926== Command: ./impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.nocopy_dealloc.out
==27926== Parent PID: 10074
==27926== 
==27926== 
==27926== HEAP SUMMARY:
==27926==     in use at exit: 0 bytes in 0 blocks
==27926==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27926== 
==27926== All heap blocks were freed -- no leaks are possible
==27926== 
==27926== For counts of detected and suppressed errors, rerun with: -v
==27926== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test44 ===
The Valgrind memory detector as below:
==27942== Memcheck, a memory error detector
==27942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27942== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27942== Command: ./impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.nocopy_dealloc.out
==27942== Parent PID: 10074
==27942== 
==27942== 
==27942== HEAP SUMMARY:
==27942==     in use at exit: 0 bytes in 0 blocks
==27942==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27942== 
==27942== All heap blocks were freed -- no leaks are possible
==27942== 
==27942== For counts of detected and suppressed errors, rerun with: -v
==27942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test440 ===
The Valgrind memory detector as below:
==27958== Memcheck, a memory error detector
==27958== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27958== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27958== Command: ./impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.nocopy_dealloc.out
==27958== Parent PID: 10074
==27958== 
==27958== 
==27958== HEAP SUMMARY:
==27958==     in use at exit: 0 bytes in 0 blocks
==27958==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27958== 
==27958== All heap blocks were freed -- no leaks are possible
==27958== 
==27958== For counts of detected and suppressed errors, rerun with: -v
==27958== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test441 ===
The Valgrind memory detector as below:
==27973== Memcheck, a memory error detector
==27973== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27973== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27973== Command: ./impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.nocopy_dealloc.out
==27973== Parent PID: 10074
==27973== 
==27973== 
==27973== HEAP SUMMARY:
==27973==     in use at exit: 0 bytes in 0 blocks
==27973==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27973== 
==27973== All heap blocks were freed -- no leaks are possible
==27973== 
==27973== For counts of detected and suppressed errors, rerun with: -v
==27973== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test442 ===
The Valgrind memory detector as below:
==27990== Memcheck, a memory error detector
==27990== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27990== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==27990== Command: ./impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.nocopy_dealloc.out
==27990== Parent PID: 10074
==27990== 
==27990== 
==27990== HEAP SUMMARY:
==27990==     in use at exit: 0 bytes in 0 blocks
==27990==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==27990== 
==27990== All heap blocks were freed -- no leaks are possible
==27990== 
==27990== For counts of detected and suppressed errors, rerun with: -v
==27990== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test443 ===
The Valgrind memory detector as below:
==28005== Memcheck, a memory error detector
==28005== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28005== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28005== Command: ./impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.nocopy_dealloc.out
==28005== Parent PID: 10074
==28005== 
==28005== 
==28005== HEAP SUMMARY:
==28005==     in use at exit: 40 bytes in 1 blocks
==28005==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28005== 
==28005== LEAK SUMMARY:
==28005==    definitely lost: 0 bytes in 0 blocks
==28005==    indirectly lost: 0 bytes in 0 blocks
==28005==      possibly lost: 0 bytes in 0 blocks
==28005==    still reachable: 40 bytes in 1 blocks
==28005==         suppressed: 0 bytes in 0 blocks
==28005== Reachable blocks (those to which a pointer was found) are not shown.
==28005== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28005== 
==28005== For counts of detected and suppressed errors, rerun with: -v
==28005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test444 ===
The Valgrind memory detector as below:
==28020== Memcheck, a memory error detector
==28020== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28020== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28020== Command: ./impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.nocopy_dealloc.out
==28020== Parent PID: 10074
==28020== 
==28020== 
==28020== HEAP SUMMARY:
==28020==     in use at exit: 0 bytes in 0 blocks
==28020==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28020== 
==28020== All heap blocks were freed -- no leaks are possible
==28020== 
==28020== For counts of detected and suppressed errors, rerun with: -v
==28020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test445 ===
The Valgrind memory detector as below:
==28035== Memcheck, a memory error detector
==28035== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28035== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28035== Command: ./impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.nocopy_dealloc.out
==28035== Parent PID: 10074
==28035== 
==28035== 
==28035== HEAP SUMMARY:
==28035==     in use at exit: 0 bytes in 0 blocks
==28035==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28035== 
==28035== All heap blocks were freed -- no leaks are possible
==28035== 
==28035== For counts of detected and suppressed errors, rerun with: -v
==28035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test446 ===
The Valgrind memory detector as below:
==28055== Memcheck, a memory error detector
==28055== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28055== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28055== Command: ./impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.nocopy_dealloc.out
==28055== Parent PID: 10074
==28055== 
==28055== 
==28055== HEAP SUMMARY:
==28055==     in use at exit: 0 bytes in 0 blocks
==28055==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28055== 
==28055== All heap blocks were freed -- no leaks are possible
==28055== 
==28055== For counts of detected and suppressed errors, rerun with: -v
==28055== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test447 ===
The Valgrind memory detector as below:
==28083== Memcheck, a memory error detector
==28083== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28083== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28083== Command: ./impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.nocopy_dealloc.out
==28083== Parent PID: 10074
==28083== 
==28083== 
==28083== HEAP SUMMARY:
==28083==     in use at exit: 0 bytes in 0 blocks
==28083==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28083== 
==28083== All heap blocks were freed -- no leaks are possible
==28083== 
==28083== For counts of detected and suppressed errors, rerun with: -v
==28083== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test448 ===
The Valgrind memory detector as below:
==28098== Memcheck, a memory error detector
==28098== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28098== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28098== Command: ./impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.nocopy_dealloc.out
==28098== Parent PID: 10074
==28098== 
==28098== 
==28098== HEAP SUMMARY:
==28098==     in use at exit: 0 bytes in 0 blocks
==28098==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28098== 
==28098== All heap blocks were freed -- no leaks are possible
==28098== 
==28098== For counts of detected and suppressed errors, rerun with: -v
==28098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test449 ===
The Valgrind memory detector as below:
==28114== Memcheck, a memory error detector
==28114== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28114== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28114== Command: ./impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.nocopy_dealloc.out
==28114== Parent PID: 10074
==28114== 
==28114== 
==28114== HEAP SUMMARY:
==28114==     in use at exit: 0 bytes in 0 blocks
==28114==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28114== 
==28114== All heap blocks were freed -- no leaks are possible
==28114== 
==28114== For counts of detected and suppressed errors, rerun with: -v
==28114== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test45 ===
The Valgrind memory detector as below:
==28130== Memcheck, a memory error detector
==28130== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28130== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28130== Command: ./impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.nocopy_dealloc.out
==28130== Parent PID: 10074
==28130== 
==28130== 
==28130== HEAP SUMMARY:
==28130==     in use at exit: 40 bytes in 1 blocks
==28130==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28130== 
==28130== LEAK SUMMARY:
==28130==    definitely lost: 0 bytes in 0 blocks
==28130==    indirectly lost: 0 bytes in 0 blocks
==28130==      possibly lost: 0 bytes in 0 blocks
==28130==    still reachable: 40 bytes in 1 blocks
==28130==         suppressed: 0 bytes in 0 blocks
==28130== Reachable blocks (those to which a pointer was found) are not shown.
==28130== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28130== 
==28130== For counts of detected and suppressed errors, rerun with: -v
==28130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test450 ===
The Valgrind memory detector as below:
==28145== Memcheck, a memory error detector
==28145== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28145== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28145== Command: ./impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.nocopy_dealloc.out
==28145== Parent PID: 10074
==28145== 
==28145== 
==28145== HEAP SUMMARY:
==28145==     in use at exit: 0 bytes in 0 blocks
==28145==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28145== 
==28145== All heap blocks were freed -- no leaks are possible
==28145== 
==28145== For counts of detected and suppressed errors, rerun with: -v
==28145== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test451 ===
The Valgrind memory detector as below:
==28161== Memcheck, a memory error detector
==28161== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28161== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28161== Command: ./impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.nocopy_dealloc.out
==28161== Parent PID: 10074
==28161== 
==28161== 
==28161== HEAP SUMMARY:
==28161==     in use at exit: 0 bytes in 0 blocks
==28161==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28161== 
==28161== All heap blocks were freed -- no leaks are possible
==28161== 
==28161== For counts of detected and suppressed errors, rerun with: -v
==28161== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test452 ===
The Valgrind memory detector as below:
==28176== Memcheck, a memory error detector
==28176== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28176== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28176== Command: ./impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.nocopy_dealloc.out
==28176== Parent PID: 10074
==28176== 
==28176== 
==28176== HEAP SUMMARY:
==28176==     in use at exit: 0 bytes in 0 blocks
==28176==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28176== 
==28176== All heap blocks were freed -- no leaks are possible
==28176== 
==28176== For counts of detected and suppressed errors, rerun with: -v
==28176== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test453 ===
The Valgrind memory detector as below:
==28191== Memcheck, a memory error detector
==28191== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28191== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28191== Command: ./impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.nocopy_dealloc.out
==28191== Parent PID: 10074
==28191== 
==28191== 
==28191== HEAP SUMMARY:
==28191==     in use at exit: 40 bytes in 1 blocks
==28191==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28191== 
==28191== LEAK SUMMARY:
==28191==    definitely lost: 0 bytes in 0 blocks
==28191==    indirectly lost: 0 bytes in 0 blocks
==28191==      possibly lost: 0 bytes in 0 blocks
==28191==    still reachable: 40 bytes in 1 blocks
==28191==         suppressed: 0 bytes in 0 blocks
==28191== Reachable blocks (those to which a pointer was found) are not shown.
==28191== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28191== 
==28191== For counts of detected and suppressed errors, rerun with: -v
==28191== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test454 ===
The Valgrind memory detector as below:
==28207== Memcheck, a memory error detector
==28207== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28207== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28207== Command: ./impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.nocopy_dealloc.out
==28207== Parent PID: 10074
==28207== 
==28207== 
==28207== HEAP SUMMARY:
==28207==     in use at exit: 0 bytes in 0 blocks
==28207==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28207== 
==28207== All heap blocks were freed -- no leaks are possible
==28207== 
==28207== For counts of detected and suppressed errors, rerun with: -v
==28207== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test455 ===
The Valgrind memory detector as below:
==28223== Memcheck, a memory error detector
==28223== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28223== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28223== Command: ./impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.nocopy_dealloc.out
==28223== Parent PID: 10074
==28223== 
==28223== 
==28223== HEAP SUMMARY:
==28223==     in use at exit: 0 bytes in 0 blocks
==28223==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28223== 
==28223== All heap blocks were freed -- no leaks are possible
==28223== 
==28223== For counts of detected and suppressed errors, rerun with: -v
==28223== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test456 ===
The Valgrind memory detector as below:
==28238== Memcheck, a memory error detector
==28238== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28238== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28238== Command: ./impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.nocopy_dealloc.out
==28238== Parent PID: 10074
==28238== 
==28238== 
==28238== HEAP SUMMARY:
==28238==     in use at exit: 0 bytes in 0 blocks
==28238==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28238== 
==28238== All heap blocks were freed -- no leaks are possible
==28238== 
==28238== For counts of detected and suppressed errors, rerun with: -v
==28238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test457 ===
The Valgrind memory detector as below:
==28254== Memcheck, a memory error detector
==28254== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28254== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28254== Command: ./impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.nocopy_dealloc.out
==28254== Parent PID: 10074
==28254== 
==28254== 
==28254== HEAP SUMMARY:
==28254==     in use at exit: 0 bytes in 0 blocks
==28254==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28254== 
==28254== All heap blocks were freed -- no leaks are possible
==28254== 
==28254== For counts of detected and suppressed errors, rerun with: -v
==28254== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test458 ===
The Valgrind memory detector as below:
==28269== Memcheck, a memory error detector
==28269== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28269== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28269== Command: ./impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.nocopy_dealloc.out
==28269== Parent PID: 10074
==28269== 
==28269== 
==28269== HEAP SUMMARY:
==28269==     in use at exit: 0 bytes in 0 blocks
==28269==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28269== 
==28269== All heap blocks were freed -- no leaks are possible
==28269== 
==28269== For counts of detected and suppressed errors, rerun with: -v
==28269== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test459 ===
The Valgrind memory detector as below:
==28284== Memcheck, a memory error detector
==28284== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28284== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28284== Command: ./impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.nocopy_dealloc.out
==28284== Parent PID: 10074
==28284== 
==28284== 
==28284== HEAP SUMMARY:
==28284==     in use at exit: 40 bytes in 1 blocks
==28284==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28284== 
==28284== LEAK SUMMARY:
==28284==    definitely lost: 0 bytes in 0 blocks
==28284==    indirectly lost: 0 bytes in 0 blocks
==28284==      possibly lost: 0 bytes in 0 blocks
==28284==    still reachable: 40 bytes in 1 blocks
==28284==         suppressed: 0 bytes in 0 blocks
==28284== Reachable blocks (those to which a pointer was found) are not shown.
==28284== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28284== 
==28284== For counts of detected and suppressed errors, rerun with: -v
==28284== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test46 ===
The Valgrind memory detector as below:
==28299== Memcheck, a memory error detector
==28299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28299== Command: ./impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.nocopy_dealloc.out
==28299== Parent PID: 10074
==28299== 
==28299== 
==28299== HEAP SUMMARY:
==28299==     in use at exit: 40 bytes in 1 blocks
==28299==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28299== 
==28299== LEAK SUMMARY:
==28299==    definitely lost: 0 bytes in 0 blocks
==28299==    indirectly lost: 0 bytes in 0 blocks
==28299==      possibly lost: 0 bytes in 0 blocks
==28299==    still reachable: 40 bytes in 1 blocks
==28299==         suppressed: 0 bytes in 0 blocks
==28299== Reachable blocks (those to which a pointer was found) are not shown.
==28299== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28299== 
==28299== For counts of detected and suppressed errors, rerun with: -v
==28299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test460 ===
The Valgrind memory detector as below:
==28315== Memcheck, a memory error detector
==28315== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28315== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28315== Command: ./impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.nocopy_dealloc.out
==28315== Parent PID: 10074
==28315== 
==28315== 
==28315== HEAP SUMMARY:
==28315==     in use at exit: 0 bytes in 0 blocks
==28315==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28315== 
==28315== All heap blocks were freed -- no leaks are possible
==28315== 
==28315== For counts of detected and suppressed errors, rerun with: -v
==28315== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test461 ===
The Valgrind memory detector as below:
==28330== Memcheck, a memory error detector
==28330== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28330== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28330== Command: ./impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.nocopy_dealloc.out
==28330== Parent PID: 10074
==28330== 
==28330== 
==28330== HEAP SUMMARY:
==28330==     in use at exit: 0 bytes in 0 blocks
==28330==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28330== 
==28330== All heap blocks were freed -- no leaks are possible
==28330== 
==28330== For counts of detected and suppressed errors, rerun with: -v
==28330== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test462 ===
The Valgrind memory detector as below:
==28345== Memcheck, a memory error detector
==28345== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28345== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28345== Command: ./impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.nocopy_dealloc.out
==28345== Parent PID: 10074
==28345== 
==28345== 
==28345== HEAP SUMMARY:
==28345==     in use at exit: 0 bytes in 0 blocks
==28345==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28345== 
==28345== All heap blocks were freed -- no leaks are possible
==28345== 
==28345== For counts of detected and suppressed errors, rerun with: -v
==28345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test463 ===
The Valgrind memory detector as below:
==28361== Memcheck, a memory error detector
==28361== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28361== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28361== Command: ./impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.nocopy_dealloc.out
==28361== Parent PID: 10074
==28361== 
==28361== 
==28361== HEAP SUMMARY:
==28361==     in use at exit: 40 bytes in 1 blocks
==28361==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28361== 
==28361== LEAK SUMMARY:
==28361==    definitely lost: 0 bytes in 0 blocks
==28361==    indirectly lost: 0 bytes in 0 blocks
==28361==      possibly lost: 0 bytes in 0 blocks
==28361==    still reachable: 40 bytes in 1 blocks
==28361==         suppressed: 0 bytes in 0 blocks
==28361== Reachable blocks (those to which a pointer was found) are not shown.
==28361== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28361== 
==28361== For counts of detected and suppressed errors, rerun with: -v
==28361== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test464 ===
The Valgrind memory detector as below:
==28376== Memcheck, a memory error detector
==28376== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28376== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28376== Command: ./impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.nocopy_dealloc.out
==28376== Parent PID: 10074
==28376== 
==28376== 
==28376== HEAP SUMMARY:
==28376==     in use at exit: 0 bytes in 0 blocks
==28376==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28376== 
==28376== All heap blocks were freed -- no leaks are possible
==28376== 
==28376== For counts of detected and suppressed errors, rerun with: -v
==28376== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test465 ===
The Valgrind memory detector as below:
==28391== Memcheck, a memory error detector
==28391== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28391== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28391== Command: ./impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.nocopy_dealloc.out
==28391== Parent PID: 10074
==28391== 
==28391== 
==28391== HEAP SUMMARY:
==28391==     in use at exit: 40 bytes in 1 blocks
==28391==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28391== 
==28391== LEAK SUMMARY:
==28391==    definitely lost: 0 bytes in 0 blocks
==28391==    indirectly lost: 0 bytes in 0 blocks
==28391==      possibly lost: 0 bytes in 0 blocks
==28391==    still reachable: 40 bytes in 1 blocks
==28391==         suppressed: 0 bytes in 0 blocks
==28391== Reachable blocks (those to which a pointer was found) are not shown.
==28391== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28391== 
==28391== For counts of detected and suppressed errors, rerun with: -v
==28391== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test466 ===
The Valgrind memory detector as below:
==28407== Memcheck, a memory error detector
==28407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28407== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28407== Command: ./impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.nocopy_dealloc.out
==28407== Parent PID: 10074
==28407== 
==28407== 
==28407== HEAP SUMMARY:
==28407==     in use at exit: 40 bytes in 1 blocks
==28407==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28407== 
==28407== LEAK SUMMARY:
==28407==    definitely lost: 0 bytes in 0 blocks
==28407==    indirectly lost: 0 bytes in 0 blocks
==28407==      possibly lost: 0 bytes in 0 blocks
==28407==    still reachable: 40 bytes in 1 blocks
==28407==         suppressed: 0 bytes in 0 blocks
==28407== Reachable blocks (those to which a pointer was found) are not shown.
==28407== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28407== 
==28407== For counts of detected and suppressed errors, rerun with: -v
==28407== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test467 ===
The Valgrind memory detector as below:
==28422== Memcheck, a memory error detector
==28422== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28422== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28422== Command: ./impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.nocopy_dealloc.out
==28422== Parent PID: 10074
==28422== 
==28422== 
==28422== HEAP SUMMARY:
==28422==     in use at exit: 0 bytes in 0 blocks
==28422==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28422== 
==28422== All heap blocks were freed -- no leaks are possible
==28422== 
==28422== For counts of detected and suppressed errors, rerun with: -v
==28422== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test468 ===
The Valgrind memory detector as below:
==28438== Memcheck, a memory error detector
==28438== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28438== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28438== Command: ./impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.nocopy_dealloc.out
==28438== Parent PID: 10074
==28438== 
==28438== 
==28438== HEAP SUMMARY:
==28438==     in use at exit: 0 bytes in 0 blocks
==28438==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28438== 
==28438== All heap blocks were freed -- no leaks are possible
==28438== 
==28438== For counts of detected and suppressed errors, rerun with: -v
==28438== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test469 ===
The Valgrind memory detector as below:
==28454== Memcheck, a memory error detector
==28454== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28454== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28454== Command: ./impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.nocopy_dealloc.out
==28454== Parent PID: 10074
==28454== 
==28454== 
==28454== HEAP SUMMARY:
==28454==     in use at exit: 0 bytes in 0 blocks
==28454==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28454== 
==28454== All heap blocks were freed -- no leaks are possible
==28454== 
==28454== For counts of detected and suppressed errors, rerun with: -v
==28454== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test47 ===
The Valgrind memory detector as below:
==28470== Memcheck, a memory error detector
==28470== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28470== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28470== Command: ./impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.nocopy_dealloc.out
==28470== Parent PID: 10074
==28470== 
==28470== 
==28470== HEAP SUMMARY:
==28470==     in use at exit: 0 bytes in 0 blocks
==28470==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28470== 
==28470== All heap blocks were freed -- no leaks are possible
==28470== 
==28470== For counts of detected and suppressed errors, rerun with: -v
==28470== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test470 ===
The Valgrind memory detector as below:
==28486== Memcheck, a memory error detector
==28486== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28486== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28486== Command: ./impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.nocopy_dealloc.out
==28486== Parent PID: 10074
==28486== 
==28486== 
==28486== HEAP SUMMARY:
==28486==     in use at exit: 0 bytes in 0 blocks
==28486==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28486== 
==28486== All heap blocks were freed -- no leaks are possible
==28486== 
==28486== For counts of detected and suppressed errors, rerun with: -v
==28486== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test471 ===
The Valgrind memory detector as below:
==28501== Memcheck, a memory error detector
==28501== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28501== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28501== Command: ./impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.nocopy_dealloc.out
==28501== Parent PID: 10074
==28501== 
==28501== 
==28501== HEAP SUMMARY:
==28501==     in use at exit: 0 bytes in 0 blocks
==28501==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28501== 
==28501== All heap blocks were freed -- no leaks are possible
==28501== 
==28501== For counts of detected and suppressed errors, rerun with: -v
==28501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test472 ===
The Valgrind memory detector as below:
==28516== Memcheck, a memory error detector
==28516== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28516== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28516== Command: ./impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.nocopy_dealloc.out
==28516== Parent PID: 10074
==28516== 
==28516== 
==28516== HEAP SUMMARY:
==28516==     in use at exit: 40 bytes in 1 blocks
==28516==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28516== 
==28516== LEAK SUMMARY:
==28516==    definitely lost: 0 bytes in 0 blocks
==28516==    indirectly lost: 0 bytes in 0 blocks
==28516==      possibly lost: 0 bytes in 0 blocks
==28516==    still reachable: 40 bytes in 1 blocks
==28516==         suppressed: 0 bytes in 0 blocks
==28516== Reachable blocks (those to which a pointer was found) are not shown.
==28516== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28516== 
==28516== For counts of detected and suppressed errors, rerun with: -v
==28516== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test473 ===
The Valgrind memory detector as below:
==28531== Memcheck, a memory error detector
==28531== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28531== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28531== Command: ./impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.nocopy_dealloc.out
==28531== Parent PID: 10074
==28531== 
==28531== 
==28531== HEAP SUMMARY:
==28531==     in use at exit: 0 bytes in 0 blocks
==28531==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28531== 
==28531== All heap blocks were freed -- no leaks are possible
==28531== 
==28531== For counts of detected and suppressed errors, rerun with: -v
==28531== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test474 ===
The Valgrind memory detector as below:
==28547== Memcheck, a memory error detector
==28547== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28547== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28547== Command: ./impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.nocopy_dealloc.out
==28547== Parent PID: 10074
==28547== 
==28547== 
==28547== HEAP SUMMARY:
==28547==     in use at exit: 0 bytes in 0 blocks
==28547==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28547== 
==28547== All heap blocks were freed -- no leaks are possible
==28547== 
==28547== For counts of detected and suppressed errors, rerun with: -v
==28547== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test475 ===
The Valgrind memory detector as below:
==28562== Memcheck, a memory error detector
==28562== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28562== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28562== Command: ./impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.nocopy_dealloc.out
==28562== Parent PID: 10074
==28562== 
==28562== 
==28562== HEAP SUMMARY:
==28562==     in use at exit: 40 bytes in 1 blocks
==28562==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28562== 
==28562== LEAK SUMMARY:
==28562==    definitely lost: 0 bytes in 0 blocks
==28562==    indirectly lost: 0 bytes in 0 blocks
==28562==      possibly lost: 0 bytes in 0 blocks
==28562==    still reachable: 40 bytes in 1 blocks
==28562==         suppressed: 0 bytes in 0 blocks
==28562== Reachable blocks (those to which a pointer was found) are not shown.
==28562== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28562== 
==28562== For counts of detected and suppressed errors, rerun with: -v
==28562== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test476 ===
The Valgrind memory detector as below:
==28578== Memcheck, a memory error detector
==28578== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28578== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28578== Command: ./impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.nocopy_dealloc.out
==28578== Parent PID: 10074
==28578== 
==28578== 
==28578== HEAP SUMMARY:
==28578==     in use at exit: 40 bytes in 1 blocks
==28578==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28578== 
==28578== LEAK SUMMARY:
==28578==    definitely lost: 0 bytes in 0 blocks
==28578==    indirectly lost: 0 bytes in 0 blocks
==28578==      possibly lost: 0 bytes in 0 blocks
==28578==    still reachable: 40 bytes in 1 blocks
==28578==         suppressed: 0 bytes in 0 blocks
==28578== Reachable blocks (those to which a pointer was found) are not shown.
==28578== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28578== 
==28578== For counts of detected and suppressed errors, rerun with: -v
==28578== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test477 ===
The Valgrind memory detector as below:
==28593== Memcheck, a memory error detector
==28593== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28593== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28593== Command: ./impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.nocopy_dealloc.out
==28593== Parent PID: 10074
==28593== 
==28593== 
==28593== HEAP SUMMARY:
==28593==     in use at exit: 0 bytes in 0 blocks
==28593==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28593== 
==28593== All heap blocks were freed -- no leaks are possible
==28593== 
==28593== For counts of detected and suppressed errors, rerun with: -v
==28593== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test478 ===
The Valgrind memory detector as below:
==28608== Memcheck, a memory error detector
==28608== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28608== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28608== Command: ./impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.nocopy_dealloc.out
==28608== Parent PID: 10074
==28608== 
==28608== 
==28608== HEAP SUMMARY:
==28608==     in use at exit: 0 bytes in 0 blocks
==28608==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28608== 
==28608== All heap blocks were freed -- no leaks are possible
==28608== 
==28608== For counts of detected and suppressed errors, rerun with: -v
==28608== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test479 ===
The Valgrind memory detector as below:
==28623== Memcheck, a memory error detector
==28623== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28623== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28623== Command: ./impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.nocopy_dealloc.out
==28623== Parent PID: 10074
==28623== 
==28623== 
==28623== HEAP SUMMARY:
==28623==     in use at exit: 0 bytes in 0 blocks
==28623==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28623== 
==28623== All heap blocks were freed -- no leaks are possible
==28623== 
==28623== For counts of detected and suppressed errors, rerun with: -v
==28623== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test48 ===
The Valgrind memory detector as below:
==28639== Memcheck, a memory error detector
==28639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28639== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28639== Command: ./impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.nocopy_dealloc.out
==28639== Parent PID: 10074
==28639== 
==28639== 
==28639== HEAP SUMMARY:
==28639==     in use at exit: 0 bytes in 0 blocks
==28639==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28639== 
==28639== All heap blocks were freed -- no leaks are possible
==28639== 
==28639== For counts of detected and suppressed errors, rerun with: -v
==28639== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test480 ===
The Valgrind memory detector as below:
==28654== Memcheck, a memory error detector
==28654== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28654== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28654== Command: ./impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.nocopy_dealloc.out
==28654== Parent PID: 10074
==28654== 
==28654== 
==28654== HEAP SUMMARY:
==28654==     in use at exit: 0 bytes in 0 blocks
==28654==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28654== 
==28654== All heap blocks were freed -- no leaks are possible
==28654== 
==28654== For counts of detected and suppressed errors, rerun with: -v
==28654== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test481 ===
The Valgrind memory detector as below:
==28669== Memcheck, a memory error detector
==28669== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28669== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28669== Command: ./impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.nocopy_dealloc.out
==28669== Parent PID: 10074
==28669== 
==28669== 
==28669== HEAP SUMMARY:
==28669==     in use at exit: 40 bytes in 1 blocks
==28669==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28669== 
==28669== LEAK SUMMARY:
==28669==    definitely lost: 0 bytes in 0 blocks
==28669==    indirectly lost: 0 bytes in 0 blocks
==28669==      possibly lost: 0 bytes in 0 blocks
==28669==    still reachable: 40 bytes in 1 blocks
==28669==         suppressed: 0 bytes in 0 blocks
==28669== Reachable blocks (those to which a pointer was found) are not shown.
==28669== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28669== 
==28669== For counts of detected and suppressed errors, rerun with: -v
==28669== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test482 ===
The Valgrind memory detector as below:
==28684== Memcheck, a memory error detector
==28684== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28684== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28684== Command: ./impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.nocopy_dealloc.out
==28684== Parent PID: 10074
==28684== 
==28684== 
==28684== HEAP SUMMARY:
==28684==     in use at exit: 40 bytes in 1 blocks
==28684==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28684== 
==28684== LEAK SUMMARY:
==28684==    definitely lost: 0 bytes in 0 blocks
==28684==    indirectly lost: 0 bytes in 0 blocks
==28684==      possibly lost: 0 bytes in 0 blocks
==28684==    still reachable: 40 bytes in 1 blocks
==28684==         suppressed: 0 bytes in 0 blocks
==28684== Reachable blocks (those to which a pointer was found) are not shown.
==28684== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28684== 
==28684== For counts of detected and suppressed errors, rerun with: -v
==28684== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test483 ===
The Valgrind memory detector as below:
==28700== Memcheck, a memory error detector
==28700== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28700== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28700== Command: ./impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.nocopy_dealloc.out
==28700== Parent PID: 10074
==28700== 
==28700== 
==28700== HEAP SUMMARY:
==28700==     in use at exit: 0 bytes in 0 blocks
==28700==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28700== 
==28700== All heap blocks were freed -- no leaks are possible
==28700== 
==28700== For counts of detected and suppressed errors, rerun with: -v
==28700== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test484 ===
The Valgrind memory detector as below:
==28717== Memcheck, a memory error detector
==28717== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28717== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28717== Command: ./impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.nocopy_dealloc.out
==28717== Parent PID: 10074
==28717== 
==28717== 
==28717== HEAP SUMMARY:
==28717==     in use at exit: 0 bytes in 0 blocks
==28717==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28717== 
==28717== All heap blocks were freed -- no leaks are possible
==28717== 
==28717== For counts of detected and suppressed errors, rerun with: -v
==28717== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test485 ===
The Valgrind memory detector as below:
==28732== Memcheck, a memory error detector
==28732== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28732== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28732== Command: ./impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.nocopy_dealloc.out
==28732== Parent PID: 10074
==28732== 
==28732== 
==28732== HEAP SUMMARY:
==28732==     in use at exit: 0 bytes in 0 blocks
==28732==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28732== 
==28732== All heap blocks were freed -- no leaks are possible
==28732== 
==28732== For counts of detected and suppressed errors, rerun with: -v
==28732== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test486 ===
The Valgrind memory detector as below:
==28747== Memcheck, a memory error detector
==28747== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28747== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28747== Command: ./impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.nocopy_dealloc.out
==28747== Parent PID: 10074
==28747== 
==28747== 
==28747== HEAP SUMMARY:
==28747==     in use at exit: 0 bytes in 0 blocks
==28747==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28747== 
==28747== All heap blocks were freed -- no leaks are possible
==28747== 
==28747== For counts of detected and suppressed errors, rerun with: -v
==28747== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test487 ===
The Valgrind memory detector as below:
==28763== Memcheck, a memory error detector
==28763== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28763== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28763== Command: ./impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.nocopy_dealloc.out
==28763== Parent PID: 10074
==28763== 
==28763== 
==28763== HEAP SUMMARY:
==28763==     in use at exit: 0 bytes in 0 blocks
==28763==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28763== 
==28763== All heap blocks were freed -- no leaks are possible
==28763== 
==28763== For counts of detected and suppressed errors, rerun with: -v
==28763== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test488 ===
The Valgrind memory detector as below:
==28778== Memcheck, a memory error detector
==28778== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28778== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28778== Command: ./impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.nocopy_dealloc.out
==28778== Parent PID: 10074
==28778== 
==28778== 
==28778== HEAP SUMMARY:
==28778==     in use at exit: 0 bytes in 0 blocks
==28778==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28778== 
==28778== All heap blocks were freed -- no leaks are possible
==28778== 
==28778== For counts of detected and suppressed errors, rerun with: -v
==28778== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test489 ===
The Valgrind memory detector as below:
==28793== Memcheck, a memory error detector
==28793== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28793== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28793== Command: ./impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.nocopy_dealloc.out
==28793== Parent PID: 10074
==28793== 
==28793== 
==28793== HEAP SUMMARY:
==28793==     in use at exit: 40 bytes in 1 blocks
==28793==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28793== 
==28793== LEAK SUMMARY:
==28793==    definitely lost: 0 bytes in 0 blocks
==28793==    indirectly lost: 0 bytes in 0 blocks
==28793==      possibly lost: 0 bytes in 0 blocks
==28793==    still reachable: 40 bytes in 1 blocks
==28793==         suppressed: 0 bytes in 0 blocks
==28793== Reachable blocks (those to which a pointer was found) are not shown.
==28793== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28793== 
==28793== For counts of detected and suppressed errors, rerun with: -v
==28793== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test49 ===
The Valgrind memory detector as below:
==28809== Memcheck, a memory error detector
==28809== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28809== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28809== Command: ./impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.nocopy_dealloc.out
==28809== Parent PID: 10074
==28809== 
==28809== 
==28809== HEAP SUMMARY:
==28809==     in use at exit: 0 bytes in 0 blocks
==28809==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28809== 
==28809== All heap blocks were freed -- no leaks are possible
==28809== 
==28809== For counts of detected and suppressed errors, rerun with: -v
==28809== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test490 ===
The Valgrind memory detector as below:
==28824== Memcheck, a memory error detector
==28824== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28824== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28824== Command: ./impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.nocopy_dealloc.out
==28824== Parent PID: 10074
==28824== 
==28824== 
==28824== HEAP SUMMARY:
==28824==     in use at exit: 40 bytes in 1 blocks
==28824==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28824== 
==28824== LEAK SUMMARY:
==28824==    definitely lost: 0 bytes in 0 blocks
==28824==    indirectly lost: 0 bytes in 0 blocks
==28824==      possibly lost: 0 bytes in 0 blocks
==28824==    still reachable: 40 bytes in 1 blocks
==28824==         suppressed: 0 bytes in 0 blocks
==28824== Reachable blocks (those to which a pointer was found) are not shown.
==28824== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28824== 
==28824== For counts of detected and suppressed errors, rerun with: -v
==28824== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test491 ===
The Valgrind memory detector as below:
==28840== Memcheck, a memory error detector
==28840== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28840== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28840== Command: ./impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.nocopy_dealloc.out
==28840== Parent PID: 10074
==28840== 
==28840== 
==28840== HEAP SUMMARY:
==28840==     in use at exit: 40 bytes in 1 blocks
==28840==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28840== 
==28840== LEAK SUMMARY:
==28840==    definitely lost: 0 bytes in 0 blocks
==28840==    indirectly lost: 0 bytes in 0 blocks
==28840==      possibly lost: 0 bytes in 0 blocks
==28840==    still reachable: 40 bytes in 1 blocks
==28840==         suppressed: 0 bytes in 0 blocks
==28840== Reachable blocks (those to which a pointer was found) are not shown.
==28840== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28840== 
==28840== For counts of detected and suppressed errors, rerun with: -v
==28840== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test492 ===
The Valgrind memory detector as below:
==28856== Memcheck, a memory error detector
==28856== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28856== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28856== Command: ./impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.nocopy_dealloc.out
==28856== Parent PID: 10074
==28856== 
==28856== 
==28856== HEAP SUMMARY:
==28856==     in use at exit: 0 bytes in 0 blocks
==28856==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28856== 
==28856== All heap blocks were freed -- no leaks are possible
==28856== 
==28856== For counts of detected and suppressed errors, rerun with: -v
==28856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test493 ===
The Valgrind memory detector as below:
==28871== Memcheck, a memory error detector
==28871== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28871== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28871== Command: ./impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.nocopy_dealloc.out
==28871== Parent PID: 10074
==28871== 
==28871== 
==28871== HEAP SUMMARY:
==28871==     in use at exit: 0 bytes in 0 blocks
==28871==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28871== 
==28871== All heap blocks were freed -- no leaks are possible
==28871== 
==28871== For counts of detected and suppressed errors, rerun with: -v
==28871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test494 ===
The Valgrind memory detector as below:
==28886== Memcheck, a memory error detector
==28886== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28886== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28886== Command: ./impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.nocopy_dealloc.out
==28886== Parent PID: 10074
==28886== 
==28886== 
==28886== HEAP SUMMARY:
==28886==     in use at exit: 0 bytes in 0 blocks
==28886==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28886== 
==28886== All heap blocks were freed -- no leaks are possible
==28886== 
==28886== For counts of detected and suppressed errors, rerun with: -v
==28886== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test495 ===
The Valgrind memory detector as below:
==28901== Memcheck, a memory error detector
==28901== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28901== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28901== Command: ./impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.nocopy_dealloc.out
==28901== Parent PID: 10074
==28901== 
==28901== 
==28901== HEAP SUMMARY:
==28901==     in use at exit: 0 bytes in 0 blocks
==28901==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28901== 
==28901== All heap blocks were freed -- no leaks are possible
==28901== 
==28901== For counts of detected and suppressed errors, rerun with: -v
==28901== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test496 ===
The Valgrind memory detector as below:
==28917== Memcheck, a memory error detector
==28917== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28917== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28917== Command: ./impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.nocopy_dealloc.out
==28917== Parent PID: 10074
==28917== 
==28917== 
==28917== HEAP SUMMARY:
==28917==     in use at exit: 0 bytes in 0 blocks
==28917==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28917== 
==28917== All heap blocks were freed -- no leaks are possible
==28917== 
==28917== For counts of detected and suppressed errors, rerun with: -v
==28917== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test497 ===
The Valgrind memory detector as below:
==28932== Memcheck, a memory error detector
==28932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28932== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28932== Command: ./impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.nocopy_dealloc.out
==28932== Parent PID: 10074
==28932== 
==28932== 
==28932== HEAP SUMMARY:
==28932==     in use at exit: 40 bytes in 1 blocks
==28932==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28932== 
==28932== LEAK SUMMARY:
==28932==    definitely lost: 0 bytes in 0 blocks
==28932==    indirectly lost: 0 bytes in 0 blocks
==28932==      possibly lost: 0 bytes in 0 blocks
==28932==    still reachable: 40 bytes in 1 blocks
==28932==         suppressed: 0 bytes in 0 blocks
==28932== Reachable blocks (those to which a pointer was found) are not shown.
==28932== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28932== 
==28932== For counts of detected and suppressed errors, rerun with: -v
==28932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test498 ===
The Valgrind memory detector as below:
==28949== Memcheck, a memory error detector
==28949== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28949== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28949== Command: ./impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.nocopy_dealloc.out
==28949== Parent PID: 10074
==28949== 
==28949== 
==28949== HEAP SUMMARY:
==28949==     in use at exit: 0 bytes in 0 blocks
==28949==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28949== 
==28949== All heap blocks were freed -- no leaks are possible
==28949== 
==28949== For counts of detected and suppressed errors, rerun with: -v
==28949== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test499 ===
The Valgrind memory detector as below:
==28966== Memcheck, a memory error detector
==28966== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28966== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28966== Command: ./impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.nocopy_dealloc.out
==28966== Parent PID: 10074
==28966== 
==28966== 
==28966== HEAP SUMMARY:
==28966==     in use at exit: 0 bytes in 0 blocks
==28966==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28966== 
==28966== All heap blocks were freed -- no leaks are possible
==28966== 
==28966== For counts of detected and suppressed errors, rerun with: -v
==28966== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test5 ===
The Valgrind memory detector as below:
==28981== Memcheck, a memory error detector
==28981== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28981== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28981== Command: ./impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.nocopy_dealloc.out
==28981== Parent PID: 10074
==28981== 
==28981== 
==28981== HEAP SUMMARY:
==28981==     in use at exit: 40 bytes in 1 blocks
==28981==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==28981== 
==28981== LEAK SUMMARY:
==28981==    definitely lost: 0 bytes in 0 blocks
==28981==    indirectly lost: 0 bytes in 0 blocks
==28981==      possibly lost: 0 bytes in 0 blocks
==28981==    still reachable: 40 bytes in 1 blocks
==28981==         suppressed: 0 bytes in 0 blocks
==28981== Reachable blocks (those to which a pointer was found) are not shown.
==28981== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28981== 
==28981== For counts of detected and suppressed errors, rerun with: -v
==28981== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test50 ===
The Valgrind memory detector as below:
==28996== Memcheck, a memory error detector
==28996== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28996== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==28996== Command: ./impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.nocopy_dealloc.out
==28996== Parent PID: 10074
==28996== 
==28996== 
==28996== HEAP SUMMARY:
==28996==     in use at exit: 0 bytes in 0 blocks
==28996==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==28996== 
==28996== All heap blocks were freed -- no leaks are possible
==28996== 
==28996== For counts of detected and suppressed errors, rerun with: -v
==28996== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test500 ===
The Valgrind memory detector as below:
==29012== Memcheck, a memory error detector
==29012== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29012== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29012== Command: ./impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.nocopy_dealloc.out
==29012== Parent PID: 10074
==29012== 
==29012== 
==29012== HEAP SUMMARY:
==29012==     in use at exit: 0 bytes in 0 blocks
==29012==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29012== 
==29012== All heap blocks were freed -- no leaks are possible
==29012== 
==29012== For counts of detected and suppressed errors, rerun with: -v
==29012== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test501 ===
The Valgrind memory detector as below:
==29027== Memcheck, a memory error detector
==29027== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29027== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29027== Command: ./impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.nocopy_dealloc.out
==29027== Parent PID: 10074
==29027== 
==29027== 
==29027== HEAP SUMMARY:
==29027==     in use at exit: 40 bytes in 1 blocks
==29027==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29027== 
==29027== LEAK SUMMARY:
==29027==    definitely lost: 0 bytes in 0 blocks
==29027==    indirectly lost: 0 bytes in 0 blocks
==29027==      possibly lost: 0 bytes in 0 blocks
==29027==    still reachable: 40 bytes in 1 blocks
==29027==         suppressed: 0 bytes in 0 blocks
==29027== Reachable blocks (those to which a pointer was found) are not shown.
==29027== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29027== 
==29027== For counts of detected and suppressed errors, rerun with: -v
==29027== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test502 ===
The Valgrind memory detector as below:
==29042== Memcheck, a memory error detector
==29042== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29042== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29042== Command: ./impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.nocopy_dealloc.out
==29042== Parent PID: 10074
==29042== 
==29042== 
==29042== HEAP SUMMARY:
==29042==     in use at exit: 0 bytes in 0 blocks
==29042==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29042== 
==29042== All heap blocks were freed -- no leaks are possible
==29042== 
==29042== For counts of detected and suppressed errors, rerun with: -v
==29042== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test503 ===
The Valgrind memory detector as below:
==29057== Memcheck, a memory error detector
==29057== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29057== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29057== Command: ./impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.nocopy_dealloc.out
==29057== Parent PID: 10074
==29057== 
==29057== 
==29057== HEAP SUMMARY:
==29057==     in use at exit: 0 bytes in 0 blocks
==29057==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29057== 
==29057== All heap blocks were freed -- no leaks are possible
==29057== 
==29057== For counts of detected and suppressed errors, rerun with: -v
==29057== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test504 ===
The Valgrind memory detector as below:
==29073== Memcheck, a memory error detector
==29073== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29073== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29073== Command: ./impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.nocopy_dealloc.out
==29073== Parent PID: 10074
==29073== 
==29073== 
==29073== HEAP SUMMARY:
==29073==     in use at exit: 0 bytes in 0 blocks
==29073==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29073== 
==29073== All heap blocks were freed -- no leaks are possible
==29073== 
==29073== For counts of detected and suppressed errors, rerun with: -v
==29073== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test505 ===
The Valgrind memory detector as below:
==29088== Memcheck, a memory error detector
==29088== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29088== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29088== Command: ./impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.nocopy_dealloc.out
==29088== Parent PID: 10074
==29088== 
==29088== 
==29088== HEAP SUMMARY:
==29088==     in use at exit: 40 bytes in 1 blocks
==29088==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29088== 
==29088== LEAK SUMMARY:
==29088==    definitely lost: 0 bytes in 0 blocks
==29088==    indirectly lost: 0 bytes in 0 blocks
==29088==      possibly lost: 0 bytes in 0 blocks
==29088==    still reachable: 40 bytes in 1 blocks
==29088==         suppressed: 0 bytes in 0 blocks
==29088== Reachable blocks (those to which a pointer was found) are not shown.
==29088== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29088== 
==29088== For counts of detected and suppressed errors, rerun with: -v
==29088== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test506 ===
The Valgrind memory detector as below:
==29103== Memcheck, a memory error detector
==29103== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29103== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29103== Command: ./impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.nocopy_dealloc.out
==29103== Parent PID: 10074
==29103== 
==29103== 
==29103== HEAP SUMMARY:
==29103==     in use at exit: 40 bytes in 1 blocks
==29103==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29103== 
==29103== LEAK SUMMARY:
==29103==    definitely lost: 0 bytes in 0 blocks
==29103==    indirectly lost: 0 bytes in 0 blocks
==29103==      possibly lost: 0 bytes in 0 blocks
==29103==    still reachable: 40 bytes in 1 blocks
==29103==         suppressed: 0 bytes in 0 blocks
==29103== Reachable blocks (those to which a pointer was found) are not shown.
==29103== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29103== 
==29103== For counts of detected and suppressed errors, rerun with: -v
==29103== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test507 ===
The Valgrind memory detector as below:
==29119== Memcheck, a memory error detector
==29119== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29119== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29119== Command: ./impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.nocopy_dealloc.out
==29119== Parent PID: 10074
==29119== 
==29119== 
==29119== HEAP SUMMARY:
==29119==     in use at exit: 40 bytes in 1 blocks
==29119==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29119== 
==29119== LEAK SUMMARY:
==29119==    definitely lost: 0 bytes in 0 blocks
==29119==    indirectly lost: 0 bytes in 0 blocks
==29119==      possibly lost: 0 bytes in 0 blocks
==29119==    still reachable: 40 bytes in 1 blocks
==29119==         suppressed: 0 bytes in 0 blocks
==29119== Reachable blocks (those to which a pointer was found) are not shown.
==29119== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29119== 
==29119== For counts of detected and suppressed errors, rerun with: -v
==29119== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test508 ===
The Valgrind memory detector as below:
==29139== Memcheck, a memory error detector
==29139== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29139== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29139== Command: ./impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.nocopy_dealloc.out
==29139== Parent PID: 10074
==29139== 
==29139== 
==29139== HEAP SUMMARY:
==29139==     in use at exit: 40 bytes in 1 blocks
==29139==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29139== 
==29139== LEAK SUMMARY:
==29139==    definitely lost: 0 bytes in 0 blocks
==29139==    indirectly lost: 0 bytes in 0 blocks
==29139==      possibly lost: 0 bytes in 0 blocks
==29139==    still reachable: 40 bytes in 1 blocks
==29139==         suppressed: 0 bytes in 0 blocks
==29139== Reachable blocks (those to which a pointer was found) are not shown.
==29139== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29139== 
==29139== For counts of detected and suppressed errors, rerun with: -v
==29139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test509 ===
The Valgrind memory detector as below:
==29154== Memcheck, a memory error detector
==29154== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29154== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29154== Command: ./impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.nocopy_dealloc.out
==29154== Parent PID: 10074
==29154== 
==29154== 
==29154== HEAP SUMMARY:
==29154==     in use at exit: 40 bytes in 1 blocks
==29154==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29154== 
==29154== LEAK SUMMARY:
==29154==    definitely lost: 0 bytes in 0 blocks
==29154==    indirectly lost: 0 bytes in 0 blocks
==29154==      possibly lost: 0 bytes in 0 blocks
==29154==    still reachable: 40 bytes in 1 blocks
==29154==         suppressed: 0 bytes in 0 blocks
==29154== Reachable blocks (those to which a pointer was found) are not shown.
==29154== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29154== 
==29154== For counts of detected and suppressed errors, rerun with: -v
==29154== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test51 ===
The Valgrind memory detector as below:
==29169== Memcheck, a memory error detector
==29169== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29169== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29169== Command: ./impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.nocopy_dealloc.out
==29169== Parent PID: 10074
==29169== 
==29169== 
==29169== HEAP SUMMARY:
==29169==     in use at exit: 0 bytes in 0 blocks
==29169==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29169== 
==29169== All heap blocks were freed -- no leaks are possible
==29169== 
==29169== For counts of detected and suppressed errors, rerun with: -v
==29169== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test510 ===
The Valgrind memory detector as below:
==29186== Memcheck, a memory error detector
==29186== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29186== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29186== Command: ./impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.nocopy_dealloc.out
==29186== Parent PID: 10074
==29186== 
==29186== 
==29186== HEAP SUMMARY:
==29186==     in use at exit: 40 bytes in 1 blocks
==29186==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29186== 
==29186== LEAK SUMMARY:
==29186==    definitely lost: 0 bytes in 0 blocks
==29186==    indirectly lost: 0 bytes in 0 blocks
==29186==      possibly lost: 0 bytes in 0 blocks
==29186==    still reachable: 40 bytes in 1 blocks
==29186==         suppressed: 0 bytes in 0 blocks
==29186== Reachable blocks (those to which a pointer was found) are not shown.
==29186== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29186== 
==29186== For counts of detected and suppressed errors, rerun with: -v
==29186== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test511 ===
The Valgrind memory detector as below:
==29201== Memcheck, a memory error detector
==29201== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29201== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29201== Command: ./impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.nocopy_dealloc.out
==29201== Parent PID: 10074
==29201== 
==29201== 
==29201== HEAP SUMMARY:
==29201==     in use at exit: 0 bytes in 0 blocks
==29201==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29201== 
==29201== All heap blocks were freed -- no leaks are possible
==29201== 
==29201== For counts of detected and suppressed errors, rerun with: -v
==29201== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test512 ===
The Valgrind memory detector as below:
==29216== Memcheck, a memory error detector
==29216== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29216== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29216== Command: ./impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.nocopy_dealloc.out
==29216== Parent PID: 10074
==29216== 
==29216== 
==29216== HEAP SUMMARY:
==29216==     in use at exit: 0 bytes in 0 blocks
==29216==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29216== 
==29216== All heap blocks were freed -- no leaks are possible
==29216== 
==29216== For counts of detected and suppressed errors, rerun with: -v
==29216== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test513 ===
The Valgrind memory detector as below:
==29231== Memcheck, a memory error detector
==29231== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29231== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29231== Command: ./impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.nocopy_dealloc.out
==29231== Parent PID: 10074
==29231== 
==29231== 
==29231== HEAP SUMMARY:
==29231==     in use at exit: 40 bytes in 1 blocks
==29231==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29231== 
==29231== LEAK SUMMARY:
==29231==    definitely lost: 0 bytes in 0 blocks
==29231==    indirectly lost: 0 bytes in 0 blocks
==29231==      possibly lost: 0 bytes in 0 blocks
==29231==    still reachable: 40 bytes in 1 blocks
==29231==         suppressed: 0 bytes in 0 blocks
==29231== Reachable blocks (those to which a pointer was found) are not shown.
==29231== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29231== 
==29231== For counts of detected and suppressed errors, rerun with: -v
==29231== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test514 ===
The Valgrind memory detector as below:
==29248== Memcheck, a memory error detector
==29248== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29248== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29248== Command: ./impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.nocopy_dealloc.out
==29248== Parent PID: 10074
==29248== 
==29248== 
==29248== HEAP SUMMARY:
==29248==     in use at exit: 40 bytes in 1 blocks
==29248==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29248== 
==29248== LEAK SUMMARY:
==29248==    definitely lost: 0 bytes in 0 blocks
==29248==    indirectly lost: 0 bytes in 0 blocks
==29248==      possibly lost: 0 bytes in 0 blocks
==29248==    still reachable: 40 bytes in 1 blocks
==29248==         suppressed: 0 bytes in 0 blocks
==29248== Reachable blocks (those to which a pointer was found) are not shown.
==29248== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29248== 
==29248== For counts of detected and suppressed errors, rerun with: -v
==29248== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test515 ===
The Valgrind memory detector as below:
==29263== Memcheck, a memory error detector
==29263== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29263== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29263== Command: ./impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.nocopy_dealloc.out
==29263== Parent PID: 10074
==29263== 
==29263== 
==29263== HEAP SUMMARY:
==29263==     in use at exit: 0 bytes in 0 blocks
==29263==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29263== 
==29263== All heap blocks were freed -- no leaks are possible
==29263== 
==29263== For counts of detected and suppressed errors, rerun with: -v
==29263== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test516 ===
The Valgrind memory detector as below:
==29278== Memcheck, a memory error detector
==29278== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29278== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29278== Command: ./impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.nocopy_dealloc.out
==29278== Parent PID: 10074
==29278== 
==29278== 
==29278== HEAP SUMMARY:
==29278==     in use at exit: 40 bytes in 1 blocks
==29278==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29278== 
==29278== LEAK SUMMARY:
==29278==    definitely lost: 0 bytes in 0 blocks
==29278==    indirectly lost: 0 bytes in 0 blocks
==29278==      possibly lost: 0 bytes in 0 blocks
==29278==    still reachable: 40 bytes in 1 blocks
==29278==         suppressed: 0 bytes in 0 blocks
==29278== Reachable blocks (those to which a pointer was found) are not shown.
==29278== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29278== 
==29278== For counts of detected and suppressed errors, rerun with: -v
==29278== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test517 ===
The Valgrind memory detector as below:
==29294== Memcheck, a memory error detector
==29294== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29294== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29294== Command: ./impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.nocopy_dealloc.out
==29294== Parent PID: 10074
==29294== 
==29294== 
==29294== HEAP SUMMARY:
==29294==     in use at exit: 0 bytes in 0 blocks
==29294==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29294== 
==29294== All heap blocks were freed -- no leaks are possible
==29294== 
==29294== For counts of detected and suppressed errors, rerun with: -v
==29294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test518 ===
The Valgrind memory detector as below:
==29309== Memcheck, a memory error detector
==29309== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29309== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29309== Command: ./impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.nocopy_dealloc.out
==29309== Parent PID: 10074
==29309== 
==29309== 
==29309== HEAP SUMMARY:
==29309==     in use at exit: 0 bytes in 0 blocks
==29309==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29309== 
==29309== All heap blocks were freed -- no leaks are possible
==29309== 
==29309== For counts of detected and suppressed errors, rerun with: -v
==29309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test519 ===
The Valgrind memory detector as below:
==29324== Memcheck, a memory error detector
==29324== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29324== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29324== Command: ./impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.nocopy_dealloc.out
==29324== Parent PID: 10074
==29324== 
==29324== 
==29324== HEAP SUMMARY:
==29324==     in use at exit: 0 bytes in 0 blocks
==29324==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29324== 
==29324== All heap blocks were freed -- no leaks are possible
==29324== 
==29324== For counts of detected and suppressed errors, rerun with: -v
==29324== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test52 ===
The Valgrind memory detector as below:
==29340== Memcheck, a memory error detector
==29340== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29340== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29340== Command: ./impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.nocopy_dealloc.out
==29340== Parent PID: 10074
==29340== 
==29340== 
==29340== HEAP SUMMARY:
==29340==     in use at exit: 0 bytes in 0 blocks
==29340==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29340== 
==29340== All heap blocks were freed -- no leaks are possible
==29340== 
==29340== For counts of detected and suppressed errors, rerun with: -v
==29340== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test520 ===
The Valgrind memory detector as below:
==29357== Memcheck, a memory error detector
==29357== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29357== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29357== Command: ./impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.nocopy_dealloc.out
==29357== Parent PID: 10074
==29357== 
==29357== 
==29357== HEAP SUMMARY:
==29357==     in use at exit: 0 bytes in 0 blocks
==29357==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29357== 
==29357== All heap blocks were freed -- no leaks are possible
==29357== 
==29357== For counts of detected and suppressed errors, rerun with: -v
==29357== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test521 ===
The Valgrind memory detector as below:
==29372== Memcheck, a memory error detector
==29372== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29372== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29372== Command: ./impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.nocopy_dealloc.out
==29372== Parent PID: 10074
==29372== 
==29372== 
==29372== HEAP SUMMARY:
==29372==     in use at exit: 40 bytes in 1 blocks
==29372==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29372== 
==29372== LEAK SUMMARY:
==29372==    definitely lost: 0 bytes in 0 blocks
==29372==    indirectly lost: 0 bytes in 0 blocks
==29372==      possibly lost: 0 bytes in 0 blocks
==29372==    still reachable: 40 bytes in 1 blocks
==29372==         suppressed: 0 bytes in 0 blocks
==29372== Reachable blocks (those to which a pointer was found) are not shown.
==29372== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29372== 
==29372== For counts of detected and suppressed errors, rerun with: -v
==29372== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test522 ===
The Valgrind memory detector as below:
==29387== Memcheck, a memory error detector
==29387== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29387== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29387== Command: ./impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.nocopy_dealloc.out
==29387== Parent PID: 10074
==29387== 
==29387== 
==29387== HEAP SUMMARY:
==29387==     in use at exit: 40 bytes in 1 blocks
==29387==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29387== 
==29387== LEAK SUMMARY:
==29387==    definitely lost: 0 bytes in 0 blocks
==29387==    indirectly lost: 0 bytes in 0 blocks
==29387==      possibly lost: 0 bytes in 0 blocks
==29387==    still reachable: 40 bytes in 1 blocks
==29387==         suppressed: 0 bytes in 0 blocks
==29387== Reachable blocks (those to which a pointer was found) are not shown.
==29387== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29387== 
==29387== For counts of detected and suppressed errors, rerun with: -v
==29387== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test523 ===
The Valgrind memory detector as below:
==29403== Memcheck, a memory error detector
==29403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29403== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29403== Command: ./impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.nocopy_dealloc.out
==29403== Parent PID: 10074
==29403== 
==29403== 
==29403== HEAP SUMMARY:
==29403==     in use at exit: 40 bytes in 1 blocks
==29403==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29403== 
==29403== LEAK SUMMARY:
==29403==    definitely lost: 0 bytes in 0 blocks
==29403==    indirectly lost: 0 bytes in 0 blocks
==29403==      possibly lost: 0 bytes in 0 blocks
==29403==    still reachable: 40 bytes in 1 blocks
==29403==         suppressed: 0 bytes in 0 blocks
==29403== Reachable blocks (those to which a pointer was found) are not shown.
==29403== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29403== 
==29403== For counts of detected and suppressed errors, rerun with: -v
==29403== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test524 ===
The Valgrind memory detector as below:
==29418== Memcheck, a memory error detector
==29418== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29418== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29418== Command: ./impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.nocopy_dealloc.out
==29418== Parent PID: 10074
==29418== 
==29418== 
==29418== HEAP SUMMARY:
==29418==     in use at exit: 40 bytes in 1 blocks
==29418==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29418== 
==29418== LEAK SUMMARY:
==29418==    definitely lost: 0 bytes in 0 blocks
==29418==    indirectly lost: 0 bytes in 0 blocks
==29418==      possibly lost: 0 bytes in 0 blocks
==29418==    still reachable: 40 bytes in 1 blocks
==29418==         suppressed: 0 bytes in 0 blocks
==29418== Reachable blocks (those to which a pointer was found) are not shown.
==29418== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29418== 
==29418== For counts of detected and suppressed errors, rerun with: -v
==29418== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test525 ===
The Valgrind memory detector as below:
==29433== Memcheck, a memory error detector
==29433== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29433== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29433== Command: ./impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.nocopy_dealloc.out
==29433== Parent PID: 10074
==29433== 
==29433== 
==29433== HEAP SUMMARY:
==29433==     in use at exit: 40 bytes in 1 blocks
==29433==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29433== 
==29433== LEAK SUMMARY:
==29433==    definitely lost: 0 bytes in 0 blocks
==29433==    indirectly lost: 0 bytes in 0 blocks
==29433==      possibly lost: 0 bytes in 0 blocks
==29433==    still reachable: 40 bytes in 1 blocks
==29433==         suppressed: 0 bytes in 0 blocks
==29433== Reachable blocks (those to which a pointer was found) are not shown.
==29433== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29433== 
==29433== For counts of detected and suppressed errors, rerun with: -v
==29433== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test526 ===
The Valgrind memory detector as below:
==29449== Memcheck, a memory error detector
==29449== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29449== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29449== Command: ./impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.nocopy_dealloc.out
==29449== Parent PID: 10074
==29449== 
==29449== 
==29449== HEAP SUMMARY:
==29449==     in use at exit: 40 bytes in 1 blocks
==29449==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29449== 
==29449== LEAK SUMMARY:
==29449==    definitely lost: 0 bytes in 0 blocks
==29449==    indirectly lost: 0 bytes in 0 blocks
==29449==      possibly lost: 0 bytes in 0 blocks
==29449==    still reachable: 40 bytes in 1 blocks
==29449==         suppressed: 0 bytes in 0 blocks
==29449== Reachable blocks (those to which a pointer was found) are not shown.
==29449== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29449== 
==29449== For counts of detected and suppressed errors, rerun with: -v
==29449== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test527 ===
The Valgrind memory detector as below:
==29465== Memcheck, a memory error detector
==29465== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29465== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29465== Command: ./impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.nocopy_dealloc.out
==29465== Parent PID: 10074
==29465== 
==29465== 
==29465== HEAP SUMMARY:
==29465==     in use at exit: 40 bytes in 1 blocks
==29465==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29465== 
==29465== LEAK SUMMARY:
==29465==    definitely lost: 0 bytes in 0 blocks
==29465==    indirectly lost: 0 bytes in 0 blocks
==29465==      possibly lost: 0 bytes in 0 blocks
==29465==    still reachable: 40 bytes in 1 blocks
==29465==         suppressed: 0 bytes in 0 blocks
==29465== Reachable blocks (those to which a pointer was found) are not shown.
==29465== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29465== 
==29465== For counts of detected and suppressed errors, rerun with: -v
==29465== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test528 ===
The Valgrind memory detector as below:
==29480== Memcheck, a memory error detector
==29480== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29480== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29480== Command: ./impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.nocopy_dealloc.out
==29480== Parent PID: 10074
==29480== 
==29480== 
==29480== HEAP SUMMARY:
==29480==     in use at exit: 40 bytes in 1 blocks
==29480==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29480== 
==29480== LEAK SUMMARY:
==29480==    definitely lost: 0 bytes in 0 blocks
==29480==    indirectly lost: 0 bytes in 0 blocks
==29480==      possibly lost: 0 bytes in 0 blocks
==29480==    still reachable: 40 bytes in 1 blocks
==29480==         suppressed: 0 bytes in 0 blocks
==29480== Reachable blocks (those to which a pointer was found) are not shown.
==29480== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29480== 
==29480== For counts of detected and suppressed errors, rerun with: -v
==29480== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test529 ===
The Valgrind memory detector as below:
==29496== Memcheck, a memory error detector
==29496== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29496== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29496== Command: ./impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.nocopy_dealloc.out
==29496== Parent PID: 10074
==29496== 
==29496== 
==29496== HEAP SUMMARY:
==29496==     in use at exit: 40 bytes in 1 blocks
==29496==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29496== 
==29496== LEAK SUMMARY:
==29496==    definitely lost: 0 bytes in 0 blocks
==29496==    indirectly lost: 0 bytes in 0 blocks
==29496==      possibly lost: 0 bytes in 0 blocks
==29496==    still reachable: 40 bytes in 1 blocks
==29496==         suppressed: 0 bytes in 0 blocks
==29496== Reachable blocks (those to which a pointer was found) are not shown.
==29496== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29496== 
==29496== For counts of detected and suppressed errors, rerun with: -v
==29496== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test53 ===
The Valgrind memory detector as below:
==29511== Memcheck, a memory error detector
==29511== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29511== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29511== Command: ./impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.nocopy_dealloc.out
==29511== Parent PID: 10074
==29511== 
==29511== 
==29511== HEAP SUMMARY:
==29511==     in use at exit: 40 bytes in 1 blocks
==29511==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29511== 
==29511== LEAK SUMMARY:
==29511==    definitely lost: 0 bytes in 0 blocks
==29511==    indirectly lost: 0 bytes in 0 blocks
==29511==      possibly lost: 0 bytes in 0 blocks
==29511==    still reachable: 40 bytes in 1 blocks
==29511==         suppressed: 0 bytes in 0 blocks
==29511== Reachable blocks (those to which a pointer was found) are not shown.
==29511== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29511== 
==29511== For counts of detected and suppressed errors, rerun with: -v
==29511== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test530 ===
The Valgrind memory detector as below:
==29528== Memcheck, a memory error detector
==29528== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29528== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29528== Command: ./impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.nocopy_dealloc.out
==29528== Parent PID: 10074
==29528== 
==29528== 
==29528== HEAP SUMMARY:
==29528==     in use at exit: 40 bytes in 1 blocks
==29528==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29528== 
==29528== LEAK SUMMARY:
==29528==    definitely lost: 0 bytes in 0 blocks
==29528==    indirectly lost: 0 bytes in 0 blocks
==29528==      possibly lost: 0 bytes in 0 blocks
==29528==    still reachable: 40 bytes in 1 blocks
==29528==         suppressed: 0 bytes in 0 blocks
==29528== Reachable blocks (those to which a pointer was found) are not shown.
==29528== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29528== 
==29528== For counts of detected and suppressed errors, rerun with: -v
==29528== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test531 ===
The Valgrind memory detector as below:
==29543== Memcheck, a memory error detector
==29543== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29543== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29543== Command: ./impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.nocopy_dealloc.out
==29543== Parent PID: 10074
==29543== 
==29543== 
==29543== HEAP SUMMARY:
==29543==     in use at exit: 40 bytes in 1 blocks
==29543==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29543== 
==29543== LEAK SUMMARY:
==29543==    definitely lost: 0 bytes in 0 blocks
==29543==    indirectly lost: 0 bytes in 0 blocks
==29543==      possibly lost: 0 bytes in 0 blocks
==29543==    still reachable: 40 bytes in 1 blocks
==29543==         suppressed: 0 bytes in 0 blocks
==29543== Reachable blocks (those to which a pointer was found) are not shown.
==29543== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29543== 
==29543== For counts of detected and suppressed errors, rerun with: -v
==29543== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test532 ===
The Valgrind memory detector as below:
==29558== Memcheck, a memory error detector
==29558== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29558== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29558== Command: ./impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.nocopy_dealloc.out
==29558== Parent PID: 10074
==29558== 
==29558== 
==29558== HEAP SUMMARY:
==29558==     in use at exit: 40 bytes in 1 blocks
==29558==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29558== 
==29558== LEAK SUMMARY:
==29558==    definitely lost: 0 bytes in 0 blocks
==29558==    indirectly lost: 0 bytes in 0 blocks
==29558==      possibly lost: 0 bytes in 0 blocks
==29558==    still reachable: 40 bytes in 1 blocks
==29558==         suppressed: 0 bytes in 0 blocks
==29558== Reachable blocks (those to which a pointer was found) are not shown.
==29558== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29558== 
==29558== For counts of detected and suppressed errors, rerun with: -v
==29558== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test533 ===
The Valgrind memory detector as below:
==29573== Memcheck, a memory error detector
==29573== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29573== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29573== Command: ./impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.nocopy_dealloc.out
==29573== Parent PID: 10074
==29573== 
==29573== 
==29573== HEAP SUMMARY:
==29573==     in use at exit: 40 bytes in 1 blocks
==29573==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29573== 
==29573== LEAK SUMMARY:
==29573==    definitely lost: 0 bytes in 0 blocks
==29573==    indirectly lost: 0 bytes in 0 blocks
==29573==      possibly lost: 0 bytes in 0 blocks
==29573==    still reachable: 40 bytes in 1 blocks
==29573==         suppressed: 0 bytes in 0 blocks
==29573== Reachable blocks (those to which a pointer was found) are not shown.
==29573== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29573== 
==29573== For counts of detected and suppressed errors, rerun with: -v
==29573== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test534 ===
The Valgrind memory detector as below:
==29590== Memcheck, a memory error detector
==29590== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29590== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29590== Command: ./impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.nocopy_dealloc.out
==29590== Parent PID: 10074
==29590== 
==29590== 
==29590== HEAP SUMMARY:
==29590==     in use at exit: 40 bytes in 1 blocks
==29590==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29590== 
==29590== LEAK SUMMARY:
==29590==    definitely lost: 0 bytes in 0 blocks
==29590==    indirectly lost: 0 bytes in 0 blocks
==29590==      possibly lost: 0 bytes in 0 blocks
==29590==    still reachable: 40 bytes in 1 blocks
==29590==         suppressed: 0 bytes in 0 blocks
==29590== Reachable blocks (those to which a pointer was found) are not shown.
==29590== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29590== 
==29590== For counts of detected and suppressed errors, rerun with: -v
==29590== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test535 ===
The Valgrind memory detector as below:
==29605== Memcheck, a memory error detector
==29605== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29605== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29605== Command: ./impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.nocopy_dealloc.out
==29605== Parent PID: 10074
==29605== 
==29605== 
==29605== HEAP SUMMARY:
==29605==     in use at exit: 40 bytes in 1 blocks
==29605==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29605== 
==29605== LEAK SUMMARY:
==29605==    definitely lost: 0 bytes in 0 blocks
==29605==    indirectly lost: 0 bytes in 0 blocks
==29605==      possibly lost: 0 bytes in 0 blocks
==29605==    still reachable: 40 bytes in 1 blocks
==29605==         suppressed: 0 bytes in 0 blocks
==29605== Reachable blocks (those to which a pointer was found) are not shown.
==29605== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29605== 
==29605== For counts of detected and suppressed errors, rerun with: -v
==29605== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test536 ===
The Valgrind memory detector as below:
==29620== Memcheck, a memory error detector
==29620== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29620== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29620== Command: ./impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.nocopy_dealloc.out
==29620== Parent PID: 10074
==29620== 
==29620== 
==29620== HEAP SUMMARY:
==29620==     in use at exit: 40 bytes in 1 blocks
==29620==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29620== 
==29620== LEAK SUMMARY:
==29620==    definitely lost: 0 bytes in 0 blocks
==29620==    indirectly lost: 0 bytes in 0 blocks
==29620==      possibly lost: 0 bytes in 0 blocks
==29620==    still reachable: 40 bytes in 1 blocks
==29620==         suppressed: 0 bytes in 0 blocks
==29620== Reachable blocks (those to which a pointer was found) are not shown.
==29620== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29620== 
==29620== For counts of detected and suppressed errors, rerun with: -v
==29620== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test537 ===
The Valgrind memory detector as below:
==29636== Memcheck, a memory error detector
==29636== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29636== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29636== Command: ./impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.nocopy_dealloc.out
==29636== Parent PID: 10074
==29636== 
==29636== 
==29636== HEAP SUMMARY:
==29636==     in use at exit: 0 bytes in 0 blocks
==29636==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29636== 
==29636== All heap blocks were freed -- no leaks are possible
==29636== 
==29636== For counts of detected and suppressed errors, rerun with: -v
==29636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test538 ===
The Valgrind memory detector as below:
==29651== Memcheck, a memory error detector
==29651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29651== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29651== Command: ./impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.nocopy_dealloc.out
==29651== Parent PID: 10074
==29651== 
==29651== 
==29651== HEAP SUMMARY:
==29651==     in use at exit: 0 bytes in 0 blocks
==29651==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29651== 
==29651== All heap blocks were freed -- no leaks are possible
==29651== 
==29651== For counts of detected and suppressed errors, rerun with: -v
==29651== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test539 ===
The Valgrind memory detector as below:
==29666== Memcheck, a memory error detector
==29666== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29666== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29666== Command: ./impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.nocopy_dealloc.out
==29666== Parent PID: 10074
==29666== 
==29666== 
==29666== HEAP SUMMARY:
==29666==     in use at exit: 0 bytes in 0 blocks
==29666==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29666== 
==29666== All heap blocks were freed -- no leaks are possible
==29666== 
==29666== For counts of detected and suppressed errors, rerun with: -v
==29666== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test54 ===
The Valgrind memory detector as below:
==29682== Memcheck, a memory error detector
==29682== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29682== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29682== Command: ./impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.nocopy_dealloc.out
==29682== Parent PID: 10074
==29682== 
==29682== 
==29682== HEAP SUMMARY:
==29682==     in use at exit: 0 bytes in 0 blocks
==29682==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29682== 
==29682== All heap blocks were freed -- no leaks are possible
==29682== 
==29682== For counts of detected and suppressed errors, rerun with: -v
==29682== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test540 ===
The Valgrind memory detector as below:
==29697== Memcheck, a memory error detector
==29697== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29697== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29697== Command: ./impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.nocopy_dealloc.out
==29697== Parent PID: 10074
==29697== 
==29697== 
==29697== HEAP SUMMARY:
==29697==     in use at exit: 0 bytes in 0 blocks
==29697==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29697== 
==29697== All heap blocks were freed -- no leaks are possible
==29697== 
==29697== For counts of detected and suppressed errors, rerun with: -v
==29697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test541 ===
The Valgrind memory detector as below:
==29712== Memcheck, a memory error detector
==29712== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29712== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29712== Command: ./impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.nocopy_dealloc.out
==29712== Parent PID: 10074
==29712== 
==29712== 
==29712== HEAP SUMMARY:
==29712==     in use at exit: 40 bytes in 1 blocks
==29712==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29712== 
==29712== LEAK SUMMARY:
==29712==    definitely lost: 0 bytes in 0 blocks
==29712==    indirectly lost: 0 bytes in 0 blocks
==29712==      possibly lost: 0 bytes in 0 blocks
==29712==    still reachable: 40 bytes in 1 blocks
==29712==         suppressed: 0 bytes in 0 blocks
==29712== Reachable blocks (those to which a pointer was found) are not shown.
==29712== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29712== 
==29712== For counts of detected and suppressed errors, rerun with: -v
==29712== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test542 ===
The Valgrind memory detector as below:
==29727== Memcheck, a memory error detector
==29727== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29727== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29727== Command: ./impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.nocopy_dealloc.out
==29727== Parent PID: 10074
==29727== 
==29727== 
==29727== HEAP SUMMARY:
==29727==     in use at exit: 40 bytes in 1 blocks
==29727==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29727== 
==29727== LEAK SUMMARY:
==29727==    definitely lost: 0 bytes in 0 blocks
==29727==    indirectly lost: 0 bytes in 0 blocks
==29727==      possibly lost: 0 bytes in 0 blocks
==29727==    still reachable: 40 bytes in 1 blocks
==29727==         suppressed: 0 bytes in 0 blocks
==29727== Reachable blocks (those to which a pointer was found) are not shown.
==29727== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29727== 
==29727== For counts of detected and suppressed errors, rerun with: -v
==29727== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test543 ===
The Valgrind memory detector as below:
==29743== Memcheck, a memory error detector
==29743== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29743== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29743== Command: ./impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.nocopy_dealloc.out
==29743== Parent PID: 10074
==29743== 
==29743== 
==29743== HEAP SUMMARY:
==29743==     in use at exit: 0 bytes in 0 blocks
==29743==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29743== 
==29743== All heap blocks were freed -- no leaks are possible
==29743== 
==29743== For counts of detected and suppressed errors, rerun with: -v
==29743== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test544 ===
The Valgrind memory detector as below:
==29758== Memcheck, a memory error detector
==29758== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29758== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29758== Command: ./impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.nocopy_dealloc.out
==29758== Parent PID: 10074
==29758== 
==29758== 
==29758== HEAP SUMMARY:
==29758==     in use at exit: 0 bytes in 0 blocks
==29758==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29758== 
==29758== All heap blocks were freed -- no leaks are possible
==29758== 
==29758== For counts of detected and suppressed errors, rerun with: -v
==29758== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test545 ===
The Valgrind memory detector as below:
==29773== Memcheck, a memory error detector
==29773== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29773== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29773== Command: ./impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.nocopy_dealloc.out
==29773== Parent PID: 10074
==29773== 
==29773== 
==29773== HEAP SUMMARY:
==29773==     in use at exit: 0 bytes in 0 blocks
==29773==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29773== 
==29773== All heap blocks were freed -- no leaks are possible
==29773== 
==29773== For counts of detected and suppressed errors, rerun with: -v
==29773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test546 ===
The Valgrind memory detector as below:
==29789== Memcheck, a memory error detector
==29789== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29789== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29789== Command: ./impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.nocopy_dealloc.out
==29789== Parent PID: 10074
==29789== 
==29789== 
==29789== HEAP SUMMARY:
==29789==     in use at exit: 40 bytes in 1 blocks
==29789==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29789== 
==29789== LEAK SUMMARY:
==29789==    definitely lost: 0 bytes in 0 blocks
==29789==    indirectly lost: 0 bytes in 0 blocks
==29789==      possibly lost: 0 bytes in 0 blocks
==29789==    still reachable: 40 bytes in 1 blocks
==29789==         suppressed: 0 bytes in 0 blocks
==29789== Reachable blocks (those to which a pointer was found) are not shown.
==29789== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29789== 
==29789== For counts of detected and suppressed errors, rerun with: -v
==29789== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test547 ===
The Valgrind memory detector as below:
==29805== Memcheck, a memory error detector
==29805== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29805== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29805== Command: ./impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.nocopy_dealloc.out
==29805== Parent PID: 10074
==29805== 
==29805== 
==29805== HEAP SUMMARY:
==29805==     in use at exit: 40 bytes in 1 blocks
==29805==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29805== 
==29805== LEAK SUMMARY:
==29805==    definitely lost: 0 bytes in 0 blocks
==29805==    indirectly lost: 0 bytes in 0 blocks
==29805==      possibly lost: 0 bytes in 0 blocks
==29805==    still reachable: 40 bytes in 1 blocks
==29805==         suppressed: 0 bytes in 0 blocks
==29805== Reachable blocks (those to which a pointer was found) are not shown.
==29805== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29805== 
==29805== For counts of detected and suppressed errors, rerun with: -v
==29805== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test548 ===
The Valgrind memory detector as below:
==29820== Memcheck, a memory error detector
==29820== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29820== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29820== Command: ./impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.nocopy_dealloc.out
==29820== Parent PID: 10074
==29820== 
==29820== 
==29820== HEAP SUMMARY:
==29820==     in use at exit: 0 bytes in 0 blocks
==29820==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29820== 
==29820== All heap blocks were freed -- no leaks are possible
==29820== 
==29820== For counts of detected and suppressed errors, rerun with: -v
==29820== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test549 ===
The Valgrind memory detector as below:
==29835== Memcheck, a memory error detector
==29835== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29835== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29835== Command: ./impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.nocopy_dealloc.out
==29835== Parent PID: 10074
==29835== 
==29835== 
==29835== HEAP SUMMARY:
==29835==     in use at exit: 0 bytes in 0 blocks
==29835==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29835== 
==29835== All heap blocks were freed -- no leaks are possible
==29835== 
==29835== For counts of detected and suppressed errors, rerun with: -v
==29835== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test55 ===
The Valgrind memory detector as below:
==29851== Memcheck, a memory error detector
==29851== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29851== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29851== Command: ./impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.nocopy_dealloc.out
==29851== Parent PID: 10074
==29851== 
==29851== 
==29851== HEAP SUMMARY:
==29851==     in use at exit: 40 bytes in 1 blocks
==29851==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29851== 
==29851== LEAK SUMMARY:
==29851==    definitely lost: 0 bytes in 0 blocks
==29851==    indirectly lost: 0 bytes in 0 blocks
==29851==      possibly lost: 0 bytes in 0 blocks
==29851==    still reachable: 40 bytes in 1 blocks
==29851==         suppressed: 0 bytes in 0 blocks
==29851== Reachable blocks (those to which a pointer was found) are not shown.
==29851== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29851== 
==29851== For counts of detected and suppressed errors, rerun with: -v
==29851== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test550 ===
The Valgrind memory detector as below:
==29866== Memcheck, a memory error detector
==29866== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29866== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29866== Command: ./impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.nocopy_dealloc.out
==29866== Parent PID: 10074
==29866== 
==29866== 
==29866== HEAP SUMMARY:
==29866==     in use at exit: 0 bytes in 0 blocks
==29866==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29866== 
==29866== All heap blocks were freed -- no leaks are possible
==29866== 
==29866== For counts of detected and suppressed errors, rerun with: -v
==29866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test551 ===
The Valgrind memory detector as below:
==29882== Memcheck, a memory error detector
==29882== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29882== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29882== Command: ./impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.nocopy_dealloc.out
==29882== Parent PID: 10074
==29882== 
==29882== 
==29882== HEAP SUMMARY:
==29882==     in use at exit: 0 bytes in 0 blocks
==29882==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29882== 
==29882== All heap blocks were freed -- no leaks are possible
==29882== 
==29882== For counts of detected and suppressed errors, rerun with: -v
==29882== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test552 ===
The Valgrind memory detector as below:
==29897== Memcheck, a memory error detector
==29897== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29897== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29897== Command: ./impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.nocopy_dealloc.out
==29897== Parent PID: 10074
==29897== 
==29897== 
==29897== HEAP SUMMARY:
==29897==     in use at exit: 40 bytes in 1 blocks
==29897==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==29897== 
==29897== LEAK SUMMARY:
==29897==    definitely lost: 0 bytes in 0 blocks
==29897==    indirectly lost: 0 bytes in 0 blocks
==29897==      possibly lost: 0 bytes in 0 blocks
==29897==    still reachable: 40 bytes in 1 blocks
==29897==         suppressed: 0 bytes in 0 blocks
==29897== Reachable blocks (those to which a pointer was found) are not shown.
==29897== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29897== 
==29897== For counts of detected and suppressed errors, rerun with: -v
==29897== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test553 ===
The Valgrind memory detector as below:
==29913== Memcheck, a memory error detector
==29913== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29913== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29913== Command: ./impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.nocopy_dealloc.out
==29913== Parent PID: 10074
==29913== 
==29913== 
==29913== HEAP SUMMARY:
==29913==     in use at exit: 0 bytes in 0 blocks
==29913==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29913== 
==29913== All heap blocks were freed -- no leaks are possible
==29913== 
==29913== For counts of detected and suppressed errors, rerun with: -v
==29913== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test554 ===
The Valgrind memory detector as below:
==29928== Memcheck, a memory error detector
==29928== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29928== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29928== Command: ./impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.nocopy_dealloc.out
==29928== Parent PID: 10074
==29928== 
==29928== 
==29928== HEAP SUMMARY:
==29928==     in use at exit: 0 bytes in 0 blocks
==29928==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29928== 
==29928== All heap blocks were freed -- no leaks are possible
==29928== 
==29928== For counts of detected and suppressed errors, rerun with: -v
==29928== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test555 ===
The Valgrind memory detector as below:
==29943== Memcheck, a memory error detector
==29943== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29943== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29943== Command: ./impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.nocopy_dealloc.out
==29943== Parent PID: 10074
==29943== 
==29943== 
==29943== HEAP SUMMARY:
==29943==     in use at exit: 0 bytes in 0 blocks
==29943==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29943== 
==29943== All heap blocks were freed -- no leaks are possible
==29943== 
==29943== For counts of detected and suppressed errors, rerun with: -v
==29943== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test556 ===
The Valgrind memory detector as below:
==29959== Memcheck, a memory error detector
==29959== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29959== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29959== Command: ./impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.nocopy_dealloc.out
==29959== Parent PID: 10074
==29959== 
==29959== 
==29959== HEAP SUMMARY:
==29959==     in use at exit: 0 bytes in 0 blocks
==29959==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29959== 
==29959== All heap blocks were freed -- no leaks are possible
==29959== 
==29959== For counts of detected and suppressed errors, rerun with: -v
==29959== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test557 ===
The Valgrind memory detector as below:
==29974== Memcheck, a memory error detector
==29974== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29974== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29974== Command: ./impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.nocopy_dealloc.out
==29974== Parent PID: 10074
==29974== 
==29974== 
==29974== HEAP SUMMARY:
==29974==     in use at exit: 0 bytes in 0 blocks
==29974==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29974== 
==29974== All heap blocks were freed -- no leaks are possible
==29974== 
==29974== For counts of detected and suppressed errors, rerun with: -v
==29974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test558 ===
The Valgrind memory detector as below:
==29989== Memcheck, a memory error detector
==29989== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==29989== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==29989== Command: ./impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.nocopy_dealloc.out
==29989== Parent PID: 10074
==29989== 
==29989== 
==29989== HEAP SUMMARY:
==29989==     in use at exit: 0 bytes in 0 blocks
==29989==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==29989== 
==29989== All heap blocks were freed -- no leaks are possible
==29989== 
==29989== For counts of detected and suppressed errors, rerun with: -v
==29989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test559 ===
The Valgrind memory detector as below:
==30005== Memcheck, a memory error detector
==30005== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30005== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30005== Command: ./impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.nocopy_dealloc.out
==30005== Parent PID: 10074
==30005== 
==30005== 
==30005== HEAP SUMMARY:
==30005==     in use at exit: 0 bytes in 0 blocks
==30005==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30005== 
==30005== All heap blocks were freed -- no leaks are possible
==30005== 
==30005== For counts of detected and suppressed errors, rerun with: -v
==30005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test56 ===
The Valgrind memory detector as below:
==30021== Memcheck, a memory error detector
==30021== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30021== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30021== Command: ./impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.nocopy_dealloc.out
==30021== Parent PID: 10074
==30021== 
==30021== 
==30021== HEAP SUMMARY:
==30021==     in use at exit: 40 bytes in 1 blocks
==30021==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30021== 
==30021== LEAK SUMMARY:
==30021==    definitely lost: 0 bytes in 0 blocks
==30021==    indirectly lost: 0 bytes in 0 blocks
==30021==      possibly lost: 0 bytes in 0 blocks
==30021==    still reachable: 40 bytes in 1 blocks
==30021==         suppressed: 0 bytes in 0 blocks
==30021== Reachable blocks (those to which a pointer was found) are not shown.
==30021== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30021== 
==30021== For counts of detected and suppressed errors, rerun with: -v
==30021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test560 ===
The Valgrind memory detector as below:
==30036== Memcheck, a memory error detector
==30036== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30036== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30036== Command: ./impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.nocopy_dealloc.out
==30036== Parent PID: 10074
==30036== 
==30036== 
==30036== HEAP SUMMARY:
==30036==     in use at exit: 0 bytes in 0 blocks
==30036==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30036== 
==30036== All heap blocks were freed -- no leaks are possible
==30036== 
==30036== For counts of detected and suppressed errors, rerun with: -v
==30036== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test561 ===
The Valgrind memory detector as below:
==30051== Memcheck, a memory error detector
==30051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30051== Command: ./impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.nocopy_dealloc.out
==30051== Parent PID: 10074
==30051== 
==30051== 
==30051== HEAP SUMMARY:
==30051==     in use at exit: 40 bytes in 1 blocks
==30051==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30051== 
==30051== LEAK SUMMARY:
==30051==    definitely lost: 0 bytes in 0 blocks
==30051==    indirectly lost: 0 bytes in 0 blocks
==30051==      possibly lost: 0 bytes in 0 blocks
==30051==    still reachable: 40 bytes in 1 blocks
==30051==         suppressed: 0 bytes in 0 blocks
==30051== Reachable blocks (those to which a pointer was found) are not shown.
==30051== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30051== 
==30051== For counts of detected and suppressed errors, rerun with: -v
==30051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test562 ===
The Valgrind memory detector as below:
==30066== Memcheck, a memory error detector
==30066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30066== Command: ./impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.nocopy_dealloc.out
==30066== Parent PID: 10074
==30066== 
==30066== 
==30066== HEAP SUMMARY:
==30066==     in use at exit: 0 bytes in 0 blocks
==30066==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30066== 
==30066== All heap blocks were freed -- no leaks are possible
==30066== 
==30066== For counts of detected and suppressed errors, rerun with: -v
==30066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test563 ===
The Valgrind memory detector as below:
==30082== Memcheck, a memory error detector
==30082== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30082== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30082== Command: ./impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.nocopy_dealloc.out
==30082== Parent PID: 10074
==30082== 
==30082== 
==30082== HEAP SUMMARY:
==30082==     in use at exit: 0 bytes in 0 blocks
==30082==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30082== 
==30082== All heap blocks were freed -- no leaks are possible
==30082== 
==30082== For counts of detected and suppressed errors, rerun with: -v
==30082== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test564 ===
The Valgrind memory detector as below:
==30098== Memcheck, a memory error detector
==30098== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30098== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30098== Command: ./impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.nocopy_dealloc.out
==30098== Parent PID: 10074
==30098== 
==30098== 
==30098== HEAP SUMMARY:
==30098==     in use at exit: 0 bytes in 0 blocks
==30098==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30098== 
==30098== All heap blocks were freed -- no leaks are possible
==30098== 
==30098== For counts of detected and suppressed errors, rerun with: -v
==30098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test565 ===
The Valgrind memory detector as below:
==30113== Memcheck, a memory error detector
==30113== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30113== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30113== Command: ./impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.nocopy_dealloc.out
==30113== Parent PID: 10074
==30113== 
==30113== 
==30113== HEAP SUMMARY:
==30113==     in use at exit: 0 bytes in 0 blocks
==30113==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30113== 
==30113== All heap blocks were freed -- no leaks are possible
==30113== 
==30113== For counts of detected and suppressed errors, rerun with: -v
==30113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test566 ===
The Valgrind memory detector as below:
==30128== Memcheck, a memory error detector
==30128== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30128== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30128== Command: ./impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.nocopy_dealloc.out
==30128== Parent PID: 10074
==30128== 
==30128== 
==30128== HEAP SUMMARY:
==30128==     in use at exit: 0 bytes in 0 blocks
==30128==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30128== 
==30128== All heap blocks were freed -- no leaks are possible
==30128== 
==30128== For counts of detected and suppressed errors, rerun with: -v
==30128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test567 ===
The Valgrind memory detector as below:
==30144== Memcheck, a memory error detector
==30144== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30144== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30144== Command: ./impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.nocopy_dealloc.out
==30144== Parent PID: 10074
==30144== 
==30144== 
==30144== HEAP SUMMARY:
==30144==     in use at exit: 40 bytes in 1 blocks
==30144==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30144== 
==30144== LEAK SUMMARY:
==30144==    definitely lost: 0 bytes in 0 blocks
==30144==    indirectly lost: 0 bytes in 0 blocks
==30144==      possibly lost: 0 bytes in 0 blocks
==30144==    still reachable: 40 bytes in 1 blocks
==30144==         suppressed: 0 bytes in 0 blocks
==30144== Reachable blocks (those to which a pointer was found) are not shown.
==30144== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30144== 
==30144== For counts of detected and suppressed errors, rerun with: -v
==30144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test568 ===
The Valgrind memory detector as below:
==30159== Memcheck, a memory error detector
==30159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30159== Command: ./impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.nocopy_dealloc.out
==30159== Parent PID: 10074
==30159== 
==30159== 
==30159== HEAP SUMMARY:
==30159==     in use at exit: 0 bytes in 0 blocks
==30159==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30159== 
==30159== All heap blocks were freed -- no leaks are possible
==30159== 
==30159== For counts of detected and suppressed errors, rerun with: -v
==30159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test569 ===
The Valgrind memory detector as below:
==30174== Memcheck, a memory error detector
==30174== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30174== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30174== Command: ./impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.nocopy_dealloc.out
==30174== Parent PID: 10074
==30174== 
==30174== 
==30174== HEAP SUMMARY:
==30174==     in use at exit: 0 bytes in 0 blocks
==30174==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30174== 
==30174== All heap blocks were freed -- no leaks are possible
==30174== 
==30174== For counts of detected and suppressed errors, rerun with: -v
==30174== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test57 ===
The Valgrind memory detector as below:
==30189== Memcheck, a memory error detector
==30189== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30189== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30189== Command: ./impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.nocopy_dealloc.out
==30189== Parent PID: 10074
==30189== 
==30189== 
==30189== HEAP SUMMARY:
==30189==     in use at exit: 40 bytes in 1 blocks
==30189==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30189== 
==30189== LEAK SUMMARY:
==30189==    definitely lost: 0 bytes in 0 blocks
==30189==    indirectly lost: 0 bytes in 0 blocks
==30189==      possibly lost: 0 bytes in 0 blocks
==30189==    still reachable: 40 bytes in 1 blocks
==30189==         suppressed: 0 bytes in 0 blocks
==30189== Reachable blocks (those to which a pointer was found) are not shown.
==30189== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30189== 
==30189== For counts of detected and suppressed errors, rerun with: -v
==30189== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test570 ===
The Valgrind memory detector as below:
==30205== Memcheck, a memory error detector
==30205== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30205== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30205== Command: ./impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.nocopy_dealloc.out
==30205== Parent PID: 10074
==30205== 
==30205== 
==30205== HEAP SUMMARY:
==30205==     in use at exit: 0 bytes in 0 blocks
==30205==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30205== 
==30205== All heap blocks were freed -- no leaks are possible
==30205== 
==30205== For counts of detected and suppressed errors, rerun with: -v
==30205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test571 ===
The Valgrind memory detector as below:
==30220== Memcheck, a memory error detector
==30220== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30220== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30220== Command: ./impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.nocopy_dealloc.out
==30220== Parent PID: 10074
==30220== 
==30220== 
==30220== HEAP SUMMARY:
==30220==     in use at exit: 40 bytes in 1 blocks
==30220==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30220== 
==30220== LEAK SUMMARY:
==30220==    definitely lost: 0 bytes in 0 blocks
==30220==    indirectly lost: 0 bytes in 0 blocks
==30220==      possibly lost: 0 bytes in 0 blocks
==30220==    still reachable: 40 bytes in 1 blocks
==30220==         suppressed: 0 bytes in 0 blocks
==30220== Reachable blocks (those to which a pointer was found) are not shown.
==30220== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30220== 
==30220== For counts of detected and suppressed errors, rerun with: -v
==30220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test572 ===
The Valgrind memory detector as below:
==30235== Memcheck, a memory error detector
==30235== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30235== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30235== Command: ./impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.nocopy_dealloc.out
==30235== Parent PID: 10074
==30235== 
==30235== 
==30235== HEAP SUMMARY:
==30235==     in use at exit: 0 bytes in 0 blocks
==30235==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30235== 
==30235== All heap blocks were freed -- no leaks are possible
==30235== 
==30235== For counts of detected and suppressed errors, rerun with: -v
==30235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test573 ===
The Valgrind memory detector as below:
==30251== Memcheck, a memory error detector
==30251== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30251== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30251== Command: ./impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.nocopy_dealloc.out
==30251== Parent PID: 10074
==30251== 
==30251== 
==30251== HEAP SUMMARY:
==30251==     in use at exit: 40 bytes in 1 blocks
==30251==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30251== 
==30251== LEAK SUMMARY:
==30251==    definitely lost: 0 bytes in 0 blocks
==30251==    indirectly lost: 0 bytes in 0 blocks
==30251==      possibly lost: 0 bytes in 0 blocks
==30251==    still reachable: 40 bytes in 1 blocks
==30251==         suppressed: 0 bytes in 0 blocks
==30251== Reachable blocks (those to which a pointer was found) are not shown.
==30251== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30251== 
==30251== For counts of detected and suppressed errors, rerun with: -v
==30251== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test574 ===
The Valgrind memory detector as below:
==30266== Memcheck, a memory error detector
==30266== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30266== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30266== Command: ./impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.nocopy_dealloc.out
==30266== Parent PID: 10074
==30266== 
==30266== 
==30266== HEAP SUMMARY:
==30266==     in use at exit: 40 bytes in 1 blocks
==30266==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30266== 
==30266== LEAK SUMMARY:
==30266==    definitely lost: 0 bytes in 0 blocks
==30266==    indirectly lost: 0 bytes in 0 blocks
==30266==      possibly lost: 0 bytes in 0 blocks
==30266==    still reachable: 40 bytes in 1 blocks
==30266==         suppressed: 0 bytes in 0 blocks
==30266== Reachable blocks (those to which a pointer was found) are not shown.
==30266== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30266== 
==30266== For counts of detected and suppressed errors, rerun with: -v
==30266== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test575 ===
The Valgrind memory detector as below:
==30281== Memcheck, a memory error detector
==30281== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30281== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30281== Command: ./impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.nocopy_dealloc.out
==30281== Parent PID: 10074
==30281== 
==30281== 
==30281== HEAP SUMMARY:
==30281==     in use at exit: 40 bytes in 1 blocks
==30281==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30281== 
==30281== LEAK SUMMARY:
==30281==    definitely lost: 0 bytes in 0 blocks
==30281==    indirectly lost: 0 bytes in 0 blocks
==30281==      possibly lost: 0 bytes in 0 blocks
==30281==    still reachable: 40 bytes in 1 blocks
==30281==         suppressed: 0 bytes in 0 blocks
==30281== Reachable blocks (those to which a pointer was found) are not shown.
==30281== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30281== 
==30281== For counts of detected and suppressed errors, rerun with: -v
==30281== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test576 ===
The Valgrind memory detector as below:
==30296== Memcheck, a memory error detector
==30296== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30296== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30296== Command: ./impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.nocopy_dealloc.out
==30296== Parent PID: 10074
==30296== 
==30296== 
==30296== HEAP SUMMARY:
==30296==     in use at exit: 40 bytes in 1 blocks
==30296==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30296== 
==30296== LEAK SUMMARY:
==30296==    definitely lost: 0 bytes in 0 blocks
==30296==    indirectly lost: 0 bytes in 0 blocks
==30296==      possibly lost: 0 bytes in 0 blocks
==30296==    still reachable: 40 bytes in 1 blocks
==30296==         suppressed: 0 bytes in 0 blocks
==30296== Reachable blocks (those to which a pointer was found) are not shown.
==30296== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30296== 
==30296== For counts of detected and suppressed errors, rerun with: -v
==30296== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test577 ===
The Valgrind memory detector as below:
==30312== Memcheck, a memory error detector
==30312== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30312== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30312== Command: ./impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.nocopy_dealloc.out
==30312== Parent PID: 10074
==30312== 
==30312== 
==30312== HEAP SUMMARY:
==30312==     in use at exit: 40 bytes in 1 blocks
==30312==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30312== 
==30312== LEAK SUMMARY:
==30312==    definitely lost: 0 bytes in 0 blocks
==30312==    indirectly lost: 0 bytes in 0 blocks
==30312==      possibly lost: 0 bytes in 0 blocks
==30312==    still reachable: 40 bytes in 1 blocks
==30312==         suppressed: 0 bytes in 0 blocks
==30312== Reachable blocks (those to which a pointer was found) are not shown.
==30312== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30312== 
==30312== For counts of detected and suppressed errors, rerun with: -v
==30312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test578 ===
The Valgrind memory detector as below:
==30327== Memcheck, a memory error detector
==30327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30327== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30327== Command: ./impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.nocopy_dealloc.out
==30327== Parent PID: 10074
==30327== 
==30327== 
==30327== HEAP SUMMARY:
==30327==     in use at exit: 0 bytes in 0 blocks
==30327==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30327== 
==30327== All heap blocks were freed -- no leaks are possible
==30327== 
==30327== For counts of detected and suppressed errors, rerun with: -v
==30327== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test579 ===
The Valgrind memory detector as below:
==30342== Memcheck, a memory error detector
==30342== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30342== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30342== Command: ./impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.nocopy_dealloc.out
==30342== Parent PID: 10074
==30342== 
==30342== 
==30342== HEAP SUMMARY:
==30342==     in use at exit: 0 bytes in 0 blocks
==30342==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30342== 
==30342== All heap blocks were freed -- no leaks are possible
==30342== 
==30342== For counts of detected and suppressed errors, rerun with: -v
==30342== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test58 ===
The Valgrind memory detector as below:
==30357== Memcheck, a memory error detector
==30357== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30357== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30357== Command: ./impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.nocopy_dealloc.out
==30357== Parent PID: 10074
==30357== 
==30357== 
==30357== HEAP SUMMARY:
==30357==     in use at exit: 0 bytes in 0 blocks
==30357==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30357== 
==30357== All heap blocks were freed -- no leaks are possible
==30357== 
==30357== For counts of detected and suppressed errors, rerun with: -v
==30357== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test580 ===
The Valgrind memory detector as below:
==30373== Memcheck, a memory error detector
==30373== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30373== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30373== Command: ./impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.nocopy_dealloc.out
==30373== Parent PID: 10074
==30373== 
==30373== 
==30373== HEAP SUMMARY:
==30373==     in use at exit: 0 bytes in 0 blocks
==30373==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30373== 
==30373== All heap blocks were freed -- no leaks are possible
==30373== 
==30373== For counts of detected and suppressed errors, rerun with: -v
==30373== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test581 ===
The Valgrind memory detector as below:
==30389== Memcheck, a memory error detector
==30389== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30389== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30389== Command: ./impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.nocopy_dealloc.out
==30389== Parent PID: 10074
==30389== 
==30389== 
==30389== HEAP SUMMARY:
==30389==     in use at exit: 0 bytes in 0 blocks
==30389==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30389== 
==30389== All heap blocks were freed -- no leaks are possible
==30389== 
==30389== For counts of detected and suppressed errors, rerun with: -v
==30389== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test582 ===
The Valgrind memory detector as below:
==30404== Memcheck, a memory error detector
==30404== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30404== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30404== Command: ./impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.nocopy_dealloc.out
==30404== Parent PID: 10074
==30404== 
==30404== 
==30404== HEAP SUMMARY:
==30404==     in use at exit: 40 bytes in 1 blocks
==30404==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30404== 
==30404== LEAK SUMMARY:
==30404==    definitely lost: 0 bytes in 0 blocks
==30404==    indirectly lost: 0 bytes in 0 blocks
==30404==      possibly lost: 0 bytes in 0 blocks
==30404==    still reachable: 40 bytes in 1 blocks
==30404==         suppressed: 0 bytes in 0 blocks
==30404== Reachable blocks (those to which a pointer was found) are not shown.
==30404== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30404== 
==30404== For counts of detected and suppressed errors, rerun with: -v
==30404== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test583 ===
The Valgrind memory detector as below:
==30419== Memcheck, a memory error detector
==30419== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30419== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30419== Command: ./impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.nocopy_dealloc.out
==30419== Parent PID: 10074
==30419== 
==30419== 
==30419== HEAP SUMMARY:
==30419==     in use at exit: 0 bytes in 0 blocks
==30419==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30419== 
==30419== All heap blocks were freed -- no leaks are possible
==30419== 
==30419== For counts of detected and suppressed errors, rerun with: -v
==30419== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test584 ===
The Valgrind memory detector as below:
==30435== Memcheck, a memory error detector
==30435== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30435== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30435== Command: ./impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.nocopy_dealloc.out
==30435== Parent PID: 10074
==30435== 
==30435== 
==30435== HEAP SUMMARY:
==30435==     in use at exit: 0 bytes in 0 blocks
==30435==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30435== 
==30435== All heap blocks were freed -- no leaks are possible
==30435== 
==30435== For counts of detected and suppressed errors, rerun with: -v
==30435== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test585 ===
The Valgrind memory detector as below:
==30450== Memcheck, a memory error detector
==30450== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30450== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30450== Command: ./impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.nocopy_dealloc.out
==30450== Parent PID: 10074
==30450== 
==30450== 
==30450== HEAP SUMMARY:
==30450==     in use at exit: 0 bytes in 0 blocks
==30450==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30450== 
==30450== All heap blocks were freed -- no leaks are possible
==30450== 
==30450== For counts of detected and suppressed errors, rerun with: -v
==30450== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test586 ===
The Valgrind memory detector as below:
==30465== Memcheck, a memory error detector
==30465== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30465== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30465== Command: ./impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.nocopy_dealloc.out
==30465== Parent PID: 10074
==30465== 
==30465== 
==30465== HEAP SUMMARY:
==30465==     in use at exit: 40 bytes in 1 blocks
==30465==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30465== 
==30465== LEAK SUMMARY:
==30465==    definitely lost: 0 bytes in 0 blocks
==30465==    indirectly lost: 0 bytes in 0 blocks
==30465==      possibly lost: 0 bytes in 0 blocks
==30465==    still reachable: 40 bytes in 1 blocks
==30465==         suppressed: 0 bytes in 0 blocks
==30465== Reachable blocks (those to which a pointer was found) are not shown.
==30465== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30465== 
==30465== For counts of detected and suppressed errors, rerun with: -v
==30465== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test587 ===
The Valgrind memory detector as below:
==30480== Memcheck, a memory error detector
==30480== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30480== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30480== Command: ./impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.nocopy_dealloc.out
==30480== Parent PID: 10074
==30480== 
==30480== 
==30480== HEAP SUMMARY:
==30480==     in use at exit: 0 bytes in 0 blocks
==30480==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30480== 
==30480== All heap blocks were freed -- no leaks are possible
==30480== 
==30480== For counts of detected and suppressed errors, rerun with: -v
==30480== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test588 ===
The Valgrind memory detector as below:
==30496== Memcheck, a memory error detector
==30496== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30496== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30496== Command: ./impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.nocopy_dealloc.out
==30496== Parent PID: 10074
==30496== 
==30496== 
==30496== HEAP SUMMARY:
==30496==     in use at exit: 40 bytes in 1 blocks
==30496==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30496== 
==30496== LEAK SUMMARY:
==30496==    definitely lost: 0 bytes in 0 blocks
==30496==    indirectly lost: 0 bytes in 0 blocks
==30496==      possibly lost: 0 bytes in 0 blocks
==30496==    still reachable: 40 bytes in 1 blocks
==30496==         suppressed: 0 bytes in 0 blocks
==30496== Reachable blocks (those to which a pointer was found) are not shown.
==30496== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30496== 
==30496== For counts of detected and suppressed errors, rerun with: -v
==30496== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test589 ===
The Valgrind memory detector as below:
==30511== Memcheck, a memory error detector
==30511== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30511== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30511== Command: ./impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.nocopy_dealloc.out
==30511== Parent PID: 10074
==30511== 
==30511== 
==30511== HEAP SUMMARY:
==30511==     in use at exit: 40 bytes in 1 blocks
==30511==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30511== 
==30511== LEAK SUMMARY:
==30511==    definitely lost: 0 bytes in 0 blocks
==30511==    indirectly lost: 0 bytes in 0 blocks
==30511==      possibly lost: 0 bytes in 0 blocks
==30511==    still reachable: 40 bytes in 1 blocks
==30511==         suppressed: 0 bytes in 0 blocks
==30511== Reachable blocks (those to which a pointer was found) are not shown.
==30511== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30511== 
==30511== For counts of detected and suppressed errors, rerun with: -v
==30511== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test59 ===
The Valgrind memory detector as below:
==30526== Memcheck, a memory error detector
==30526== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30526== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30526== Command: ./impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.nocopy_dealloc.out
==30526== Parent PID: 10074
==30526== 
==30526== 
==30526== HEAP SUMMARY:
==30526==     in use at exit: 40 bytes in 1 blocks
==30526==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30526== 
==30526== LEAK SUMMARY:
==30526==    definitely lost: 0 bytes in 0 blocks
==30526==    indirectly lost: 0 bytes in 0 blocks
==30526==      possibly lost: 0 bytes in 0 blocks
==30526==    still reachable: 40 bytes in 1 blocks
==30526==         suppressed: 0 bytes in 0 blocks
==30526== Reachable blocks (those to which a pointer was found) are not shown.
==30526== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30526== 
==30526== For counts of detected and suppressed errors, rerun with: -v
==30526== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test590 ===
The Valgrind memory detector as below:
==30542== Memcheck, a memory error detector
==30542== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30542== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30542== Command: ./impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.nocopy_dealloc.out
==30542== Parent PID: 10074
==30542== 
==30542== 
==30542== HEAP SUMMARY:
==30542==     in use at exit: 40 bytes in 1 blocks
==30542==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30542== 
==30542== LEAK SUMMARY:
==30542==    definitely lost: 0 bytes in 0 blocks
==30542==    indirectly lost: 0 bytes in 0 blocks
==30542==      possibly lost: 0 bytes in 0 blocks
==30542==    still reachable: 40 bytes in 1 blocks
==30542==         suppressed: 0 bytes in 0 blocks
==30542== Reachable blocks (those to which a pointer was found) are not shown.
==30542== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30542== 
==30542== For counts of detected and suppressed errors, rerun with: -v
==30542== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test591 ===
The Valgrind memory detector as below:
==30557== Memcheck, a memory error detector
==30557== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30557== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30557== Command: ./impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.nocopy_dealloc.out
==30557== Parent PID: 10074
==30557== 
==30557== 
==30557== HEAP SUMMARY:
==30557==     in use at exit: 0 bytes in 0 blocks
==30557==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30557== 
==30557== All heap blocks were freed -- no leaks are possible
==30557== 
==30557== For counts of detected and suppressed errors, rerun with: -v
==30557== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test592 ===
The Valgrind memory detector as below:
==30573== Memcheck, a memory error detector
==30573== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30573== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30573== Command: ./impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.nocopy_dealloc.out
==30573== Parent PID: 10074
==30573== 
==30573== 
==30573== HEAP SUMMARY:
==30573==     in use at exit: 0 bytes in 0 blocks
==30573==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30573== 
==30573== All heap blocks were freed -- no leaks are possible
==30573== 
==30573== For counts of detected and suppressed errors, rerun with: -v
==30573== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test593 ===
The Valgrind memory detector as below:
==30589== Memcheck, a memory error detector
==30589== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30589== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30589== Command: ./impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.nocopy_dealloc.out
==30589== Parent PID: 10074
==30589== 
==30589== 
==30589== HEAP SUMMARY:
==30589==     in use at exit: 40 bytes in 1 blocks
==30589==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30589== 
==30589== LEAK SUMMARY:
==30589==    definitely lost: 0 bytes in 0 blocks
==30589==    indirectly lost: 0 bytes in 0 blocks
==30589==      possibly lost: 0 bytes in 0 blocks
==30589==    still reachable: 40 bytes in 1 blocks
==30589==         suppressed: 0 bytes in 0 blocks
==30589== Reachable blocks (those to which a pointer was found) are not shown.
==30589== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30589== 
==30589== For counts of detected and suppressed errors, rerun with: -v
==30589== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test594 ===
The Valgrind memory detector as below:
==30604== Memcheck, a memory error detector
==30604== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30604== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30604== Command: ./impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.nocopy_dealloc.out
==30604== Parent PID: 10074
==30604== 
==30604== 
==30604== HEAP SUMMARY:
==30604==     in use at exit: 0 bytes in 0 blocks
==30604==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30604== 
==30604== All heap blocks were freed -- no leaks are possible
==30604== 
==30604== For counts of detected and suppressed errors, rerun with: -v
==30604== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test595 ===
The Valgrind memory detector as below:
==30619== Memcheck, a memory error detector
==30619== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30619== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30619== Command: ./impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.nocopy_dealloc.out
==30619== Parent PID: 10074
==30619== 
==30619== 
==30619== HEAP SUMMARY:
==30619==     in use at exit: 40 bytes in 1 blocks
==30619==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30619== 
==30619== LEAK SUMMARY:
==30619==    definitely lost: 0 bytes in 0 blocks
==30619==    indirectly lost: 0 bytes in 0 blocks
==30619==      possibly lost: 0 bytes in 0 blocks
==30619==    still reachable: 40 bytes in 1 blocks
==30619==         suppressed: 0 bytes in 0 blocks
==30619== Reachable blocks (those to which a pointer was found) are not shown.
==30619== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30619== 
==30619== For counts of detected and suppressed errors, rerun with: -v
==30619== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test596 ===
The Valgrind memory detector as below:
==30635== Memcheck, a memory error detector
==30635== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30635== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30635== Command: ./impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.nocopy_dealloc.out
==30635== Parent PID: 10074
==30635== 
==30635== 
==30635== HEAP SUMMARY:
==30635==     in use at exit: 0 bytes in 0 blocks
==30635==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30635== 
==30635== All heap blocks were freed -- no leaks are possible
==30635== 
==30635== For counts of detected and suppressed errors, rerun with: -v
==30635== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test597 ===
The Valgrind memory detector as below:
==30651== Memcheck, a memory error detector
==30651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30651== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30651== Command: ./impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.nocopy_dealloc.out
==30651== Parent PID: 10074
==30651== 
==30651== 
==30651== HEAP SUMMARY:
==30651==     in use at exit: 40 bytes in 1 blocks
==30651==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30651== 
==30651== LEAK SUMMARY:
==30651==    definitely lost: 0 bytes in 0 blocks
==30651==    indirectly lost: 0 bytes in 0 blocks
==30651==      possibly lost: 0 bytes in 0 blocks
==30651==    still reachable: 40 bytes in 1 blocks
==30651==         suppressed: 0 bytes in 0 blocks
==30651== Reachable blocks (those to which a pointer was found) are not shown.
==30651== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30651== 
==30651== For counts of detected and suppressed errors, rerun with: -v
==30651== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test598 ===
The Valgrind memory detector as below:
==30666== Memcheck, a memory error detector
==30666== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30666== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30666== Command: ./impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.nocopy_dealloc.out
==30666== Parent PID: 10074
==30666== 
==30666== 
==30666== HEAP SUMMARY:
==30666==     in use at exit: 40 bytes in 1 blocks
==30666==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30666== 
==30666== LEAK SUMMARY:
==30666==    definitely lost: 0 bytes in 0 blocks
==30666==    indirectly lost: 0 bytes in 0 blocks
==30666==      possibly lost: 0 bytes in 0 blocks
==30666==    still reachable: 40 bytes in 1 blocks
==30666==         suppressed: 0 bytes in 0 blocks
==30666== Reachable blocks (those to which a pointer was found) are not shown.
==30666== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30666== 
==30666== For counts of detected and suppressed errors, rerun with: -v
==30666== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test599 ===
The Valgrind memory detector as below:
==30681== Memcheck, a memory error detector
==30681== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30681== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30681== Command: ./impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.nocopy_dealloc.out
==30681== Parent PID: 10074
==30681== 
==30681== 
==30681== HEAP SUMMARY:
==30681==     in use at exit: 0 bytes in 0 blocks
==30681==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30681== 
==30681== All heap blocks were freed -- no leaks are possible
==30681== 
==30681== For counts of detected and suppressed errors, rerun with: -v
==30681== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test6 ===
The Valgrind memory detector as below:
==30697== Memcheck, a memory error detector
==30697== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30697== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30697== Command: ./impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.nocopy_dealloc.out
==30697== Parent PID: 10074
==30697== 
==30697== 
==30697== HEAP SUMMARY:
==30697==     in use at exit: 0 bytes in 0 blocks
==30697==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30697== 
==30697== All heap blocks were freed -- no leaks are possible
==30697== 
==30697== For counts of detected and suppressed errors, rerun with: -v
==30697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test60 ===
The Valgrind memory detector as below:
==30712== Memcheck, a memory error detector
==30712== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30712== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30712== Command: ./impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.nocopy_dealloc.out
==30712== Parent PID: 10074
==30712== 
==30712== 
==30712== HEAP SUMMARY:
==30712==     in use at exit: 40 bytes in 1 blocks
==30712==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30712== 
==30712== LEAK SUMMARY:
==30712==    definitely lost: 0 bytes in 0 blocks
==30712==    indirectly lost: 0 bytes in 0 blocks
==30712==      possibly lost: 0 bytes in 0 blocks
==30712==    still reachable: 40 bytes in 1 blocks
==30712==         suppressed: 0 bytes in 0 blocks
==30712== Reachable blocks (those to which a pointer was found) are not shown.
==30712== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30712== 
==30712== For counts of detected and suppressed errors, rerun with: -v
==30712== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test600 ===
The Valgrind memory detector as below:
==30727== Memcheck, a memory error detector
==30727== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30727== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30727== Command: ./impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.nocopy_dealloc.out
==30727== Parent PID: 10074
==30727== 
==30727== 
==30727== HEAP SUMMARY:
==30727==     in use at exit: 40 bytes in 1 blocks
==30727==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30727== 
==30727== LEAK SUMMARY:
==30727==    definitely lost: 0 bytes in 0 blocks
==30727==    indirectly lost: 0 bytes in 0 blocks
==30727==      possibly lost: 0 bytes in 0 blocks
==30727==    still reachable: 40 bytes in 1 blocks
==30727==         suppressed: 0 bytes in 0 blocks
==30727== Reachable blocks (those to which a pointer was found) are not shown.
==30727== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30727== 
==30727== For counts of detected and suppressed errors, rerun with: -v
==30727== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test601 ===
The Valgrind memory detector as below:
==30742== Memcheck, a memory error detector
==30742== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30742== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30742== Command: ./impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.nocopy_dealloc.out
==30742== Parent PID: 10074
==30742== 
==30742== 
==30742== HEAP SUMMARY:
==30742==     in use at exit: 40 bytes in 1 blocks
==30742==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30742== 
==30742== LEAK SUMMARY:
==30742==    definitely lost: 0 bytes in 0 blocks
==30742==    indirectly lost: 0 bytes in 0 blocks
==30742==      possibly lost: 0 bytes in 0 blocks
==30742==    still reachable: 40 bytes in 1 blocks
==30742==         suppressed: 0 bytes in 0 blocks
==30742== Reachable blocks (those to which a pointer was found) are not shown.
==30742== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30742== 
==30742== For counts of detected and suppressed errors, rerun with: -v
==30742== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test602 ===
The Valgrind memory detector as below:
==30758== Memcheck, a memory error detector
==30758== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30758== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30758== Command: ./impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.nocopy_dealloc.out
==30758== Parent PID: 10074
==30758== 
==30758== 
==30758== HEAP SUMMARY:
==30758==     in use at exit: 40 bytes in 1 blocks
==30758==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30758== 
==30758== LEAK SUMMARY:
==30758==    definitely lost: 0 bytes in 0 blocks
==30758==    indirectly lost: 0 bytes in 0 blocks
==30758==      possibly lost: 0 bytes in 0 blocks
==30758==    still reachable: 40 bytes in 1 blocks
==30758==         suppressed: 0 bytes in 0 blocks
==30758== Reachable blocks (those to which a pointer was found) are not shown.
==30758== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30758== 
==30758== For counts of detected and suppressed errors, rerun with: -v
==30758== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test603 ===
The Valgrind memory detector as below:
==30773== Memcheck, a memory error detector
==30773== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30773== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30773== Command: ./impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.nocopy_dealloc.out
==30773== Parent PID: 10074
==30773== 
==30773== 
==30773== HEAP SUMMARY:
==30773==     in use at exit: 40 bytes in 1 blocks
==30773==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30773== 
==30773== LEAK SUMMARY:
==30773==    definitely lost: 0 bytes in 0 blocks
==30773==    indirectly lost: 0 bytes in 0 blocks
==30773==      possibly lost: 0 bytes in 0 blocks
==30773==    still reachable: 40 bytes in 1 blocks
==30773==         suppressed: 0 bytes in 0 blocks
==30773== Reachable blocks (those to which a pointer was found) are not shown.
==30773== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30773== 
==30773== For counts of detected and suppressed errors, rerun with: -v
==30773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test604 ===
The Valgrind memory detector as below:
==30788== Memcheck, a memory error detector
==30788== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30788== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30788== Command: ./impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.nocopy_dealloc.out
==30788== Parent PID: 10074
==30788== 
==30788== 
==30788== HEAP SUMMARY:
==30788==     in use at exit: 0 bytes in 0 blocks
==30788==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30788== 
==30788== All heap blocks were freed -- no leaks are possible
==30788== 
==30788== For counts of detected and suppressed errors, rerun with: -v
==30788== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test605 ===
The Valgrind memory detector as below:
==30803== Memcheck, a memory error detector
==30803== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30803== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30803== Command: ./impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.nocopy_dealloc.out
==30803== Parent PID: 10074
==30803== 
==30803== 
==30803== HEAP SUMMARY:
==30803==     in use at exit: 0 bytes in 0 blocks
==30803==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30803== 
==30803== All heap blocks were freed -- no leaks are possible
==30803== 
==30803== For counts of detected and suppressed errors, rerun with: -v
==30803== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test606 ===
The Valgrind memory detector as below:
==30819== Memcheck, a memory error detector
==30819== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30819== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30819== Command: ./impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.nocopy_dealloc.out
==30819== Parent PID: 10074
==30819== 
==30819== 
==30819== HEAP SUMMARY:
==30819==     in use at exit: 0 bytes in 0 blocks
==30819==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30819== 
==30819== All heap blocks were freed -- no leaks are possible
==30819== 
==30819== For counts of detected and suppressed errors, rerun with: -v
==30819== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test607 ===
The Valgrind memory detector as below:
==30834== Memcheck, a memory error detector
==30834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30834== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30834== Command: ./impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.nocopy_dealloc.out
==30834== Parent PID: 10074
==30834== 
==30834== 
==30834== HEAP SUMMARY:
==30834==     in use at exit: 0 bytes in 0 blocks
==30834==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30834== 
==30834== All heap blocks were freed -- no leaks are possible
==30834== 
==30834== For counts of detected and suppressed errors, rerun with: -v
==30834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test608 ===
The Valgrind memory detector as below:
==30849== Memcheck, a memory error detector
==30849== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30849== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30849== Command: ./impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.nocopy_dealloc.out
==30849== Parent PID: 10074
==30849== 
==30849== 
==30849== HEAP SUMMARY:
==30849==     in use at exit: 0 bytes in 0 blocks
==30849==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30849== 
==30849== All heap blocks were freed -- no leaks are possible
==30849== 
==30849== For counts of detected and suppressed errors, rerun with: -v
==30849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test609 ===
The Valgrind memory detector as below:
==30864== Memcheck, a memory error detector
==30864== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30864== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30864== Command: ./impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.nocopy_dealloc.out
==30864== Parent PID: 10074
==30864== 
==30864== 
==30864== HEAP SUMMARY:
==30864==     in use at exit: 0 bytes in 0 blocks
==30864==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30864== 
==30864== All heap blocks were freed -- no leaks are possible
==30864== 
==30864== For counts of detected and suppressed errors, rerun with: -v
==30864== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test61 ===
The Valgrind memory detector as below:
==30880== Memcheck, a memory error detector
==30880== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30880== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30880== Command: ./impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.nocopy_dealloc.out
==30880== Parent PID: 10074
==30880== 
==30880== 
==30880== HEAP SUMMARY:
==30880==     in use at exit: 0 bytes in 0 blocks
==30880==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30880== 
==30880== All heap blocks were freed -- no leaks are possible
==30880== 
==30880== For counts of detected and suppressed errors, rerun with: -v
==30880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test610 ===
The Valgrind memory detector as below:
==30895== Memcheck, a memory error detector
==30895== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30895== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30895== Command: ./impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.nocopy_dealloc.out
==30895== Parent PID: 10074
==30895== 
==30895== 
==30895== HEAP SUMMARY:
==30895==     in use at exit: 0 bytes in 0 blocks
==30895==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30895== 
==30895== All heap blocks were freed -- no leaks are possible
==30895== 
==30895== For counts of detected and suppressed errors, rerun with: -v
==30895== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test611 ===
The Valgrind memory detector as below:
==30910== Memcheck, a memory error detector
==30910== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30910== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30910== Command: ./impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.nocopy_dealloc.out
==30910== Parent PID: 10074
==30910== 
==30910== 
==30910== HEAP SUMMARY:
==30910==     in use at exit: 40 bytes in 1 blocks
==30910==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30910== 
==30910== LEAK SUMMARY:
==30910==    definitely lost: 0 bytes in 0 blocks
==30910==    indirectly lost: 0 bytes in 0 blocks
==30910==      possibly lost: 0 bytes in 0 blocks
==30910==    still reachable: 40 bytes in 1 blocks
==30910==         suppressed: 0 bytes in 0 blocks
==30910== Reachable blocks (those to which a pointer was found) are not shown.
==30910== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30910== 
==30910== For counts of detected and suppressed errors, rerun with: -v
==30910== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test612 ===
The Valgrind memory detector as below:
==30927== Memcheck, a memory error detector
==30927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30927== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30927== Command: ./impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.nocopy_dealloc.out
==30927== Parent PID: 10074
==30927== 
==30927== 
==30927== HEAP SUMMARY:
==30927==     in use at exit: 40 bytes in 1 blocks
==30927==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30927== 
==30927== LEAK SUMMARY:
==30927==    definitely lost: 0 bytes in 0 blocks
==30927==    indirectly lost: 0 bytes in 0 blocks
==30927==      possibly lost: 0 bytes in 0 blocks
==30927==    still reachable: 40 bytes in 1 blocks
==30927==         suppressed: 0 bytes in 0 blocks
==30927== Reachable blocks (those to which a pointer was found) are not shown.
==30927== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30927== 
==30927== For counts of detected and suppressed errors, rerun with: -v
==30927== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test613 ===
The Valgrind memory detector as below:
==30943== Memcheck, a memory error detector
==30943== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30943== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30943== Command: ./impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.nocopy_dealloc.out
==30943== Parent PID: 10074
==30943== 
==30943== 
==30943== HEAP SUMMARY:
==30943==     in use at exit: 40 bytes in 1 blocks
==30943==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==30943== 
==30943== LEAK SUMMARY:
==30943==    definitely lost: 0 bytes in 0 blocks
==30943==    indirectly lost: 0 bytes in 0 blocks
==30943==      possibly lost: 0 bytes in 0 blocks
==30943==    still reachable: 40 bytes in 1 blocks
==30943==         suppressed: 0 bytes in 0 blocks
==30943== Reachable blocks (those to which a pointer was found) are not shown.
==30943== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30943== 
==30943== For counts of detected and suppressed errors, rerun with: -v
==30943== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test614 ===
The Valgrind memory detector as below:
==30959== Memcheck, a memory error detector
==30959== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30959== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30959== Command: ./impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.nocopy_dealloc.out
==30959== Parent PID: 10074
==30959== 
==30959== 
==30959== HEAP SUMMARY:
==30959==     in use at exit: 0 bytes in 0 blocks
==30959==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30959== 
==30959== All heap blocks were freed -- no leaks are possible
==30959== 
==30959== For counts of detected and suppressed errors, rerun with: -v
==30959== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test615 ===
The Valgrind memory detector as below:
==30974== Memcheck, a memory error detector
==30974== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30974== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30974== Command: ./impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.nocopy_dealloc.out
==30974== Parent PID: 10074
==30974== 
==30974== 
==30974== HEAP SUMMARY:
==30974==     in use at exit: 0 bytes in 0 blocks
==30974==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30974== 
==30974== All heap blocks were freed -- no leaks are possible
==30974== 
==30974== For counts of detected and suppressed errors, rerun with: -v
==30974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test616 ===
The Valgrind memory detector as below:
==30990== Memcheck, a memory error detector
==30990== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==30990== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==30990== Command: ./impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.nocopy_dealloc.out
==30990== Parent PID: 10074
==30990== 
==30990== 
==30990== HEAP SUMMARY:
==30990==     in use at exit: 0 bytes in 0 blocks
==30990==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==30990== 
==30990== All heap blocks were freed -- no leaks are possible
==30990== 
==30990== For counts of detected and suppressed errors, rerun with: -v
==30990== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test617 ===
The Valgrind memory detector as below:
==31005== Memcheck, a memory error detector
==31005== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31005== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31005== Command: ./impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.nocopy_dealloc.out
==31005== Parent PID: 10074
==31005== 
==31005== 
==31005== HEAP SUMMARY:
==31005==     in use at exit: 0 bytes in 0 blocks
==31005==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31005== 
==31005== All heap blocks were freed -- no leaks are possible
==31005== 
==31005== For counts of detected and suppressed errors, rerun with: -v
==31005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test618 ===
The Valgrind memory detector as below:
==31020== Memcheck, a memory error detector
==31020== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31020== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31020== Command: ./impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.nocopy_dealloc.out
==31020== Parent PID: 10074
==31020== 
==31020== 
==31020== HEAP SUMMARY:
==31020==     in use at exit: 40 bytes in 1 blocks
==31020==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31020== 
==31020== LEAK SUMMARY:
==31020==    definitely lost: 0 bytes in 0 blocks
==31020==    indirectly lost: 0 bytes in 0 blocks
==31020==      possibly lost: 0 bytes in 0 blocks
==31020==    still reachable: 40 bytes in 1 blocks
==31020==         suppressed: 0 bytes in 0 blocks
==31020== Reachable blocks (those to which a pointer was found) are not shown.
==31020== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31020== 
==31020== For counts of detected and suppressed errors, rerun with: -v
==31020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test619 ===
The Valgrind memory detector as below:
==31035== Memcheck, a memory error detector
==31035== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31035== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31035== Command: ./impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.nocopy_dealloc.out
==31035== Parent PID: 10074
==31035== 
==31035== 
==31035== HEAP SUMMARY:
==31035==     in use at exit: 40 bytes in 1 blocks
==31035==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31035== 
==31035== LEAK SUMMARY:
==31035==    definitely lost: 0 bytes in 0 blocks
==31035==    indirectly lost: 0 bytes in 0 blocks
==31035==      possibly lost: 0 bytes in 0 blocks
==31035==    still reachable: 40 bytes in 1 blocks
==31035==         suppressed: 0 bytes in 0 blocks
==31035== Reachable blocks (those to which a pointer was found) are not shown.
==31035== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31035== 
==31035== For counts of detected and suppressed errors, rerun with: -v
==31035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test62 ===
The Valgrind memory detector as below:
==31051== Memcheck, a memory error detector
==31051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31051== Command: ./impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.nocopy_dealloc.out
==31051== Parent PID: 10074
==31051== 
==31051== 
==31051== HEAP SUMMARY:
==31051==     in use at exit: 0 bytes in 0 blocks
==31051==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31051== 
==31051== All heap blocks were freed -- no leaks are possible
==31051== 
==31051== For counts of detected and suppressed errors, rerun with: -v
==31051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test620 ===
The Valgrind memory detector as below:
==31066== Memcheck, a memory error detector
==31066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31066== Command: ./impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.nocopy_dealloc.out
==31066== Parent PID: 10074
==31066== 
==31066== 
==31066== HEAP SUMMARY:
==31066==     in use at exit: 40 bytes in 1 blocks
==31066==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31066== 
==31066== LEAK SUMMARY:
==31066==    definitely lost: 0 bytes in 0 blocks
==31066==    indirectly lost: 0 bytes in 0 blocks
==31066==      possibly lost: 0 bytes in 0 blocks
==31066==    still reachable: 40 bytes in 1 blocks
==31066==         suppressed: 0 bytes in 0 blocks
==31066== Reachable blocks (those to which a pointer was found) are not shown.
==31066== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31066== 
==31066== For counts of detected and suppressed errors, rerun with: -v
==31066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test621 ===
The Valgrind memory detector as below:
==31081== Memcheck, a memory error detector
==31081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31081== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31081== Command: ./impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.nocopy_dealloc.out
==31081== Parent PID: 10074
==31081== 
==31081== 
==31081== HEAP SUMMARY:
==31081==     in use at exit: 40 bytes in 1 blocks
==31081==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31081== 
==31081== LEAK SUMMARY:
==31081==    definitely lost: 0 bytes in 0 blocks
==31081==    indirectly lost: 0 bytes in 0 blocks
==31081==      possibly lost: 0 bytes in 0 blocks
==31081==    still reachable: 40 bytes in 1 blocks
==31081==         suppressed: 0 bytes in 0 blocks
==31081== Reachable blocks (those to which a pointer was found) are not shown.
==31081== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31081== 
==31081== For counts of detected and suppressed errors, rerun with: -v
==31081== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test622 ===
The Valgrind memory detector as below:
==31097== Memcheck, a memory error detector
==31097== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31097== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31097== Command: ./impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.nocopy_dealloc.out
==31097== Parent PID: 10074
==31097== 
==31097== 
==31097== HEAP SUMMARY:
==31097==     in use at exit: 40 bytes in 1 blocks
==31097==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31097== 
==31097== LEAK SUMMARY:
==31097==    definitely lost: 0 bytes in 0 blocks
==31097==    indirectly lost: 0 bytes in 0 blocks
==31097==      possibly lost: 0 bytes in 0 blocks
==31097==    still reachable: 40 bytes in 1 blocks
==31097==         suppressed: 0 bytes in 0 blocks
==31097== Reachable blocks (those to which a pointer was found) are not shown.
==31097== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31097== 
==31097== For counts of detected and suppressed errors, rerun with: -v
==31097== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test623 ===
The Valgrind memory detector as below:
==31112== Memcheck, a memory error detector
==31112== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31112== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31112== Command: ./impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.nocopy_dealloc.out
==31112== Parent PID: 10074
==31112== 
==31112== 
==31112== HEAP SUMMARY:
==31112==     in use at exit: 40 bytes in 1 blocks
==31112==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31112== 
==31112== LEAK SUMMARY:
==31112==    definitely lost: 0 bytes in 0 blocks
==31112==    indirectly lost: 0 bytes in 0 blocks
==31112==      possibly lost: 0 bytes in 0 blocks
==31112==    still reachable: 40 bytes in 1 blocks
==31112==         suppressed: 0 bytes in 0 blocks
==31112== Reachable blocks (those to which a pointer was found) are not shown.
==31112== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31112== 
==31112== For counts of detected and suppressed errors, rerun with: -v
==31112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test624 ===
The Valgrind memory detector as below:
==31127== Memcheck, a memory error detector
==31127== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31127== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31127== Command: ./impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.nocopy_dealloc.out
==31127== Parent PID: 10074
==31127== 
==31127== 
==31127== HEAP SUMMARY:
==31127==     in use at exit: 40 bytes in 1 blocks
==31127==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31127== 
==31127== LEAK SUMMARY:
==31127==    definitely lost: 0 bytes in 0 blocks
==31127==    indirectly lost: 0 bytes in 0 blocks
==31127==      possibly lost: 0 bytes in 0 blocks
==31127==    still reachable: 40 bytes in 1 blocks
==31127==         suppressed: 0 bytes in 0 blocks
==31127== Reachable blocks (those to which a pointer was found) are not shown.
==31127== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31127== 
==31127== For counts of detected and suppressed errors, rerun with: -v
==31127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test625 ===
The Valgrind memory detector as below:
==31142== Memcheck, a memory error detector
==31142== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31142== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31142== Command: ./impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.nocopy_dealloc.out
==31142== Parent PID: 10074
==31142== 
==31142== 
==31142== HEAP SUMMARY:
==31142==     in use at exit: 0 bytes in 0 blocks
==31142==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31142== 
==31142== All heap blocks were freed -- no leaks are possible
==31142== 
==31142== For counts of detected and suppressed errors, rerun with: -v
==31142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test626 ===
The Valgrind memory detector as below:
==31159== Memcheck, a memory error detector
==31159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31159== Command: ./impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.nocopy_dealloc.out
==31159== Parent PID: 10074
==31159== 
==31159== 
==31159== HEAP SUMMARY:
==31159==     in use at exit: 40 bytes in 1 blocks
==31159==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31159== 
==31159== LEAK SUMMARY:
==31159==    definitely lost: 0 bytes in 0 blocks
==31159==    indirectly lost: 0 bytes in 0 blocks
==31159==      possibly lost: 0 bytes in 0 blocks
==31159==    still reachable: 40 bytes in 1 blocks
==31159==         suppressed: 0 bytes in 0 blocks
==31159== Reachable blocks (those to which a pointer was found) are not shown.
==31159== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31159== 
==31159== For counts of detected and suppressed errors, rerun with: -v
==31159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test627 ===
The Valgrind memory detector as below:
==31174== Memcheck, a memory error detector
==31174== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31174== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31174== Command: ./impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.nocopy_dealloc.out
==31174== Parent PID: 10074
==31174== 
==31174== 
==31174== HEAP SUMMARY:
==31174==     in use at exit: 0 bytes in 0 blocks
==31174==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31174== 
==31174== All heap blocks were freed -- no leaks are possible
==31174== 
==31174== For counts of detected and suppressed errors, rerun with: -v
==31174== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test628 ===
The Valgrind memory detector as below:
==31189== Memcheck, a memory error detector
==31189== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31189== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31189== Command: ./impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.nocopy_dealloc.out
==31189== Parent PID: 10074
==31189== 
==31189== 
==31189== HEAP SUMMARY:
==31189==     in use at exit: 0 bytes in 0 blocks
==31189==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31189== 
==31189== All heap blocks were freed -- no leaks are possible
==31189== 
==31189== For counts of detected and suppressed errors, rerun with: -v
==31189== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test629 ===
The Valgrind memory detector as below:
==31204== Memcheck, a memory error detector
==31204== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31204== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31204== Command: ./impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.nocopy_dealloc.out
==31204== Parent PID: 10074
==31204== 
==31204== 
==31204== HEAP SUMMARY:
==31204==     in use at exit: 0 bytes in 0 blocks
==31204==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31204== 
==31204== All heap blocks were freed -- no leaks are possible
==31204== 
==31204== For counts of detected and suppressed errors, rerun with: -v
==31204== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test63 ===
The Valgrind memory detector as below:
==31221== Memcheck, a memory error detector
==31221== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31221== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31221== Command: ./impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.nocopy_dealloc.out
==31221== Parent PID: 10074
==31221== 
==31221== 
==31221== HEAP SUMMARY:
==31221==     in use at exit: 0 bytes in 0 blocks
==31221==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31221== 
==31221== All heap blocks were freed -- no leaks are possible
==31221== 
==31221== For counts of detected and suppressed errors, rerun with: -v
==31221== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test630 ===
The Valgrind memory detector as below:
==31237== Memcheck, a memory error detector
==31237== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31237== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31237== Command: ./impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.nocopy_dealloc.out
==31237== Parent PID: 10074
==31237== 
==31237== 
==31237== HEAP SUMMARY:
==31237==     in use at exit: 0 bytes in 0 blocks
==31237==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31237== 
==31237== All heap blocks were freed -- no leaks are possible
==31237== 
==31237== For counts of detected and suppressed errors, rerun with: -v
==31237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test631 ===
The Valgrind memory detector as below:
==31256== Memcheck, a memory error detector
==31256== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31256== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31256== Command: ./impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.nocopy_dealloc.out
==31256== Parent PID: 10074
==31256== 
==31256== 
==31256== HEAP SUMMARY:
==31256==     in use at exit: 0 bytes in 0 blocks
==31256==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31256== 
==31256== All heap blocks were freed -- no leaks are possible
==31256== 
==31256== For counts of detected and suppressed errors, rerun with: -v
==31256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test632 ===
The Valgrind memory detector as below:
==31271== Memcheck, a memory error detector
==31271== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31271== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31271== Command: ./impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.nocopy_dealloc.out
==31271== Parent PID: 10074
==31271== 
==31271== 
==31271== HEAP SUMMARY:
==31271==     in use at exit: 0 bytes in 0 blocks
==31271==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31271== 
==31271== All heap blocks were freed -- no leaks are possible
==31271== 
==31271== For counts of detected and suppressed errors, rerun with: -v
==31271== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test633 ===
The Valgrind memory detector as below:
==31309== Memcheck, a memory error detector
==31309== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31309== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31309== Command: ./impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.nocopy_dealloc.out
==31309== Parent PID: 10074
==31309== 
==31309== 
==31309== HEAP SUMMARY:
==31309==     in use at exit: 0 bytes in 0 blocks
==31309==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31309== 
==31309== All heap blocks were freed -- no leaks are possible
==31309== 
==31309== For counts of detected and suppressed errors, rerun with: -v
==31309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test634 ===
The Valgrind memory detector as below:
==31324== Memcheck, a memory error detector
==31324== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31324== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31324== Command: ./impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.nocopy_dealloc.out
==31324== Parent PID: 10074
==31324== 
==31324== 
==31324== HEAP SUMMARY:
==31324==     in use at exit: 0 bytes in 0 blocks
==31324==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31324== 
==31324== All heap blocks were freed -- no leaks are possible
==31324== 
==31324== For counts of detected and suppressed errors, rerun with: -v
==31324== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test635 ===
The Valgrind memory detector as below:
==31339== Memcheck, a memory error detector
==31339== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31339== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31339== Command: ./impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.nocopy_dealloc.out
==31339== Parent PID: 10074
==31339== 
==31339== 
==31339== HEAP SUMMARY:
==31339==     in use at exit: 0 bytes in 0 blocks
==31339==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31339== 
==31339== All heap blocks were freed -- no leaks are possible
==31339== 
==31339== For counts of detected and suppressed errors, rerun with: -v
==31339== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test636 ===
The Valgrind memory detector as below:
==31356== Memcheck, a memory error detector
==31356== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31356== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31356== Command: ./impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.nocopy_dealloc.out
==31356== Parent PID: 10074
==31356== 
==31356== 
==31356== HEAP SUMMARY:
==31356==     in use at exit: 40 bytes in 1 blocks
==31356==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31356== 
==31356== LEAK SUMMARY:
==31356==    definitely lost: 0 bytes in 0 blocks
==31356==    indirectly lost: 0 bytes in 0 blocks
==31356==      possibly lost: 0 bytes in 0 blocks
==31356==    still reachable: 40 bytes in 1 blocks
==31356==         suppressed: 0 bytes in 0 blocks
==31356== Reachable blocks (those to which a pointer was found) are not shown.
==31356== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31356== 
==31356== For counts of detected and suppressed errors, rerun with: -v
==31356== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test637 ===
The Valgrind memory detector as below:
==31371== Memcheck, a memory error detector
==31371== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31371== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31371== Command: ./impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.nocopy_dealloc.out
==31371== Parent PID: 10074
==31371== 
==31371== 
==31371== HEAP SUMMARY:
==31371==     in use at exit: 40 bytes in 1 blocks
==31371==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31371== 
==31371== LEAK SUMMARY:
==31371==    definitely lost: 0 bytes in 0 blocks
==31371==    indirectly lost: 0 bytes in 0 blocks
==31371==      possibly lost: 0 bytes in 0 blocks
==31371==    still reachable: 40 bytes in 1 blocks
==31371==         suppressed: 0 bytes in 0 blocks
==31371== Reachable blocks (those to which a pointer was found) are not shown.
==31371== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31371== 
==31371== For counts of detected and suppressed errors, rerun with: -v
==31371== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test638 ===
The Valgrind memory detector as below:
==31386== Memcheck, a memory error detector
==31386== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31386== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31386== Command: ./impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.nocopy_dealloc.out
==31386== Parent PID: 10074
==31386== 
==31386== 
==31386== HEAP SUMMARY:
==31386==     in use at exit: 40 bytes in 1 blocks
==31386==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31386== 
==31386== LEAK SUMMARY:
==31386==    definitely lost: 0 bytes in 0 blocks
==31386==    indirectly lost: 0 bytes in 0 blocks
==31386==      possibly lost: 0 bytes in 0 blocks
==31386==    still reachable: 40 bytes in 1 blocks
==31386==         suppressed: 0 bytes in 0 blocks
==31386== Reachable blocks (those to which a pointer was found) are not shown.
==31386== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31386== 
==31386== For counts of detected and suppressed errors, rerun with: -v
==31386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test639 ===
The Valgrind memory detector as below:
==31403== Memcheck, a memory error detector
==31403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31403== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31403== Command: ./impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.nocopy_dealloc.out
==31403== Parent PID: 10074
==31403== 
==31403== 
==31403== HEAP SUMMARY:
==31403==     in use at exit: 40 bytes in 1 blocks
==31403==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31403== 
==31403== LEAK SUMMARY:
==31403==    definitely lost: 0 bytes in 0 blocks
==31403==    indirectly lost: 0 bytes in 0 blocks
==31403==      possibly lost: 0 bytes in 0 blocks
==31403==    still reachable: 40 bytes in 1 blocks
==31403==         suppressed: 0 bytes in 0 blocks
==31403== Reachable blocks (those to which a pointer was found) are not shown.
==31403== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31403== 
==31403== For counts of detected and suppressed errors, rerun with: -v
==31403== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test64 ===
The Valgrind memory detector as below:
==31418== Memcheck, a memory error detector
==31418== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31418== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31418== Command: ./impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.nocopy_dealloc.out
==31418== Parent PID: 10074
==31418== 
==31418== 
==31418== HEAP SUMMARY:
==31418==     in use at exit: 40 bytes in 1 blocks
==31418==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31418== 
==31418== LEAK SUMMARY:
==31418==    definitely lost: 0 bytes in 0 blocks
==31418==    indirectly lost: 0 bytes in 0 blocks
==31418==      possibly lost: 0 bytes in 0 blocks
==31418==    still reachable: 40 bytes in 1 blocks
==31418==         suppressed: 0 bytes in 0 blocks
==31418== Reachable blocks (those to which a pointer was found) are not shown.
==31418== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31418== 
==31418== For counts of detected and suppressed errors, rerun with: -v
==31418== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test640 ===
The Valgrind memory detector as below:
==31449== Memcheck, a memory error detector
==31449== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31449== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31449== Command: ./impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.nocopy_dealloc.out
==31449== Parent PID: 10074
==31449== 
==31449== 
==31449== HEAP SUMMARY:
==31449==     in use at exit: 0 bytes in 0 blocks
==31449==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31449== 
==31449== All heap blocks were freed -- no leaks are possible
==31449== 
==31449== For counts of detected and suppressed errors, rerun with: -v
==31449== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test641 ===
The Valgrind memory detector as below:
==31466== Memcheck, a memory error detector
==31466== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31466== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31466== Command: ./impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.nocopy_dealloc.out
==31466== Parent PID: 10074
==31466== 
==31466== 
==31466== HEAP SUMMARY:
==31466==     in use at exit: 40 bytes in 1 blocks
==31466==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31466== 
==31466== LEAK SUMMARY:
==31466==    definitely lost: 0 bytes in 0 blocks
==31466==    indirectly lost: 0 bytes in 0 blocks
==31466==      possibly lost: 0 bytes in 0 blocks
==31466==    still reachable: 40 bytes in 1 blocks
==31466==         suppressed: 0 bytes in 0 blocks
==31466== Reachable blocks (those to which a pointer was found) are not shown.
==31466== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31466== 
==31466== For counts of detected and suppressed errors, rerun with: -v
==31466== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test642 ===
The Valgrind memory detector as below:
==31501== Memcheck, a memory error detector
==31501== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31501== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31501== Command: ./impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.nocopy_dealloc.out
==31501== Parent PID: 10074
==31501== 
==31501== 
==31501== HEAP SUMMARY:
==31501==     in use at exit: 40 bytes in 1 blocks
==31501==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31501== 
==31501== LEAK SUMMARY:
==31501==    definitely lost: 0 bytes in 0 blocks
==31501==    indirectly lost: 0 bytes in 0 blocks
==31501==      possibly lost: 0 bytes in 0 blocks
==31501==    still reachable: 40 bytes in 1 blocks
==31501==         suppressed: 0 bytes in 0 blocks
==31501== Reachable blocks (those to which a pointer was found) are not shown.
==31501== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31501== 
==31501== For counts of detected and suppressed errors, rerun with: -v
==31501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test643 ===
The Valgrind memory detector as below:
==31518== Memcheck, a memory error detector
==31518== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31518== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31518== Command: ./impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.nocopy_dealloc.out
==31518== Parent PID: 10074
==31518== 
==31518== 
==31518== HEAP SUMMARY:
==31518==     in use at exit: 0 bytes in 0 blocks
==31518==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31518== 
==31518== All heap blocks were freed -- no leaks are possible
==31518== 
==31518== For counts of detected and suppressed errors, rerun with: -v
==31518== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test644 ===
The Valgrind memory detector as below:
==31541== Memcheck, a memory error detector
==31541== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31541== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31541== Command: ./impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.nocopy_dealloc.out
==31541== Parent PID: 10074
==31541== 
==31541== 
==31541== HEAP SUMMARY:
==31541==     in use at exit: 0 bytes in 0 blocks
==31541==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31541== 
==31541== All heap blocks were freed -- no leaks are possible
==31541== 
==31541== For counts of detected and suppressed errors, rerun with: -v
==31541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test645 ===
The Valgrind memory detector as below:
==31559== Memcheck, a memory error detector
==31559== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31559== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31559== Command: ./impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.nocopy_dealloc.out
==31559== Parent PID: 10074
==31559== 
==31559== 
==31559== HEAP SUMMARY:
==31559==     in use at exit: 0 bytes in 0 blocks
==31559==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31559== 
==31559== All heap blocks were freed -- no leaks are possible
==31559== 
==31559== For counts of detected and suppressed errors, rerun with: -v
==31559== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test646 ===
The Valgrind memory detector as below:
==31574== Memcheck, a memory error detector
==31574== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31574== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31574== Command: ./impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.nocopy_dealloc.out
==31574== Parent PID: 10074
==31574== 
==31574== 
==31574== HEAP SUMMARY:
==31574==     in use at exit: 0 bytes in 0 blocks
==31574==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31574== 
==31574== All heap blocks were freed -- no leaks are possible
==31574== 
==31574== For counts of detected and suppressed errors, rerun with: -v
==31574== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test647 ===
The Valgrind memory detector as below:
==31591== Memcheck, a memory error detector
==31591== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31591== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31591== Command: ./impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.nocopy_dealloc.out
==31591== Parent PID: 10074
==31591== 
==31591== 
==31591== HEAP SUMMARY:
==31591==     in use at exit: 0 bytes in 0 blocks
==31591==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31591== 
==31591== All heap blocks were freed -- no leaks are possible
==31591== 
==31591== For counts of detected and suppressed errors, rerun with: -v
==31591== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test648 ===
The Valgrind memory detector as below:
==31609== Memcheck, a memory error detector
==31609== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31609== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31609== Command: ./impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.nocopy_dealloc.out
==31609== Parent PID: 10074
==31609== 
==31609== 
==31609== HEAP SUMMARY:
==31609==     in use at exit: 0 bytes in 0 blocks
==31609==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31609== 
==31609== All heap blocks were freed -- no leaks are possible
==31609== 
==31609== For counts of detected and suppressed errors, rerun with: -v
==31609== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test649 ===
The Valgrind memory detector as below:
==31657== Memcheck, a memory error detector
==31657== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31657== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31657== Command: ./impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.nocopy_dealloc.out
==31657== Parent PID: 10074
==31657== 
==31657== 
==31657== HEAP SUMMARY:
==31657==     in use at exit: 0 bytes in 0 blocks
==31657==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31657== 
==31657== All heap blocks were freed -- no leaks are possible
==31657== 
==31657== For counts of detected and suppressed errors, rerun with: -v
==31657== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test65 ===
The Valgrind memory detector as below:
==31673== Memcheck, a memory error detector
==31673== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31673== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31673== Command: ./impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.nocopy_dealloc.out
==31673== Parent PID: 10074
==31673== 
==31673== 
==31673== HEAP SUMMARY:
==31673==     in use at exit: 0 bytes in 0 blocks
==31673==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31673== 
==31673== All heap blocks were freed -- no leaks are possible
==31673== 
==31673== For counts of detected and suppressed errors, rerun with: -v
==31673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test650 ===
The Valgrind memory detector as below:
==31688== Memcheck, a memory error detector
==31688== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31688== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31688== Command: ./impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.nocopy_dealloc.out
==31688== Parent PID: 10074
==31688== 
==31688== 
==31688== HEAP SUMMARY:
==31688==     in use at exit: 0 bytes in 0 blocks
==31688==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31688== 
==31688== All heap blocks were freed -- no leaks are possible
==31688== 
==31688== For counts of detected and suppressed errors, rerun with: -v
==31688== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test651 ===
The Valgrind memory detector as below:
==31703== Memcheck, a memory error detector
==31703== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31703== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31703== Command: ./impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.nocopy_dealloc.out
==31703== Parent PID: 10074
==31703== 
==31703== 
==31703== HEAP SUMMARY:
==31703==     in use at exit: 0 bytes in 0 blocks
==31703==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31703== 
==31703== All heap blocks were freed -- no leaks are possible
==31703== 
==31703== For counts of detected and suppressed errors, rerun with: -v
==31703== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test652 ===
The Valgrind memory detector as below:
==31718== Memcheck, a memory error detector
==31718== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31718== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31718== Command: ./impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.nocopy_dealloc.out
==31718== Parent PID: 10074
==31718== 
==31718== 
==31718== HEAP SUMMARY:
==31718==     in use at exit: 40 bytes in 1 blocks
==31718==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31718== 
==31718== LEAK SUMMARY:
==31718==    definitely lost: 0 bytes in 0 blocks
==31718==    indirectly lost: 0 bytes in 0 blocks
==31718==      possibly lost: 0 bytes in 0 blocks
==31718==    still reachable: 40 bytes in 1 blocks
==31718==         suppressed: 0 bytes in 0 blocks
==31718== Reachable blocks (those to which a pointer was found) are not shown.
==31718== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31718== 
==31718== For counts of detected and suppressed errors, rerun with: -v
==31718== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test653 ===
The Valgrind memory detector as below:
==31737== Memcheck, a memory error detector
==31737== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31737== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31737== Command: ./impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.nocopy_dealloc.out
==31737== Parent PID: 10074
==31737== 
==31737== 
==31737== HEAP SUMMARY:
==31737==     in use at exit: 0 bytes in 0 blocks
==31737==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31737== 
==31737== All heap blocks were freed -- no leaks are possible
==31737== 
==31737== For counts of detected and suppressed errors, rerun with: -v
==31737== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test654 ===
The Valgrind memory detector as below:
==31760== Memcheck, a memory error detector
==31760== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31760== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31760== Command: ./impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.nocopy_dealloc.out
==31760== Parent PID: 10074
==31760== 
==31760== 
==31760== HEAP SUMMARY:
==31760==     in use at exit: 0 bytes in 0 blocks
==31760==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31760== 
==31760== All heap blocks were freed -- no leaks are possible
==31760== 
==31760== For counts of detected and suppressed errors, rerun with: -v
==31760== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test655 ===
The Valgrind memory detector as below:
==31787== Memcheck, a memory error detector
==31787== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31787== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31787== Command: ./impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.nocopy_dealloc.out
==31787== Parent PID: 10074
==31787== 
==31787== 
==31787== HEAP SUMMARY:
==31787==     in use at exit: 40 bytes in 1 blocks
==31787==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31787== 
==31787== LEAK SUMMARY:
==31787==    definitely lost: 0 bytes in 0 blocks
==31787==    indirectly lost: 0 bytes in 0 blocks
==31787==      possibly lost: 0 bytes in 0 blocks
==31787==    still reachable: 40 bytes in 1 blocks
==31787==         suppressed: 0 bytes in 0 blocks
==31787== Reachable blocks (those to which a pointer was found) are not shown.
==31787== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31787== 
==31787== For counts of detected and suppressed errors, rerun with: -v
==31787== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test656 ===
The Valgrind memory detector as below:
==31802== Memcheck, a memory error detector
==31802== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31802== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31802== Command: ./impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.nocopy_dealloc.out
==31802== Parent PID: 10074
==31802== 
==31802== 
==31802== HEAP SUMMARY:
==31802==     in use at exit: 40 bytes in 1 blocks
==31802==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31802== 
==31802== LEAK SUMMARY:
==31802==    definitely lost: 0 bytes in 0 blocks
==31802==    indirectly lost: 0 bytes in 0 blocks
==31802==      possibly lost: 0 bytes in 0 blocks
==31802==    still reachable: 40 bytes in 1 blocks
==31802==         suppressed: 0 bytes in 0 blocks
==31802== Reachable blocks (those to which a pointer was found) are not shown.
==31802== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31802== 
==31802== For counts of detected and suppressed errors, rerun with: -v
==31802== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test657 ===
The Valgrind memory detector as below:
==31822== Memcheck, a memory error detector
==31822== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31822== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31822== Command: ./impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.nocopy_dealloc.out
==31822== Parent PID: 10074
==31822== 
==31822== 
==31822== HEAP SUMMARY:
==31822==     in use at exit: 40 bytes in 1 blocks
==31822==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31822== 
==31822== LEAK SUMMARY:
==31822==    definitely lost: 0 bytes in 0 blocks
==31822==    indirectly lost: 0 bytes in 0 blocks
==31822==      possibly lost: 0 bytes in 0 blocks
==31822==    still reachable: 40 bytes in 1 blocks
==31822==         suppressed: 0 bytes in 0 blocks
==31822== Reachable blocks (those to which a pointer was found) are not shown.
==31822== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31822== 
==31822== For counts of detected and suppressed errors, rerun with: -v
==31822== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test658 ===
The Valgrind memory detector as below:
==31839== Memcheck, a memory error detector
==31839== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31839== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31839== Command: ./impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.nocopy_dealloc.out
==31839== Parent PID: 10074
==31839== 
==31839== 
==31839== HEAP SUMMARY:
==31839==     in use at exit: 0 bytes in 0 blocks
==31839==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31839== 
==31839== All heap blocks were freed -- no leaks are possible
==31839== 
==31839== For counts of detected and suppressed errors, rerun with: -v
==31839== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test659 ===
The Valgrind memory detector as below:
==31854== Memcheck, a memory error detector
==31854== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31854== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31854== Command: ./impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.nocopy_dealloc.out
==31854== Parent PID: 10074
==31854== 
==31854== 
==31854== HEAP SUMMARY:
==31854==     in use at exit: 0 bytes in 0 blocks
==31854==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31854== 
==31854== All heap blocks were freed -- no leaks are possible
==31854== 
==31854== For counts of detected and suppressed errors, rerun with: -v
==31854== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test66 ===
The Valgrind memory detector as below:
==31871== Memcheck, a memory error detector
==31871== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31871== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31871== Command: ./impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.nocopy_dealloc.out
==31871== Parent PID: 10074
==31871== 
==31871== 
==31871== HEAP SUMMARY:
==31871==     in use at exit: 0 bytes in 0 blocks
==31871==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31871== 
==31871== All heap blocks were freed -- no leaks are possible
==31871== 
==31871== For counts of detected and suppressed errors, rerun with: -v
==31871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test660 ===
The Valgrind memory detector as below:
==31887== Memcheck, a memory error detector
==31887== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31887== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31887== Command: ./impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.nocopy_dealloc.out
==31887== Parent PID: 10074
==31887== 
==31887== 
==31887== HEAP SUMMARY:
==31887==     in use at exit: 0 bytes in 0 blocks
==31887==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31887== 
==31887== All heap blocks were freed -- no leaks are possible
==31887== 
==31887== For counts of detected and suppressed errors, rerun with: -v
==31887== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test661 ===
The Valgrind memory detector as below:
==31918== Memcheck, a memory error detector
==31918== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31918== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31918== Command: ./impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.nocopy_dealloc.out
==31918== Parent PID: 10074
==31918== 
==31918== 
==31918== HEAP SUMMARY:
==31918==     in use at exit: 0 bytes in 0 blocks
==31918==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31918== 
==31918== All heap blocks were freed -- no leaks are possible
==31918== 
==31918== For counts of detected and suppressed errors, rerun with: -v
==31918== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test662 ===
The Valgrind memory detector as below:
==31934== Memcheck, a memory error detector
==31934== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31934== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31934== Command: ./impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.nocopy_dealloc.out
==31934== Parent PID: 10074
==31934== 
==31934== 
==31934== HEAP SUMMARY:
==31934==     in use at exit: 0 bytes in 0 blocks
==31934==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31934== 
==31934== All heap blocks were freed -- no leaks are possible
==31934== 
==31934== For counts of detected and suppressed errors, rerun with: -v
==31934== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test663 ===
The Valgrind memory detector as below:
==31950== Memcheck, a memory error detector
==31950== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31950== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31950== Command: ./impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.nocopy_dealloc.out
==31950== Parent PID: 10074
==31950== 
==31950== 
==31950== HEAP SUMMARY:
==31950==     in use at exit: 40 bytes in 1 blocks
==31950==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==31950== 
==31950== LEAK SUMMARY:
==31950==    definitely lost: 0 bytes in 0 blocks
==31950==    indirectly lost: 0 bytes in 0 blocks
==31950==      possibly lost: 0 bytes in 0 blocks
==31950==    still reachable: 40 bytes in 1 blocks
==31950==         suppressed: 0 bytes in 0 blocks
==31950== Reachable blocks (those to which a pointer was found) are not shown.
==31950== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31950== 
==31950== For counts of detected and suppressed errors, rerun with: -v
==31950== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test664 ===
The Valgrind memory detector as below:
==31965== Memcheck, a memory error detector
==31965== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31965== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31965== Command: ./impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.nocopy_dealloc.out
==31965== Parent PID: 10074
==31965== 
==31965== 
==31965== HEAP SUMMARY:
==31965==     in use at exit: 0 bytes in 0 blocks
==31965==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31965== 
==31965== All heap blocks were freed -- no leaks are possible
==31965== 
==31965== For counts of detected and suppressed errors, rerun with: -v
==31965== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test665 ===
The Valgrind memory detector as below:
==31987== Memcheck, a memory error detector
==31987== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31987== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==31987== Command: ./impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.nocopy_dealloc.out
==31987== Parent PID: 10074
==31987== 
==31987== 
==31987== HEAP SUMMARY:
==31987==     in use at exit: 0 bytes in 0 blocks
==31987==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==31987== 
==31987== All heap blocks were freed -- no leaks are possible
==31987== 
==31987== For counts of detected and suppressed errors, rerun with: -v
==31987== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test666 ===
The Valgrind memory detector as below:
==32003== Memcheck, a memory error detector
==32003== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32003== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32003== Command: ./impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.nocopy_dealloc.out
==32003== Parent PID: 10074
==32003== 
==32003== 
==32003== HEAP SUMMARY:
==32003==     in use at exit: 0 bytes in 0 blocks
==32003==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32003== 
==32003== All heap blocks were freed -- no leaks are possible
==32003== 
==32003== For counts of detected and suppressed errors, rerun with: -v
==32003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test667 ===
The Valgrind memory detector as below:
==32018== Memcheck, a memory error detector
==32018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32018== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32018== Command: ./impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.nocopy_dealloc.out
==32018== Parent PID: 10074
==32018== 
==32018== 
==32018== HEAP SUMMARY:
==32018==     in use at exit: 40 bytes in 1 blocks
==32018==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32018== 
==32018== LEAK SUMMARY:
==32018==    definitely lost: 0 bytes in 0 blocks
==32018==    indirectly lost: 0 bytes in 0 blocks
==32018==      possibly lost: 0 bytes in 0 blocks
==32018==    still reachable: 40 bytes in 1 blocks
==32018==         suppressed: 0 bytes in 0 blocks
==32018== Reachable blocks (those to which a pointer was found) are not shown.
==32018== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32018== 
==32018== For counts of detected and suppressed errors, rerun with: -v
==32018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test668 ===
The Valgrind memory detector as below:
==32033== Memcheck, a memory error detector
==32033== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32033== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32033== Command: ./impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.nocopy_dealloc.out
==32033== Parent PID: 10074
==32033== 
==32033== 
==32033== HEAP SUMMARY:
==32033==     in use at exit: 40 bytes in 1 blocks
==32033==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32033== 
==32033== LEAK SUMMARY:
==32033==    definitely lost: 0 bytes in 0 blocks
==32033==    indirectly lost: 0 bytes in 0 blocks
==32033==      possibly lost: 0 bytes in 0 blocks
==32033==    still reachable: 40 bytes in 1 blocks
==32033==         suppressed: 0 bytes in 0 blocks
==32033== Reachable blocks (those to which a pointer was found) are not shown.
==32033== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32033== 
==32033== For counts of detected and suppressed errors, rerun with: -v
==32033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test669 ===
The Valgrind memory detector as below:
==32049== Memcheck, a memory error detector
==32049== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32049== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32049== Command: ./impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.nocopy_dealloc.out
==32049== Parent PID: 10074
==32049== 
==32049== 
==32049== HEAP SUMMARY:
==32049==     in use at exit: 0 bytes in 0 blocks
==32049==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32049== 
==32049== All heap blocks were freed -- no leaks are possible
==32049== 
==32049== For counts of detected and suppressed errors, rerun with: -v
==32049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test67 ===
The Valgrind memory detector as below:
==32065== Memcheck, a memory error detector
==32065== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32065== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32065== Command: ./impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.nocopy_dealloc.out
==32065== Parent PID: 10074
==32065== 
==32065== 
==32065== HEAP SUMMARY:
==32065==     in use at exit: 0 bytes in 0 blocks
==32065==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32065== 
==32065== All heap blocks were freed -- no leaks are possible
==32065== 
==32065== For counts of detected and suppressed errors, rerun with: -v
==32065== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test670 ===
The Valgrind memory detector as below:
==32080== Memcheck, a memory error detector
==32080== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32080== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32080== Command: ./impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.nocopy_dealloc.out
==32080== Parent PID: 10074
==32080== 
==32080== 
==32080== HEAP SUMMARY:
==32080==     in use at exit: 0 bytes in 0 blocks
==32080==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32080== 
==32080== All heap blocks were freed -- no leaks are possible
==32080== 
==32080== For counts of detected and suppressed errors, rerun with: -v
==32080== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test671 ===
The Valgrind memory detector as below:
==32096== Memcheck, a memory error detector
==32096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32096== Command: ./impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.nocopy_dealloc.out
==32096== Parent PID: 10074
==32096== 
==32096== 
==32096== HEAP SUMMARY:
==32096==     in use at exit: 0 bytes in 0 blocks
==32096==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32096== 
==32096== All heap blocks were freed -- no leaks are possible
==32096== 
==32096== For counts of detected and suppressed errors, rerun with: -v
==32096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test672 ===
The Valgrind memory detector as below:
==32111== Memcheck, a memory error detector
==32111== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32111== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32111== Command: ./impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.nocopy_dealloc.out
==32111== Parent PID: 10074
==32111== 
==32111== 
==32111== HEAP SUMMARY:
==32111==     in use at exit: 0 bytes in 0 blocks
==32111==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32111== 
==32111== All heap blocks were freed -- no leaks are possible
==32111== 
==32111== For counts of detected and suppressed errors, rerun with: -v
==32111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test673 ===
The Valgrind memory detector as below:
==32126== Memcheck, a memory error detector
==32126== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32126== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32126== Command: ./impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.nocopy_dealloc.out
==32126== Parent PID: 10074
==32126== 
==32126== 
==32126== HEAP SUMMARY:
==32126==     in use at exit: 0 bytes in 0 blocks
==32126==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32126== 
==32126== All heap blocks were freed -- no leaks are possible
==32126== 
==32126== For counts of detected and suppressed errors, rerun with: -v
==32126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test674 ===
The Valgrind memory detector as below:
==32141== Memcheck, a memory error detector
==32141== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32141== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32141== Command: ./impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.nocopy_dealloc.out
==32141== Parent PID: 10074
==32141== 
==32141== 
==32141== HEAP SUMMARY:
==32141==     in use at exit: 40 bytes in 1 blocks
==32141==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32141== 
==32141== LEAK SUMMARY:
==32141==    definitely lost: 0 bytes in 0 blocks
==32141==    indirectly lost: 0 bytes in 0 blocks
==32141==      possibly lost: 0 bytes in 0 blocks
==32141==    still reachable: 40 bytes in 1 blocks
==32141==         suppressed: 0 bytes in 0 blocks
==32141== Reachable blocks (those to which a pointer was found) are not shown.
==32141== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32141== 
==32141== For counts of detected and suppressed errors, rerun with: -v
==32141== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test675 ===
The Valgrind memory detector as below:
==32157== Memcheck, a memory error detector
==32157== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32157== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32157== Command: ./impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.nocopy_dealloc.out
==32157== Parent PID: 10074
==32157== 
==32157== 
==32157== HEAP SUMMARY:
==32157==     in use at exit: 40 bytes in 1 blocks
==32157==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32157== 
==32157== LEAK SUMMARY:
==32157==    definitely lost: 0 bytes in 0 blocks
==32157==    indirectly lost: 0 bytes in 0 blocks
==32157==      possibly lost: 0 bytes in 0 blocks
==32157==    still reachable: 40 bytes in 1 blocks
==32157==         suppressed: 0 bytes in 0 blocks
==32157== Reachable blocks (those to which a pointer was found) are not shown.
==32157== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32157== 
==32157== For counts of detected and suppressed errors, rerun with: -v
==32157== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test676 ===
The Valgrind memory detector as below:
==32173== Memcheck, a memory error detector
==32173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32173== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32173== Command: ./impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.nocopy_dealloc.out
==32173== Parent PID: 10074
==32173== 
==32173== 
==32173== HEAP SUMMARY:
==32173==     in use at exit: 40 bytes in 1 blocks
==32173==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32173== 
==32173== LEAK SUMMARY:
==32173==    definitely lost: 0 bytes in 0 blocks
==32173==    indirectly lost: 0 bytes in 0 blocks
==32173==      possibly lost: 0 bytes in 0 blocks
==32173==    still reachable: 40 bytes in 1 blocks
==32173==         suppressed: 0 bytes in 0 blocks
==32173== Reachable blocks (those to which a pointer was found) are not shown.
==32173== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32173== 
==32173== For counts of detected and suppressed errors, rerun with: -v
==32173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test677 ===
The Valgrind memory detector as below:
==32189== Memcheck, a memory error detector
==32189== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32189== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32189== Command: ./impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.nocopy_dealloc.out
==32189== Parent PID: 10074
==32189== 
==32189== 
==32189== HEAP SUMMARY:
==32189==     in use at exit: 0 bytes in 0 blocks
==32189==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32189== 
==32189== All heap blocks were freed -- no leaks are possible
==32189== 
==32189== For counts of detected and suppressed errors, rerun with: -v
==32189== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test678 ===
The Valgrind memory detector as below:
==32204== Memcheck, a memory error detector
==32204== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32204== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32204== Command: ./impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.nocopy_dealloc.out
==32204== Parent PID: 10074
==32204== 
==32204== 
==32204== HEAP SUMMARY:
==32204==     in use at exit: 0 bytes in 0 blocks
==32204==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32204== 
==32204== All heap blocks were freed -- no leaks are possible
==32204== 
==32204== For counts of detected and suppressed errors, rerun with: -v
==32204== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test679 ===
The Valgrind memory detector as below:
==32221== Memcheck, a memory error detector
==32221== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32221== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32221== Command: ./impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.nocopy_dealloc.out
==32221== Parent PID: 10074
==32221== 
==32221== 
==32221== HEAP SUMMARY:
==32221==     in use at exit: 40 bytes in 1 blocks
==32221==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32221== 
==32221== LEAK SUMMARY:
==32221==    definitely lost: 0 bytes in 0 blocks
==32221==    indirectly lost: 0 bytes in 0 blocks
==32221==      possibly lost: 0 bytes in 0 blocks
==32221==    still reachable: 40 bytes in 1 blocks
==32221==         suppressed: 0 bytes in 0 blocks
==32221== Reachable blocks (those to which a pointer was found) are not shown.
==32221== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32221== 
==32221== For counts of detected and suppressed errors, rerun with: -v
==32221== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test68 ===
The Valgrind memory detector as below:
==32236== Memcheck, a memory error detector
==32236== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32236== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32236== Command: ./impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.nocopy_dealloc.out
==32236== Parent PID: 10074
==32236== 
==32236== 
==32236== HEAP SUMMARY:
==32236==     in use at exit: 0 bytes in 0 blocks
==32236==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32236== 
==32236== All heap blocks were freed -- no leaks are possible
==32236== 
==32236== For counts of detected and suppressed errors, rerun with: -v
==32236== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test680 ===
The Valgrind memory detector as below:
==32251== Memcheck, a memory error detector
==32251== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32251== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32251== Command: ./impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.nocopy_dealloc.out
==32251== Parent PID: 10074
==32251== 
==32251== 
==32251== HEAP SUMMARY:
==32251==     in use at exit: 40 bytes in 1 blocks
==32251==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32251== 
==32251== LEAK SUMMARY:
==32251==    definitely lost: 0 bytes in 0 blocks
==32251==    indirectly lost: 0 bytes in 0 blocks
==32251==      possibly lost: 0 bytes in 0 blocks
==32251==    still reachable: 40 bytes in 1 blocks
==32251==         suppressed: 0 bytes in 0 blocks
==32251== Reachable blocks (those to which a pointer was found) are not shown.
==32251== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32251== 
==32251== For counts of detected and suppressed errors, rerun with: -v
==32251== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test681 ===
The Valgrind memory detector as below:
==32267== Memcheck, a memory error detector
==32267== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32267== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32267== Command: ./impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.nocopy_dealloc.out
==32267== Parent PID: 10074
==32267== 
==32267== 
==32267== HEAP SUMMARY:
==32267==     in use at exit: 40 bytes in 1 blocks
==32267==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32267== 
==32267== LEAK SUMMARY:
==32267==    definitely lost: 0 bytes in 0 blocks
==32267==    indirectly lost: 0 bytes in 0 blocks
==32267==      possibly lost: 0 bytes in 0 blocks
==32267==    still reachable: 40 bytes in 1 blocks
==32267==         suppressed: 0 bytes in 0 blocks
==32267== Reachable blocks (those to which a pointer was found) are not shown.
==32267== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32267== 
==32267== For counts of detected and suppressed errors, rerun with: -v
==32267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test682 ===
The Valgrind memory detector as below:
==32283== Memcheck, a memory error detector
==32283== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32283== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32283== Command: ./impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.nocopy_dealloc.out
==32283== Parent PID: 10074
==32283== 
==32283== 
==32283== HEAP SUMMARY:
==32283==     in use at exit: 0 bytes in 0 blocks
==32283==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32283== 
==32283== All heap blocks were freed -- no leaks are possible
==32283== 
==32283== For counts of detected and suppressed errors, rerun with: -v
==32283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test683 ===
The Valgrind memory detector as below:
==32299== Memcheck, a memory error detector
==32299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32299== Command: ./impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.nocopy_dealloc.out
==32299== Parent PID: 10074
==32299== 
==32299== 
==32299== HEAP SUMMARY:
==32299==     in use at exit: 40 bytes in 1 blocks
==32299==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32299== 
==32299== LEAK SUMMARY:
==32299==    definitely lost: 0 bytes in 0 blocks
==32299==    indirectly lost: 0 bytes in 0 blocks
==32299==      possibly lost: 0 bytes in 0 blocks
==32299==    still reachable: 40 bytes in 1 blocks
==32299==         suppressed: 0 bytes in 0 blocks
==32299== Reachable blocks (those to which a pointer was found) are not shown.
==32299== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32299== 
==32299== For counts of detected and suppressed errors, rerun with: -v
==32299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test684 ===
The Valgrind memory detector as below:
==32315== Memcheck, a memory error detector
==32315== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32315== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32315== Command: ./impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.nocopy_dealloc.out
==32315== Parent PID: 10074
==32315== 
==32315== 
==32315== HEAP SUMMARY:
==32315==     in use at exit: 0 bytes in 0 blocks
==32315==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32315== 
==32315== All heap blocks were freed -- no leaks are possible
==32315== 
==32315== For counts of detected and suppressed errors, rerun with: -v
==32315== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test685 ===
The Valgrind memory detector as below:
==32330== Memcheck, a memory error detector
==32330== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32330== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32330== Command: ./impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.nocopy_dealloc.out
==32330== Parent PID: 10074
==32330== 
==32330== 
==32330== HEAP SUMMARY:
==32330==     in use at exit: 0 bytes in 0 blocks
==32330==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32330== 
==32330== All heap blocks were freed -- no leaks are possible
==32330== 
==32330== For counts of detected and suppressed errors, rerun with: -v
==32330== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test686 ===
The Valgrind memory detector as below:
==32345== Memcheck, a memory error detector
==32345== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32345== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32345== Command: ./impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.nocopy_dealloc.out
==32345== Parent PID: 10074
==32345== 
==32345== 
==32345== HEAP SUMMARY:
==32345==     in use at exit: 40 bytes in 1 blocks
==32345==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32345== 
==32345== LEAK SUMMARY:
==32345==    definitely lost: 0 bytes in 0 blocks
==32345==    indirectly lost: 0 bytes in 0 blocks
==32345==      possibly lost: 0 bytes in 0 blocks
==32345==    still reachable: 40 bytes in 1 blocks
==32345==         suppressed: 0 bytes in 0 blocks
==32345== Reachable blocks (those to which a pointer was found) are not shown.
==32345== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32345== 
==32345== For counts of detected and suppressed errors, rerun with: -v
==32345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test687 ===
The Valgrind memory detector as below:
==32361== Memcheck, a memory error detector
==32361== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32361== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32361== Command: ./impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.nocopy_dealloc.out
==32361== Parent PID: 10074
==32361== 
==32361== 
==32361== HEAP SUMMARY:
==32361==     in use at exit: 40 bytes in 1 blocks
==32361==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32361== 
==32361== LEAK SUMMARY:
==32361==    definitely lost: 0 bytes in 0 blocks
==32361==    indirectly lost: 0 bytes in 0 blocks
==32361==      possibly lost: 0 bytes in 0 blocks
==32361==    still reachable: 40 bytes in 1 blocks
==32361==         suppressed: 0 bytes in 0 blocks
==32361== Reachable blocks (those to which a pointer was found) are not shown.
==32361== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32361== 
==32361== For counts of detected and suppressed errors, rerun with: -v
==32361== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test688 ===
The Valgrind memory detector as below:
==32378== Memcheck, a memory error detector
==32378== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32378== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32378== Command: ./impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.nocopy_dealloc.out
==32378== Parent PID: 10074
==32378== 
==32378== 
==32378== HEAP SUMMARY:
==32378==     in use at exit: 0 bytes in 0 blocks
==32378==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32378== 
==32378== All heap blocks were freed -- no leaks are possible
==32378== 
==32378== For counts of detected and suppressed errors, rerun with: -v
==32378== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test689 ===
The Valgrind memory detector as below:
==32395== Memcheck, a memory error detector
==32395== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32395== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32395== Command: ./impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.nocopy_dealloc.out
==32395== Parent PID: 10074
==32395== 
==32395== 
==32395== HEAP SUMMARY:
==32395==     in use at exit: 0 bytes in 0 blocks
==32395==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32395== 
==32395== All heap blocks were freed -- no leaks are possible
==32395== 
==32395== For counts of detected and suppressed errors, rerun with: -v
==32395== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test69 ===
The Valgrind memory detector as below:
==32410== Memcheck, a memory error detector
==32410== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32410== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32410== Command: ./impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.nocopy_dealloc.out
==32410== Parent PID: 10074
==32410== 
==32410== 
==32410== HEAP SUMMARY:
==32410==     in use at exit: 0 bytes in 0 blocks
==32410==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32410== 
==32410== All heap blocks were freed -- no leaks are possible
==32410== 
==32410== For counts of detected and suppressed errors, rerun with: -v
==32410== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test690 ===
The Valgrind memory detector as below:
==32428== Memcheck, a memory error detector
==32428== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32428== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32428== Command: ./impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.nocopy_dealloc.out
==32428== Parent PID: 10074
==32428== 
==32428== 
==32428== HEAP SUMMARY:
==32428==     in use at exit: 0 bytes in 0 blocks
==32428==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32428== 
==32428== All heap blocks were freed -- no leaks are possible
==32428== 
==32428== For counts of detected and suppressed errors, rerun with: -v
==32428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test691 ===
The Valgrind memory detector as below:
==32445== Memcheck, a memory error detector
==32445== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32445== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32445== Command: ./impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.nocopy_dealloc.out
==32445== Parent PID: 10074
==32445== 
==32445== 
==32445== HEAP SUMMARY:
==32445==     in use at exit: 40 bytes in 1 blocks
==32445==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32445== 
==32445== LEAK SUMMARY:
==32445==    definitely lost: 0 bytes in 0 blocks
==32445==    indirectly lost: 0 bytes in 0 blocks
==32445==      possibly lost: 0 bytes in 0 blocks
==32445==    still reachable: 40 bytes in 1 blocks
==32445==         suppressed: 0 bytes in 0 blocks
==32445== Reachable blocks (those to which a pointer was found) are not shown.
==32445== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32445== 
==32445== For counts of detected and suppressed errors, rerun with: -v
==32445== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test692 ===
The Valgrind memory detector as below:
==32460== Memcheck, a memory error detector
==32460== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32460== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32460== Command: ./impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.nocopy_dealloc.out
==32460== Parent PID: 10074
==32460== 
==32460== 
==32460== HEAP SUMMARY:
==32460==     in use at exit: 0 bytes in 0 blocks
==32460==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32460== 
==32460== All heap blocks were freed -- no leaks are possible
==32460== 
==32460== For counts of detected and suppressed errors, rerun with: -v
==32460== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test693 ===
The Valgrind memory detector as below:
==32475== Memcheck, a memory error detector
==32475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32475== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32475== Command: ./impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.nocopy_dealloc.out
==32475== Parent PID: 10074
==32475== 
==32475== 
==32475== HEAP SUMMARY:
==32475==     in use at exit: 0 bytes in 0 blocks
==32475==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32475== 
==32475== All heap blocks were freed -- no leaks are possible
==32475== 
==32475== For counts of detected and suppressed errors, rerun with: -v
==32475== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test694 ===
The Valgrind memory detector as below:
==32491== Memcheck, a memory error detector
==32491== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32491== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32491== Command: ./impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.nocopy_dealloc.out
==32491== Parent PID: 10074
==32491== 
==32491== 
==32491== HEAP SUMMARY:
==32491==     in use at exit: 40 bytes in 1 blocks
==32491==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32491== 
==32491== LEAK SUMMARY:
==32491==    definitely lost: 0 bytes in 0 blocks
==32491==    indirectly lost: 0 bytes in 0 blocks
==32491==      possibly lost: 0 bytes in 0 blocks
==32491==    still reachable: 40 bytes in 1 blocks
==32491==         suppressed: 0 bytes in 0 blocks
==32491== Reachable blocks (those to which a pointer was found) are not shown.
==32491== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32491== 
==32491== For counts of detected and suppressed errors, rerun with: -v
==32491== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test695 ===
The Valgrind memory detector as below:
==32506== Memcheck, a memory error detector
==32506== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32506== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32506== Command: ./impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.nocopy_dealloc.out
==32506== Parent PID: 10074
==32506== 
==32506== 
==32506== HEAP SUMMARY:
==32506==     in use at exit: 0 bytes in 0 blocks
==32506==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32506== 
==32506== All heap blocks were freed -- no leaks are possible
==32506== 
==32506== For counts of detected and suppressed errors, rerun with: -v
==32506== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test696 ===
The Valgrind memory detector as below:
==32521== Memcheck, a memory error detector
==32521== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32521== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32521== Command: ./impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.nocopy_dealloc.out
==32521== Parent PID: 10074
==32521== 
==32521== 
==32521== HEAP SUMMARY:
==32521==     in use at exit: 0 bytes in 0 blocks
==32521==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32521== 
==32521== All heap blocks were freed -- no leaks are possible
==32521== 
==32521== For counts of detected and suppressed errors, rerun with: -v
==32521== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test697 ===
The Valgrind memory detector as below:
==32537== Memcheck, a memory error detector
==32537== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32537== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32537== Command: ./impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.nocopy_dealloc.out
==32537== Parent PID: 10074
==32537== 
==32537== 
==32537== HEAP SUMMARY:
==32537==     in use at exit: 0 bytes in 0 blocks
==32537==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32537== 
==32537== All heap blocks were freed -- no leaks are possible
==32537== 
==32537== For counts of detected and suppressed errors, rerun with: -v
==32537== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test698 ===
The Valgrind memory detector as below:
==32553== Memcheck, a memory error detector
==32553== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32553== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32553== Command: ./impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.nocopy_dealloc.out
==32553== Parent PID: 10074
==32553== 
==32553== 
==32553== HEAP SUMMARY:
==32553==     in use at exit: 0 bytes in 0 blocks
==32553==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32553== 
==32553== All heap blocks were freed -- no leaks are possible
==32553== 
==32553== For counts of detected and suppressed errors, rerun with: -v
==32553== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test699 ===
The Valgrind memory detector as below:
==32568== Memcheck, a memory error detector
==32568== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32568== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32568== Command: ./impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.nocopy_dealloc.out
==32568== Parent PID: 10074
==32568== 
==32568== 
==32568== HEAP SUMMARY:
==32568==     in use at exit: 40 bytes in 1 blocks
==32568==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32568== 
==32568== LEAK SUMMARY:
==32568==    definitely lost: 0 bytes in 0 blocks
==32568==    indirectly lost: 0 bytes in 0 blocks
==32568==      possibly lost: 0 bytes in 0 blocks
==32568==    still reachable: 40 bytes in 1 blocks
==32568==         suppressed: 0 bytes in 0 blocks
==32568== Reachable blocks (those to which a pointer was found) are not shown.
==32568== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32568== 
==32568== For counts of detected and suppressed errors, rerun with: -v
==32568== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test7 ===
The Valgrind memory detector as below:
==32583== Memcheck, a memory error detector
==32583== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32583== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32583== Command: ./impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.nocopy_dealloc.out
==32583== Parent PID: 10074
==32583== 
==32583== 
==32583== HEAP SUMMARY:
==32583==     in use at exit: 0 bytes in 0 blocks
==32583==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32583== 
==32583== All heap blocks were freed -- no leaks are possible
==32583== 
==32583== For counts of detected and suppressed errors, rerun with: -v
==32583== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test70 ===
The Valgrind memory detector as below:
==32598== Memcheck, a memory error detector
==32598== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32598== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32598== Command: ./impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.nocopy_dealloc.out
==32598== Parent PID: 10074
==32598== 
==32598== 
==32598== HEAP SUMMARY:
==32598==     in use at exit: 0 bytes in 0 blocks
==32598==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32598== 
==32598== All heap blocks were freed -- no leaks are possible
==32598== 
==32598== For counts of detected and suppressed errors, rerun with: -v
==32598== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test700 ===
The Valgrind memory detector as below:
==32614== Memcheck, a memory error detector
==32614== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32614== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32614== Command: ./impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.nocopy_dealloc.out
==32614== Parent PID: 10074
==32614== 
==32614== 
==32614== HEAP SUMMARY:
==32614==     in use at exit: 40 bytes in 1 blocks
==32614==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32614== 
==32614== LEAK SUMMARY:
==32614==    definitely lost: 0 bytes in 0 blocks
==32614==    indirectly lost: 0 bytes in 0 blocks
==32614==      possibly lost: 0 bytes in 0 blocks
==32614==    still reachable: 40 bytes in 1 blocks
==32614==         suppressed: 0 bytes in 0 blocks
==32614== Reachable blocks (those to which a pointer was found) are not shown.
==32614== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32614== 
==32614== For counts of detected and suppressed errors, rerun with: -v
==32614== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test701 ===
The Valgrind memory detector as below:
==32629== Memcheck, a memory error detector
==32629== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32629== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32629== Command: ./impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.nocopy_dealloc.out
==32629== Parent PID: 10074
==32629== 
==32629== 
==32629== HEAP SUMMARY:
==32629==     in use at exit: 0 bytes in 0 blocks
==32629==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32629== 
==32629== All heap blocks were freed -- no leaks are possible
==32629== 
==32629== For counts of detected and suppressed errors, rerun with: -v
==32629== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test702 ===
The Valgrind memory detector as below:
==32644== Memcheck, a memory error detector
==32644== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32644== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32644== Command: ./impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.nocopy_dealloc.out
==32644== Parent PID: 10074
==32644== 
==32644== 
==32644== HEAP SUMMARY:
==32644==     in use at exit: 0 bytes in 0 blocks
==32644==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==32644== 
==32644== All heap blocks were freed -- no leaks are possible
==32644== 
==32644== For counts of detected and suppressed errors, rerun with: -v
==32644== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test703 ===
The Valgrind memory detector as below:
==32660== Memcheck, a memory error detector
==32660== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32660== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32660== Command: ./impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.nocopy_dealloc.out
==32660== Parent PID: 10074
==32660== 
==32660== 
==32660== HEAP SUMMARY:
==32660==     in use at exit: 40 bytes in 1 blocks
==32660==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32660== 
==32660== LEAK SUMMARY:
==32660==    definitely lost: 0 bytes in 0 blocks
==32660==    indirectly lost: 0 bytes in 0 blocks
==32660==      possibly lost: 0 bytes in 0 blocks
==32660==    still reachable: 40 bytes in 1 blocks
==32660==         suppressed: 0 bytes in 0 blocks
==32660== Reachable blocks (those to which a pointer was found) are not shown.
==32660== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32660== 
==32660== For counts of detected and suppressed errors, rerun with: -v
==32660== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test704 ===
The Valgrind memory detector as below:
==32675== Memcheck, a memory error detector
==32675== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32675== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32675== Command: ./impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.nocopy_dealloc.out
==32675== Parent PID: 10074
==32675== 
==32675== 
==32675== HEAP SUMMARY:
==32675==     in use at exit: 40 bytes in 1 blocks
==32675==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32675== 
==32675== LEAK SUMMARY:
==32675==    definitely lost: 0 bytes in 0 blocks
==32675==    indirectly lost: 0 bytes in 0 blocks
==32675==      possibly lost: 0 bytes in 0 blocks
==32675==    still reachable: 40 bytes in 1 blocks
==32675==         suppressed: 0 bytes in 0 blocks
==32675== Reachable blocks (those to which a pointer was found) are not shown.
==32675== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32675== 
==32675== For counts of detected and suppressed errors, rerun with: -v
==32675== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test705 ===
The Valgrind memory detector as below:
==32690== Memcheck, a memory error detector
==32690== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32690== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32690== Command: ./impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.nocopy_dealloc.out
==32690== Parent PID: 10074
==32690== 
==32690== 
==32690== HEAP SUMMARY:
==32690==     in use at exit: 40 bytes in 1 blocks
==32690==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32690== 
==32690== LEAK SUMMARY:
==32690==    definitely lost: 0 bytes in 0 blocks
==32690==    indirectly lost: 0 bytes in 0 blocks
==32690==      possibly lost: 0 bytes in 0 blocks
==32690==    still reachable: 40 bytes in 1 blocks
==32690==         suppressed: 0 bytes in 0 blocks
==32690== Reachable blocks (those to which a pointer was found) are not shown.
==32690== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32690== 
==32690== For counts of detected and suppressed errors, rerun with: -v
==32690== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test706 ===
The Valgrind memory detector as below:
==32706== Memcheck, a memory error detector
==32706== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32706== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32706== Command: ./impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.nocopy_dealloc.out
==32706== Parent PID: 10074
==32706== 
==32706== 
==32706== HEAP SUMMARY:
==32706==     in use at exit: 40 bytes in 1 blocks
==32706==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32706== 
==32706== LEAK SUMMARY:
==32706==    definitely lost: 0 bytes in 0 blocks
==32706==    indirectly lost: 0 bytes in 0 blocks
==32706==      possibly lost: 0 bytes in 0 blocks
==32706==    still reachable: 40 bytes in 1 blocks
==32706==         suppressed: 0 bytes in 0 blocks
==32706== Reachable blocks (those to which a pointer was found) are not shown.
==32706== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32706== 
==32706== For counts of detected and suppressed errors, rerun with: -v
==32706== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test707 ===
The Valgrind memory detector as below:
==32722== Memcheck, a memory error detector
==32722== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32722== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32722== Command: ./impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.nocopy_dealloc.out
==32722== Parent PID: 10074
==32722== 
==32722== 
==32722== HEAP SUMMARY:
==32722==     in use at exit: 40 bytes in 1 blocks
==32722==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32722== 
==32722== LEAK SUMMARY:
==32722==    definitely lost: 0 bytes in 0 blocks
==32722==    indirectly lost: 0 bytes in 0 blocks
==32722==      possibly lost: 0 bytes in 0 blocks
==32722==    still reachable: 40 bytes in 1 blocks
==32722==         suppressed: 0 bytes in 0 blocks
==32722== Reachable blocks (those to which a pointer was found) are not shown.
==32722== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32722== 
==32722== For counts of detected and suppressed errors, rerun with: -v
==32722== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test708 ===
The Valgrind memory detector as below:
==32744== Memcheck, a memory error detector
==32744== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32744== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32744== Command: ./impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.nocopy_dealloc.out
==32744== Parent PID: 10074
==32744== 
==32744== 
==32744== HEAP SUMMARY:
==32744==     in use at exit: 40 bytes in 1 blocks
==32744==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32744== 
==32744== LEAK SUMMARY:
==32744==    definitely lost: 0 bytes in 0 blocks
==32744==    indirectly lost: 0 bytes in 0 blocks
==32744==      possibly lost: 0 bytes in 0 blocks
==32744==    still reachable: 40 bytes in 1 blocks
==32744==         suppressed: 0 bytes in 0 blocks
==32744== Reachable blocks (those to which a pointer was found) are not shown.
==32744== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32744== 
==32744== For counts of detected and suppressed errors, rerun with: -v
==32744== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test709 ===
The Valgrind memory detector as below:
==32760== Memcheck, a memory error detector
==32760== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==32760== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==32760== Command: ./impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.nocopy_dealloc.out
==32760== Parent PID: 10074
==32760== 
==32760== 
==32760== HEAP SUMMARY:
==32760==     in use at exit: 40 bytes in 1 blocks
==32760==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==32760== 
==32760== LEAK SUMMARY:
==32760==    definitely lost: 0 bytes in 0 blocks
==32760==    indirectly lost: 0 bytes in 0 blocks
==32760==      possibly lost: 0 bytes in 0 blocks
==32760==    still reachable: 40 bytes in 1 blocks
==32760==         suppressed: 0 bytes in 0 blocks
==32760== Reachable blocks (those to which a pointer was found) are not shown.
==32760== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==32760== 
==32760== For counts of detected and suppressed errors, rerun with: -v
==32760== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test71 ===
The Valgrind memory detector as below:
==307== Memcheck, a memory error detector
==307== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==307== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==307== Command: ./impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.nocopy_dealloc.out
==307== Parent PID: 10074
==307== 
==307== 
==307== HEAP SUMMARY:
==307==     in use at exit: 0 bytes in 0 blocks
==307==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==307== 
==307== All heap blocks were freed -- no leaks are possible
==307== 
==307== For counts of detected and suppressed errors, rerun with: -v
==307== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test710 ===
The Valgrind memory detector as below:
==323== Memcheck, a memory error detector
==323== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==323== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==323== Command: ./impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.nocopy_dealloc.out
==323== Parent PID: 10074
==323== 
==323== 
==323== HEAP SUMMARY:
==323==     in use at exit: 40 bytes in 1 blocks
==323==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==323== 
==323== LEAK SUMMARY:
==323==    definitely lost: 0 bytes in 0 blocks
==323==    indirectly lost: 0 bytes in 0 blocks
==323==      possibly lost: 0 bytes in 0 blocks
==323==    still reachable: 40 bytes in 1 blocks
==323==         suppressed: 0 bytes in 0 blocks
==323== Reachable blocks (those to which a pointer was found) are not shown.
==323== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==323== 
==323== For counts of detected and suppressed errors, rerun with: -v
==323== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test711 ===
The Valgrind memory detector as below:
==339== Memcheck, a memory error detector
==339== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==339== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==339== Command: ./impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.nocopy_dealloc.out
==339== Parent PID: 10074
==339== 
==339== 
==339== HEAP SUMMARY:
==339==     in use at exit: 40 bytes in 1 blocks
==339==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==339== 
==339== LEAK SUMMARY:
==339==    definitely lost: 0 bytes in 0 blocks
==339==    indirectly lost: 0 bytes in 0 blocks
==339==      possibly lost: 0 bytes in 0 blocks
==339==    still reachable: 40 bytes in 1 blocks
==339==         suppressed: 0 bytes in 0 blocks
==339== Reachable blocks (those to which a pointer was found) are not shown.
==339== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==339== 
==339== For counts of detected and suppressed errors, rerun with: -v
==339== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test712 ===
The Valgrind memory detector as below:
==356== Memcheck, a memory error detector
==356== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==356== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==356== Command: ./impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.nocopy_dealloc.out
==356== Parent PID: 10074
==356== 
==356== 
==356== HEAP SUMMARY:
==356==     in use at exit: 40 bytes in 1 blocks
==356==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==356== 
==356== LEAK SUMMARY:
==356==    definitely lost: 0 bytes in 0 blocks
==356==    indirectly lost: 0 bytes in 0 blocks
==356==      possibly lost: 0 bytes in 0 blocks
==356==    still reachable: 40 bytes in 1 blocks
==356==         suppressed: 0 bytes in 0 blocks
==356== Reachable blocks (those to which a pointer was found) are not shown.
==356== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==356== 
==356== For counts of detected and suppressed errors, rerun with: -v
==356== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test713 ===
The Valgrind memory detector as below:
==372== Memcheck, a memory error detector
==372== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==372== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==372== Command: ./impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.nocopy_dealloc.out
==372== Parent PID: 10074
==372== 
==372== 
==372== HEAP SUMMARY:
==372==     in use at exit: 40 bytes in 1 blocks
==372==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==372== 
==372== LEAK SUMMARY:
==372==    definitely lost: 0 bytes in 0 blocks
==372==    indirectly lost: 0 bytes in 0 blocks
==372==      possibly lost: 0 bytes in 0 blocks
==372==    still reachable: 40 bytes in 1 blocks
==372==         suppressed: 0 bytes in 0 blocks
==372== Reachable blocks (those to which a pointer was found) are not shown.
==372== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==372== 
==372== For counts of detected and suppressed errors, rerun with: -v
==372== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test714 ===
The Valgrind memory detector as below:
==388== Memcheck, a memory error detector
==388== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==388== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==388== Command: ./impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.nocopy_dealloc.out
==388== Parent PID: 10074
==388== 
==388== 
==388== HEAP SUMMARY:
==388==     in use at exit: 40 bytes in 1 blocks
==388==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==388== 
==388== LEAK SUMMARY:
==388==    definitely lost: 0 bytes in 0 blocks
==388==    indirectly lost: 0 bytes in 0 blocks
==388==      possibly lost: 0 bytes in 0 blocks
==388==    still reachable: 40 bytes in 1 blocks
==388==         suppressed: 0 bytes in 0 blocks
==388== Reachable blocks (those to which a pointer was found) are not shown.
==388== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==388== 
==388== For counts of detected and suppressed errors, rerun with: -v
==388== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test715 ===
The Valgrind memory detector as below:
==403== Memcheck, a memory error detector
==403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==403== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==403== Command: ./impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.nocopy_dealloc.out
==403== Parent PID: 10074
==403== 
==403== 
==403== HEAP SUMMARY:
==403==     in use at exit: 0 bytes in 0 blocks
==403==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==403== 
==403== All heap blocks were freed -- no leaks are possible
==403== 
==403== For counts of detected and suppressed errors, rerun with: -v
==403== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test716 ===
The Valgrind memory detector as below:
==420== Memcheck, a memory error detector
==420== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==420== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==420== Command: ./impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.nocopy_dealloc.out
==420== Parent PID: 10074
==420== 
==420== 
==420== HEAP SUMMARY:
==420==     in use at exit: 0 bytes in 0 blocks
==420==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==420== 
==420== All heap blocks were freed -- no leaks are possible
==420== 
==420== For counts of detected and suppressed errors, rerun with: -v
==420== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test717 ===
The Valgrind memory detector as below:
==435== Memcheck, a memory error detector
==435== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==435== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==435== Command: ./impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.nocopy_dealloc.out
==435== Parent PID: 10074
==435== 
==435== 
==435== HEAP SUMMARY:
==435==     in use at exit: 40 bytes in 1 blocks
==435==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==435== 
==435== LEAK SUMMARY:
==435==    definitely lost: 0 bytes in 0 blocks
==435==    indirectly lost: 0 bytes in 0 blocks
==435==      possibly lost: 0 bytes in 0 blocks
==435==    still reachable: 40 bytes in 1 blocks
==435==         suppressed: 0 bytes in 0 blocks
==435== Reachable blocks (those to which a pointer was found) are not shown.
==435== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==435== 
==435== For counts of detected and suppressed errors, rerun with: -v
==435== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test718 ===
The Valgrind memory detector as below:
==450== Memcheck, a memory error detector
==450== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==450== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==450== Command: ./impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.nocopy_dealloc.out
==450== Parent PID: 10074
==450== 
==450== 
==450== HEAP SUMMARY:
==450==     in use at exit: 0 bytes in 0 blocks
==450==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==450== 
==450== All heap blocks were freed -- no leaks are possible
==450== 
==450== For counts of detected and suppressed errors, rerun with: -v
==450== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test719 ===
The Valgrind memory detector as below:
==466== Memcheck, a memory error detector
==466== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==466== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==466== Command: ./impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.nocopy_dealloc.out
==466== Parent PID: 10074
==466== 
==466== 
==466== HEAP SUMMARY:
==466==     in use at exit: 40 bytes in 1 blocks
==466==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==466== 
==466== LEAK SUMMARY:
==466==    definitely lost: 0 bytes in 0 blocks
==466==    indirectly lost: 0 bytes in 0 blocks
==466==      possibly lost: 0 bytes in 0 blocks
==466==    still reachable: 40 bytes in 1 blocks
==466==         suppressed: 0 bytes in 0 blocks
==466== Reachable blocks (those to which a pointer was found) are not shown.
==466== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==466== 
==466== For counts of detected and suppressed errors, rerun with: -v
==466== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test72 ===
The Valgrind memory detector as below:
==482== Memcheck, a memory error detector
==482== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==482== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==482== Command: ./impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.nocopy_dealloc.out
==482== Parent PID: 10074
==482== 
==482== 
==482== HEAP SUMMARY:
==482==     in use at exit: 0 bytes in 0 blocks
==482==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==482== 
==482== All heap blocks were freed -- no leaks are possible
==482== 
==482== For counts of detected and suppressed errors, rerun with: -v
==482== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test720 ===
The Valgrind memory detector as below:
==497== Memcheck, a memory error detector
==497== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==497== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==497== Command: ./impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.nocopy_dealloc.out
==497== Parent PID: 10074
==497== 
==497== 
==497== HEAP SUMMARY:
==497==     in use at exit: 40 bytes in 1 blocks
==497==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==497== 
==497== LEAK SUMMARY:
==497==    definitely lost: 0 bytes in 0 blocks
==497==    indirectly lost: 0 bytes in 0 blocks
==497==      possibly lost: 0 bytes in 0 blocks
==497==    still reachable: 40 bytes in 1 blocks
==497==         suppressed: 0 bytes in 0 blocks
==497== Reachable blocks (those to which a pointer was found) are not shown.
==497== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==497== 
==497== For counts of detected and suppressed errors, rerun with: -v
==497== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test73 ===
The Valgrind memory detector as below:
==516== Memcheck, a memory error detector
==516== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==516== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==516== Command: ./impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.nocopy_dealloc.out
==516== Parent PID: 10074
==516== 
==516== 
==516== HEAP SUMMARY:
==516==     in use at exit: 0 bytes in 0 blocks
==516==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==516== 
==516== All heap blocks were freed -- no leaks are possible
==516== 
==516== For counts of detected and suppressed errors, rerun with: -v
==516== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test74 ===
The Valgrind memory detector as below:
==532== Memcheck, a memory error detector
==532== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==532== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==532== Command: ./impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.nocopy_dealloc.out
==532== Parent PID: 10074
==532== 
==532== 
==532== HEAP SUMMARY:
==532==     in use at exit: 0 bytes in 0 blocks
==532==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==532== 
==532== All heap blocks were freed -- no leaks are possible
==532== 
==532== For counts of detected and suppressed errors, rerun with: -v
==532== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test75 ===
The Valgrind memory detector as below:
==547== Memcheck, a memory error detector
==547== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==547== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==547== Command: ./impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.nocopy_dealloc.out
==547== Parent PID: 10074
==547== 
==547== 
==547== HEAP SUMMARY:
==547==     in use at exit: 0 bytes in 0 blocks
==547==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==547== 
==547== All heap blocks were freed -- no leaks are possible
==547== 
==547== For counts of detected and suppressed errors, rerun with: -v
==547== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test76 ===
The Valgrind memory detector as below:
==563== Memcheck, a memory error detector
==563== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==563== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==563== Command: ./impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.nocopy_dealloc.out
==563== Parent PID: 10074
==563== 
==563== 
==563== HEAP SUMMARY:
==563==     in use at exit: 0 bytes in 0 blocks
==563==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==563== 
==563== All heap blocks were freed -- no leaks are possible
==563== 
==563== For counts of detected and suppressed errors, rerun with: -v
==563== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test77 ===
The Valgrind memory detector as below:
==578== Memcheck, a memory error detector
==578== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==578== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==578== Command: ./impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.nocopy_dealloc.out
==578== Parent PID: 10074
==578== 
==578== 
==578== HEAP SUMMARY:
==578==     in use at exit: 40 bytes in 1 blocks
==578==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==578== 
==578== LEAK SUMMARY:
==578==    definitely lost: 0 bytes in 0 blocks
==578==    indirectly lost: 0 bytes in 0 blocks
==578==      possibly lost: 0 bytes in 0 blocks
==578==    still reachable: 40 bytes in 1 blocks
==578==         suppressed: 0 bytes in 0 blocks
==578== Reachable blocks (those to which a pointer was found) are not shown.
==578== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==578== 
==578== For counts of detected and suppressed errors, rerun with: -v
==578== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test78 ===
The Valgrind memory detector as below:
==593== Memcheck, a memory error detector
==593== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==593== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==593== Command: ./impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.nocopy_dealloc.out
==593== Parent PID: 10074
==593== 
==593== 
==593== HEAP SUMMARY:
==593==     in use at exit: 40 bytes in 1 blocks
==593==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==593== 
==593== LEAK SUMMARY:
==593==    definitely lost: 0 bytes in 0 blocks
==593==    indirectly lost: 0 bytes in 0 blocks
==593==      possibly lost: 0 bytes in 0 blocks
==593==    still reachable: 40 bytes in 1 blocks
==593==         suppressed: 0 bytes in 0 blocks
==593== Reachable blocks (those to which a pointer was found) are not shown.
==593== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==593== 
==593== For counts of detected and suppressed errors, rerun with: -v
==593== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test79 ===
The Valgrind memory detector as below:
==608== Memcheck, a memory error detector
==608== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==608== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==608== Command: ./impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.nocopy_dealloc.out
==608== Parent PID: 10074
==608== 
==608== 
==608== HEAP SUMMARY:
==608==     in use at exit: 40 bytes in 1 blocks
==608==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==608== 
==608== LEAK SUMMARY:
==608==    definitely lost: 0 bytes in 0 blocks
==608==    indirectly lost: 0 bytes in 0 blocks
==608==      possibly lost: 0 bytes in 0 blocks
==608==    still reachable: 40 bytes in 1 blocks
==608==         suppressed: 0 bytes in 0 blocks
==608== Reachable blocks (those to which a pointer was found) are not shown.
==608== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==608== 
==608== For counts of detected and suppressed errors, rerun with: -v
==608== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test8 ===
The Valgrind memory detector as below:
==624== Memcheck, a memory error detector
==624== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==624== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==624== Command: ./impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.nocopy_dealloc.out
==624== Parent PID: 10074
==624== 
==624== 
==624== HEAP SUMMARY:
==624==     in use at exit: 40 bytes in 1 blocks
==624==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==624== 
==624== LEAK SUMMARY:
==624==    definitely lost: 0 bytes in 0 blocks
==624==    indirectly lost: 0 bytes in 0 blocks
==624==      possibly lost: 0 bytes in 0 blocks
==624==    still reachable: 40 bytes in 1 blocks
==624==         suppressed: 0 bytes in 0 blocks
==624== Reachable blocks (those to which a pointer was found) are not shown.
==624== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==624== 
==624== For counts of detected and suppressed errors, rerun with: -v
==624== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test80 ===
The Valgrind memory detector as below:
==639== Memcheck, a memory error detector
==639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==639== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==639== Command: ./impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.nocopy_dealloc.out
==639== Parent PID: 10074
==639== 
==639== 
==639== HEAP SUMMARY:
==639==     in use at exit: 40 bytes in 1 blocks
==639==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==639== 
==639== LEAK SUMMARY:
==639==    definitely lost: 0 bytes in 0 blocks
==639==    indirectly lost: 0 bytes in 0 blocks
==639==      possibly lost: 0 bytes in 0 blocks
==639==    still reachable: 40 bytes in 1 blocks
==639==         suppressed: 0 bytes in 0 blocks
==639== Reachable blocks (those to which a pointer was found) are not shown.
==639== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==639== 
==639== For counts of detected and suppressed errors, rerun with: -v
==639== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test81 ===
The Valgrind memory detector as below:
==658== Memcheck, a memory error detector
==658== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==658== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==658== Command: ./impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.nocopy_dealloc.out
==658== Parent PID: 10074
==658== 
==658== 
==658== HEAP SUMMARY:
==658==     in use at exit: 40 bytes in 1 blocks
==658==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==658== 
==658== LEAK SUMMARY:
==658==    definitely lost: 0 bytes in 0 blocks
==658==    indirectly lost: 0 bytes in 0 blocks
==658==      possibly lost: 0 bytes in 0 blocks
==658==    still reachable: 40 bytes in 1 blocks
==658==         suppressed: 0 bytes in 0 blocks
==658== Reachable blocks (those to which a pointer was found) are not shown.
==658== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==658== 
==658== For counts of detected and suppressed errors, rerun with: -v
==658== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test82 ===
The Valgrind memory detector as below:
==673== Memcheck, a memory error detector
==673== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==673== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==673== Command: ./impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.nocopy_dealloc.out
==673== Parent PID: 10074
==673== 
==673== 
==673== HEAP SUMMARY:
==673==     in use at exit: 0 bytes in 0 blocks
==673==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==673== 
==673== All heap blocks were freed -- no leaks are possible
==673== 
==673== For counts of detected and suppressed errors, rerun with: -v
==673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test83 ===
The Valgrind memory detector as below:
==695== Memcheck, a memory error detector
==695== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==695== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==695== Command: ./impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.nocopy_dealloc.out
==695== Parent PID: 10074
==695== 
==695== 
==695== HEAP SUMMARY:
==695==     in use at exit: 0 bytes in 0 blocks
==695==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==695== 
==695== All heap blocks were freed -- no leaks are possible
==695== 
==695== For counts of detected and suppressed errors, rerun with: -v
==695== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test84 ===
The Valgrind memory detector as below:
==710== Memcheck, a memory error detector
==710== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==710== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==710== Command: ./impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.nocopy_dealloc.out
==710== Parent PID: 10074
==710== 
==710== 
==710== HEAP SUMMARY:
==710==     in use at exit: 0 bytes in 0 blocks
==710==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==710== 
==710== All heap blocks were freed -- no leaks are possible
==710== 
==710== For counts of detected and suppressed errors, rerun with: -v
==710== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test85 ===
The Valgrind memory detector as below:
==725== Memcheck, a memory error detector
==725== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==725== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==725== Command: ./impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.nocopy_dealloc.out
==725== Parent PID: 10074
==725== 
==725== 
==725== HEAP SUMMARY:
==725==     in use at exit: 0 bytes in 0 blocks
==725==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==725== 
==725== All heap blocks were freed -- no leaks are possible
==725== 
==725== For counts of detected and suppressed errors, rerun with: -v
==725== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test86 ===
The Valgrind memory detector as below:
==743== Memcheck, a memory error detector
==743== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==743== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==743== Command: ./impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.nocopy_dealloc.out
==743== Parent PID: 10074
==743== 
==743== 
==743== HEAP SUMMARY:
==743==     in use at exit: 0 bytes in 0 blocks
==743==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==743== 
==743== All heap blocks were freed -- no leaks are possible
==743== 
==743== For counts of detected and suppressed errors, rerun with: -v
==743== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test87 ===
The Valgrind memory detector as below:
==761== Memcheck, a memory error detector
==761== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==761== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==761== Command: ./impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.nocopy_dealloc.out
==761== Parent PID: 10074
==761== 
==761== 
==761== HEAP SUMMARY:
==761==     in use at exit: 40 bytes in 1 blocks
==761==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==761== 
==761== LEAK SUMMARY:
==761==    definitely lost: 0 bytes in 0 blocks
==761==    indirectly lost: 0 bytes in 0 blocks
==761==      possibly lost: 0 bytes in 0 blocks
==761==    still reachable: 40 bytes in 1 blocks
==761==         suppressed: 0 bytes in 0 blocks
==761== Reachable blocks (those to which a pointer was found) are not shown.
==761== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==761== 
==761== For counts of detected and suppressed errors, rerun with: -v
==761== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test88 ===
The Valgrind memory detector as below:
==778== Memcheck, a memory error detector
==778== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==778== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==778== Command: ./impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.nocopy_dealloc.out
==778== Parent PID: 10074
==778== 
==778== 
==778== HEAP SUMMARY:
==778==     in use at exit: 0 bytes in 0 blocks
==778==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==778== 
==778== All heap blocks were freed -- no leaks are possible
==778== 
==778== For counts of detected and suppressed errors, rerun with: -v
==778== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test89 ===
The Valgrind memory detector as below:
==793== Memcheck, a memory error detector
==793== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==793== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==793== Command: ./impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.nocopy_dealloc.out
==793== Parent PID: 10074
==793== 
==793== 
==793== HEAP SUMMARY:
==793==     in use at exit: 40 bytes in 1 blocks
==793==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==793== 
==793== LEAK SUMMARY:
==793==    definitely lost: 0 bytes in 0 blocks
==793==    indirectly lost: 0 bytes in 0 blocks
==793==      possibly lost: 0 bytes in 0 blocks
==793==    still reachable: 40 bytes in 1 blocks
==793==         suppressed: 0 bytes in 0 blocks
==793== Reachable blocks (those to which a pointer was found) are not shown.
==793== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==793== 
==793== For counts of detected and suppressed errors, rerun with: -v
==793== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test9 ===
The Valgrind memory detector as below:
==809== Memcheck, a memory error detector
==809== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==809== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==809== Command: ./impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.nocopy_dealloc.out
==809== Parent PID: 10074
==809== 
==809== 
==809== HEAP SUMMARY:
==809==     in use at exit: 40 bytes in 1 blocks
==809==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==809== 
==809== LEAK SUMMARY:
==809==    definitely lost: 0 bytes in 0 blocks
==809==    indirectly lost: 0 bytes in 0 blocks
==809==      possibly lost: 0 bytes in 0 blocks
==809==    still reachable: 40 bytes in 1 blocks
==809==         suppressed: 0 bytes in 0 blocks
==809== Reachable blocks (those to which a pointer was found) are not shown.
==809== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==809== 
==809== For counts of detected and suppressed errors, rerun with: -v
==809== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test90 ===
The Valgrind memory detector as below:
==825== Memcheck, a memory error detector
==825== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==825== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==825== Command: ./impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.nocopy_dealloc.out
==825== Parent PID: 10074
==825== 
==825== 
==825== HEAP SUMMARY:
==825==     in use at exit: 0 bytes in 0 blocks
==825==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==825== 
==825== All heap blocks were freed -- no leaks are possible
==825== 
==825== For counts of detected and suppressed errors, rerun with: -v
==825== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:65 FILE: impl/nocopy_dealloc/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: The assumption holds


=== Test report for nocopy_dealloc assignment_3Vars_test91 ===
The Valgrind memory detector as below:
==840== Memcheck, a memory error detector
==840== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==840== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==840== Command: ./impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.nocopy_dealloc.out
==840== Parent PID: 10074
==840== 
==840== 
==840== HEAP SUMMARY:
==840==     in use at exit: 40 bytes in 1 blocks
==840==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==840== 
==840== LEAK SUMMARY:
==840==    definitely lost: 0 bytes in 0 blocks
==840==    indirectly lost: 0 bytes in 0 blocks
==840==      possibly lost: 0 bytes in 0 blocks
==840==    still reachable: 40 bytes in 1 blocks
==840==         suppressed: 0 bytes in 0 blocks
==840== Reachable blocks (those to which a pointer was found) are not shown.
==840== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==840== 
==840== For counts of detected and suppressed errors, rerun with: -v
==840== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test92 ===
The Valgrind memory detector as below:
==858== Memcheck, a memory error detector
==858== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==858== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==858== Command: ./impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.nocopy_dealloc.out
==858== Parent PID: 10074
==858== 
==858== 
==858== HEAP SUMMARY:
==858==     in use at exit: 40 bytes in 1 blocks
==858==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==858== 
==858== LEAK SUMMARY:
==858==    definitely lost: 0 bytes in 0 blocks
==858==    indirectly lost: 0 bytes in 0 blocks
==858==      possibly lost: 0 bytes in 0 blocks
==858==    still reachable: 40 bytes in 1 blocks
==858==         suppressed: 0 bytes in 0 blocks
==858== Reachable blocks (those to which a pointer was found) are not shown.
==858== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==858== 
==858== For counts of detected and suppressed errors, rerun with: -v
==858== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test93 ===
The Valgrind memory detector as below:
==875== Memcheck, a memory error detector
==875== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==875== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==875== Command: ./impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.nocopy_dealloc.out
==875== Parent PID: 10074
==875== 
==875== 
==875== HEAP SUMMARY:
==875==     in use at exit: 40 bytes in 1 blocks
==875==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==875== 
==875== LEAK SUMMARY:
==875==    definitely lost: 0 bytes in 0 blocks
==875==    indirectly lost: 0 bytes in 0 blocks
==875==      possibly lost: 0 bytes in 0 blocks
==875==    still reachable: 40 bytes in 1 blocks
==875==         suppressed: 0 bytes in 0 blocks
==875== Reachable blocks (those to which a pointer was found) are not shown.
==875== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==875== 
==875== For counts of detected and suppressed errors, rerun with: -v
==875== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test94 ===
The Valgrind memory detector as below:
==892== Memcheck, a memory error detector
==892== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==892== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==892== Command: ./impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.nocopy_dealloc.out
==892== Parent PID: 10074
==892== 
==892== 
==892== HEAP SUMMARY:
==892==     in use at exit: 40 bytes in 1 blocks
==892==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==892== 
==892== LEAK SUMMARY:
==892==    definitely lost: 0 bytes in 0 blocks
==892==    indirectly lost: 0 bytes in 0 blocks
==892==      possibly lost: 0 bytes in 0 blocks
==892==    still reachable: 40 bytes in 1 blocks
==892==         suppressed: 0 bytes in 0 blocks
==892== Reachable blocks (those to which a pointer was found) are not shown.
==892== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==892== 
==892== For counts of detected and suppressed errors, rerun with: -v
==892== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test95 ===
The Valgrind memory detector as below:
==907== Memcheck, a memory error detector
==907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==907== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==907== Command: ./impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.nocopy_dealloc.out
==907== Parent PID: 10074
==907== 
==907== 
==907== HEAP SUMMARY:
==907==     in use at exit: 40 bytes in 1 blocks
==907==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==907== 
==907== LEAK SUMMARY:
==907==    definitely lost: 0 bytes in 0 blocks
==907==    indirectly lost: 0 bytes in 0 blocks
==907==      possibly lost: 0 bytes in 0 blocks
==907==    still reachable: 40 bytes in 1 blocks
==907==         suppressed: 0 bytes in 0 blocks
==907== Reachable blocks (those to which a pointer was found) are not shown.
==907== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==907== 
==907== For counts of detected and suppressed errors, rerun with: -v
==907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test96 ===
The Valgrind memory detector as below:
==925== Memcheck, a memory error detector
==925== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==925== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==925== Command: ./impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.nocopy_dealloc.out
==925== Parent PID: 10074
==925== 
==925== 
==925== HEAP SUMMARY:
==925==     in use at exit: 40 bytes in 1 blocks
==925==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==925== 
==925== LEAK SUMMARY:
==925==    definitely lost: 0 bytes in 0 blocks
==925==    indirectly lost: 0 bytes in 0 blocks
==925==      possibly lost: 0 bytes in 0 blocks
==925==    still reachable: 40 bytes in 1 blocks
==925==         suppressed: 0 bytes in 0 blocks
==925== Reachable blocks (those to which a pointer was found) are not shown.
==925== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==925== 
==925== For counts of detected and suppressed errors, rerun with: -v
==925== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test97 ===
The Valgrind memory detector as below:
==941== Memcheck, a memory error detector
==941== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==941== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==941== Command: ./impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.nocopy_dealloc.out
==941== Parent PID: 10074
==941== 
==941== 
==941== HEAP SUMMARY:
==941==     in use at exit: 40 bytes in 1 blocks
==941==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==941== 
==941== LEAK SUMMARY:
==941==    definitely lost: 0 bytes in 0 blocks
==941==    indirectly lost: 0 bytes in 0 blocks
==941==      possibly lost: 0 bytes in 0 blocks
==941==    still reachable: 40 bytes in 1 blocks
==941==         suppressed: 0 bytes in 0 blocks
==941== Reachable blocks (those to which a pointer was found) are not shown.
==941== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==941== 
==941== For counts of detected and suppressed errors, rerun with: -v
==941== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test98 ===
The Valgrind memory detector as below:
==962== Memcheck, a memory error detector
==962== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==962== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==962== Command: ./impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.nocopy_dealloc.out
==962== Parent PID: 10074
==962== 
==962== 
==962== HEAP SUMMARY:
==962==     in use at exit: 40 bytes in 1 blocks
==962==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==962== 
==962== LEAK SUMMARY:
==962==    definitely lost: 0 bytes in 0 blocks
==962==    indirectly lost: 0 bytes in 0 blocks
==962==      possibly lost: 0 bytes in 0 blocks
==962==    still reachable: 40 bytes in 1 blocks
==962==         suppressed: 0 bytes in 0 blocks
==962== Reachable blocks (those to which a pointer was found) are not shown.
==962== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==962== 
==962== For counts of detected and suppressed errors, rerun with: -v
==962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: Runtime check error! The assumption fails. 


=== Test report for nocopy_dealloc assignment_3Vars_test99 ===
The Valgrind memory detector as below:
==977== Memcheck, a memory error detector
==977== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==977== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==977== Command: ./impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.nocopy_dealloc.out
==977== Parent PID: 10074
==977== 
==977== 
==977== HEAP SUMMARY:
==977==     in use at exit: 40 bytes in 1 blocks
==977==   total heap usage: 4 allocs, 3 frees, 8,312 bytes allocated
==977== 
==977== LEAK SUMMARY:
==977==    definitely lost: 0 bytes in 0 blocks
==977==    indirectly lost: 0 bytes in 0 blocks
==977==      possibly lost: 0 bytes in 0 blocks
==977==    still reachable: 40 bytes in 1 blocks
==977==         suppressed: 0 bytes in 0 blocks
==977== Reachable blocks (those to which a pointer was found) are not shown.
==977== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==977== 
==977== For counts of detected and suppressed errors, rerun with: -v
==977== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:26 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:29 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:35 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:38 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:44 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:47 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:53 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:56 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:59 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: The assumption holds	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:62 FILE: impl/nocopy_dealloc/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: Runtime check error! The assumption fails. 


