=== Test report for assignment_2Vars_test1 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _5 ) (LINE:22 FILE: impl/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _5 ) (LINE:27 FILE: impl/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _8 ) (LINE:35 FILE: impl/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _8 ) (LINE:40 FILE: impl/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:45 FILE: impl/assignment_2Vars_test1/assignment_2Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:50 FILE: impl/assignment_2Vars_test1/assignment_2Vars_test1.c)
The Valgrind memory detector as below:
==12140== Memcheck, a memory error detector
==12140== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12140== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12140== Command: ./impl/assignment_2Vars_test1/assignment_2Vars_test1.out
==12140== Parent PID: 12124
==12140== 
==12140== 
==12140== HEAP SUMMARY:
==12140==     in use at exit: 0 bytes in 0 blocks
==12140==   total heap usage: 3 allocs, 3 frees, 8,272 bytes allocated
==12140== 
==12140== All heap blocks were freed -- no leaks are possible
==12140== 
==12140== For counts of detected and suppressed errors, rerun with: -v
==12140== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_2Vars_test2 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _5 ) (LINE:22 FILE: impl/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _5 ) (LINE:27 FILE: impl/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _8 ) (LINE:35 FILE: impl/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _8 ) (LINE:40 FILE: impl/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:45 FILE: impl/assignment_2Vars_test2/assignment_2Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:50 FILE: impl/assignment_2Vars_test2/assignment_2Vars_test2.c)
The Valgrind memory detector as below:
==12159== Memcheck, a memory error detector
==12159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12159== Command: ./impl/assignment_2Vars_test2/assignment_2Vars_test2.out
==12159== Parent PID: 12124
==12159== 
==12159== 
==12159== HEAP SUMMARY:
==12159==     in use at exit: 0 bytes in 0 blocks
==12159==   total heap usage: 3 allocs, 3 frees, 8,272 bytes allocated
==12159== 
==12159== All heap blocks were freed -- no leaks are possible
==12159== 
==12159== For counts of detected and suppressed errors, rerun with: -v
==12159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test1 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test1/assignment_3Vars_test1.c)
The Valgrind memory detector as below:
==12176== Memcheck, a memory error detector
==12176== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12176== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12176== Command: ./impl/assignment_3Vars_test1/assignment_3Vars_test1.out
==12176== Parent PID: 12124
==12176== 
==12176== 
==12176== HEAP SUMMARY:
==12176==     in use at exit: 0 bytes in 0 blocks
==12176==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12176== 
==12176== All heap blocks were freed -- no leaks are possible
==12176== 
==12176== For counts of detected and suppressed errors, rerun with: -v
==12176== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test10 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test10/assignment_3Vars_test10.c)
The Valgrind memory detector as below:
==12192== Memcheck, a memory error detector
==12192== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12192== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12192== Command: ./impl/assignment_3Vars_test10/assignment_3Vars_test10.out
==12192== Parent PID: 12124
==12192== 
==12192== 
==12192== HEAP SUMMARY:
==12192==     in use at exit: 0 bytes in 0 blocks
==12192==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12192== 
==12192== All heap blocks were freed -- no leaks are possible
==12192== 
==12192== For counts of detected and suppressed errors, rerun with: -v
==12192== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test100 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test100/assignment_3Vars_test100.c)
The Valgrind memory detector as below:
==12207== Memcheck, a memory error detector
==12207== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12207== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12207== Command: ./impl/assignment_3Vars_test100/assignment_3Vars_test100.out
==12207== Parent PID: 12124
==12207== 
==12207== 
==12207== HEAP SUMMARY:
==12207==     in use at exit: 0 bytes in 0 blocks
==12207==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12207== 
==12207== All heap blocks were freed -- no leaks are possible
==12207== 
==12207== For counts of detected and suppressed errors, rerun with: -v
==12207== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test101 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test101/assignment_3Vars_test101.c)
The Valgrind memory detector as below:
==12222== Memcheck, a memory error detector
==12222== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12222== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12222== Command: ./impl/assignment_3Vars_test101/assignment_3Vars_test101.out
==12222== Parent PID: 12124
==12222== 
==12222== 
==12222== HEAP SUMMARY:
==12222==     in use at exit: 0 bytes in 0 blocks
==12222==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12222== 
==12222== All heap blocks were freed -- no leaks are possible
==12222== 
==12222== For counts of detected and suppressed errors, rerun with: -v
==12222== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test102 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test102/assignment_3Vars_test102.c)
The Valgrind memory detector as below:
==12238== Memcheck, a memory error detector
==12238== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12238== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12238== Command: ./impl/assignment_3Vars_test102/assignment_3Vars_test102.out
==12238== Parent PID: 12124
==12238== 
==12238== 
==12238== HEAP SUMMARY:
==12238==     in use at exit: 0 bytes in 0 blocks
==12238==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12238== 
==12238== All heap blocks were freed -- no leaks are possible
==12238== 
==12238== For counts of detected and suppressed errors, rerun with: -v
==12238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test103 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test103/assignment_3Vars_test103.c)
The Valgrind memory detector as below:
==12253== Memcheck, a memory error detector
==12253== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12253== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12253== Command: ./impl/assignment_3Vars_test103/assignment_3Vars_test103.out
==12253== Parent PID: 12124
==12253== 
==12253== 
==12253== HEAP SUMMARY:
==12253==     in use at exit: 0 bytes in 0 blocks
==12253==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12253== 
==12253== All heap blocks were freed -- no leaks are possible
==12253== 
==12253== For counts of detected and suppressed errors, rerun with: -v
==12253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test104 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test104/assignment_3Vars_test104.c)
The Valgrind memory detector as below:
==12268== Memcheck, a memory error detector
==12268== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12268== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12268== Command: ./impl/assignment_3Vars_test104/assignment_3Vars_test104.out
==12268== Parent PID: 12124
==12268== 
==12268== 
==12268== HEAP SUMMARY:
==12268==     in use at exit: 0 bytes in 0 blocks
==12268==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12268== 
==12268== All heap blocks were freed -- no leaks are possible
==12268== 
==12268== For counts of detected and suppressed errors, rerun with: -v
==12268== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test105 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test105/assignment_3Vars_test105.c)
The Valgrind memory detector as below:
==12283== Memcheck, a memory error detector
==12283== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12283== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12283== Command: ./impl/assignment_3Vars_test105/assignment_3Vars_test105.out
==12283== Parent PID: 12124
==12283== 
==12283== 
==12283== HEAP SUMMARY:
==12283==     in use at exit: 0 bytes in 0 blocks
==12283==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12283== 
==12283== All heap blocks were freed -- no leaks are possible
==12283== 
==12283== For counts of detected and suppressed errors, rerun with: -v
==12283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test106 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test106/assignment_3Vars_test106.c)
The Valgrind memory detector as below:
==12299== Memcheck, a memory error detector
==12299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12299== Command: ./impl/assignment_3Vars_test106/assignment_3Vars_test106.out
==12299== Parent PID: 12124
==12299== 
==12299== 
==12299== HEAP SUMMARY:
==12299==     in use at exit: 0 bytes in 0 blocks
==12299==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12299== 
==12299== All heap blocks were freed -- no leaks are possible
==12299== 
==12299== For counts of detected and suppressed errors, rerun with: -v
==12299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test107 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test107/assignment_3Vars_test107.c)
The Valgrind memory detector as below:
==12314== Memcheck, a memory error detector
==12314== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12314== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12314== Command: ./impl/assignment_3Vars_test107/assignment_3Vars_test107.out
==12314== Parent PID: 12124
==12314== 
==12314== 
==12314== HEAP SUMMARY:
==12314==     in use at exit: 0 bytes in 0 blocks
==12314==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12314== 
==12314== All heap blocks were freed -- no leaks are possible
==12314== 
==12314== For counts of detected and suppressed errors, rerun with: -v
==12314== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test108 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test108/assignment_3Vars_test108.c)
The Valgrind memory detector as below:
==12329== Memcheck, a memory error detector
==12329== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12329== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12329== Command: ./impl/assignment_3Vars_test108/assignment_3Vars_test108.out
==12329== Parent PID: 12124
==12329== 
==12329== 
==12329== HEAP SUMMARY:
==12329==     in use at exit: 0 bytes in 0 blocks
==12329==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12329== 
==12329== All heap blocks were freed -- no leaks are possible
==12329== 
==12329== For counts of detected and suppressed errors, rerun with: -v
==12329== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test109 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test109/assignment_3Vars_test109.c)
The Valgrind memory detector as below:
==12344== Memcheck, a memory error detector
==12344== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12344== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12344== Command: ./impl/assignment_3Vars_test109/assignment_3Vars_test109.out
==12344== Parent PID: 12124
==12344== 
==12344== 
==12344== HEAP SUMMARY:
==12344==     in use at exit: 0 bytes in 0 blocks
==12344==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12344== 
==12344== All heap blocks were freed -- no leaks are possible
==12344== 
==12344== For counts of detected and suppressed errors, rerun with: -v
==12344== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test11 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test11/assignment_3Vars_test11.c)
The Valgrind memory detector as below:
==12362== Memcheck, a memory error detector
==12362== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12362== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12362== Command: ./impl/assignment_3Vars_test11/assignment_3Vars_test11.out
==12362== Parent PID: 12124
==12362== 
==12362== 
==12362== HEAP SUMMARY:
==12362==     in use at exit: 0 bytes in 0 blocks
==12362==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12362== 
==12362== All heap blocks were freed -- no leaks are possible
==12362== 
==12362== For counts of detected and suppressed errors, rerun with: -v
==12362== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test110 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test110/assignment_3Vars_test110.c)
The Valgrind memory detector as below:
==12377== Memcheck, a memory error detector
==12377== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12377== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12377== Command: ./impl/assignment_3Vars_test110/assignment_3Vars_test110.out
==12377== Parent PID: 12124
==12377== 
==12377== 
==12377== HEAP SUMMARY:
==12377==     in use at exit: 0 bytes in 0 blocks
==12377==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12377== 
==12377== All heap blocks were freed -- no leaks are possible
==12377== 
==12377== For counts of detected and suppressed errors, rerun with: -v
==12377== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test111 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test111/assignment_3Vars_test111.c)
The Valgrind memory detector as below:
==12392== Memcheck, a memory error detector
==12392== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12392== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12392== Command: ./impl/assignment_3Vars_test111/assignment_3Vars_test111.out
==12392== Parent PID: 12124
==12392== 
==12392== 
==12392== HEAP SUMMARY:
==12392==     in use at exit: 0 bytes in 0 blocks
==12392==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12392== 
==12392== All heap blocks were freed -- no leaks are possible
==12392== 
==12392== For counts of detected and suppressed errors, rerun with: -v
==12392== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test112 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test112/assignment_3Vars_test112.c)
The Valgrind memory detector as below:
==12413== Memcheck, a memory error detector
==12413== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12413== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12413== Command: ./impl/assignment_3Vars_test112/assignment_3Vars_test112.out
==12413== Parent PID: 12124
==12413== 
==12413== 
==12413== HEAP SUMMARY:
==12413==     in use at exit: 0 bytes in 0 blocks
==12413==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12413== 
==12413== All heap blocks were freed -- no leaks are possible
==12413== 
==12413== For counts of detected and suppressed errors, rerun with: -v
==12413== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test113 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test113/assignment_3Vars_test113.c)
The Valgrind memory detector as below:
==12428== Memcheck, a memory error detector
==12428== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12428== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12428== Command: ./impl/assignment_3Vars_test113/assignment_3Vars_test113.out
==12428== Parent PID: 12124
==12428== 
==12428== 
==12428== HEAP SUMMARY:
==12428==     in use at exit: 0 bytes in 0 blocks
==12428==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12428== 
==12428== All heap blocks were freed -- no leaks are possible
==12428== 
==12428== For counts of detected and suppressed errors, rerun with: -v
==12428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test114 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test114/assignment_3Vars_test114.c)
The Valgrind memory detector as below:
==12443== Memcheck, a memory error detector
==12443== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12443== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12443== Command: ./impl/assignment_3Vars_test114/assignment_3Vars_test114.out
==12443== Parent PID: 12124
==12443== 
==12443== 
==12443== HEAP SUMMARY:
==12443==     in use at exit: 0 bytes in 0 blocks
==12443==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12443== 
==12443== All heap blocks were freed -- no leaks are possible
==12443== 
==12443== For counts of detected and suppressed errors, rerun with: -v
==12443== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test115 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test115/assignment_3Vars_test115.c)
The Valgrind memory detector as below:
==12460== Memcheck, a memory error detector
==12460== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12460== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12460== Command: ./impl/assignment_3Vars_test115/assignment_3Vars_test115.out
==12460== Parent PID: 12124
==12460== 
==12460== 
==12460== HEAP SUMMARY:
==12460==     in use at exit: 0 bytes in 0 blocks
==12460==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12460== 
==12460== All heap blocks were freed -- no leaks are possible
==12460== 
==12460== For counts of detected and suppressed errors, rerun with: -v
==12460== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test116 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test116/assignment_3Vars_test116.c)
The Valgrind memory detector as below:
==12478== Memcheck, a memory error detector
==12478== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12478== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12478== Command: ./impl/assignment_3Vars_test116/assignment_3Vars_test116.out
==12478== Parent PID: 12124
==12478== 
==12478== 
==12478== HEAP SUMMARY:
==12478==     in use at exit: 0 bytes in 0 blocks
==12478==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12478== 
==12478== All heap blocks were freed -- no leaks are possible
==12478== 
==12478== For counts of detected and suppressed errors, rerun with: -v
==12478== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test117 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test117/assignment_3Vars_test117.c)
The Valgrind memory detector as below:
==12494== Memcheck, a memory error detector
==12494== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12494== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12494== Command: ./impl/assignment_3Vars_test117/assignment_3Vars_test117.out
==12494== Parent PID: 12124
==12494== 
==12494== 
==12494== HEAP SUMMARY:
==12494==     in use at exit: 0 bytes in 0 blocks
==12494==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12494== 
==12494== All heap blocks were freed -- no leaks are possible
==12494== 
==12494== For counts of detected and suppressed errors, rerun with: -v
==12494== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test118 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test118/assignment_3Vars_test118.c)
The Valgrind memory detector as below:
==12509== Memcheck, a memory error detector
==12509== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12509== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12509== Command: ./impl/assignment_3Vars_test118/assignment_3Vars_test118.out
==12509== Parent PID: 12124
==12509== 
==12509== 
==12509== HEAP SUMMARY:
==12509==     in use at exit: 0 bytes in 0 blocks
==12509==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12509== 
==12509== All heap blocks were freed -- no leaks are possible
==12509== 
==12509== For counts of detected and suppressed errors, rerun with: -v
==12509== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test119 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test119/assignment_3Vars_test119.c)
The Valgrind memory detector as below:
==12524== Memcheck, a memory error detector
==12524== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12524== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12524== Command: ./impl/assignment_3Vars_test119/assignment_3Vars_test119.out
==12524== Parent PID: 12124
==12524== 
==12524== 
==12524== HEAP SUMMARY:
==12524==     in use at exit: 0 bytes in 0 blocks
==12524==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12524== 
==12524== All heap blocks were freed -- no leaks are possible
==12524== 
==12524== For counts of detected and suppressed errors, rerun with: -v
==12524== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test12 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test12/assignment_3Vars_test12.c)
The Valgrind memory detector as below:
==12540== Memcheck, a memory error detector
==12540== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12540== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12540== Command: ./impl/assignment_3Vars_test12/assignment_3Vars_test12.out
==12540== Parent PID: 12124
==12540== 
==12540== 
==12540== HEAP SUMMARY:
==12540==     in use at exit: 0 bytes in 0 blocks
==12540==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12540== 
==12540== All heap blocks were freed -- no leaks are possible
==12540== 
==12540== For counts of detected and suppressed errors, rerun with: -v
==12540== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test120 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test120/assignment_3Vars_test120.c)
The Valgrind memory detector as below:
==12556== Memcheck, a memory error detector
==12556== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12556== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12556== Command: ./impl/assignment_3Vars_test120/assignment_3Vars_test120.out
==12556== Parent PID: 12124
==12556== 
==12556== 
==12556== HEAP SUMMARY:
==12556==     in use at exit: 0 bytes in 0 blocks
==12556==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12556== 
==12556== All heap blocks were freed -- no leaks are possible
==12556== 
==12556== For counts of detected and suppressed errors, rerun with: -v
==12556== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test121 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test121/assignment_3Vars_test121.c)
The Valgrind memory detector as below:
==12571== Memcheck, a memory error detector
==12571== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12571== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12571== Command: ./impl/assignment_3Vars_test121/assignment_3Vars_test121.out
==12571== Parent PID: 12124
==12571== 
==12571== 
==12571== HEAP SUMMARY:
==12571==     in use at exit: 0 bytes in 0 blocks
==12571==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12571== 
==12571== All heap blocks were freed -- no leaks are possible
==12571== 
==12571== For counts of detected and suppressed errors, rerun with: -v
==12571== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test122 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test122/assignment_3Vars_test122.c)
The Valgrind memory detector as below:
==12587== Memcheck, a memory error detector
==12587== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12587== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12587== Command: ./impl/assignment_3Vars_test122/assignment_3Vars_test122.out
==12587== Parent PID: 12124
==12587== 
==12587== 
==12587== HEAP SUMMARY:
==12587==     in use at exit: 0 bytes in 0 blocks
==12587==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12587== 
==12587== All heap blocks were freed -- no leaks are possible
==12587== 
==12587== For counts of detected and suppressed errors, rerun with: -v
==12587== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test123 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test123/assignment_3Vars_test123.c)
The Valgrind memory detector as below:
==12603== Memcheck, a memory error detector
==12603== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12603== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12603== Command: ./impl/assignment_3Vars_test123/assignment_3Vars_test123.out
==12603== Parent PID: 12124
==12603== 
==12603== 
==12603== HEAP SUMMARY:
==12603==     in use at exit: 0 bytes in 0 blocks
==12603==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12603== 
==12603== All heap blocks were freed -- no leaks are possible
==12603== 
==12603== For counts of detected and suppressed errors, rerun with: -v
==12603== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test124 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test124/assignment_3Vars_test124.c)
The Valgrind memory detector as below:
==12618== Memcheck, a memory error detector
==12618== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12618== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12618== Command: ./impl/assignment_3Vars_test124/assignment_3Vars_test124.out
==12618== Parent PID: 12124
==12618== 
==12618== 
==12618== HEAP SUMMARY:
==12618==     in use at exit: 0 bytes in 0 blocks
==12618==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12618== 
==12618== All heap blocks were freed -- no leaks are possible
==12618== 
==12618== For counts of detected and suppressed errors, rerun with: -v
==12618== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test125 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test125/assignment_3Vars_test125.c)
The Valgrind memory detector as below:
==12633== Memcheck, a memory error detector
==12633== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12633== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12633== Command: ./impl/assignment_3Vars_test125/assignment_3Vars_test125.out
==12633== Parent PID: 12124
==12633== 
==12633== 
==12633== HEAP SUMMARY:
==12633==     in use at exit: 0 bytes in 0 blocks
==12633==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12633== 
==12633== All heap blocks were freed -- no leaks are possible
==12633== 
==12633== For counts of detected and suppressed errors, rerun with: -v
==12633== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test126 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test126/assignment_3Vars_test126.c)
The Valgrind memory detector as below:
==12648== Memcheck, a memory error detector
==12648== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12648== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12648== Command: ./impl/assignment_3Vars_test126/assignment_3Vars_test126.out
==12648== Parent PID: 12124
==12648== 
==12648== 
==12648== HEAP SUMMARY:
==12648==     in use at exit: 0 bytes in 0 blocks
==12648==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12648== 
==12648== All heap blocks were freed -- no leaks are possible
==12648== 
==12648== For counts of detected and suppressed errors, rerun with: -v
==12648== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test127 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test127/assignment_3Vars_test127.c)
The Valgrind memory detector as below:
==12664== Memcheck, a memory error detector
==12664== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12664== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12664== Command: ./impl/assignment_3Vars_test127/assignment_3Vars_test127.out
==12664== Parent PID: 12124
==12664== 
==12664== 
==12664== HEAP SUMMARY:
==12664==     in use at exit: 0 bytes in 0 blocks
==12664==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12664== 
==12664== All heap blocks were freed -- no leaks are possible
==12664== 
==12664== For counts of detected and suppressed errors, rerun with: -v
==12664== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test128 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test128/assignment_3Vars_test128.c)
The Valgrind memory detector as below:
==12679== Memcheck, a memory error detector
==12679== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12679== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12679== Command: ./impl/assignment_3Vars_test128/assignment_3Vars_test128.out
==12679== Parent PID: 12124
==12679== 
==12679== 
==12679== HEAP SUMMARY:
==12679==     in use at exit: 0 bytes in 0 blocks
==12679==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12679== 
==12679== All heap blocks were freed -- no leaks are possible
==12679== 
==12679== For counts of detected and suppressed errors, rerun with: -v
==12679== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test129 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test129/assignment_3Vars_test129.c)
The Valgrind memory detector as below:
==12694== Memcheck, a memory error detector
==12694== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12694== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12694== Command: ./impl/assignment_3Vars_test129/assignment_3Vars_test129.out
==12694== Parent PID: 12124
==12694== 
==12694== 
==12694== HEAP SUMMARY:
==12694==     in use at exit: 0 bytes in 0 blocks
==12694==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12694== 
==12694== All heap blocks were freed -- no leaks are possible
==12694== 
==12694== For counts of detected and suppressed errors, rerun with: -v
==12694== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test13 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test13/assignment_3Vars_test13.c)
The Valgrind memory detector as below:
==12709== Memcheck, a memory error detector
==12709== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12709== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12709== Command: ./impl/assignment_3Vars_test13/assignment_3Vars_test13.out
==12709== Parent PID: 12124
==12709== 
==12709== 
==12709== HEAP SUMMARY:
==12709==     in use at exit: 0 bytes in 0 blocks
==12709==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12709== 
==12709== All heap blocks were freed -- no leaks are possible
==12709== 
==12709== For counts of detected and suppressed errors, rerun with: -v
==12709== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test130 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test130/assignment_3Vars_test130.c)
The Valgrind memory detector as below:
==12726== Memcheck, a memory error detector
==12726== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12726== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12726== Command: ./impl/assignment_3Vars_test130/assignment_3Vars_test130.out
==12726== Parent PID: 12124
==12726== 
==12726== 
==12726== HEAP SUMMARY:
==12726==     in use at exit: 0 bytes in 0 blocks
==12726==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12726== 
==12726== All heap blocks were freed -- no leaks are possible
==12726== 
==12726== For counts of detected and suppressed errors, rerun with: -v
==12726== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test131 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test131/assignment_3Vars_test131.c)
The Valgrind memory detector as below:
==12741== Memcheck, a memory error detector
==12741== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12741== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12741== Command: ./impl/assignment_3Vars_test131/assignment_3Vars_test131.out
==12741== Parent PID: 12124
==12741== 
==12741== 
==12741== HEAP SUMMARY:
==12741==     in use at exit: 0 bytes in 0 blocks
==12741==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12741== 
==12741== All heap blocks were freed -- no leaks are possible
==12741== 
==12741== For counts of detected and suppressed errors, rerun with: -v
==12741== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test132 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test132/assignment_3Vars_test132.c)
The Valgrind memory detector as below:
==12756== Memcheck, a memory error detector
==12756== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12756== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12756== Command: ./impl/assignment_3Vars_test132/assignment_3Vars_test132.out
==12756== Parent PID: 12124
==12756== 
==12756== 
==12756== HEAP SUMMARY:
==12756==     in use at exit: 0 bytes in 0 blocks
==12756==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12756== 
==12756== All heap blocks were freed -- no leaks are possible
==12756== 
==12756== For counts of detected and suppressed errors, rerun with: -v
==12756== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test133 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test133/assignment_3Vars_test133.c)
The Valgrind memory detector as below:
==12775== Memcheck, a memory error detector
==12775== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12775== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12775== Command: ./impl/assignment_3Vars_test133/assignment_3Vars_test133.out
==12775== Parent PID: 12124
==12775== 
==12775== 
==12775== HEAP SUMMARY:
==12775==     in use at exit: 0 bytes in 0 blocks
==12775==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12775== 
==12775== All heap blocks were freed -- no leaks are possible
==12775== 
==12775== For counts of detected and suppressed errors, rerun with: -v
==12775== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test134 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test134/assignment_3Vars_test134.c)
The Valgrind memory detector as below:
==12792== Memcheck, a memory error detector
==12792== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12792== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12792== Command: ./impl/assignment_3Vars_test134/assignment_3Vars_test134.out
==12792== Parent PID: 12124
==12792== 
==12792== 
==12792== HEAP SUMMARY:
==12792==     in use at exit: 0 bytes in 0 blocks
==12792==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12792== 
==12792== All heap blocks were freed -- no leaks are possible
==12792== 
==12792== For counts of detected and suppressed errors, rerun with: -v
==12792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test135 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test135/assignment_3Vars_test135.c)
The Valgrind memory detector as below:
==12807== Memcheck, a memory error detector
==12807== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12807== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12807== Command: ./impl/assignment_3Vars_test135/assignment_3Vars_test135.out
==12807== Parent PID: 12124
==12807== 
==12807== 
==12807== HEAP SUMMARY:
==12807==     in use at exit: 0 bytes in 0 blocks
==12807==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12807== 
==12807== All heap blocks were freed -- no leaks are possible
==12807== 
==12807== For counts of detected and suppressed errors, rerun with: -v
==12807== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test136 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test136/assignment_3Vars_test136.c)
The Valgrind memory detector as below:
==12822== Memcheck, a memory error detector
==12822== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12822== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12822== Command: ./impl/assignment_3Vars_test136/assignment_3Vars_test136.out
==12822== Parent PID: 12124
==12822== 
==12822== 
==12822== HEAP SUMMARY:
==12822==     in use at exit: 0 bytes in 0 blocks
==12822==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12822== 
==12822== All heap blocks were freed -- no leaks are possible
==12822== 
==12822== For counts of detected and suppressed errors, rerun with: -v
==12822== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test137 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test137/assignment_3Vars_test137.c)
The Valgrind memory detector as below:
==12837== Memcheck, a memory error detector
==12837== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12837== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12837== Command: ./impl/assignment_3Vars_test137/assignment_3Vars_test137.out
==12837== Parent PID: 12124
==12837== 
==12837== 
==12837== HEAP SUMMARY:
==12837==     in use at exit: 0 bytes in 0 blocks
==12837==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12837== 
==12837== All heap blocks were freed -- no leaks are possible
==12837== 
==12837== For counts of detected and suppressed errors, rerun with: -v
==12837== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test138 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test138/assignment_3Vars_test138.c)
The Valgrind memory detector as below:
==12853== Memcheck, a memory error detector
==12853== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12853== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12853== Command: ./impl/assignment_3Vars_test138/assignment_3Vars_test138.out
==12853== Parent PID: 12124
==12853== 
==12853== 
==12853== HEAP SUMMARY:
==12853==     in use at exit: 0 bytes in 0 blocks
==12853==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12853== 
==12853== All heap blocks were freed -- no leaks are possible
==12853== 
==12853== For counts of detected and suppressed errors, rerun with: -v
==12853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test139 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test139/assignment_3Vars_test139.c)
The Valgrind memory detector as below:
==12868== Memcheck, a memory error detector
==12868== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12868== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12868== Command: ./impl/assignment_3Vars_test139/assignment_3Vars_test139.out
==12868== Parent PID: 12124
==12868== 
==12868== 
==12868== HEAP SUMMARY:
==12868==     in use at exit: 0 bytes in 0 blocks
==12868==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12868== 
==12868== All heap blocks were freed -- no leaks are possible
==12868== 
==12868== For counts of detected and suppressed errors, rerun with: -v
==12868== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test14 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test14/assignment_3Vars_test14.c)
The Valgrind memory detector as below:
==12883== Memcheck, a memory error detector
==12883== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12883== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12883== Command: ./impl/assignment_3Vars_test14/assignment_3Vars_test14.out
==12883== Parent PID: 12124
==12883== 
==12883== 
==12883== HEAP SUMMARY:
==12883==     in use at exit: 0 bytes in 0 blocks
==12883==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12883== 
==12883== All heap blocks were freed -- no leaks are possible
==12883== 
==12883== For counts of detected and suppressed errors, rerun with: -v
==12883== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test140 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test140/assignment_3Vars_test140.c)
The Valgrind memory detector as below:
==12899== Memcheck, a memory error detector
==12899== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12899== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12899== Command: ./impl/assignment_3Vars_test140/assignment_3Vars_test140.out
==12899== Parent PID: 12124
==12899== 
==12899== 
==12899== HEAP SUMMARY:
==12899==     in use at exit: 0 bytes in 0 blocks
==12899==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12899== 
==12899== All heap blocks were freed -- no leaks are possible
==12899== 
==12899== For counts of detected and suppressed errors, rerun with: -v
==12899== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test141 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test141/assignment_3Vars_test141.c)
The Valgrind memory detector as below:
==12915== Memcheck, a memory error detector
==12915== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12915== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12915== Command: ./impl/assignment_3Vars_test141/assignment_3Vars_test141.out
==12915== Parent PID: 12124
==12915== 
==12915== 
==12915== HEAP SUMMARY:
==12915==     in use at exit: 0 bytes in 0 blocks
==12915==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12915== 
==12915== All heap blocks were freed -- no leaks are possible
==12915== 
==12915== For counts of detected and suppressed errors, rerun with: -v
==12915== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test142 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test142/assignment_3Vars_test142.c)
The Valgrind memory detector as below:
==12930== Memcheck, a memory error detector
==12930== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12930== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12930== Command: ./impl/assignment_3Vars_test142/assignment_3Vars_test142.out
==12930== Parent PID: 12124
==12930== 
==12930== 
==12930== HEAP SUMMARY:
==12930==     in use at exit: 0 bytes in 0 blocks
==12930==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12930== 
==12930== All heap blocks were freed -- no leaks are possible
==12930== 
==12930== For counts of detected and suppressed errors, rerun with: -v
==12930== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test143 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test143/assignment_3Vars_test143.c)
The Valgrind memory detector as below:
==12945== Memcheck, a memory error detector
==12945== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12945== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12945== Command: ./impl/assignment_3Vars_test143/assignment_3Vars_test143.out
==12945== Parent PID: 12124
==12945== 
==12945== 
==12945== HEAP SUMMARY:
==12945==     in use at exit: 0 bytes in 0 blocks
==12945==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12945== 
==12945== All heap blocks were freed -- no leaks are possible
==12945== 
==12945== For counts of detected and suppressed errors, rerun with: -v
==12945== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test144 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test144/assignment_3Vars_test144.c)
The Valgrind memory detector as below:
==12960== Memcheck, a memory error detector
==12960== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12960== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12960== Command: ./impl/assignment_3Vars_test144/assignment_3Vars_test144.out
==12960== Parent PID: 12124
==12960== 
==12960== 
==12960== HEAP SUMMARY:
==12960==     in use at exit: 0 bytes in 0 blocks
==12960==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12960== 
==12960== All heap blocks were freed -- no leaks are possible
==12960== 
==12960== For counts of detected and suppressed errors, rerun with: -v
==12960== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test145 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test145/assignment_3Vars_test145.c)
The Valgrind memory detector as below:
==12976== Memcheck, a memory error detector
==12976== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12976== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12976== Command: ./impl/assignment_3Vars_test145/assignment_3Vars_test145.out
==12976== Parent PID: 12124
==12976== 
==12976== 
==12976== HEAP SUMMARY:
==12976==     in use at exit: 0 bytes in 0 blocks
==12976==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12976== 
==12976== All heap blocks were freed -- no leaks are possible
==12976== 
==12976== For counts of detected and suppressed errors, rerun with: -v
==12976== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test146 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test146/assignment_3Vars_test146.c)
The Valgrind memory detector as below:
==12991== Memcheck, a memory error detector
==12991== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12991== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==12991== Command: ./impl/assignment_3Vars_test146/assignment_3Vars_test146.out
==12991== Parent PID: 12124
==12991== 
==12991== 
==12991== HEAP SUMMARY:
==12991==     in use at exit: 0 bytes in 0 blocks
==12991==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==12991== 
==12991== All heap blocks were freed -- no leaks are possible
==12991== 
==12991== For counts of detected and suppressed errors, rerun with: -v
==12991== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test147 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test147/assignment_3Vars_test147.c)
The Valgrind memory detector as below:
==13006== Memcheck, a memory error detector
==13006== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13006== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13006== Command: ./impl/assignment_3Vars_test147/assignment_3Vars_test147.out
==13006== Parent PID: 12124
==13006== 
==13006== 
==13006== HEAP SUMMARY:
==13006==     in use at exit: 0 bytes in 0 blocks
==13006==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13006== 
==13006== All heap blocks were freed -- no leaks are possible
==13006== 
==13006== For counts of detected and suppressed errors, rerun with: -v
==13006== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test148 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test148/assignment_3Vars_test148.c)
The Valgrind memory detector as below:
==13021== Memcheck, a memory error detector
==13021== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13021== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13021== Command: ./impl/assignment_3Vars_test148/assignment_3Vars_test148.out
==13021== Parent PID: 12124
==13021== 
==13021== 
==13021== HEAP SUMMARY:
==13021==     in use at exit: 0 bytes in 0 blocks
==13021==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13021== 
==13021== All heap blocks were freed -- no leaks are possible
==13021== 
==13021== For counts of detected and suppressed errors, rerun with: -v
==13021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test149 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test149/assignment_3Vars_test149.c)
The Valgrind memory detector as below:
==13037== Memcheck, a memory error detector
==13037== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13037== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13037== Command: ./impl/assignment_3Vars_test149/assignment_3Vars_test149.out
==13037== Parent PID: 12124
==13037== 
==13037== 
==13037== HEAP SUMMARY:
==13037==     in use at exit: 0 bytes in 0 blocks
==13037==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13037== 
==13037== All heap blocks were freed -- no leaks are possible
==13037== 
==13037== For counts of detected and suppressed errors, rerun with: -v
==13037== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test15 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test15/assignment_3Vars_test15.c)
The Valgrind memory detector as below:
==13052== Memcheck, a memory error detector
==13052== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13052== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13052== Command: ./impl/assignment_3Vars_test15/assignment_3Vars_test15.out
==13052== Parent PID: 12124
==13052== 
==13052== 
==13052== HEAP SUMMARY:
==13052==     in use at exit: 0 bytes in 0 blocks
==13052==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13052== 
==13052== All heap blocks were freed -- no leaks are possible
==13052== 
==13052== For counts of detected and suppressed errors, rerun with: -v
==13052== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test150 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test150/assignment_3Vars_test150.c)
The Valgrind memory detector as below:
==13068== Memcheck, a memory error detector
==13068== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13068== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13068== Command: ./impl/assignment_3Vars_test150/assignment_3Vars_test150.out
==13068== Parent PID: 12124
==13068== 
==13068== 
==13068== HEAP SUMMARY:
==13068==     in use at exit: 0 bytes in 0 blocks
==13068==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13068== 
==13068== All heap blocks were freed -- no leaks are possible
==13068== 
==13068== For counts of detected and suppressed errors, rerun with: -v
==13068== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test151 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test151/assignment_3Vars_test151.c)
The Valgrind memory detector as below:
==13083== Memcheck, a memory error detector
==13083== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13083== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13083== Command: ./impl/assignment_3Vars_test151/assignment_3Vars_test151.out
==13083== Parent PID: 12124
==13083== 
==13083== 
==13083== HEAP SUMMARY:
==13083==     in use at exit: 0 bytes in 0 blocks
==13083==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13083== 
==13083== All heap blocks were freed -- no leaks are possible
==13083== 
==13083== For counts of detected and suppressed errors, rerun with: -v
==13083== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test152 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test152/assignment_3Vars_test152.c)
The Valgrind memory detector as below:
==13100== Memcheck, a memory error detector
==13100== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13100== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13100== Command: ./impl/assignment_3Vars_test152/assignment_3Vars_test152.out
==13100== Parent PID: 12124
==13100== 
==13100== 
==13100== HEAP SUMMARY:
==13100==     in use at exit: 0 bytes in 0 blocks
==13100==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13100== 
==13100== All heap blocks were freed -- no leaks are possible
==13100== 
==13100== For counts of detected and suppressed errors, rerun with: -v
==13100== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test153 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test153/assignment_3Vars_test153.c)
The Valgrind memory detector as below:
==13115== Memcheck, a memory error detector
==13115== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13115== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13115== Command: ./impl/assignment_3Vars_test153/assignment_3Vars_test153.out
==13115== Parent PID: 12124
==13115== 
==13115== 
==13115== HEAP SUMMARY:
==13115==     in use at exit: 0 bytes in 0 blocks
==13115==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13115== 
==13115== All heap blocks were freed -- no leaks are possible
==13115== 
==13115== For counts of detected and suppressed errors, rerun with: -v
==13115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test154 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test154/assignment_3Vars_test154.c)
The Valgrind memory detector as below:
==13130== Memcheck, a memory error detector
==13130== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13130== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13130== Command: ./impl/assignment_3Vars_test154/assignment_3Vars_test154.out
==13130== Parent PID: 12124
==13130== 
==13130== 
==13130== HEAP SUMMARY:
==13130==     in use at exit: 0 bytes in 0 blocks
==13130==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13130== 
==13130== All heap blocks were freed -- no leaks are possible
==13130== 
==13130== For counts of detected and suppressed errors, rerun with: -v
==13130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test155 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test155/assignment_3Vars_test155.c)
The Valgrind memory detector as below:
==13145== Memcheck, a memory error detector
==13145== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13145== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13145== Command: ./impl/assignment_3Vars_test155/assignment_3Vars_test155.out
==13145== Parent PID: 12124
==13145== 
==13145== 
==13145== HEAP SUMMARY:
==13145==     in use at exit: 0 bytes in 0 blocks
==13145==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13145== 
==13145== All heap blocks were freed -- no leaks are possible
==13145== 
==13145== For counts of detected and suppressed errors, rerun with: -v
==13145== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test156 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test156/assignment_3Vars_test156.c)
The Valgrind memory detector as below:
==13161== Memcheck, a memory error detector
==13161== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13161== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13161== Command: ./impl/assignment_3Vars_test156/assignment_3Vars_test156.out
==13161== Parent PID: 12124
==13161== 
==13161== 
==13161== HEAP SUMMARY:
==13161==     in use at exit: 0 bytes in 0 blocks
==13161==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13161== 
==13161== All heap blocks were freed -- no leaks are possible
==13161== 
==13161== For counts of detected and suppressed errors, rerun with: -v
==13161== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test157 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test157/assignment_3Vars_test157.c)
The Valgrind memory detector as below:
==13176== Memcheck, a memory error detector
==13176== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13176== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13176== Command: ./impl/assignment_3Vars_test157/assignment_3Vars_test157.out
==13176== Parent PID: 12124
==13176== 
==13176== 
==13176== HEAP SUMMARY:
==13176==     in use at exit: 0 bytes in 0 blocks
==13176==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13176== 
==13176== All heap blocks were freed -- no leaks are possible
==13176== 
==13176== For counts of detected and suppressed errors, rerun with: -v
==13176== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test158 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test158/assignment_3Vars_test158.c)
The Valgrind memory detector as below:
==13191== Memcheck, a memory error detector
==13191== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13191== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13191== Command: ./impl/assignment_3Vars_test158/assignment_3Vars_test158.out
==13191== Parent PID: 12124
==13191== 
==13191== 
==13191== HEAP SUMMARY:
==13191==     in use at exit: 0 bytes in 0 blocks
==13191==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13191== 
==13191== All heap blocks were freed -- no leaks are possible
==13191== 
==13191== For counts of detected and suppressed errors, rerun with: -v
==13191== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test159 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test159/assignment_3Vars_test159.c)
The Valgrind memory detector as below:
==13207== Memcheck, a memory error detector
==13207== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13207== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13207== Command: ./impl/assignment_3Vars_test159/assignment_3Vars_test159.out
==13207== Parent PID: 12124
==13207== 
==13207== 
==13207== HEAP SUMMARY:
==13207==     in use at exit: 0 bytes in 0 blocks
==13207==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13207== 
==13207== All heap blocks were freed -- no leaks are possible
==13207== 
==13207== For counts of detected and suppressed errors, rerun with: -v
==13207== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test16 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test16/assignment_3Vars_test16.c)
The Valgrind memory detector as below:
==13222== Memcheck, a memory error detector
==13222== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13222== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13222== Command: ./impl/assignment_3Vars_test16/assignment_3Vars_test16.out
==13222== Parent PID: 12124
==13222== 
==13222== 
==13222== HEAP SUMMARY:
==13222==     in use at exit: 0 bytes in 0 blocks
==13222==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13222== 
==13222== All heap blocks were freed -- no leaks are possible
==13222== 
==13222== For counts of detected and suppressed errors, rerun with: -v
==13222== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test160 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test160/assignment_3Vars_test160.c)
The Valgrind memory detector as below:
==13238== Memcheck, a memory error detector
==13238== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13238== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13238== Command: ./impl/assignment_3Vars_test160/assignment_3Vars_test160.out
==13238== Parent PID: 12124
==13238== 
==13238== 
==13238== HEAP SUMMARY:
==13238==     in use at exit: 0 bytes in 0 blocks
==13238==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13238== 
==13238== All heap blocks were freed -- no leaks are possible
==13238== 
==13238== For counts of detected and suppressed errors, rerun with: -v
==13238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test161 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test161/assignment_3Vars_test161.c)
The Valgrind memory detector as below:
==13253== Memcheck, a memory error detector
==13253== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13253== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13253== Command: ./impl/assignment_3Vars_test161/assignment_3Vars_test161.out
==13253== Parent PID: 12124
==13253== 
==13253== 
==13253== HEAP SUMMARY:
==13253==     in use at exit: 0 bytes in 0 blocks
==13253==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13253== 
==13253== All heap blocks were freed -- no leaks are possible
==13253== 
==13253== For counts of detected and suppressed errors, rerun with: -v
==13253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test162 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test162/assignment_3Vars_test162.c)
The Valgrind memory detector as below:
==13268== Memcheck, a memory error detector
==13268== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13268== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13268== Command: ./impl/assignment_3Vars_test162/assignment_3Vars_test162.out
==13268== Parent PID: 12124
==13268== 
==13268== 
==13268== HEAP SUMMARY:
==13268==     in use at exit: 0 bytes in 0 blocks
==13268==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13268== 
==13268== All heap blocks were freed -- no leaks are possible
==13268== 
==13268== For counts of detected and suppressed errors, rerun with: -v
==13268== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test163 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test163/assignment_3Vars_test163.c)
The Valgrind memory detector as below:
==13283== Memcheck, a memory error detector
==13283== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13283== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13283== Command: ./impl/assignment_3Vars_test163/assignment_3Vars_test163.out
==13283== Parent PID: 12124
==13283== 
==13283== 
==13283== HEAP SUMMARY:
==13283==     in use at exit: 0 bytes in 0 blocks
==13283==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13283== 
==13283== All heap blocks were freed -- no leaks are possible
==13283== 
==13283== For counts of detected and suppressed errors, rerun with: -v
==13283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test164 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test164/assignment_3Vars_test164.c)
The Valgrind memory detector as below:
==13299== Memcheck, a memory error detector
==13299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13299== Command: ./impl/assignment_3Vars_test164/assignment_3Vars_test164.out
==13299== Parent PID: 12124
==13299== 
==13299== 
==13299== HEAP SUMMARY:
==13299==     in use at exit: 0 bytes in 0 blocks
==13299==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13299== 
==13299== All heap blocks were freed -- no leaks are possible
==13299== 
==13299== For counts of detected and suppressed errors, rerun with: -v
==13299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test165 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test165/assignment_3Vars_test165.c)
The Valgrind memory detector as below:
==13315== Memcheck, a memory error detector
==13315== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13315== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13315== Command: ./impl/assignment_3Vars_test165/assignment_3Vars_test165.out
==13315== Parent PID: 12124
==13315== 
==13315== 
==13315== HEAP SUMMARY:
==13315==     in use at exit: 0 bytes in 0 blocks
==13315==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13315== 
==13315== All heap blocks were freed -- no leaks are possible
==13315== 
==13315== For counts of detected and suppressed errors, rerun with: -v
==13315== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test166 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test166/assignment_3Vars_test166.c)
The Valgrind memory detector as below:
==13330== Memcheck, a memory error detector
==13330== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13330== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13330== Command: ./impl/assignment_3Vars_test166/assignment_3Vars_test166.out
==13330== Parent PID: 12124
==13330== 
==13330== 
==13330== HEAP SUMMARY:
==13330==     in use at exit: 0 bytes in 0 blocks
==13330==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13330== 
==13330== All heap blocks were freed -- no leaks are possible
==13330== 
==13330== For counts of detected and suppressed errors, rerun with: -v
==13330== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test167 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test167/assignment_3Vars_test167.c)
The Valgrind memory detector as below:
==13345== Memcheck, a memory error detector
==13345== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13345== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13345== Command: ./impl/assignment_3Vars_test167/assignment_3Vars_test167.out
==13345== Parent PID: 12124
==13345== 
==13345== 
==13345== HEAP SUMMARY:
==13345==     in use at exit: 0 bytes in 0 blocks
==13345==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13345== 
==13345== All heap blocks were freed -- no leaks are possible
==13345== 
==13345== For counts of detected and suppressed errors, rerun with: -v
==13345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test168 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test168/assignment_3Vars_test168.c)
The Valgrind memory detector as below:
==13361== Memcheck, a memory error detector
==13361== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13361== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13361== Command: ./impl/assignment_3Vars_test168/assignment_3Vars_test168.out
==13361== Parent PID: 12124
==13361== 
==13361== 
==13361== HEAP SUMMARY:
==13361==     in use at exit: 0 bytes in 0 blocks
==13361==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13361== 
==13361== All heap blocks were freed -- no leaks are possible
==13361== 
==13361== For counts of detected and suppressed errors, rerun with: -v
==13361== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test169 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test169/assignment_3Vars_test169.c)
The Valgrind memory detector as below:
==13376== Memcheck, a memory error detector
==13376== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13376== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13376== Command: ./impl/assignment_3Vars_test169/assignment_3Vars_test169.out
==13376== Parent PID: 12124
==13376== 
==13376== 
==13376== HEAP SUMMARY:
==13376==     in use at exit: 0 bytes in 0 blocks
==13376==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13376== 
==13376== All heap blocks were freed -- no leaks are possible
==13376== 
==13376== For counts of detected and suppressed errors, rerun with: -v
==13376== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test17 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test17/assignment_3Vars_test17.c)
The Valgrind memory detector as below:
==13391== Memcheck, a memory error detector
==13391== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13391== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13391== Command: ./impl/assignment_3Vars_test17/assignment_3Vars_test17.out
==13391== Parent PID: 12124
==13391== 
==13391== 
==13391== HEAP SUMMARY:
==13391==     in use at exit: 0 bytes in 0 blocks
==13391==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13391== 
==13391== All heap blocks were freed -- no leaks are possible
==13391== 
==13391== For counts of detected and suppressed errors, rerun with: -v
==13391== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test170 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test170/assignment_3Vars_test170.c)
The Valgrind memory detector as below:
==13406== Memcheck, a memory error detector
==13406== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13406== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13406== Command: ./impl/assignment_3Vars_test170/assignment_3Vars_test170.out
==13406== Parent PID: 12124
==13406== 
==13406== 
==13406== HEAP SUMMARY:
==13406==     in use at exit: 0 bytes in 0 blocks
==13406==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13406== 
==13406== All heap blocks were freed -- no leaks are possible
==13406== 
==13406== For counts of detected and suppressed errors, rerun with: -v
==13406== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test171 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test171/assignment_3Vars_test171.c)
The Valgrind memory detector as below:
==13423== Memcheck, a memory error detector
==13423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13423== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13423== Command: ./impl/assignment_3Vars_test171/assignment_3Vars_test171.out
==13423== Parent PID: 12124
==13423== 
==13423== 
==13423== HEAP SUMMARY:
==13423==     in use at exit: 0 bytes in 0 blocks
==13423==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13423== 
==13423== All heap blocks were freed -- no leaks are possible
==13423== 
==13423== For counts of detected and suppressed errors, rerun with: -v
==13423== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test172 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test172/assignment_3Vars_test172.c)
The Valgrind memory detector as below:
==13438== Memcheck, a memory error detector
==13438== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13438== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13438== Command: ./impl/assignment_3Vars_test172/assignment_3Vars_test172.out
==13438== Parent PID: 12124
==13438== 
==13438== 
==13438== HEAP SUMMARY:
==13438==     in use at exit: 0 bytes in 0 blocks
==13438==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13438== 
==13438== All heap blocks were freed -- no leaks are possible
==13438== 
==13438== For counts of detected and suppressed errors, rerun with: -v
==13438== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test173 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test173/assignment_3Vars_test173.c)
The Valgrind memory detector as below:
==13454== Memcheck, a memory error detector
==13454== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13454== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13454== Command: ./impl/assignment_3Vars_test173/assignment_3Vars_test173.out
==13454== Parent PID: 12124
==13454== 
==13454== 
==13454== HEAP SUMMARY:
==13454==     in use at exit: 0 bytes in 0 blocks
==13454==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13454== 
==13454== All heap blocks were freed -- no leaks are possible
==13454== 
==13454== For counts of detected and suppressed errors, rerun with: -v
==13454== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test174 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test174/assignment_3Vars_test174.c)
The Valgrind memory detector as below:
==13469== Memcheck, a memory error detector
==13469== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13469== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13469== Command: ./impl/assignment_3Vars_test174/assignment_3Vars_test174.out
==13469== Parent PID: 12124
==13469== 
==13469== 
==13469== HEAP SUMMARY:
==13469==     in use at exit: 0 bytes in 0 blocks
==13469==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13469== 
==13469== All heap blocks were freed -- no leaks are possible
==13469== 
==13469== For counts of detected and suppressed errors, rerun with: -v
==13469== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test175 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test175/assignment_3Vars_test175.c)
The Valgrind memory detector as below:
==13485== Memcheck, a memory error detector
==13485== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13485== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13485== Command: ./impl/assignment_3Vars_test175/assignment_3Vars_test175.out
==13485== Parent PID: 12124
==13485== 
==13485== 
==13485== HEAP SUMMARY:
==13485==     in use at exit: 0 bytes in 0 blocks
==13485==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13485== 
==13485== All heap blocks were freed -- no leaks are possible
==13485== 
==13485== For counts of detected and suppressed errors, rerun with: -v
==13485== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test176 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test176/assignment_3Vars_test176.c)
The Valgrind memory detector as below:
==13500== Memcheck, a memory error detector
==13500== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13500== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13500== Command: ./impl/assignment_3Vars_test176/assignment_3Vars_test176.out
==13500== Parent PID: 12124
==13500== 
==13500== 
==13500== HEAP SUMMARY:
==13500==     in use at exit: 0 bytes in 0 blocks
==13500==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13500== 
==13500== All heap blocks were freed -- no leaks are possible
==13500== 
==13500== For counts of detected and suppressed errors, rerun with: -v
==13500== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test177 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test177/assignment_3Vars_test177.c)
The Valgrind memory detector as below:
==13517== Memcheck, a memory error detector
==13517== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13517== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13517== Command: ./impl/assignment_3Vars_test177/assignment_3Vars_test177.out
==13517== Parent PID: 12124
==13517== 
==13517== 
==13517== HEAP SUMMARY:
==13517==     in use at exit: 0 bytes in 0 blocks
==13517==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13517== 
==13517== All heap blocks were freed -- no leaks are possible
==13517== 
==13517== For counts of detected and suppressed errors, rerun with: -v
==13517== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test178 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test178/assignment_3Vars_test178.c)
The Valgrind memory detector as below:
==13533== Memcheck, a memory error detector
==13533== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13533== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13533== Command: ./impl/assignment_3Vars_test178/assignment_3Vars_test178.out
==13533== Parent PID: 12124
==13533== 
==13533== 
==13533== HEAP SUMMARY:
==13533==     in use at exit: 0 bytes in 0 blocks
==13533==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13533== 
==13533== All heap blocks were freed -- no leaks are possible
==13533== 
==13533== For counts of detected and suppressed errors, rerun with: -v
==13533== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test179 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test179/assignment_3Vars_test179.c)
The Valgrind memory detector as below:
==13549== Memcheck, a memory error detector
==13549== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13549== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13549== Command: ./impl/assignment_3Vars_test179/assignment_3Vars_test179.out
==13549== Parent PID: 12124
==13549== 
==13549== 
==13549== HEAP SUMMARY:
==13549==     in use at exit: 0 bytes in 0 blocks
==13549==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13549== 
==13549== All heap blocks were freed -- no leaks are possible
==13549== 
==13549== For counts of detected and suppressed errors, rerun with: -v
==13549== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test18 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test18/assignment_3Vars_test18.c)
The Valgrind memory detector as below:
==13564== Memcheck, a memory error detector
==13564== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13564== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13564== Command: ./impl/assignment_3Vars_test18/assignment_3Vars_test18.out
==13564== Parent PID: 12124
==13564== 
==13564== 
==13564== HEAP SUMMARY:
==13564==     in use at exit: 0 bytes in 0 blocks
==13564==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13564== 
==13564== All heap blocks were freed -- no leaks are possible
==13564== 
==13564== For counts of detected and suppressed errors, rerun with: -v
==13564== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test180 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test180/assignment_3Vars_test180.c)
The Valgrind memory detector as below:
==13579== Memcheck, a memory error detector
==13579== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13579== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13579== Command: ./impl/assignment_3Vars_test180/assignment_3Vars_test180.out
==13579== Parent PID: 12124
==13579== 
==13579== 
==13579== HEAP SUMMARY:
==13579==     in use at exit: 0 bytes in 0 blocks
==13579==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13579== 
==13579== All heap blocks were freed -- no leaks are possible
==13579== 
==13579== For counts of detected and suppressed errors, rerun with: -v
==13579== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test181 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test181/assignment_3Vars_test181.c)
The Valgrind memory detector as below:
==13594== Memcheck, a memory error detector
==13594== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13594== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13594== Command: ./impl/assignment_3Vars_test181/assignment_3Vars_test181.out
==13594== Parent PID: 12124
==13594== 
==13594== 
==13594== HEAP SUMMARY:
==13594==     in use at exit: 0 bytes in 0 blocks
==13594==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13594== 
==13594== All heap blocks were freed -- no leaks are possible
==13594== 
==13594== For counts of detected and suppressed errors, rerun with: -v
==13594== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test182 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test182/assignment_3Vars_test182.c)
The Valgrind memory detector as below:
==13610== Memcheck, a memory error detector
==13610== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13610== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13610== Command: ./impl/assignment_3Vars_test182/assignment_3Vars_test182.out
==13610== Parent PID: 12124
==13610== 
==13610== 
==13610== HEAP SUMMARY:
==13610==     in use at exit: 0 bytes in 0 blocks
==13610==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13610== 
==13610== All heap blocks were freed -- no leaks are possible
==13610== 
==13610== For counts of detected and suppressed errors, rerun with: -v
==13610== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test183 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test183/assignment_3Vars_test183.c)
The Valgrind memory detector as below:
==13625== Memcheck, a memory error detector
==13625== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13625== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13625== Command: ./impl/assignment_3Vars_test183/assignment_3Vars_test183.out
==13625== Parent PID: 12124
==13625== 
==13625== 
==13625== HEAP SUMMARY:
==13625==     in use at exit: 0 bytes in 0 blocks
==13625==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13625== 
==13625== All heap blocks were freed -- no leaks are possible
==13625== 
==13625== For counts of detected and suppressed errors, rerun with: -v
==13625== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test184 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test184/assignment_3Vars_test184.c)
The Valgrind memory detector as below:
==13640== Memcheck, a memory error detector
==13640== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13640== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13640== Command: ./impl/assignment_3Vars_test184/assignment_3Vars_test184.out
==13640== Parent PID: 12124
==13640== 
==13640== 
==13640== HEAP SUMMARY:
==13640==     in use at exit: 0 bytes in 0 blocks
==13640==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13640== 
==13640== All heap blocks were freed -- no leaks are possible
==13640== 
==13640== For counts of detected and suppressed errors, rerun with: -v
==13640== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test185 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test185/assignment_3Vars_test185.c)
The Valgrind memory detector as below:
==13655== Memcheck, a memory error detector
==13655== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13655== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13655== Command: ./impl/assignment_3Vars_test185/assignment_3Vars_test185.out
==13655== Parent PID: 12124
==13655== 
==13655== 
==13655== HEAP SUMMARY:
==13655==     in use at exit: 0 bytes in 0 blocks
==13655==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13655== 
==13655== All heap blocks were freed -- no leaks are possible
==13655== 
==13655== For counts of detected and suppressed errors, rerun with: -v
==13655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test186 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test186/assignment_3Vars_test186.c)
The Valgrind memory detector as below:
==13671== Memcheck, a memory error detector
==13671== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13671== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13671== Command: ./impl/assignment_3Vars_test186/assignment_3Vars_test186.out
==13671== Parent PID: 12124
==13671== 
==13671== 
==13671== HEAP SUMMARY:
==13671==     in use at exit: 0 bytes in 0 blocks
==13671==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13671== 
==13671== All heap blocks were freed -- no leaks are possible
==13671== 
==13671== For counts of detected and suppressed errors, rerun with: -v
==13671== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test187 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test187/assignment_3Vars_test187.c)
The Valgrind memory detector as below:
==13686== Memcheck, a memory error detector
==13686== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13686== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13686== Command: ./impl/assignment_3Vars_test187/assignment_3Vars_test187.out
==13686== Parent PID: 12124
==13686== 
==13686== 
==13686== HEAP SUMMARY:
==13686==     in use at exit: 0 bytes in 0 blocks
==13686==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13686== 
==13686== All heap blocks were freed -- no leaks are possible
==13686== 
==13686== For counts of detected and suppressed errors, rerun with: -v
==13686== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test188 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test188/assignment_3Vars_test188.c)
The Valgrind memory detector as below:
==13702== Memcheck, a memory error detector
==13702== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13702== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13702== Command: ./impl/assignment_3Vars_test188/assignment_3Vars_test188.out
==13702== Parent PID: 12124
==13702== 
==13702== 
==13702== HEAP SUMMARY:
==13702==     in use at exit: 0 bytes in 0 blocks
==13702==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13702== 
==13702== All heap blocks were freed -- no leaks are possible
==13702== 
==13702== For counts of detected and suppressed errors, rerun with: -v
==13702== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test189 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test189/assignment_3Vars_test189.c)
The Valgrind memory detector as below:
==13717== Memcheck, a memory error detector
==13717== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13717== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13717== Command: ./impl/assignment_3Vars_test189/assignment_3Vars_test189.out
==13717== Parent PID: 12124
==13717== 
==13717== 
==13717== HEAP SUMMARY:
==13717==     in use at exit: 0 bytes in 0 blocks
==13717==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13717== 
==13717== All heap blocks were freed -- no leaks are possible
==13717== 
==13717== For counts of detected and suppressed errors, rerun with: -v
==13717== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test19 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test19/assignment_3Vars_test19.c)
The Valgrind memory detector as below:
==13734== Memcheck, a memory error detector
==13734== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13734== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13734== Command: ./impl/assignment_3Vars_test19/assignment_3Vars_test19.out
==13734== Parent PID: 12124
==13734== 
==13734== 
==13734== HEAP SUMMARY:
==13734==     in use at exit: 0 bytes in 0 blocks
==13734==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13734== 
==13734== All heap blocks were freed -- no leaks are possible
==13734== 
==13734== For counts of detected and suppressed errors, rerun with: -v
==13734== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test190 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test190/assignment_3Vars_test190.c)
The Valgrind memory detector as below:
==13749== Memcheck, a memory error detector
==13749== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13749== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13749== Command: ./impl/assignment_3Vars_test190/assignment_3Vars_test190.out
==13749== Parent PID: 12124
==13749== 
==13749== 
==13749== HEAP SUMMARY:
==13749==     in use at exit: 0 bytes in 0 blocks
==13749==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13749== 
==13749== All heap blocks were freed -- no leaks are possible
==13749== 
==13749== For counts of detected and suppressed errors, rerun with: -v
==13749== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test191 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test191/assignment_3Vars_test191.c)
The Valgrind memory detector as below:
==13764== Memcheck, a memory error detector
==13764== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13764== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13764== Command: ./impl/assignment_3Vars_test191/assignment_3Vars_test191.out
==13764== Parent PID: 12124
==13764== 
==13764== 
==13764== HEAP SUMMARY:
==13764==     in use at exit: 0 bytes in 0 blocks
==13764==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13764== 
==13764== All heap blocks were freed -- no leaks are possible
==13764== 
==13764== For counts of detected and suppressed errors, rerun with: -v
==13764== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test192 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test192/assignment_3Vars_test192.c)
The Valgrind memory detector as below:
==13779== Memcheck, a memory error detector
==13779== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13779== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13779== Command: ./impl/assignment_3Vars_test192/assignment_3Vars_test192.out
==13779== Parent PID: 12124
==13779== 
==13779== 
==13779== HEAP SUMMARY:
==13779==     in use at exit: 0 bytes in 0 blocks
==13779==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13779== 
==13779== All heap blocks were freed -- no leaks are possible
==13779== 
==13779== For counts of detected and suppressed errors, rerun with: -v
==13779== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test193 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test193/assignment_3Vars_test193.c)
The Valgrind memory detector as below:
==13795== Memcheck, a memory error detector
==13795== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13795== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13795== Command: ./impl/assignment_3Vars_test193/assignment_3Vars_test193.out
==13795== Parent PID: 12124
==13795== 
==13795== 
==13795== HEAP SUMMARY:
==13795==     in use at exit: 0 bytes in 0 blocks
==13795==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13795== 
==13795== All heap blocks were freed -- no leaks are possible
==13795== 
==13795== For counts of detected and suppressed errors, rerun with: -v
==13795== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test194 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test194/assignment_3Vars_test194.c)
The Valgrind memory detector as below:
==13810== Memcheck, a memory error detector
==13810== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13810== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13810== Command: ./impl/assignment_3Vars_test194/assignment_3Vars_test194.out
==13810== Parent PID: 12124
==13810== 
==13810== 
==13810== HEAP SUMMARY:
==13810==     in use at exit: 0 bytes in 0 blocks
==13810==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13810== 
==13810== All heap blocks were freed -- no leaks are possible
==13810== 
==13810== For counts of detected and suppressed errors, rerun with: -v
==13810== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test195 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test195/assignment_3Vars_test195.c)
The Valgrind memory detector as below:
==13825== Memcheck, a memory error detector
==13825== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13825== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13825== Command: ./impl/assignment_3Vars_test195/assignment_3Vars_test195.out
==13825== Parent PID: 12124
==13825== 
==13825== 
==13825== HEAP SUMMARY:
==13825==     in use at exit: 0 bytes in 0 blocks
==13825==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13825== 
==13825== All heap blocks were freed -- no leaks are possible
==13825== 
==13825== For counts of detected and suppressed errors, rerun with: -v
==13825== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test196 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test196/assignment_3Vars_test196.c)
The Valgrind memory detector as below:
==13841== Memcheck, a memory error detector
==13841== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13841== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13841== Command: ./impl/assignment_3Vars_test196/assignment_3Vars_test196.out
==13841== Parent PID: 12124
==13841== 
==13841== 
==13841== HEAP SUMMARY:
==13841==     in use at exit: 0 bytes in 0 blocks
==13841==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13841== 
==13841== All heap blocks were freed -- no leaks are possible
==13841== 
==13841== For counts of detected and suppressed errors, rerun with: -v
==13841== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test197 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test197/assignment_3Vars_test197.c)
The Valgrind memory detector as below:
==13856== Memcheck, a memory error detector
==13856== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13856== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13856== Command: ./impl/assignment_3Vars_test197/assignment_3Vars_test197.out
==13856== Parent PID: 12124
==13856== 
==13856== 
==13856== HEAP SUMMARY:
==13856==     in use at exit: 0 bytes in 0 blocks
==13856==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13856== 
==13856== All heap blocks were freed -- no leaks are possible
==13856== 
==13856== For counts of detected and suppressed errors, rerun with: -v
==13856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test198 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test198/assignment_3Vars_test198.c)
The Valgrind memory detector as below:
==13871== Memcheck, a memory error detector
==13871== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13871== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13871== Command: ./impl/assignment_3Vars_test198/assignment_3Vars_test198.out
==13871== Parent PID: 12124
==13871== 
==13871== 
==13871== HEAP SUMMARY:
==13871==     in use at exit: 0 bytes in 0 blocks
==13871==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13871== 
==13871== All heap blocks were freed -- no leaks are possible
==13871== 
==13871== For counts of detected and suppressed errors, rerun with: -v
==13871== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test199 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test199/assignment_3Vars_test199.c)
The Valgrind memory detector as below:
==13886== Memcheck, a memory error detector
==13886== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13886== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13886== Command: ./impl/assignment_3Vars_test199/assignment_3Vars_test199.out
==13886== Parent PID: 12124
==13886== 
==13886== 
==13886== HEAP SUMMARY:
==13886==     in use at exit: 0 bytes in 0 blocks
==13886==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13886== 
==13886== All heap blocks were freed -- no leaks are possible
==13886== 
==13886== For counts of detected and suppressed errors, rerun with: -v
==13886== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test2 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test2/assignment_3Vars_test2.c)
The Valgrind memory detector as below:
==13902== Memcheck, a memory error detector
==13902== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13902== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13902== Command: ./impl/assignment_3Vars_test2/assignment_3Vars_test2.out
==13902== Parent PID: 12124
==13902== 
==13902== 
==13902== HEAP SUMMARY:
==13902==     in use at exit: 0 bytes in 0 blocks
==13902==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13902== 
==13902== All heap blocks were freed -- no leaks are possible
==13902== 
==13902== For counts of detected and suppressed errors, rerun with: -v
==13902== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test20 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test20/assignment_3Vars_test20.c)
The Valgrind memory detector as below:
==13917== Memcheck, a memory error detector
==13917== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13917== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13917== Command: ./impl/assignment_3Vars_test20/assignment_3Vars_test20.out
==13917== Parent PID: 12124
==13917== 
==13917== 
==13917== HEAP SUMMARY:
==13917==     in use at exit: 0 bytes in 0 blocks
==13917==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13917== 
==13917== All heap blocks were freed -- no leaks are possible
==13917== 
==13917== For counts of detected and suppressed errors, rerun with: -v
==13917== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test200 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test200/assignment_3Vars_test200.c)
The Valgrind memory detector as below:
==13932== Memcheck, a memory error detector
==13932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13932== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13932== Command: ./impl/assignment_3Vars_test200/assignment_3Vars_test200.out
==13932== Parent PID: 12124
==13932== 
==13932== 
==13932== HEAP SUMMARY:
==13932==     in use at exit: 0 bytes in 0 blocks
==13932==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13932== 
==13932== All heap blocks were freed -- no leaks are possible
==13932== 
==13932== For counts of detected and suppressed errors, rerun with: -v
==13932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test201 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test201/assignment_3Vars_test201.c)
The Valgrind memory detector as below:
==13947== Memcheck, a memory error detector
==13947== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13947== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13947== Command: ./impl/assignment_3Vars_test201/assignment_3Vars_test201.out
==13947== Parent PID: 12124
==13947== 
==13947== 
==13947== HEAP SUMMARY:
==13947==     in use at exit: 0 bytes in 0 blocks
==13947==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13947== 
==13947== All heap blocks were freed -- no leaks are possible
==13947== 
==13947== For counts of detected and suppressed errors, rerun with: -v
==13947== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test202 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test202/assignment_3Vars_test202.c)
The Valgrind memory detector as below:
==13963== Memcheck, a memory error detector
==13963== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13963== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13963== Command: ./impl/assignment_3Vars_test202/assignment_3Vars_test202.out
==13963== Parent PID: 12124
==13963== 
==13963== 
==13963== HEAP SUMMARY:
==13963==     in use at exit: 0 bytes in 0 blocks
==13963==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13963== 
==13963== All heap blocks were freed -- no leaks are possible
==13963== 
==13963== For counts of detected and suppressed errors, rerun with: -v
==13963== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test203 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test203/assignment_3Vars_test203.c)
The Valgrind memory detector as below:
==13978== Memcheck, a memory error detector
==13978== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13978== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13978== Command: ./impl/assignment_3Vars_test203/assignment_3Vars_test203.out
==13978== Parent PID: 12124
==13978== 
==13978== 
==13978== HEAP SUMMARY:
==13978==     in use at exit: 0 bytes in 0 blocks
==13978==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13978== 
==13978== All heap blocks were freed -- no leaks are possible
==13978== 
==13978== For counts of detected and suppressed errors, rerun with: -v
==13978== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test204 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test204/assignment_3Vars_test204.c)
The Valgrind memory detector as below:
==13993== Memcheck, a memory error detector
==13993== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13993== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13993== Command: ./impl/assignment_3Vars_test204/assignment_3Vars_test204.out
==13993== Parent PID: 12124
==13993== 
==13993== 
==13993== HEAP SUMMARY:
==13993==     in use at exit: 0 bytes in 0 blocks
==13993==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==13993== 
==13993== All heap blocks were freed -- no leaks are possible
==13993== 
==13993== For counts of detected and suppressed errors, rerun with: -v
==13993== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test205 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test205/assignment_3Vars_test205.c)
The Valgrind memory detector as below:
==14008== Memcheck, a memory error detector
==14008== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14008== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14008== Command: ./impl/assignment_3Vars_test205/assignment_3Vars_test205.out
==14008== Parent PID: 12124
==14008== 
==14008== 
==14008== HEAP SUMMARY:
==14008==     in use at exit: 0 bytes in 0 blocks
==14008==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14008== 
==14008== All heap blocks were freed -- no leaks are possible
==14008== 
==14008== For counts of detected and suppressed errors, rerun with: -v
==14008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test206 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test206/assignment_3Vars_test206.c)
The Valgrind memory detector as below:
==14025== Memcheck, a memory error detector
==14025== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14025== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14025== Command: ./impl/assignment_3Vars_test206/assignment_3Vars_test206.out
==14025== Parent PID: 12124
==14025== 
==14025== 
==14025== HEAP SUMMARY:
==14025==     in use at exit: 0 bytes in 0 blocks
==14025==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14025== 
==14025== All heap blocks were freed -- no leaks are possible
==14025== 
==14025== For counts of detected and suppressed errors, rerun with: -v
==14025== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test207 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test207/assignment_3Vars_test207.c)
The Valgrind memory detector as below:
==14040== Memcheck, a memory error detector
==14040== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14040== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14040== Command: ./impl/assignment_3Vars_test207/assignment_3Vars_test207.out
==14040== Parent PID: 12124
==14040== 
==14040== 
==14040== HEAP SUMMARY:
==14040==     in use at exit: 0 bytes in 0 blocks
==14040==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14040== 
==14040== All heap blocks were freed -- no leaks are possible
==14040== 
==14040== For counts of detected and suppressed errors, rerun with: -v
==14040== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test208 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test208/assignment_3Vars_test208.c)
The Valgrind memory detector as below:
==14055== Memcheck, a memory error detector
==14055== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14055== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14055== Command: ./impl/assignment_3Vars_test208/assignment_3Vars_test208.out
==14055== Parent PID: 12124
==14055== 
==14055== 
==14055== HEAP SUMMARY:
==14055==     in use at exit: 0 bytes in 0 blocks
==14055==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14055== 
==14055== All heap blocks were freed -- no leaks are possible
==14055== 
==14055== For counts of detected and suppressed errors, rerun with: -v
==14055== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test209 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test209/assignment_3Vars_test209.c)
The Valgrind memory detector as below:
==14070== Memcheck, a memory error detector
==14070== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14070== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14070== Command: ./impl/assignment_3Vars_test209/assignment_3Vars_test209.out
==14070== Parent PID: 12124
==14070== 
==14070== 
==14070== HEAP SUMMARY:
==14070==     in use at exit: 0 bytes in 0 blocks
==14070==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14070== 
==14070== All heap blocks were freed -- no leaks are possible
==14070== 
==14070== For counts of detected and suppressed errors, rerun with: -v
==14070== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test21 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test21/assignment_3Vars_test21.c)
The Valgrind memory detector as below:
==14086== Memcheck, a memory error detector
==14086== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14086== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14086== Command: ./impl/assignment_3Vars_test21/assignment_3Vars_test21.out
==14086== Parent PID: 12124
==14086== 
==14086== 
==14086== HEAP SUMMARY:
==14086==     in use at exit: 0 bytes in 0 blocks
==14086==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14086== 
==14086== All heap blocks were freed -- no leaks are possible
==14086== 
==14086== For counts of detected and suppressed errors, rerun with: -v
==14086== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test210 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test210/assignment_3Vars_test210.c)
The Valgrind memory detector as below:
==14101== Memcheck, a memory error detector
==14101== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14101== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14101== Command: ./impl/assignment_3Vars_test210/assignment_3Vars_test210.out
==14101== Parent PID: 12124
==14101== 
==14101== 
==14101== HEAP SUMMARY:
==14101==     in use at exit: 0 bytes in 0 blocks
==14101==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14101== 
==14101== All heap blocks were freed -- no leaks are possible
==14101== 
==14101== For counts of detected and suppressed errors, rerun with: -v
==14101== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test211 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test211/assignment_3Vars_test211.c)
The Valgrind memory detector as below:
==14116== Memcheck, a memory error detector
==14116== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14116== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14116== Command: ./impl/assignment_3Vars_test211/assignment_3Vars_test211.out
==14116== Parent PID: 12124
==14116== 
==14116== 
==14116== HEAP SUMMARY:
==14116==     in use at exit: 0 bytes in 0 blocks
==14116==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14116== 
==14116== All heap blocks were freed -- no leaks are possible
==14116== 
==14116== For counts of detected and suppressed errors, rerun with: -v
==14116== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test212 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test212/assignment_3Vars_test212.c)
The Valgrind memory detector as below:
==14131== Memcheck, a memory error detector
==14131== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14131== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14131== Command: ./impl/assignment_3Vars_test212/assignment_3Vars_test212.out
==14131== Parent PID: 12124
==14131== 
==14131== 
==14131== HEAP SUMMARY:
==14131==     in use at exit: 0 bytes in 0 blocks
==14131==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14131== 
==14131== All heap blocks were freed -- no leaks are possible
==14131== 
==14131== For counts of detected and suppressed errors, rerun with: -v
==14131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test213 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test213/assignment_3Vars_test213.c)
The Valgrind memory detector as below:
==14146== Memcheck, a memory error detector
==14146== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14146== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14146== Command: ./impl/assignment_3Vars_test213/assignment_3Vars_test213.out
==14146== Parent PID: 12124
==14146== 
==14146== 
==14146== HEAP SUMMARY:
==14146==     in use at exit: 0 bytes in 0 blocks
==14146==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14146== 
==14146== All heap blocks were freed -- no leaks are possible
==14146== 
==14146== For counts of detected and suppressed errors, rerun with: -v
==14146== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test214 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test214/assignment_3Vars_test214.c)
The Valgrind memory detector as below:
==14162== Memcheck, a memory error detector
==14162== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14162== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14162== Command: ./impl/assignment_3Vars_test214/assignment_3Vars_test214.out
==14162== Parent PID: 12124
==14162== 
==14162== 
==14162== HEAP SUMMARY:
==14162==     in use at exit: 0 bytes in 0 blocks
==14162==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14162== 
==14162== All heap blocks were freed -- no leaks are possible
==14162== 
==14162== For counts of detected and suppressed errors, rerun with: -v
==14162== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test215 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test215/assignment_3Vars_test215.c)
The Valgrind memory detector as below:
==14177== Memcheck, a memory error detector
==14177== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14177== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14177== Command: ./impl/assignment_3Vars_test215/assignment_3Vars_test215.out
==14177== Parent PID: 12124
==14177== 
==14177== 
==14177== HEAP SUMMARY:
==14177==     in use at exit: 0 bytes in 0 blocks
==14177==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14177== 
==14177== All heap blocks were freed -- no leaks are possible
==14177== 
==14177== For counts of detected and suppressed errors, rerun with: -v
==14177== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test216 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test216/assignment_3Vars_test216.c)
The Valgrind memory detector as below:
==14192== Memcheck, a memory error detector
==14192== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14192== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14192== Command: ./impl/assignment_3Vars_test216/assignment_3Vars_test216.out
==14192== Parent PID: 12124
==14192== 
==14192== 
==14192== HEAP SUMMARY:
==14192==     in use at exit: 0 bytes in 0 blocks
==14192==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14192== 
==14192== All heap blocks were freed -- no leaks are possible
==14192== 
==14192== For counts of detected and suppressed errors, rerun with: -v
==14192== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test217 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test217/assignment_3Vars_test217.c)
The Valgrind memory detector as below:
==14207== Memcheck, a memory error detector
==14207== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14207== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14207== Command: ./impl/assignment_3Vars_test217/assignment_3Vars_test217.out
==14207== Parent PID: 12124
==14207== 
==14207== 
==14207== HEAP SUMMARY:
==14207==     in use at exit: 0 bytes in 0 blocks
==14207==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14207== 
==14207== All heap blocks were freed -- no leaks are possible
==14207== 
==14207== For counts of detected and suppressed errors, rerun with: -v
==14207== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test218 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test218/assignment_3Vars_test218.c)
The Valgrind memory detector as below:
==14223== Memcheck, a memory error detector
==14223== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14223== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14223== Command: ./impl/assignment_3Vars_test218/assignment_3Vars_test218.out
==14223== Parent PID: 12124
==14223== 
==14223== 
==14223== HEAP SUMMARY:
==14223==     in use at exit: 0 bytes in 0 blocks
==14223==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14223== 
==14223== All heap blocks were freed -- no leaks are possible
==14223== 
==14223== For counts of detected and suppressed errors, rerun with: -v
==14223== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test219 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test219/assignment_3Vars_test219.c)
The Valgrind memory detector as below:
==14238== Memcheck, a memory error detector
==14238== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14238== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14238== Command: ./impl/assignment_3Vars_test219/assignment_3Vars_test219.out
==14238== Parent PID: 12124
==14238== 
==14238== 
==14238== HEAP SUMMARY:
==14238==     in use at exit: 0 bytes in 0 blocks
==14238==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14238== 
==14238== All heap blocks were freed -- no leaks are possible
==14238== 
==14238== For counts of detected and suppressed errors, rerun with: -v
==14238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test22 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test22/assignment_3Vars_test22.c)
The Valgrind memory detector as below:
==14253== Memcheck, a memory error detector
==14253== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14253== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14253== Command: ./impl/assignment_3Vars_test22/assignment_3Vars_test22.out
==14253== Parent PID: 12124
==14253== 
==14253== 
==14253== HEAP SUMMARY:
==14253==     in use at exit: 0 bytes in 0 blocks
==14253==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14253== 
==14253== All heap blocks were freed -- no leaks are possible
==14253== 
==14253== For counts of detected and suppressed errors, rerun with: -v
==14253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test220 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test220/assignment_3Vars_test220.c)
The Valgrind memory detector as below:
==14268== Memcheck, a memory error detector
==14268== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14268== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14268== Command: ./impl/assignment_3Vars_test220/assignment_3Vars_test220.out
==14268== Parent PID: 12124
==14268== 
==14268== 
==14268== HEAP SUMMARY:
==14268==     in use at exit: 0 bytes in 0 blocks
==14268==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14268== 
==14268== All heap blocks were freed -- no leaks are possible
==14268== 
==14268== For counts of detected and suppressed errors, rerun with: -v
==14268== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test221 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test221/assignment_3Vars_test221.c)
The Valgrind memory detector as below:
==14284== Memcheck, a memory error detector
==14284== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14284== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14284== Command: ./impl/assignment_3Vars_test221/assignment_3Vars_test221.out
==14284== Parent PID: 12124
==14284== 
==14284== 
==14284== HEAP SUMMARY:
==14284==     in use at exit: 0 bytes in 0 blocks
==14284==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14284== 
==14284== All heap blocks were freed -- no leaks are possible
==14284== 
==14284== For counts of detected and suppressed errors, rerun with: -v
==14284== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test222 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test222/assignment_3Vars_test222.c)
The Valgrind memory detector as below:
==14299== Memcheck, a memory error detector
==14299== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14299== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14299== Command: ./impl/assignment_3Vars_test222/assignment_3Vars_test222.out
==14299== Parent PID: 12124
==14299== 
==14299== 
==14299== HEAP SUMMARY:
==14299==     in use at exit: 0 bytes in 0 blocks
==14299==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14299== 
==14299== All heap blocks were freed -- no leaks are possible
==14299== 
==14299== For counts of detected and suppressed errors, rerun with: -v
==14299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test223 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test223/assignment_3Vars_test223.c)
The Valgrind memory detector as below:
==14314== Memcheck, a memory error detector
==14314== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14314== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14314== Command: ./impl/assignment_3Vars_test223/assignment_3Vars_test223.out
==14314== Parent PID: 12124
==14314== 
==14314== 
==14314== HEAP SUMMARY:
==14314==     in use at exit: 0 bytes in 0 blocks
==14314==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14314== 
==14314== All heap blocks were freed -- no leaks are possible
==14314== 
==14314== For counts of detected and suppressed errors, rerun with: -v
==14314== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test224 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test224/assignment_3Vars_test224.c)
The Valgrind memory detector as below:
==14331== Memcheck, a memory error detector
==14331== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14331== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14331== Command: ./impl/assignment_3Vars_test224/assignment_3Vars_test224.out
==14331== Parent PID: 12124
==14331== 
==14331== 
==14331== HEAP SUMMARY:
==14331==     in use at exit: 0 bytes in 0 blocks
==14331==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14331== 
==14331== All heap blocks were freed -- no leaks are possible
==14331== 
==14331== For counts of detected and suppressed errors, rerun with: -v
==14331== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test225 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test225/assignment_3Vars_test225.c)
The Valgrind memory detector as below:
==14348== Memcheck, a memory error detector
==14348== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14348== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14348== Command: ./impl/assignment_3Vars_test225/assignment_3Vars_test225.out
==14348== Parent PID: 12124
==14348== 
==14348== 
==14348== HEAP SUMMARY:
==14348==     in use at exit: 0 bytes in 0 blocks
==14348==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14348== 
==14348== All heap blocks were freed -- no leaks are possible
==14348== 
==14348== For counts of detected and suppressed errors, rerun with: -v
==14348== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test226 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test226/assignment_3Vars_test226.c)
The Valgrind memory detector as below:
==14363== Memcheck, a memory error detector
==14363== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14363== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14363== Command: ./impl/assignment_3Vars_test226/assignment_3Vars_test226.out
==14363== Parent PID: 12124
==14363== 
==14363== 
==14363== HEAP SUMMARY:
==14363==     in use at exit: 0 bytes in 0 blocks
==14363==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14363== 
==14363== All heap blocks were freed -- no leaks are possible
==14363== 
==14363== For counts of detected and suppressed errors, rerun with: -v
==14363== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test227 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test227/assignment_3Vars_test227.c)
The Valgrind memory detector as below:
==14378== Memcheck, a memory error detector
==14378== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14378== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14378== Command: ./impl/assignment_3Vars_test227/assignment_3Vars_test227.out
==14378== Parent PID: 12124
==14378== 
==14378== 
==14378== HEAP SUMMARY:
==14378==     in use at exit: 0 bytes in 0 blocks
==14378==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14378== 
==14378== All heap blocks were freed -- no leaks are possible
==14378== 
==14378== For counts of detected and suppressed errors, rerun with: -v
==14378== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test228 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test228/assignment_3Vars_test228.c)
The Valgrind memory detector as below:
==14393== Memcheck, a memory error detector
==14393== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14393== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14393== Command: ./impl/assignment_3Vars_test228/assignment_3Vars_test228.out
==14393== Parent PID: 12124
==14393== 
==14393== 
==14393== HEAP SUMMARY:
==14393==     in use at exit: 0 bytes in 0 blocks
==14393==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14393== 
==14393== All heap blocks were freed -- no leaks are possible
==14393== 
==14393== For counts of detected and suppressed errors, rerun with: -v
==14393== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test229 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test229/assignment_3Vars_test229.c)
The Valgrind memory detector as below:
==14409== Memcheck, a memory error detector
==14409== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14409== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14409== Command: ./impl/assignment_3Vars_test229/assignment_3Vars_test229.out
==14409== Parent PID: 12124
==14409== 
==14409== 
==14409== HEAP SUMMARY:
==14409==     in use at exit: 0 bytes in 0 blocks
==14409==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14409== 
==14409== All heap blocks were freed -- no leaks are possible
==14409== 
==14409== For counts of detected and suppressed errors, rerun with: -v
==14409== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test23 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test23/assignment_3Vars_test23.c)
The Valgrind memory detector as below:
==14424== Memcheck, a memory error detector
==14424== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14424== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14424== Command: ./impl/assignment_3Vars_test23/assignment_3Vars_test23.out
==14424== Parent PID: 12124
==14424== 
==14424== 
==14424== HEAP SUMMARY:
==14424==     in use at exit: 0 bytes in 0 blocks
==14424==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14424== 
==14424== All heap blocks were freed -- no leaks are possible
==14424== 
==14424== For counts of detected and suppressed errors, rerun with: -v
==14424== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test230 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test230/assignment_3Vars_test230.c)
The Valgrind memory detector as below:
==14439== Memcheck, a memory error detector
==14439== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14439== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14439== Command: ./impl/assignment_3Vars_test230/assignment_3Vars_test230.out
==14439== Parent PID: 12124
==14439== 
==14439== 
==14439== HEAP SUMMARY:
==14439==     in use at exit: 0 bytes in 0 blocks
==14439==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14439== 
==14439== All heap blocks were freed -- no leaks are possible
==14439== 
==14439== For counts of detected and suppressed errors, rerun with: -v
==14439== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test231 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test231/assignment_3Vars_test231.c)
The Valgrind memory detector as below:
==14455== Memcheck, a memory error detector
==14455== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14455== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14455== Command: ./impl/assignment_3Vars_test231/assignment_3Vars_test231.out
==14455== Parent PID: 12124
==14455== 
==14455== 
==14455== HEAP SUMMARY:
==14455==     in use at exit: 0 bytes in 0 blocks
==14455==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14455== 
==14455== All heap blocks were freed -- no leaks are possible
==14455== 
==14455== For counts of detected and suppressed errors, rerun with: -v
==14455== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test232 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test232/assignment_3Vars_test232.c)
The Valgrind memory detector as below:
==14470== Memcheck, a memory error detector
==14470== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14470== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14470== Command: ./impl/assignment_3Vars_test232/assignment_3Vars_test232.out
==14470== Parent PID: 12124
==14470== 
==14470== 
==14470== HEAP SUMMARY:
==14470==     in use at exit: 0 bytes in 0 blocks
==14470==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14470== 
==14470== All heap blocks were freed -- no leaks are possible
==14470== 
==14470== For counts of detected and suppressed errors, rerun with: -v
==14470== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test233 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test233/assignment_3Vars_test233.c)
The Valgrind memory detector as below:
==14485== Memcheck, a memory error detector
==14485== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14485== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14485== Command: ./impl/assignment_3Vars_test233/assignment_3Vars_test233.out
==14485== Parent PID: 12124
==14485== 
==14485== 
==14485== HEAP SUMMARY:
==14485==     in use at exit: 0 bytes in 0 blocks
==14485==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14485== 
==14485== All heap blocks were freed -- no leaks are possible
==14485== 
==14485== For counts of detected and suppressed errors, rerun with: -v
==14485== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test234 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test234/assignment_3Vars_test234.c)
The Valgrind memory detector as below:
==14500== Memcheck, a memory error detector
==14500== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14500== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14500== Command: ./impl/assignment_3Vars_test234/assignment_3Vars_test234.out
==14500== Parent PID: 12124
==14500== 
==14500== 
==14500== HEAP SUMMARY:
==14500==     in use at exit: 0 bytes in 0 blocks
==14500==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14500== 
==14500== All heap blocks were freed -- no leaks are possible
==14500== 
==14500== For counts of detected and suppressed errors, rerun with: -v
==14500== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test235 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test235/assignment_3Vars_test235.c)
The Valgrind memory detector as below:
==14516== Memcheck, a memory error detector
==14516== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14516== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14516== Command: ./impl/assignment_3Vars_test235/assignment_3Vars_test235.out
==14516== Parent PID: 12124
==14516== 
==14516== 
==14516== HEAP SUMMARY:
==14516==     in use at exit: 0 bytes in 0 blocks
==14516==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14516== 
==14516== All heap blocks were freed -- no leaks are possible
==14516== 
==14516== For counts of detected and suppressed errors, rerun with: -v
==14516== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test236 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test236/assignment_3Vars_test236.c)
The Valgrind memory detector as below:
==14531== Memcheck, a memory error detector
==14531== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14531== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14531== Command: ./impl/assignment_3Vars_test236/assignment_3Vars_test236.out
==14531== Parent PID: 12124
==14531== 
==14531== 
==14531== HEAP SUMMARY:
==14531==     in use at exit: 0 bytes in 0 blocks
==14531==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14531== 
==14531== All heap blocks were freed -- no leaks are possible
==14531== 
==14531== For counts of detected and suppressed errors, rerun with: -v
==14531== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test237 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test237/assignment_3Vars_test237.c)
The Valgrind memory detector as below:
==14546== Memcheck, a memory error detector
==14546== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14546== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14546== Command: ./impl/assignment_3Vars_test237/assignment_3Vars_test237.out
==14546== Parent PID: 12124
==14546== 
==14546== 
==14546== HEAP SUMMARY:
==14546==     in use at exit: 0 bytes in 0 blocks
==14546==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14546== 
==14546== All heap blocks were freed -- no leaks are possible
==14546== 
==14546== For counts of detected and suppressed errors, rerun with: -v
==14546== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test238 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test238/assignment_3Vars_test238.c)
The Valgrind memory detector as below:
==14561== Memcheck, a memory error detector
==14561== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14561== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14561== Command: ./impl/assignment_3Vars_test238/assignment_3Vars_test238.out
==14561== Parent PID: 12124
==14561== 
==14561== 
==14561== HEAP SUMMARY:
==14561==     in use at exit: 0 bytes in 0 blocks
==14561==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14561== 
==14561== All heap blocks were freed -- no leaks are possible
==14561== 
==14561== For counts of detected and suppressed errors, rerun with: -v
==14561== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test239 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test239/assignment_3Vars_test239.c)
The Valgrind memory detector as below:
==14576== Memcheck, a memory error detector
==14576== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14576== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14576== Command: ./impl/assignment_3Vars_test239/assignment_3Vars_test239.out
==14576== Parent PID: 12124
==14576== 
==14576== 
==14576== HEAP SUMMARY:
==14576==     in use at exit: 0 bytes in 0 blocks
==14576==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14576== 
==14576== All heap blocks were freed -- no leaks are possible
==14576== 
==14576== For counts of detected and suppressed errors, rerun with: -v
==14576== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test24 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test24/assignment_3Vars_test24.c)
The Valgrind memory detector as below:
==14592== Memcheck, a memory error detector
==14592== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14592== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14592== Command: ./impl/assignment_3Vars_test24/assignment_3Vars_test24.out
==14592== Parent PID: 12124
==14592== 
==14592== 
==14592== HEAP SUMMARY:
==14592==     in use at exit: 0 bytes in 0 blocks
==14592==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14592== 
==14592== All heap blocks were freed -- no leaks are possible
==14592== 
==14592== For counts of detected and suppressed errors, rerun with: -v
==14592== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test240 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:64 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test240/assignment_3Vars_test240.c)
The Valgrind memory detector as below:
==14607== Memcheck, a memory error detector
==14607== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14607== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14607== Command: ./impl/assignment_3Vars_test240/assignment_3Vars_test240.out
==14607== Parent PID: 12124
==14607== 
==14607== 
==14607== HEAP SUMMARY:
==14607==     in use at exit: 0 bytes in 0 blocks
==14607==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14607== 
==14607== All heap blocks were freed -- no leaks are possible
==14607== 
==14607== For counts of detected and suppressed errors, rerun with: -v
==14607== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test241 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test241/assignment_3Vars_test241.c)
The Valgrind memory detector as below:
==14622== Memcheck, a memory error detector
==14622== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14622== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14622== Command: ./impl/assignment_3Vars_test241/assignment_3Vars_test241.out
==14622== Parent PID: 12124
==14622== 
==14622== 
==14622== HEAP SUMMARY:
==14622==     in use at exit: 0 bytes in 0 blocks
==14622==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14622== 
==14622== All heap blocks were freed -- no leaks are possible
==14622== 
==14622== For counts of detected and suppressed errors, rerun with: -v
==14622== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test242 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test242/assignment_3Vars_test242.c)
The Valgrind memory detector as below:
==14637== Memcheck, a memory error detector
==14637== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14637== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14637== Command: ./impl/assignment_3Vars_test242/assignment_3Vars_test242.out
==14637== Parent PID: 12124
==14637== 
==14637== 
==14637== HEAP SUMMARY:
==14637==     in use at exit: 0 bytes in 0 blocks
==14637==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14637== 
==14637== All heap blocks were freed -- no leaks are possible
==14637== 
==14637== For counts of detected and suppressed errors, rerun with: -v
==14637== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test243 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test243/assignment_3Vars_test243.c)
The Valgrind memory detector as below:
==14698== Memcheck, a memory error detector
==14698== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14698== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14698== Command: ./impl/assignment_3Vars_test243/assignment_3Vars_test243.out
==14698== Parent PID: 12124
==14698== 
==14698== 
==14698== HEAP SUMMARY:
==14698==     in use at exit: 0 bytes in 0 blocks
==14698==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14698== 
==14698== All heap blocks were freed -- no leaks are possible
==14698== 
==14698== For counts of detected and suppressed errors, rerun with: -v
==14698== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test244 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test244/assignment_3Vars_test244.c)
The Valgrind memory detector as below:
==14713== Memcheck, a memory error detector
==14713== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14713== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14713== Command: ./impl/assignment_3Vars_test244/assignment_3Vars_test244.out
==14713== Parent PID: 12124
==14713== 
==14713== 
==14713== HEAP SUMMARY:
==14713==     in use at exit: 0 bytes in 0 blocks
==14713==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14713== 
==14713== All heap blocks were freed -- no leaks are possible
==14713== 
==14713== For counts of detected and suppressed errors, rerun with: -v
==14713== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test245 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test245/assignment_3Vars_test245.c)
The Valgrind memory detector as below:
==14728== Memcheck, a memory error detector
==14728== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14728== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14728== Command: ./impl/assignment_3Vars_test245/assignment_3Vars_test245.out
==14728== Parent PID: 12124
==14728== 
==14728== 
==14728== HEAP SUMMARY:
==14728==     in use at exit: 0 bytes in 0 blocks
==14728==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14728== 
==14728== All heap blocks were freed -- no leaks are possible
==14728== 
==14728== For counts of detected and suppressed errors, rerun with: -v
==14728== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test246 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test246/assignment_3Vars_test246.c)
The Valgrind memory detector as below:
==14744== Memcheck, a memory error detector
==14744== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14744== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14744== Command: ./impl/assignment_3Vars_test246/assignment_3Vars_test246.out
==14744== Parent PID: 12124
==14744== 
==14744== 
==14744== HEAP SUMMARY:
==14744==     in use at exit: 0 bytes in 0 blocks
==14744==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14744== 
==14744== All heap blocks were freed -- no leaks are possible
==14744== 
==14744== For counts of detected and suppressed errors, rerun with: -v
==14744== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test247 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test247/assignment_3Vars_test247.c)
The Valgrind memory detector as below:
==14759== Memcheck, a memory error detector
==14759== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14759== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14759== Command: ./impl/assignment_3Vars_test247/assignment_3Vars_test247.out
==14759== Parent PID: 12124
==14759== 
==14759== 
==14759== HEAP SUMMARY:
==14759==     in use at exit: 0 bytes in 0 blocks
==14759==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14759== 
==14759== All heap blocks were freed -- no leaks are possible
==14759== 
==14759== For counts of detected and suppressed errors, rerun with: -v
==14759== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test248 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test248/assignment_3Vars_test248.c)
The Valgrind memory detector as below:
==14774== Memcheck, a memory error detector
==14774== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14774== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14774== Command: ./impl/assignment_3Vars_test248/assignment_3Vars_test248.out
==14774== Parent PID: 12124
==14774== 
==14774== 
==14774== HEAP SUMMARY:
==14774==     in use at exit: 0 bytes in 0 blocks
==14774==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14774== 
==14774== All heap blocks were freed -- no leaks are possible
==14774== 
==14774== For counts of detected and suppressed errors, rerun with: -v
==14774== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test249 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test249/assignment_3Vars_test249.c)
The Valgrind memory detector as below:
==14789== Memcheck, a memory error detector
==14789== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14789== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14789== Command: ./impl/assignment_3Vars_test249/assignment_3Vars_test249.out
==14789== Parent PID: 12124
==14789== 
==14789== 
==14789== HEAP SUMMARY:
==14789==     in use at exit: 0 bytes in 0 blocks
==14789==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14789== 
==14789== All heap blocks were freed -- no leaks are possible
==14789== 
==14789== For counts of detected and suppressed errors, rerun with: -v
==14789== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test25 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test25/assignment_3Vars_test25.c)
The Valgrind memory detector as below:
==14804== Memcheck, a memory error detector
==14804== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14804== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14804== Command: ./impl/assignment_3Vars_test25/assignment_3Vars_test25.out
==14804== Parent PID: 12124
==14804== 
==14804== 
==14804== HEAP SUMMARY:
==14804==     in use at exit: 0 bytes in 0 blocks
==14804==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14804== 
==14804== All heap blocks were freed -- no leaks are possible
==14804== 
==14804== For counts of detected and suppressed errors, rerun with: -v
==14804== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test250 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test250/assignment_3Vars_test250.c)
The Valgrind memory detector as below:
==14820== Memcheck, a memory error detector
==14820== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14820== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14820== Command: ./impl/assignment_3Vars_test250/assignment_3Vars_test250.out
==14820== Parent PID: 12124
==14820== 
==14820== 
==14820== HEAP SUMMARY:
==14820==     in use at exit: 0 bytes in 0 blocks
==14820==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14820== 
==14820== All heap blocks were freed -- no leaks are possible
==14820== 
==14820== For counts of detected and suppressed errors, rerun with: -v
==14820== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test251 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test251/assignment_3Vars_test251.c)
The Valgrind memory detector as below:
==14835== Memcheck, a memory error detector
==14835== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14835== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14835== Command: ./impl/assignment_3Vars_test251/assignment_3Vars_test251.out
==14835== Parent PID: 12124
==14835== 
==14835== 
==14835== HEAP SUMMARY:
==14835==     in use at exit: 0 bytes in 0 blocks
==14835==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14835== 
==14835== All heap blocks were freed -- no leaks are possible
==14835== 
==14835== For counts of detected and suppressed errors, rerun with: -v
==14835== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test252 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test252/assignment_3Vars_test252.c)
The Valgrind memory detector as below:
==14850== Memcheck, a memory error detector
==14850== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14850== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14850== Command: ./impl/assignment_3Vars_test252/assignment_3Vars_test252.out
==14850== Parent PID: 12124
==14850== 
==14850== 
==14850== HEAP SUMMARY:
==14850==     in use at exit: 0 bytes in 0 blocks
==14850==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14850== 
==14850== All heap blocks were freed -- no leaks are possible
==14850== 
==14850== For counts of detected and suppressed errors, rerun with: -v
==14850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test253 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test253/assignment_3Vars_test253.c)
The Valgrind memory detector as below:
==14865== Memcheck, a memory error detector
==14865== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14865== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14865== Command: ./impl/assignment_3Vars_test253/assignment_3Vars_test253.out
==14865== Parent PID: 12124
==14865== 
==14865== 
==14865== HEAP SUMMARY:
==14865==     in use at exit: 0 bytes in 0 blocks
==14865==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14865== 
==14865== All heap blocks were freed -- no leaks are possible
==14865== 
==14865== For counts of detected and suppressed errors, rerun with: -v
==14865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test254 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test254/assignment_3Vars_test254.c)
The Valgrind memory detector as below:
==14881== Memcheck, a memory error detector
==14881== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14881== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14881== Command: ./impl/assignment_3Vars_test254/assignment_3Vars_test254.out
==14881== Parent PID: 12124
==14881== 
==14881== 
==14881== HEAP SUMMARY:
==14881==     in use at exit: 0 bytes in 0 blocks
==14881==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14881== 
==14881== All heap blocks were freed -- no leaks are possible
==14881== 
==14881== For counts of detected and suppressed errors, rerun with: -v
==14881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test255 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test255/assignment_3Vars_test255.c)
The Valgrind memory detector as below:
==14896== Memcheck, a memory error detector
==14896== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14896== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14896== Command: ./impl/assignment_3Vars_test255/assignment_3Vars_test255.out
==14896== Parent PID: 12124
==14896== 
==14896== 
==14896== HEAP SUMMARY:
==14896==     in use at exit: 0 bytes in 0 blocks
==14896==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14896== 
==14896== All heap blocks were freed -- no leaks are possible
==14896== 
==14896== For counts of detected and suppressed errors, rerun with: -v
==14896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test256 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test256/assignment_3Vars_test256.c)
The Valgrind memory detector as below:
==14911== Memcheck, a memory error detector
==14911== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14911== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14911== Command: ./impl/assignment_3Vars_test256/assignment_3Vars_test256.out
==14911== Parent PID: 12124
==14911== 
==14911== 
==14911== HEAP SUMMARY:
==14911==     in use at exit: 0 bytes in 0 blocks
==14911==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14911== 
==14911== All heap blocks were freed -- no leaks are possible
==14911== 
==14911== For counts of detected and suppressed errors, rerun with: -v
==14911== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test257 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test257/assignment_3Vars_test257.c)
The Valgrind memory detector as below:
==14927== Memcheck, a memory error detector
==14927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14927== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14927== Command: ./impl/assignment_3Vars_test257/assignment_3Vars_test257.out
==14927== Parent PID: 12124
==14927== 
==14927== 
==14927== HEAP SUMMARY:
==14927==     in use at exit: 0 bytes in 0 blocks
==14927==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14927== 
==14927== All heap blocks were freed -- no leaks are possible
==14927== 
==14927== For counts of detected and suppressed errors, rerun with: -v
==14927== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test258 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test258/assignment_3Vars_test258.c)
The Valgrind memory detector as below:
==14943== Memcheck, a memory error detector
==14943== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14943== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14943== Command: ./impl/assignment_3Vars_test258/assignment_3Vars_test258.out
==14943== Parent PID: 12124
==14943== 
==14943== 
==14943== HEAP SUMMARY:
==14943==     in use at exit: 0 bytes in 0 blocks
==14943==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14943== 
==14943== All heap blocks were freed -- no leaks are possible
==14943== 
==14943== For counts of detected and suppressed errors, rerun with: -v
==14943== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test259 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test259/assignment_3Vars_test259.c)
The Valgrind memory detector as below:
==14958== Memcheck, a memory error detector
==14958== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14958== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14958== Command: ./impl/assignment_3Vars_test259/assignment_3Vars_test259.out
==14958== Parent PID: 12124
==14958== 
==14958== 
==14958== HEAP SUMMARY:
==14958==     in use at exit: 0 bytes in 0 blocks
==14958==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14958== 
==14958== All heap blocks were freed -- no leaks are possible
==14958== 
==14958== For counts of detected and suppressed errors, rerun with: -v
==14958== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test26 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test26/assignment_3Vars_test26.c)
The Valgrind memory detector as below:
==14973== Memcheck, a memory error detector
==14973== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14973== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14973== Command: ./impl/assignment_3Vars_test26/assignment_3Vars_test26.out
==14973== Parent PID: 12124
==14973== 
==14973== 
==14973== HEAP SUMMARY:
==14973==     in use at exit: 0 bytes in 0 blocks
==14973==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14973== 
==14973== All heap blocks were freed -- no leaks are possible
==14973== 
==14973== For counts of detected and suppressed errors, rerun with: -v
==14973== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test260 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test260/assignment_3Vars_test260.c)
The Valgrind memory detector as below:
==14988== Memcheck, a memory error detector
==14988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14988== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==14988== Command: ./impl/assignment_3Vars_test260/assignment_3Vars_test260.out
==14988== Parent PID: 12124
==14988== 
==14988== 
==14988== HEAP SUMMARY:
==14988==     in use at exit: 0 bytes in 0 blocks
==14988==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==14988== 
==14988== All heap blocks were freed -- no leaks are possible
==14988== 
==14988== For counts of detected and suppressed errors, rerun with: -v
==14988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test261 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test261/assignment_3Vars_test261.c)
The Valgrind memory detector as below:
==15005== Memcheck, a memory error detector
==15005== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15005== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15005== Command: ./impl/assignment_3Vars_test261/assignment_3Vars_test261.out
==15005== Parent PID: 12124
==15005== 
==15005== 
==15005== HEAP SUMMARY:
==15005==     in use at exit: 0 bytes in 0 blocks
==15005==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15005== 
==15005== All heap blocks were freed -- no leaks are possible
==15005== 
==15005== For counts of detected and suppressed errors, rerun with: -v
==15005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test262 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test262/assignment_3Vars_test262.c)
The Valgrind memory detector as below:
==15020== Memcheck, a memory error detector
==15020== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15020== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15020== Command: ./impl/assignment_3Vars_test262/assignment_3Vars_test262.out
==15020== Parent PID: 12124
==15020== 
==15020== 
==15020== HEAP SUMMARY:
==15020==     in use at exit: 0 bytes in 0 blocks
==15020==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15020== 
==15020== All heap blocks were freed -- no leaks are possible
==15020== 
==15020== For counts of detected and suppressed errors, rerun with: -v
==15020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test263 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test263/assignment_3Vars_test263.c)
The Valgrind memory detector as below:
==15035== Memcheck, a memory error detector
==15035== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15035== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15035== Command: ./impl/assignment_3Vars_test263/assignment_3Vars_test263.out
==15035== Parent PID: 12124
==15035== 
==15035== 
==15035== HEAP SUMMARY:
==15035==     in use at exit: 0 bytes in 0 blocks
==15035==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15035== 
==15035== All heap blocks were freed -- no leaks are possible
==15035== 
==15035== For counts of detected and suppressed errors, rerun with: -v
==15035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test264 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test264/assignment_3Vars_test264.c)
The Valgrind memory detector as below:
==15050== Memcheck, a memory error detector
==15050== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15050== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15050== Command: ./impl/assignment_3Vars_test264/assignment_3Vars_test264.out
==15050== Parent PID: 12124
==15050== 
==15050== 
==15050== HEAP SUMMARY:
==15050==     in use at exit: 0 bytes in 0 blocks
==15050==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15050== 
==15050== All heap blocks were freed -- no leaks are possible
==15050== 
==15050== For counts of detected and suppressed errors, rerun with: -v
==15050== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test265 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test265/assignment_3Vars_test265.c)
The Valgrind memory detector as below:
==15066== Memcheck, a memory error detector
==15066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15066== Command: ./impl/assignment_3Vars_test265/assignment_3Vars_test265.out
==15066== Parent PID: 12124
==15066== 
==15066== 
==15066== HEAP SUMMARY:
==15066==     in use at exit: 0 bytes in 0 blocks
==15066==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15066== 
==15066== All heap blocks were freed -- no leaks are possible
==15066== 
==15066== For counts of detected and suppressed errors, rerun with: -v
==15066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test266 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test266/assignment_3Vars_test266.c)
The Valgrind memory detector as below:
==15081== Memcheck, a memory error detector
==15081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15081== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15081== Command: ./impl/assignment_3Vars_test266/assignment_3Vars_test266.out
==15081== Parent PID: 12124
==15081== 
==15081== 
==15081== HEAP SUMMARY:
==15081==     in use at exit: 0 bytes in 0 blocks
==15081==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15081== 
==15081== All heap blocks were freed -- no leaks are possible
==15081== 
==15081== For counts of detected and suppressed errors, rerun with: -v
==15081== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test267 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test267/assignment_3Vars_test267.c)
The Valgrind memory detector as below:
==15096== Memcheck, a memory error detector
==15096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15096== Command: ./impl/assignment_3Vars_test267/assignment_3Vars_test267.out
==15096== Parent PID: 12124
==15096== 
==15096== 
==15096== HEAP SUMMARY:
==15096==     in use at exit: 0 bytes in 0 blocks
==15096==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15096== 
==15096== All heap blocks were freed -- no leaks are possible
==15096== 
==15096== For counts of detected and suppressed errors, rerun with: -v
==15096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test268 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test268/assignment_3Vars_test268.c)
The Valgrind memory detector as below:
==15111== Memcheck, a memory error detector
==15111== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15111== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15111== Command: ./impl/assignment_3Vars_test268/assignment_3Vars_test268.out
==15111== Parent PID: 12124
==15111== 
==15111== 
==15111== HEAP SUMMARY:
==15111==     in use at exit: 0 bytes in 0 blocks
==15111==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15111== 
==15111== All heap blocks were freed -- no leaks are possible
==15111== 
==15111== For counts of detected and suppressed errors, rerun with: -v
==15111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test269 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test269/assignment_3Vars_test269.c)
The Valgrind memory detector as below:
==15127== Memcheck, a memory error detector
==15127== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15127== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15127== Command: ./impl/assignment_3Vars_test269/assignment_3Vars_test269.out
==15127== Parent PID: 12124
==15127== 
==15127== 
==15127== HEAP SUMMARY:
==15127==     in use at exit: 0 bytes in 0 blocks
==15127==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15127== 
==15127== All heap blocks were freed -- no leaks are possible
==15127== 
==15127== For counts of detected and suppressed errors, rerun with: -v
==15127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test27 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test27/assignment_3Vars_test27.c)
The Valgrind memory detector as below:
==15142== Memcheck, a memory error detector
==15142== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15142== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15142== Command: ./impl/assignment_3Vars_test27/assignment_3Vars_test27.out
==15142== Parent PID: 12124
==15142== 
==15142== 
==15142== HEAP SUMMARY:
==15142==     in use at exit: 0 bytes in 0 blocks
==15142==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15142== 
==15142== All heap blocks were freed -- no leaks are possible
==15142== 
==15142== For counts of detected and suppressed errors, rerun with: -v
==15142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test270 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test270/assignment_3Vars_test270.c)
The Valgrind memory detector as below:
==15157== Memcheck, a memory error detector
==15157== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15157== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15157== Command: ./impl/assignment_3Vars_test270/assignment_3Vars_test270.out
==15157== Parent PID: 12124
==15157== 
==15157== 
==15157== HEAP SUMMARY:
==15157==     in use at exit: 0 bytes in 0 blocks
==15157==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15157== 
==15157== All heap blocks were freed -- no leaks are possible
==15157== 
==15157== For counts of detected and suppressed errors, rerun with: -v
==15157== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test271 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test271/assignment_3Vars_test271.c)
The Valgrind memory detector as below:
==15172== Memcheck, a memory error detector
==15172== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15172== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15172== Command: ./impl/assignment_3Vars_test271/assignment_3Vars_test271.out
==15172== Parent PID: 12124
==15172== 
==15172== 
==15172== HEAP SUMMARY:
==15172==     in use at exit: 0 bytes in 0 blocks
==15172==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15172== 
==15172== All heap blocks were freed -- no leaks are possible
==15172== 
==15172== For counts of detected and suppressed errors, rerun with: -v
==15172== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test272 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test272/assignment_3Vars_test272.c)
The Valgrind memory detector as below:
==15188== Memcheck, a memory error detector
==15188== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15188== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15188== Command: ./impl/assignment_3Vars_test272/assignment_3Vars_test272.out
==15188== Parent PID: 12124
==15188== 
==15188== 
==15188== HEAP SUMMARY:
==15188==     in use at exit: 0 bytes in 0 blocks
==15188==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15188== 
==15188== All heap blocks were freed -- no leaks are possible
==15188== 
==15188== For counts of detected and suppressed errors, rerun with: -v
==15188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test273 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test273/assignment_3Vars_test273.c)
The Valgrind memory detector as below:
==15203== Memcheck, a memory error detector
==15203== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15203== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15203== Command: ./impl/assignment_3Vars_test273/assignment_3Vars_test273.out
==15203== Parent PID: 12124
==15203== 
==15203== 
==15203== HEAP SUMMARY:
==15203==     in use at exit: 0 bytes in 0 blocks
==15203==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15203== 
==15203== All heap blocks were freed -- no leaks are possible
==15203== 
==15203== For counts of detected and suppressed errors, rerun with: -v
==15203== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test274 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test274/assignment_3Vars_test274.c)
The Valgrind memory detector as below:
==15218== Memcheck, a memory error detector
==15218== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15218== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15218== Command: ./impl/assignment_3Vars_test274/assignment_3Vars_test274.out
==15218== Parent PID: 12124
==15218== 
==15218== 
==15218== HEAP SUMMARY:
==15218==     in use at exit: 0 bytes in 0 blocks
==15218==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15218== 
==15218== All heap blocks were freed -- no leaks are possible
==15218== 
==15218== For counts of detected and suppressed errors, rerun with: -v
==15218== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test275 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test275/assignment_3Vars_test275.c)
The Valgrind memory detector as below:
==15234== Memcheck, a memory error detector
==15234== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15234== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15234== Command: ./impl/assignment_3Vars_test275/assignment_3Vars_test275.out
==15234== Parent PID: 12124
==15234== 
==15234== 
==15234== HEAP SUMMARY:
==15234==     in use at exit: 0 bytes in 0 blocks
==15234==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15234== 
==15234== All heap blocks were freed -- no leaks are possible
==15234== 
==15234== For counts of detected and suppressed errors, rerun with: -v
==15234== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test276 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test276/assignment_3Vars_test276.c)
The Valgrind memory detector as below:
==15249== Memcheck, a memory error detector
==15249== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15249== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15249== Command: ./impl/assignment_3Vars_test276/assignment_3Vars_test276.out
==15249== Parent PID: 12124
==15249== 
==15249== 
==15249== HEAP SUMMARY:
==15249==     in use at exit: 0 bytes in 0 blocks
==15249==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15249== 
==15249== All heap blocks were freed -- no leaks are possible
==15249== 
==15249== For counts of detected and suppressed errors, rerun with: -v
==15249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test277 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test277/assignment_3Vars_test277.c)
The Valgrind memory detector as below:
==15264== Memcheck, a memory error detector
==15264== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15264== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15264== Command: ./impl/assignment_3Vars_test277/assignment_3Vars_test277.out
==15264== Parent PID: 12124
==15264== 
==15264== 
==15264== HEAP SUMMARY:
==15264==     in use at exit: 0 bytes in 0 blocks
==15264==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15264== 
==15264== All heap blocks were freed -- no leaks are possible
==15264== 
==15264== For counts of detected and suppressed errors, rerun with: -v
==15264== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test278 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test278/assignment_3Vars_test278.c)
The Valgrind memory detector as below:
==15279== Memcheck, a memory error detector
==15279== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15279== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15279== Command: ./impl/assignment_3Vars_test278/assignment_3Vars_test278.out
==15279== Parent PID: 12124
==15279== 
==15279== 
==15279== HEAP SUMMARY:
==15279==     in use at exit: 0 bytes in 0 blocks
==15279==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15279== 
==15279== All heap blocks were freed -- no leaks are possible
==15279== 
==15279== For counts of detected and suppressed errors, rerun with: -v
==15279== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test279 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test279/assignment_3Vars_test279.c)
The Valgrind memory detector as below:
==15296== Memcheck, a memory error detector
==15296== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15296== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15296== Command: ./impl/assignment_3Vars_test279/assignment_3Vars_test279.out
==15296== Parent PID: 12124
==15296== 
==15296== 
==15296== HEAP SUMMARY:
==15296==     in use at exit: 0 bytes in 0 blocks
==15296==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15296== 
==15296== All heap blocks were freed -- no leaks are possible
==15296== 
==15296== For counts of detected and suppressed errors, rerun with: -v
==15296== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test28 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test28/assignment_3Vars_test28.c)
The Valgrind memory detector as below:
==15312== Memcheck, a memory error detector
==15312== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15312== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15312== Command: ./impl/assignment_3Vars_test28/assignment_3Vars_test28.out
==15312== Parent PID: 12124
==15312== 
==15312== 
==15312== HEAP SUMMARY:
==15312==     in use at exit: 0 bytes in 0 blocks
==15312==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15312== 
==15312== All heap blocks were freed -- no leaks are possible
==15312== 
==15312== For counts of detected and suppressed errors, rerun with: -v
==15312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test280 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test280/assignment_3Vars_test280.c)
The Valgrind memory detector as below:
==15327== Memcheck, a memory error detector
==15327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15327== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15327== Command: ./impl/assignment_3Vars_test280/assignment_3Vars_test280.out
==15327== Parent PID: 12124
==15327== 
==15327== 
==15327== HEAP SUMMARY:
==15327==     in use at exit: 0 bytes in 0 blocks
==15327==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15327== 
==15327== All heap blocks were freed -- no leaks are possible
==15327== 
==15327== For counts of detected and suppressed errors, rerun with: -v
==15327== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test281 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test281/assignment_3Vars_test281.c)
The Valgrind memory detector as below:
==15342== Memcheck, a memory error detector
==15342== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15342== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15342== Command: ./impl/assignment_3Vars_test281/assignment_3Vars_test281.out
==15342== Parent PID: 12124
==15342== 
==15342== 
==15342== HEAP SUMMARY:
==15342==     in use at exit: 0 bytes in 0 blocks
==15342==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15342== 
==15342== All heap blocks were freed -- no leaks are possible
==15342== 
==15342== For counts of detected and suppressed errors, rerun with: -v
==15342== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test282 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test282/assignment_3Vars_test282.c)
The Valgrind memory detector as below:
==15358== Memcheck, a memory error detector
==15358== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15358== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15358== Command: ./impl/assignment_3Vars_test282/assignment_3Vars_test282.out
==15358== Parent PID: 12124
==15358== 
==15358== 
==15358== HEAP SUMMARY:
==15358==     in use at exit: 0 bytes in 0 blocks
==15358==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15358== 
==15358== All heap blocks were freed -- no leaks are possible
==15358== 
==15358== For counts of detected and suppressed errors, rerun with: -v
==15358== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test283 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test283/assignment_3Vars_test283.c)
The Valgrind memory detector as below:
==15386== Memcheck, a memory error detector
==15386== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15386== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15386== Command: ./impl/assignment_3Vars_test283/assignment_3Vars_test283.out
==15386== Parent PID: 12124
==15386== 
==15386== 
==15386== HEAP SUMMARY:
==15386==     in use at exit: 0 bytes in 0 blocks
==15386==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15386== 
==15386== All heap blocks were freed -- no leaks are possible
==15386== 
==15386== For counts of detected and suppressed errors, rerun with: -v
==15386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test284 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test284/assignment_3Vars_test284.c)
The Valgrind memory detector as below:
==15402== Memcheck, a memory error detector
==15402== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15402== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15402== Command: ./impl/assignment_3Vars_test284/assignment_3Vars_test284.out
==15402== Parent PID: 12124
==15402== 
==15402== 
==15402== HEAP SUMMARY:
==15402==     in use at exit: 0 bytes in 0 blocks
==15402==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15402== 
==15402== All heap blocks were freed -- no leaks are possible
==15402== 
==15402== For counts of detected and suppressed errors, rerun with: -v
==15402== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test285 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test285/assignment_3Vars_test285.c)
The Valgrind memory detector as below:
==15417== Memcheck, a memory error detector
==15417== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15417== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15417== Command: ./impl/assignment_3Vars_test285/assignment_3Vars_test285.out
==15417== Parent PID: 12124
==15417== 
==15417== 
==15417== HEAP SUMMARY:
==15417==     in use at exit: 0 bytes in 0 blocks
==15417==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15417== 
==15417== All heap blocks were freed -- no leaks are possible
==15417== 
==15417== For counts of detected and suppressed errors, rerun with: -v
==15417== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test286 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test286/assignment_3Vars_test286.c)
The Valgrind memory detector as below:
==15432== Memcheck, a memory error detector
==15432== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15432== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15432== Command: ./impl/assignment_3Vars_test286/assignment_3Vars_test286.out
==15432== Parent PID: 12124
==15432== 
==15432== 
==15432== HEAP SUMMARY:
==15432==     in use at exit: 0 bytes in 0 blocks
==15432==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15432== 
==15432== All heap blocks were freed -- no leaks are possible
==15432== 
==15432== For counts of detected and suppressed errors, rerun with: -v
==15432== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test287 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test287/assignment_3Vars_test287.c)
The Valgrind memory detector as below:
==15449== Memcheck, a memory error detector
==15449== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15449== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15449== Command: ./impl/assignment_3Vars_test287/assignment_3Vars_test287.out
==15449== Parent PID: 12124
==15449== 
==15449== 
==15449== HEAP SUMMARY:
==15449==     in use at exit: 0 bytes in 0 blocks
==15449==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15449== 
==15449== All heap blocks were freed -- no leaks are possible
==15449== 
==15449== For counts of detected and suppressed errors, rerun with: -v
==15449== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test288 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test288/assignment_3Vars_test288.c)
The Valgrind memory detector as below:
==15464== Memcheck, a memory error detector
==15464== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15464== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15464== Command: ./impl/assignment_3Vars_test288/assignment_3Vars_test288.out
==15464== Parent PID: 12124
==15464== 
==15464== 
==15464== HEAP SUMMARY:
==15464==     in use at exit: 0 bytes in 0 blocks
==15464==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15464== 
==15464== All heap blocks were freed -- no leaks are possible
==15464== 
==15464== For counts of detected and suppressed errors, rerun with: -v
==15464== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test289 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test289/assignment_3Vars_test289.c)
The Valgrind memory detector as below:
==15479== Memcheck, a memory error detector
==15479== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15479== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15479== Command: ./impl/assignment_3Vars_test289/assignment_3Vars_test289.out
==15479== Parent PID: 12124
==15479== 
==15479== 
==15479== HEAP SUMMARY:
==15479==     in use at exit: 0 bytes in 0 blocks
==15479==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15479== 
==15479== All heap blocks were freed -- no leaks are possible
==15479== 
==15479== For counts of detected and suppressed errors, rerun with: -v
==15479== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test29 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test29/assignment_3Vars_test29.c)
The Valgrind memory detector as below:
==15495== Memcheck, a memory error detector
==15495== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15495== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15495== Command: ./impl/assignment_3Vars_test29/assignment_3Vars_test29.out
==15495== Parent PID: 12124
==15495== 
==15495== 
==15495== HEAP SUMMARY:
==15495==     in use at exit: 0 bytes in 0 blocks
==15495==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15495== 
==15495== All heap blocks were freed -- no leaks are possible
==15495== 
==15495== For counts of detected and suppressed errors, rerun with: -v
==15495== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test290 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test290/assignment_3Vars_test290.c)
The Valgrind memory detector as below:
==15511== Memcheck, a memory error detector
==15511== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15511== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15511== Command: ./impl/assignment_3Vars_test290/assignment_3Vars_test290.out
==15511== Parent PID: 12124
==15511== 
==15511== 
==15511== HEAP SUMMARY:
==15511==     in use at exit: 0 bytes in 0 blocks
==15511==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15511== 
==15511== All heap blocks were freed -- no leaks are possible
==15511== 
==15511== For counts of detected and suppressed errors, rerun with: -v
==15511== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test291 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test291/assignment_3Vars_test291.c)
The Valgrind memory detector as below:
==15526== Memcheck, a memory error detector
==15526== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15526== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15526== Command: ./impl/assignment_3Vars_test291/assignment_3Vars_test291.out
==15526== Parent PID: 12124
==15526== 
==15526== 
==15526== HEAP SUMMARY:
==15526==     in use at exit: 0 bytes in 0 blocks
==15526==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15526== 
==15526== All heap blocks were freed -- no leaks are possible
==15526== 
==15526== For counts of detected and suppressed errors, rerun with: -v
==15526== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test292 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test292/assignment_3Vars_test292.c)
The Valgrind memory detector as below:
==15541== Memcheck, a memory error detector
==15541== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15541== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15541== Command: ./impl/assignment_3Vars_test292/assignment_3Vars_test292.out
==15541== Parent PID: 12124
==15541== 
==15541== 
==15541== HEAP SUMMARY:
==15541==     in use at exit: 0 bytes in 0 blocks
==15541==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15541== 
==15541== All heap blocks were freed -- no leaks are possible
==15541== 
==15541== For counts of detected and suppressed errors, rerun with: -v
==15541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test293 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test293/assignment_3Vars_test293.c)
The Valgrind memory detector as below:
==15558== Memcheck, a memory error detector
==15558== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15558== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15558== Command: ./impl/assignment_3Vars_test293/assignment_3Vars_test293.out
==15558== Parent PID: 12124
==15558== 
==15558== 
==15558== HEAP SUMMARY:
==15558==     in use at exit: 0 bytes in 0 blocks
==15558==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15558== 
==15558== All heap blocks were freed -- no leaks are possible
==15558== 
==15558== For counts of detected and suppressed errors, rerun with: -v
==15558== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test294 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test294/assignment_3Vars_test294.c)
The Valgrind memory detector as below:
==15573== Memcheck, a memory error detector
==15573== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15573== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15573== Command: ./impl/assignment_3Vars_test294/assignment_3Vars_test294.out
==15573== Parent PID: 12124
==15573== 
==15573== 
==15573== HEAP SUMMARY:
==15573==     in use at exit: 0 bytes in 0 blocks
==15573==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15573== 
==15573== All heap blocks were freed -- no leaks are possible
==15573== 
==15573== For counts of detected and suppressed errors, rerun with: -v
==15573== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test295 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test295/assignment_3Vars_test295.c)
The Valgrind memory detector as below:
==15588== Memcheck, a memory error detector
==15588== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15588== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15588== Command: ./impl/assignment_3Vars_test295/assignment_3Vars_test295.out
==15588== Parent PID: 12124
==15588== 
==15588== 
==15588== HEAP SUMMARY:
==15588==     in use at exit: 0 bytes in 0 blocks
==15588==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15588== 
==15588== All heap blocks were freed -- no leaks are possible
==15588== 
==15588== For counts of detected and suppressed errors, rerun with: -v
==15588== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test296 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test296/assignment_3Vars_test296.c)
The Valgrind memory detector as below:
==15603== Memcheck, a memory error detector
==15603== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15603== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15603== Command: ./impl/assignment_3Vars_test296/assignment_3Vars_test296.out
==15603== Parent PID: 12124
==15603== 
==15603== 
==15603== HEAP SUMMARY:
==15603==     in use at exit: 0 bytes in 0 blocks
==15603==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15603== 
==15603== All heap blocks were freed -- no leaks are possible
==15603== 
==15603== For counts of detected and suppressed errors, rerun with: -v
==15603== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test297 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test297/assignment_3Vars_test297.c)
The Valgrind memory detector as below:
==15620== Memcheck, a memory error detector
==15620== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15620== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15620== Command: ./impl/assignment_3Vars_test297/assignment_3Vars_test297.out
==15620== Parent PID: 12124
==15620== 
==15620== 
==15620== HEAP SUMMARY:
==15620==     in use at exit: 0 bytes in 0 blocks
==15620==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15620== 
==15620== All heap blocks were freed -- no leaks are possible
==15620== 
==15620== For counts of detected and suppressed errors, rerun with: -v
==15620== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test298 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test298/assignment_3Vars_test298.c)
The Valgrind memory detector as below:
==15635== Memcheck, a memory error detector
==15635== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15635== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15635== Command: ./impl/assignment_3Vars_test298/assignment_3Vars_test298.out
==15635== Parent PID: 12124
==15635== 
==15635== 
==15635== HEAP SUMMARY:
==15635==     in use at exit: 0 bytes in 0 blocks
==15635==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15635== 
==15635== All heap blocks were freed -- no leaks are possible
==15635== 
==15635== For counts of detected and suppressed errors, rerun with: -v
==15635== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test299 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test299/assignment_3Vars_test299.c)
The Valgrind memory detector as below:
==15650== Memcheck, a memory error detector
==15650== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15650== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15650== Command: ./impl/assignment_3Vars_test299/assignment_3Vars_test299.out
==15650== Parent PID: 12124
==15650== 
==15650== 
==15650== HEAP SUMMARY:
==15650==     in use at exit: 0 bytes in 0 blocks
==15650==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15650== 
==15650== All heap blocks were freed -- no leaks are possible
==15650== 
==15650== For counts of detected and suppressed errors, rerun with: -v
==15650== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test3 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test3/assignment_3Vars_test3.c)
The Valgrind memory detector as below:
==15665== Memcheck, a memory error detector
==15665== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15665== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15665== Command: ./impl/assignment_3Vars_test3/assignment_3Vars_test3.out
==15665== Parent PID: 12124
==15665== 
==15665== 
==15665== HEAP SUMMARY:
==15665==     in use at exit: 0 bytes in 0 blocks
==15665==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15665== 
==15665== All heap blocks were freed -- no leaks are possible
==15665== 
==15665== For counts of detected and suppressed errors, rerun with: -v
==15665== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test30 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test30/assignment_3Vars_test30.c)
The Valgrind memory detector as below:
==15681== Memcheck, a memory error detector
==15681== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15681== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15681== Command: ./impl/assignment_3Vars_test30/assignment_3Vars_test30.out
==15681== Parent PID: 12124
==15681== 
==15681== 
==15681== HEAP SUMMARY:
==15681==     in use at exit: 0 bytes in 0 blocks
==15681==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15681== 
==15681== All heap blocks were freed -- no leaks are possible
==15681== 
==15681== For counts of detected and suppressed errors, rerun with: -v
==15681== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test300 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test300/assignment_3Vars_test300.c)
The Valgrind memory detector as below:
==15696== Memcheck, a memory error detector
==15696== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15696== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15696== Command: ./impl/assignment_3Vars_test300/assignment_3Vars_test300.out
==15696== Parent PID: 12124
==15696== 
==15696== 
==15696== HEAP SUMMARY:
==15696==     in use at exit: 0 bytes in 0 blocks
==15696==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15696== 
==15696== All heap blocks were freed -- no leaks are possible
==15696== 
==15696== For counts of detected and suppressed errors, rerun with: -v
==15696== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test301 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test301/assignment_3Vars_test301.c)
The Valgrind memory detector as below:
==15712== Memcheck, a memory error detector
==15712== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15712== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15712== Command: ./impl/assignment_3Vars_test301/assignment_3Vars_test301.out
==15712== Parent PID: 12124
==15712== 
==15712== 
==15712== HEAP SUMMARY:
==15712==     in use at exit: 0 bytes in 0 blocks
==15712==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15712== 
==15712== All heap blocks were freed -- no leaks are possible
==15712== 
==15712== For counts of detected and suppressed errors, rerun with: -v
==15712== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test302 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test302/assignment_3Vars_test302.c)
The Valgrind memory detector as below:
==15727== Memcheck, a memory error detector
==15727== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15727== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15727== Command: ./impl/assignment_3Vars_test302/assignment_3Vars_test302.out
==15727== Parent PID: 12124
==15727== 
==15727== 
==15727== HEAP SUMMARY:
==15727==     in use at exit: 0 bytes in 0 blocks
==15727==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15727== 
==15727== All heap blocks were freed -- no leaks are possible
==15727== 
==15727== For counts of detected and suppressed errors, rerun with: -v
==15727== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test303 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test303/assignment_3Vars_test303.c)
The Valgrind memory detector as below:
==15743== Memcheck, a memory error detector
==15743== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15743== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15743== Command: ./impl/assignment_3Vars_test303/assignment_3Vars_test303.out
==15743== Parent PID: 12124
==15743== 
==15743== 
==15743== HEAP SUMMARY:
==15743==     in use at exit: 0 bytes in 0 blocks
==15743==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15743== 
==15743== All heap blocks were freed -- no leaks are possible
==15743== 
==15743== For counts of detected and suppressed errors, rerun with: -v
==15743== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test304 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test304/assignment_3Vars_test304.c)
The Valgrind memory detector as below:
==15758== Memcheck, a memory error detector
==15758== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15758== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15758== Command: ./impl/assignment_3Vars_test304/assignment_3Vars_test304.out
==15758== Parent PID: 12124
==15758== 
==15758== 
==15758== HEAP SUMMARY:
==15758==     in use at exit: 0 bytes in 0 blocks
==15758==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15758== 
==15758== All heap blocks were freed -- no leaks are possible
==15758== 
==15758== For counts of detected and suppressed errors, rerun with: -v
==15758== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test305 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test305/assignment_3Vars_test305.c)
The Valgrind memory detector as below:
==15773== Memcheck, a memory error detector
==15773== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15773== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15773== Command: ./impl/assignment_3Vars_test305/assignment_3Vars_test305.out
==15773== Parent PID: 12124
==15773== 
==15773== 
==15773== HEAP SUMMARY:
==15773==     in use at exit: 0 bytes in 0 blocks
==15773==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15773== 
==15773== All heap blocks were freed -- no leaks are possible
==15773== 
==15773== For counts of detected and suppressed errors, rerun with: -v
==15773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test306 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test306/assignment_3Vars_test306.c)
The Valgrind memory detector as below:
==15788== Memcheck, a memory error detector
==15788== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15788== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15788== Command: ./impl/assignment_3Vars_test306/assignment_3Vars_test306.out
==15788== Parent PID: 12124
==15788== 
==15788== 
==15788== HEAP SUMMARY:
==15788==     in use at exit: 0 bytes in 0 blocks
==15788==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15788== 
==15788== All heap blocks were freed -- no leaks are possible
==15788== 
==15788== For counts of detected and suppressed errors, rerun with: -v
==15788== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test307 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test307/assignment_3Vars_test307.c)
The Valgrind memory detector as below:
==15804== Memcheck, a memory error detector
==15804== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15804== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15804== Command: ./impl/assignment_3Vars_test307/assignment_3Vars_test307.out
==15804== Parent PID: 12124
==15804== 
==15804== 
==15804== HEAP SUMMARY:
==15804==     in use at exit: 0 bytes in 0 blocks
==15804==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15804== 
==15804== All heap blocks were freed -- no leaks are possible
==15804== 
==15804== For counts of detected and suppressed errors, rerun with: -v
==15804== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test308 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test308/assignment_3Vars_test308.c)
The Valgrind memory detector as below:
==15820== Memcheck, a memory error detector
==15820== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15820== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15820== Command: ./impl/assignment_3Vars_test308/assignment_3Vars_test308.out
==15820== Parent PID: 12124
==15820== 
==15820== 
==15820== HEAP SUMMARY:
==15820==     in use at exit: 0 bytes in 0 blocks
==15820==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15820== 
==15820== All heap blocks were freed -- no leaks are possible
==15820== 
==15820== For counts of detected and suppressed errors, rerun with: -v
==15820== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test309 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test309/assignment_3Vars_test309.c)
The Valgrind memory detector as below:
==15835== Memcheck, a memory error detector
==15835== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15835== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15835== Command: ./impl/assignment_3Vars_test309/assignment_3Vars_test309.out
==15835== Parent PID: 12124
==15835== 
==15835== 
==15835== HEAP SUMMARY:
==15835==     in use at exit: 0 bytes in 0 blocks
==15835==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15835== 
==15835== All heap blocks were freed -- no leaks are possible
==15835== 
==15835== For counts of detected and suppressed errors, rerun with: -v
==15835== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test31 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test31/assignment_3Vars_test31.c)
The Valgrind memory detector as below:
==15850== Memcheck, a memory error detector
==15850== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15850== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15850== Command: ./impl/assignment_3Vars_test31/assignment_3Vars_test31.out
==15850== Parent PID: 12124
==15850== 
==15850== 
==15850== HEAP SUMMARY:
==15850==     in use at exit: 0 bytes in 0 blocks
==15850==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15850== 
==15850== All heap blocks were freed -- no leaks are possible
==15850== 
==15850== For counts of detected and suppressed errors, rerun with: -v
==15850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test310 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test310/assignment_3Vars_test310.c)
The Valgrind memory detector as below:
==15866== Memcheck, a memory error detector
==15866== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15866== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15866== Command: ./impl/assignment_3Vars_test310/assignment_3Vars_test310.out
==15866== Parent PID: 12124
==15866== 
==15866== 
==15866== HEAP SUMMARY:
==15866==     in use at exit: 0 bytes in 0 blocks
==15866==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15866== 
==15866== All heap blocks were freed -- no leaks are possible
==15866== 
==15866== For counts of detected and suppressed errors, rerun with: -v
==15866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test311 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test311/assignment_3Vars_test311.c)
The Valgrind memory detector as below:
==15881== Memcheck, a memory error detector
==15881== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15881== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15881== Command: ./impl/assignment_3Vars_test311/assignment_3Vars_test311.out
==15881== Parent PID: 12124
==15881== 
==15881== 
==15881== HEAP SUMMARY:
==15881==     in use at exit: 0 bytes in 0 blocks
==15881==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15881== 
==15881== All heap blocks were freed -- no leaks are possible
==15881== 
==15881== For counts of detected and suppressed errors, rerun with: -v
==15881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test312 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test312/assignment_3Vars_test312.c)
The Valgrind memory detector as below:
==15896== Memcheck, a memory error detector
==15896== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15896== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15896== Command: ./impl/assignment_3Vars_test312/assignment_3Vars_test312.out
==15896== Parent PID: 12124
==15896== 
==15896== 
==15896== HEAP SUMMARY:
==15896==     in use at exit: 0 bytes in 0 blocks
==15896==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15896== 
==15896== All heap blocks were freed -- no leaks are possible
==15896== 
==15896== For counts of detected and suppressed errors, rerun with: -v
==15896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test313 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test313/assignment_3Vars_test313.c)
The Valgrind memory detector as below:
==15911== Memcheck, a memory error detector
==15911== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15911== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15911== Command: ./impl/assignment_3Vars_test313/assignment_3Vars_test313.out
==15911== Parent PID: 12124
==15911== 
==15911== 
==15911== HEAP SUMMARY:
==15911==     in use at exit: 0 bytes in 0 blocks
==15911==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15911== 
==15911== All heap blocks were freed -- no leaks are possible
==15911== 
==15911== For counts of detected and suppressed errors, rerun with: -v
==15911== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test314 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test314/assignment_3Vars_test314.c)
The Valgrind memory detector as below:
==15928== Memcheck, a memory error detector
==15928== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15928== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15928== Command: ./impl/assignment_3Vars_test314/assignment_3Vars_test314.out
==15928== Parent PID: 12124
==15928== 
==15928== 
==15928== HEAP SUMMARY:
==15928==     in use at exit: 0 bytes in 0 blocks
==15928==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15928== 
==15928== All heap blocks were freed -- no leaks are possible
==15928== 
==15928== For counts of detected and suppressed errors, rerun with: -v
==15928== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test315 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test315/assignment_3Vars_test315.c)
The Valgrind memory detector as below:
==15943== Memcheck, a memory error detector
==15943== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15943== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15943== Command: ./impl/assignment_3Vars_test315/assignment_3Vars_test315.out
==15943== Parent PID: 12124
==15943== 
==15943== 
==15943== HEAP SUMMARY:
==15943==     in use at exit: 0 bytes in 0 blocks
==15943==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15943== 
==15943== All heap blocks were freed -- no leaks are possible
==15943== 
==15943== For counts of detected and suppressed errors, rerun with: -v
==15943== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test316 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test316/assignment_3Vars_test316.c)
The Valgrind memory detector as below:
==15958== Memcheck, a memory error detector
==15958== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15958== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15958== Command: ./impl/assignment_3Vars_test316/assignment_3Vars_test316.out
==15958== Parent PID: 12124
==15958== 
==15958== 
==15958== HEAP SUMMARY:
==15958==     in use at exit: 0 bytes in 0 blocks
==15958==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15958== 
==15958== All heap blocks were freed -- no leaks are possible
==15958== 
==15958== For counts of detected and suppressed errors, rerun with: -v
==15958== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test317 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test317/assignment_3Vars_test317.c)
The Valgrind memory detector as below:
==15973== Memcheck, a memory error detector
==15973== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15973== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15973== Command: ./impl/assignment_3Vars_test317/assignment_3Vars_test317.out
==15973== Parent PID: 12124
==15973== 
==15973== 
==15973== HEAP SUMMARY:
==15973==     in use at exit: 0 bytes in 0 blocks
==15973==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15973== 
==15973== All heap blocks were freed -- no leaks are possible
==15973== 
==15973== For counts of detected and suppressed errors, rerun with: -v
==15973== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test318 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test318/assignment_3Vars_test318.c)
The Valgrind memory detector as below:
==15989== Memcheck, a memory error detector
==15989== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15989== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15989== Command: ./impl/assignment_3Vars_test318/assignment_3Vars_test318.out
==15989== Parent PID: 12124
==15989== 
==15989== 
==15989== HEAP SUMMARY:
==15989==     in use at exit: 0 bytes in 0 blocks
==15989==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==15989== 
==15989== All heap blocks were freed -- no leaks are possible
==15989== 
==15989== For counts of detected and suppressed errors, rerun with: -v
==15989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test319 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test319/assignment_3Vars_test319.c)
The Valgrind memory detector as below:
==16004== Memcheck, a memory error detector
==16004== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16004== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16004== Command: ./impl/assignment_3Vars_test319/assignment_3Vars_test319.out
==16004== Parent PID: 12124
==16004== 
==16004== 
==16004== HEAP SUMMARY:
==16004==     in use at exit: 0 bytes in 0 blocks
==16004==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16004== 
==16004== All heap blocks were freed -- no leaks are possible
==16004== 
==16004== For counts of detected and suppressed errors, rerun with: -v
==16004== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test32 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test32/assignment_3Vars_test32.c)
The Valgrind memory detector as below:
==16019== Memcheck, a memory error detector
==16019== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16019== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16019== Command: ./impl/assignment_3Vars_test32/assignment_3Vars_test32.out
==16019== Parent PID: 12124
==16019== 
==16019== 
==16019== HEAP SUMMARY:
==16019==     in use at exit: 0 bytes in 0 blocks
==16019==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16019== 
==16019== All heap blocks were freed -- no leaks are possible
==16019== 
==16019== For counts of detected and suppressed errors, rerun with: -v
==16019== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test320 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test320/assignment_3Vars_test320.c)
The Valgrind memory detector as below:
==16035== Memcheck, a memory error detector
==16035== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16035== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16035== Command: ./impl/assignment_3Vars_test320/assignment_3Vars_test320.out
==16035== Parent PID: 12124
==16035== 
==16035== 
==16035== HEAP SUMMARY:
==16035==     in use at exit: 0 bytes in 0 blocks
==16035==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16035== 
==16035== All heap blocks were freed -- no leaks are possible
==16035== 
==16035== For counts of detected and suppressed errors, rerun with: -v
==16035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test321 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test321/assignment_3Vars_test321.c)
The Valgrind memory detector as below:
==16051== Memcheck, a memory error detector
==16051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16051== Command: ./impl/assignment_3Vars_test321/assignment_3Vars_test321.out
==16051== Parent PID: 12124
==16051== 
==16051== 
==16051== HEAP SUMMARY:
==16051==     in use at exit: 0 bytes in 0 blocks
==16051==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16051== 
==16051== All heap blocks were freed -- no leaks are possible
==16051== 
==16051== For counts of detected and suppressed errors, rerun with: -v
==16051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test322 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test322/assignment_3Vars_test322.c)
The Valgrind memory detector as below:
==16066== Memcheck, a memory error detector
==16066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16066== Command: ./impl/assignment_3Vars_test322/assignment_3Vars_test322.out
==16066== Parent PID: 12124
==16066== 
==16066== 
==16066== HEAP SUMMARY:
==16066==     in use at exit: 0 bytes in 0 blocks
==16066==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16066== 
==16066== All heap blocks were freed -- no leaks are possible
==16066== 
==16066== For counts of detected and suppressed errors, rerun with: -v
==16066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test323 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test323/assignment_3Vars_test323.c)
The Valgrind memory detector as below:
==16081== Memcheck, a memory error detector
==16081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16081== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16081== Command: ./impl/assignment_3Vars_test323/assignment_3Vars_test323.out
==16081== Parent PID: 12124
==16081== 
==16081== 
==16081== HEAP SUMMARY:
==16081==     in use at exit: 0 bytes in 0 blocks
==16081==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16081== 
==16081== All heap blocks were freed -- no leaks are possible
==16081== 
==16081== For counts of detected and suppressed errors, rerun with: -v
==16081== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test324 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test324/assignment_3Vars_test324.c)
The Valgrind memory detector as below:
==16096== Memcheck, a memory error detector
==16096== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16096== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16096== Command: ./impl/assignment_3Vars_test324/assignment_3Vars_test324.out
==16096== Parent PID: 12124
==16096== 
==16096== 
==16096== HEAP SUMMARY:
==16096==     in use at exit: 0 bytes in 0 blocks
==16096==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16096== 
==16096== All heap blocks were freed -- no leaks are possible
==16096== 
==16096== For counts of detected and suppressed errors, rerun with: -v
==16096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test325 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test325/assignment_3Vars_test325.c)
The Valgrind memory detector as below:
==16112== Memcheck, a memory error detector
==16112== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16112== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16112== Command: ./impl/assignment_3Vars_test325/assignment_3Vars_test325.out
==16112== Parent PID: 12124
==16112== 
==16112== 
==16112== HEAP SUMMARY:
==16112==     in use at exit: 0 bytes in 0 blocks
==16112==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16112== 
==16112== All heap blocks were freed -- no leaks are possible
==16112== 
==16112== For counts of detected and suppressed errors, rerun with: -v
==16112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test326 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test326/assignment_3Vars_test326.c)
The Valgrind memory detector as below:
==16127== Memcheck, a memory error detector
==16127== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16127== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16127== Command: ./impl/assignment_3Vars_test326/assignment_3Vars_test326.out
==16127== Parent PID: 12124
==16127== 
==16127== 
==16127== HEAP SUMMARY:
==16127==     in use at exit: 0 bytes in 0 blocks
==16127==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16127== 
==16127== All heap blocks were freed -- no leaks are possible
==16127== 
==16127== For counts of detected and suppressed errors, rerun with: -v
==16127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test327 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test327/assignment_3Vars_test327.c)
The Valgrind memory detector as below:
==16142== Memcheck, a memory error detector
==16142== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16142== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16142== Command: ./impl/assignment_3Vars_test327/assignment_3Vars_test327.out
==16142== Parent PID: 12124
==16142== 
==16142== 
==16142== HEAP SUMMARY:
==16142==     in use at exit: 0 bytes in 0 blocks
==16142==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16142== 
==16142== All heap blocks were freed -- no leaks are possible
==16142== 
==16142== For counts of detected and suppressed errors, rerun with: -v
==16142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test328 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test328/assignment_3Vars_test328.c)
The Valgrind memory detector as below:
==16158== Memcheck, a memory error detector
==16158== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16158== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16158== Command: ./impl/assignment_3Vars_test328/assignment_3Vars_test328.out
==16158== Parent PID: 12124
==16158== 
==16158== 
==16158== HEAP SUMMARY:
==16158==     in use at exit: 0 bytes in 0 blocks
==16158==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16158== 
==16158== All heap blocks were freed -- no leaks are possible
==16158== 
==16158== For counts of detected and suppressed errors, rerun with: -v
==16158== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test329 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test329/assignment_3Vars_test329.c)
The Valgrind memory detector as below:
==16173== Memcheck, a memory error detector
==16173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16173== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16173== Command: ./impl/assignment_3Vars_test329/assignment_3Vars_test329.out
==16173== Parent PID: 12124
==16173== 
==16173== 
==16173== HEAP SUMMARY:
==16173==     in use at exit: 0 bytes in 0 blocks
==16173==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16173== 
==16173== All heap blocks were freed -- no leaks are possible
==16173== 
==16173== For counts of detected and suppressed errors, rerun with: -v
==16173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test33 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test33/assignment_3Vars_test33.c)
The Valgrind memory detector as below:
==16188== Memcheck, a memory error detector
==16188== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16188== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16188== Command: ./impl/assignment_3Vars_test33/assignment_3Vars_test33.out
==16188== Parent PID: 12124
==16188== 
==16188== 
==16188== HEAP SUMMARY:
==16188==     in use at exit: 0 bytes in 0 blocks
==16188==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16188== 
==16188== All heap blocks were freed -- no leaks are possible
==16188== 
==16188== For counts of detected and suppressed errors, rerun with: -v
==16188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test330 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test330/assignment_3Vars_test330.c)
The Valgrind memory detector as below:
==16203== Memcheck, a memory error detector
==16203== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16203== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16203== Command: ./impl/assignment_3Vars_test330/assignment_3Vars_test330.out
==16203== Parent PID: 12124
==16203== 
==16203== 
==16203== HEAP SUMMARY:
==16203==     in use at exit: 0 bytes in 0 blocks
==16203==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16203== 
==16203== All heap blocks were freed -- no leaks are possible
==16203== 
==16203== For counts of detected and suppressed errors, rerun with: -v
==16203== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test331 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test331/assignment_3Vars_test331.c)
The Valgrind memory detector as below:
==16220== Memcheck, a memory error detector
==16220== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16220== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16220== Command: ./impl/assignment_3Vars_test331/assignment_3Vars_test331.out
==16220== Parent PID: 12124
==16220== 
==16220== 
==16220== HEAP SUMMARY:
==16220==     in use at exit: 0 bytes in 0 blocks
==16220==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16220== 
==16220== All heap blocks were freed -- no leaks are possible
==16220== 
==16220== For counts of detected and suppressed errors, rerun with: -v
==16220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test332 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test332/assignment_3Vars_test332.c)
The Valgrind memory detector as below:
==16235== Memcheck, a memory error detector
==16235== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16235== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16235== Command: ./impl/assignment_3Vars_test332/assignment_3Vars_test332.out
==16235== Parent PID: 12124
==16235== 
==16235== 
==16235== HEAP SUMMARY:
==16235==     in use at exit: 0 bytes in 0 blocks
==16235==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16235== 
==16235== All heap blocks were freed -- no leaks are possible
==16235== 
==16235== For counts of detected and suppressed errors, rerun with: -v
==16235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test333 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test333/assignment_3Vars_test333.c)
The Valgrind memory detector as below:
==16250== Memcheck, a memory error detector
==16250== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16250== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16250== Command: ./impl/assignment_3Vars_test333/assignment_3Vars_test333.out
==16250== Parent PID: 12124
==16250== 
==16250== 
==16250== HEAP SUMMARY:
==16250==     in use at exit: 0 bytes in 0 blocks
==16250==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16250== 
==16250== All heap blocks were freed -- no leaks are possible
==16250== 
==16250== For counts of detected and suppressed errors, rerun with: -v
==16250== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test334 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test334/assignment_3Vars_test334.c)
The Valgrind memory detector as below:
==16265== Memcheck, a memory error detector
==16265== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16265== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16265== Command: ./impl/assignment_3Vars_test334/assignment_3Vars_test334.out
==16265== Parent PID: 12124
==16265== 
==16265== 
==16265== HEAP SUMMARY:
==16265==     in use at exit: 0 bytes in 0 blocks
==16265==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16265== 
==16265== All heap blocks were freed -- no leaks are possible
==16265== 
==16265== For counts of detected and suppressed errors, rerun with: -v
==16265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test335 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test335/assignment_3Vars_test335.c)
The Valgrind memory detector as below:
==16283== Memcheck, a memory error detector
==16283== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16283== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16283== Command: ./impl/assignment_3Vars_test335/assignment_3Vars_test335.out
==16283== Parent PID: 12124
==16283== 
==16283== 
==16283== HEAP SUMMARY:
==16283==     in use at exit: 0 bytes in 0 blocks
==16283==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16283== 
==16283== All heap blocks were freed -- no leaks are possible
==16283== 
==16283== For counts of detected and suppressed errors, rerun with: -v
==16283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test336 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test336/assignment_3Vars_test336.c)
The Valgrind memory detector as below:
==16298== Memcheck, a memory error detector
==16298== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16298== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16298== Command: ./impl/assignment_3Vars_test336/assignment_3Vars_test336.out
==16298== Parent PID: 12124
==16298== 
==16298== 
==16298== HEAP SUMMARY:
==16298==     in use at exit: 0 bytes in 0 blocks
==16298==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16298== 
==16298== All heap blocks were freed -- no leaks are possible
==16298== 
==16298== For counts of detected and suppressed errors, rerun with: -v
==16298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test337 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test337/assignment_3Vars_test337.c)
The Valgrind memory detector as below:
==16313== Memcheck, a memory error detector
==16313== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16313== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16313== Command: ./impl/assignment_3Vars_test337/assignment_3Vars_test337.out
==16313== Parent PID: 12124
==16313== 
==16313== 
==16313== HEAP SUMMARY:
==16313==     in use at exit: 0 bytes in 0 blocks
==16313==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16313== 
==16313== All heap blocks were freed -- no leaks are possible
==16313== 
==16313== For counts of detected and suppressed errors, rerun with: -v
==16313== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test338 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test338/assignment_3Vars_test338.c)
The Valgrind memory detector as below:
==16330== Memcheck, a memory error detector
==16330== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16330== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16330== Command: ./impl/assignment_3Vars_test338/assignment_3Vars_test338.out
==16330== Parent PID: 12124
==16330== 
==16330== 
==16330== HEAP SUMMARY:
==16330==     in use at exit: 0 bytes in 0 blocks
==16330==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16330== 
==16330== All heap blocks were freed -- no leaks are possible
==16330== 
==16330== For counts of detected and suppressed errors, rerun with: -v
==16330== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test339 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test339/assignment_3Vars_test339.c)
The Valgrind memory detector as below:
==16346== Memcheck, a memory error detector
==16346== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16346== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16346== Command: ./impl/assignment_3Vars_test339/assignment_3Vars_test339.out
==16346== Parent PID: 12124
==16346== 
==16346== 
==16346== HEAP SUMMARY:
==16346==     in use at exit: 0 bytes in 0 blocks
==16346==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16346== 
==16346== All heap blocks were freed -- no leaks are possible
==16346== 
==16346== For counts of detected and suppressed errors, rerun with: -v
==16346== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test34 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test34/assignment_3Vars_test34.c)
The Valgrind memory detector as below:
==16361== Memcheck, a memory error detector
==16361== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16361== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16361== Command: ./impl/assignment_3Vars_test34/assignment_3Vars_test34.out
==16361== Parent PID: 12124
==16361== 
==16361== 
==16361== HEAP SUMMARY:
==16361==     in use at exit: 0 bytes in 0 blocks
==16361==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16361== 
==16361== All heap blocks were freed -- no leaks are possible
==16361== 
==16361== For counts of detected and suppressed errors, rerun with: -v
==16361== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test340 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test340/assignment_3Vars_test340.c)
The Valgrind memory detector as below:
==16376== Memcheck, a memory error detector
==16376== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16376== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16376== Command: ./impl/assignment_3Vars_test340/assignment_3Vars_test340.out
==16376== Parent PID: 12124
==16376== 
==16376== 
==16376== HEAP SUMMARY:
==16376==     in use at exit: 0 bytes in 0 blocks
==16376==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16376== 
==16376== All heap blocks were freed -- no leaks are possible
==16376== 
==16376== For counts of detected and suppressed errors, rerun with: -v
==16376== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test341 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test341/assignment_3Vars_test341.c)
The Valgrind memory detector as below:
==16391== Memcheck, a memory error detector
==16391== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16391== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16391== Command: ./impl/assignment_3Vars_test341/assignment_3Vars_test341.out
==16391== Parent PID: 12124
==16391== 
==16391== 
==16391== HEAP SUMMARY:
==16391==     in use at exit: 0 bytes in 0 blocks
==16391==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16391== 
==16391== All heap blocks were freed -- no leaks are possible
==16391== 
==16391== For counts of detected and suppressed errors, rerun with: -v
==16391== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test342 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test342/assignment_3Vars_test342.c)
The Valgrind memory detector as below:
==16407== Memcheck, a memory error detector
==16407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16407== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16407== Command: ./impl/assignment_3Vars_test342/assignment_3Vars_test342.out
==16407== Parent PID: 12124
==16407== 
==16407== 
==16407== HEAP SUMMARY:
==16407==     in use at exit: 0 bytes in 0 blocks
==16407==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16407== 
==16407== All heap blocks were freed -- no leaks are possible
==16407== 
==16407== For counts of detected and suppressed errors, rerun with: -v
==16407== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test343 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test343/assignment_3Vars_test343.c)
The Valgrind memory detector as below:
==16422== Memcheck, a memory error detector
==16422== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16422== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16422== Command: ./impl/assignment_3Vars_test343/assignment_3Vars_test343.out
==16422== Parent PID: 12124
==16422== 
==16422== 
==16422== HEAP SUMMARY:
==16422==     in use at exit: 0 bytes in 0 blocks
==16422==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16422== 
==16422== All heap blocks were freed -- no leaks are possible
==16422== 
==16422== For counts of detected and suppressed errors, rerun with: -v
==16422== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test344 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test344/assignment_3Vars_test344.c)
The Valgrind memory detector as below:
==16437== Memcheck, a memory error detector
==16437== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16437== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16437== Command: ./impl/assignment_3Vars_test344/assignment_3Vars_test344.out
==16437== Parent PID: 12124
==16437== 
==16437== 
==16437== HEAP SUMMARY:
==16437==     in use at exit: 0 bytes in 0 blocks
==16437==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16437== 
==16437== All heap blocks were freed -- no leaks are possible
==16437== 
==16437== For counts of detected and suppressed errors, rerun with: -v
==16437== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test345 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test345/assignment_3Vars_test345.c)
The Valgrind memory detector as below:
==16452== Memcheck, a memory error detector
==16452== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16452== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16452== Command: ./impl/assignment_3Vars_test345/assignment_3Vars_test345.out
==16452== Parent PID: 12124
==16452== 
==16452== 
==16452== HEAP SUMMARY:
==16452==     in use at exit: 0 bytes in 0 blocks
==16452==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16452== 
==16452== All heap blocks were freed -- no leaks are possible
==16452== 
==16452== For counts of detected and suppressed errors, rerun with: -v
==16452== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test346 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test346/assignment_3Vars_test346.c)
The Valgrind memory detector as below:
==16467== Memcheck, a memory error detector
==16467== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16467== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16467== Command: ./impl/assignment_3Vars_test346/assignment_3Vars_test346.out
==16467== Parent PID: 12124
==16467== 
==16467== 
==16467== HEAP SUMMARY:
==16467==     in use at exit: 0 bytes in 0 blocks
==16467==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16467== 
==16467== All heap blocks were freed -- no leaks are possible
==16467== 
==16467== For counts of detected and suppressed errors, rerun with: -v
==16467== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test347 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test347/assignment_3Vars_test347.c)
The Valgrind memory detector as below:
==16486== Memcheck, a memory error detector
==16486== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16486== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16486== Command: ./impl/assignment_3Vars_test347/assignment_3Vars_test347.out
==16486== Parent PID: 12124
==16486== 
==16486== 
==16486== HEAP SUMMARY:
==16486==     in use at exit: 0 bytes in 0 blocks
==16486==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16486== 
==16486== All heap blocks were freed -- no leaks are possible
==16486== 
==16486== For counts of detected and suppressed errors, rerun with: -v
==16486== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test348 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test348/assignment_3Vars_test348.c)
The Valgrind memory detector as below:
==16501== Memcheck, a memory error detector
==16501== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16501== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16501== Command: ./impl/assignment_3Vars_test348/assignment_3Vars_test348.out
==16501== Parent PID: 12124
==16501== 
==16501== 
==16501== HEAP SUMMARY:
==16501==     in use at exit: 0 bytes in 0 blocks
==16501==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16501== 
==16501== All heap blocks were freed -- no leaks are possible
==16501== 
==16501== For counts of detected and suppressed errors, rerun with: -v
==16501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test349 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test349/assignment_3Vars_test349.c)
The Valgrind memory detector as below:
==16516== Memcheck, a memory error detector
==16516== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16516== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16516== Command: ./impl/assignment_3Vars_test349/assignment_3Vars_test349.out
==16516== Parent PID: 12124
==16516== 
==16516== 
==16516== HEAP SUMMARY:
==16516==     in use at exit: 0 bytes in 0 blocks
==16516==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16516== 
==16516== All heap blocks were freed -- no leaks are possible
==16516== 
==16516== For counts of detected and suppressed errors, rerun with: -v
==16516== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test35 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test35/assignment_3Vars_test35.c)
The Valgrind memory detector as below:
==16534== Memcheck, a memory error detector
==16534== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16534== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16534== Command: ./impl/assignment_3Vars_test35/assignment_3Vars_test35.out
==16534== Parent PID: 12124
==16534== 
==16534== 
==16534== HEAP SUMMARY:
==16534==     in use at exit: 0 bytes in 0 blocks
==16534==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16534== 
==16534== All heap blocks were freed -- no leaks are possible
==16534== 
==16534== For counts of detected and suppressed errors, rerun with: -v
==16534== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test350 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test350/assignment_3Vars_test350.c)
The Valgrind memory detector as below:
==16551== Memcheck, a memory error detector
==16551== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16551== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16551== Command: ./impl/assignment_3Vars_test350/assignment_3Vars_test350.out
==16551== Parent PID: 12124
==16551== 
==16551== 
==16551== HEAP SUMMARY:
==16551==     in use at exit: 0 bytes in 0 blocks
==16551==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16551== 
==16551== All heap blocks were freed -- no leaks are possible
==16551== 
==16551== For counts of detected and suppressed errors, rerun with: -v
==16551== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test351 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test351/assignment_3Vars_test351.c)
The Valgrind memory detector as below:
==16566== Memcheck, a memory error detector
==16566== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16566== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16566== Command: ./impl/assignment_3Vars_test351/assignment_3Vars_test351.out
==16566== Parent PID: 12124
==16566== 
==16566== 
==16566== HEAP SUMMARY:
==16566==     in use at exit: 0 bytes in 0 blocks
==16566==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16566== 
==16566== All heap blocks were freed -- no leaks are possible
==16566== 
==16566== For counts of detected and suppressed errors, rerun with: -v
==16566== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test352 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test352/assignment_3Vars_test352.c)
The Valgrind memory detector as below:
==16581== Memcheck, a memory error detector
==16581== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16581== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16581== Command: ./impl/assignment_3Vars_test352/assignment_3Vars_test352.out
==16581== Parent PID: 12124
==16581== 
==16581== 
==16581== HEAP SUMMARY:
==16581==     in use at exit: 0 bytes in 0 blocks
==16581==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16581== 
==16581== All heap blocks were freed -- no leaks are possible
==16581== 
==16581== For counts of detected and suppressed errors, rerun with: -v
==16581== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test353 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test353/assignment_3Vars_test353.c)
The Valgrind memory detector as below:
==16596== Memcheck, a memory error detector
==16596== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16596== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16596== Command: ./impl/assignment_3Vars_test353/assignment_3Vars_test353.out
==16596== Parent PID: 12124
==16596== 
==16596== 
==16596== HEAP SUMMARY:
==16596==     in use at exit: 0 bytes in 0 blocks
==16596==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16596== 
==16596== All heap blocks were freed -- no leaks are possible
==16596== 
==16596== For counts of detected and suppressed errors, rerun with: -v
==16596== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test354 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test354/assignment_3Vars_test354.c)
The Valgrind memory detector as below:
==16612== Memcheck, a memory error detector
==16612== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16612== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16612== Command: ./impl/assignment_3Vars_test354/assignment_3Vars_test354.out
==16612== Parent PID: 12124
==16612== 
==16612== 
==16612== HEAP SUMMARY:
==16612==     in use at exit: 0 bytes in 0 blocks
==16612==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16612== 
==16612== All heap blocks were freed -- no leaks are possible
==16612== 
==16612== For counts of detected and suppressed errors, rerun with: -v
==16612== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test355 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test355/assignment_3Vars_test355.c)
The Valgrind memory detector as below:
==16627== Memcheck, a memory error detector
==16627== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16627== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16627== Command: ./impl/assignment_3Vars_test355/assignment_3Vars_test355.out
==16627== Parent PID: 12124
==16627== 
==16627== 
==16627== HEAP SUMMARY:
==16627==     in use at exit: 0 bytes in 0 blocks
==16627==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16627== 
==16627== All heap blocks were freed -- no leaks are possible
==16627== 
==16627== For counts of detected and suppressed errors, rerun with: -v
==16627== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test356 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test356/assignment_3Vars_test356.c)
The Valgrind memory detector as below:
==16642== Memcheck, a memory error detector
==16642== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16642== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16642== Command: ./impl/assignment_3Vars_test356/assignment_3Vars_test356.out
==16642== Parent PID: 12124
==16642== 
==16642== 
==16642== HEAP SUMMARY:
==16642==     in use at exit: 0 bytes in 0 blocks
==16642==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16642== 
==16642== All heap blocks were freed -- no leaks are possible
==16642== 
==16642== For counts of detected and suppressed errors, rerun with: -v
==16642== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test357 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test357/assignment_3Vars_test357.c)
The Valgrind memory detector as below:
==16657== Memcheck, a memory error detector
==16657== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16657== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16657== Command: ./impl/assignment_3Vars_test357/assignment_3Vars_test357.out
==16657== Parent PID: 12124
==16657== 
==16657== 
==16657== HEAP SUMMARY:
==16657==     in use at exit: 0 bytes in 0 blocks
==16657==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16657== 
==16657== All heap blocks were freed -- no leaks are possible
==16657== 
==16657== For counts of detected and suppressed errors, rerun with: -v
==16657== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test358 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test358/assignment_3Vars_test358.c)
The Valgrind memory detector as below:
==16673== Memcheck, a memory error detector
==16673== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16673== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16673== Command: ./impl/assignment_3Vars_test358/assignment_3Vars_test358.out
==16673== Parent PID: 12124
==16673== 
==16673== 
==16673== HEAP SUMMARY:
==16673==     in use at exit: 0 bytes in 0 blocks
==16673==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16673== 
==16673== All heap blocks were freed -- no leaks are possible
==16673== 
==16673== For counts of detected and suppressed errors, rerun with: -v
==16673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test359 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test359/assignment_3Vars_test359.c)
The Valgrind memory detector as below:
==16688== Memcheck, a memory error detector
==16688== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16688== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16688== Command: ./impl/assignment_3Vars_test359/assignment_3Vars_test359.out
==16688== Parent PID: 12124
==16688== 
==16688== 
==16688== HEAP SUMMARY:
==16688==     in use at exit: 0 bytes in 0 blocks
==16688==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16688== 
==16688== All heap blocks were freed -- no leaks are possible
==16688== 
==16688== For counts of detected and suppressed errors, rerun with: -v
==16688== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test36 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test36/assignment_3Vars_test36.c)
The Valgrind memory detector as below:
==16703== Memcheck, a memory error detector
==16703== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16703== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16703== Command: ./impl/assignment_3Vars_test36/assignment_3Vars_test36.out
==16703== Parent PID: 12124
==16703== 
==16703== 
==16703== HEAP SUMMARY:
==16703==     in use at exit: 0 bytes in 0 blocks
==16703==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16703== 
==16703== All heap blocks were freed -- no leaks are possible
==16703== 
==16703== For counts of detected and suppressed errors, rerun with: -v
==16703== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test360 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:64 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test360/assignment_3Vars_test360.c)
The Valgrind memory detector as below:
==16718== Memcheck, a memory error detector
==16718== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16718== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16718== Command: ./impl/assignment_3Vars_test360/assignment_3Vars_test360.out
==16718== Parent PID: 12124
==16718== 
==16718== 
==16718== HEAP SUMMARY:
==16718==     in use at exit: 0 bytes in 0 blocks
==16718==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16718== 
==16718== All heap blocks were freed -- no leaks are possible
==16718== 
==16718== For counts of detected and suppressed errors, rerun with: -v
==16718== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test361 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test361/assignment_3Vars_test361.c)
The Valgrind memory detector as below:
==16734== Memcheck, a memory error detector
==16734== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16734== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16734== Command: ./impl/assignment_3Vars_test361/assignment_3Vars_test361.out
==16734== Parent PID: 12124
==16734== 
==16734== 
==16734== HEAP SUMMARY:
==16734==     in use at exit: 0 bytes in 0 blocks
==16734==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16734== 
==16734== All heap blocks were freed -- no leaks are possible
==16734== 
==16734== For counts of detected and suppressed errors, rerun with: -v
==16734== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test362 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test362/assignment_3Vars_test362.c)
The Valgrind memory detector as below:
==16749== Memcheck, a memory error detector
==16749== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16749== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16749== Command: ./impl/assignment_3Vars_test362/assignment_3Vars_test362.out
==16749== Parent PID: 12124
==16749== 
==16749== 
==16749== HEAP SUMMARY:
==16749==     in use at exit: 0 bytes in 0 blocks
==16749==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16749== 
==16749== All heap blocks were freed -- no leaks are possible
==16749== 
==16749== For counts of detected and suppressed errors, rerun with: -v
==16749== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test363 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test363/assignment_3Vars_test363.c)
The Valgrind memory detector as below:
==16764== Memcheck, a memory error detector
==16764== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16764== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16764== Command: ./impl/assignment_3Vars_test363/assignment_3Vars_test363.out
==16764== Parent PID: 12124
==16764== 
==16764== 
==16764== HEAP SUMMARY:
==16764==     in use at exit: 0 bytes in 0 blocks
==16764==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16764== 
==16764== All heap blocks were freed -- no leaks are possible
==16764== 
==16764== For counts of detected and suppressed errors, rerun with: -v
==16764== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test364 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test364/assignment_3Vars_test364.c)
The Valgrind memory detector as below:
==16779== Memcheck, a memory error detector
==16779== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16779== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16779== Command: ./impl/assignment_3Vars_test364/assignment_3Vars_test364.out
==16779== Parent PID: 12124
==16779== 
==16779== 
==16779== HEAP SUMMARY:
==16779==     in use at exit: 0 bytes in 0 blocks
==16779==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16779== 
==16779== All heap blocks were freed -- no leaks are possible
==16779== 
==16779== For counts of detected and suppressed errors, rerun with: -v
==16779== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test365 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test365/assignment_3Vars_test365.c)
The Valgrind memory detector as below:
==16802== Memcheck, a memory error detector
==16802== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16802== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16802== Command: ./impl/assignment_3Vars_test365/assignment_3Vars_test365.out
==16802== Parent PID: 12124
==16802== 
==16802== 
==16802== HEAP SUMMARY:
==16802==     in use at exit: 0 bytes in 0 blocks
==16802==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16802== 
==16802== All heap blocks were freed -- no leaks are possible
==16802== 
==16802== For counts of detected and suppressed errors, rerun with: -v
==16802== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test366 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test366/assignment_3Vars_test366.c)
The Valgrind memory detector as below:
==16817== Memcheck, a memory error detector
==16817== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16817== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16817== Command: ./impl/assignment_3Vars_test366/assignment_3Vars_test366.out
==16817== Parent PID: 12124
==16817== 
==16817== 
==16817== HEAP SUMMARY:
==16817==     in use at exit: 0 bytes in 0 blocks
==16817==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16817== 
==16817== All heap blocks were freed -- no leaks are possible
==16817== 
==16817== For counts of detected and suppressed errors, rerun with: -v
==16817== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test367 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test367/assignment_3Vars_test367.c)
The Valgrind memory detector as below:
==16834== Memcheck, a memory error detector
==16834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16834== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16834== Command: ./impl/assignment_3Vars_test367/assignment_3Vars_test367.out
==16834== Parent PID: 12124
==16834== 
==16834== 
==16834== HEAP SUMMARY:
==16834==     in use at exit: 0 bytes in 0 blocks
==16834==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16834== 
==16834== All heap blocks were freed -- no leaks are possible
==16834== 
==16834== For counts of detected and suppressed errors, rerun with: -v
==16834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test368 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test368/assignment_3Vars_test368.c)
The Valgrind memory detector as below:
==16850== Memcheck, a memory error detector
==16850== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16850== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16850== Command: ./impl/assignment_3Vars_test368/assignment_3Vars_test368.out
==16850== Parent PID: 12124
==16850== 
==16850== 
==16850== HEAP SUMMARY:
==16850==     in use at exit: 0 bytes in 0 blocks
==16850==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16850== 
==16850== All heap blocks were freed -- no leaks are possible
==16850== 
==16850== For counts of detected and suppressed errors, rerun with: -v
==16850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test369 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test369/assignment_3Vars_test369.c)
The Valgrind memory detector as below:
==16875== Memcheck, a memory error detector
==16875== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16875== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16875== Command: ./impl/assignment_3Vars_test369/assignment_3Vars_test369.out
==16875== Parent PID: 12124
==16875== 
==16875== 
==16875== HEAP SUMMARY:
==16875==     in use at exit: 0 bytes in 0 blocks
==16875==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16875== 
==16875== All heap blocks were freed -- no leaks are possible
==16875== 
==16875== For counts of detected and suppressed errors, rerun with: -v
==16875== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test37 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test37/assignment_3Vars_test37.c)
The Valgrind memory detector as below:
==16890== Memcheck, a memory error detector
==16890== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16890== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16890== Command: ./impl/assignment_3Vars_test37/assignment_3Vars_test37.out
==16890== Parent PID: 12124
==16890== 
==16890== 
==16890== HEAP SUMMARY:
==16890==     in use at exit: 0 bytes in 0 blocks
==16890==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16890== 
==16890== All heap blocks were freed -- no leaks are possible
==16890== 
==16890== For counts of detected and suppressed errors, rerun with: -v
==16890== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test370 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test370/assignment_3Vars_test370.c)
The Valgrind memory detector as below:
==16905== Memcheck, a memory error detector
==16905== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16905== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16905== Command: ./impl/assignment_3Vars_test370/assignment_3Vars_test370.out
==16905== Parent PID: 12124
==16905== 
==16905== 
==16905== HEAP SUMMARY:
==16905==     in use at exit: 0 bytes in 0 blocks
==16905==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16905== 
==16905== All heap blocks were freed -- no leaks are possible
==16905== 
==16905== For counts of detected and suppressed errors, rerun with: -v
==16905== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test371 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test371/assignment_3Vars_test371.c)
The Valgrind memory detector as below:
==16920== Memcheck, a memory error detector
==16920== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16920== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16920== Command: ./impl/assignment_3Vars_test371/assignment_3Vars_test371.out
==16920== Parent PID: 12124
==16920== 
==16920== 
==16920== HEAP SUMMARY:
==16920==     in use at exit: 0 bytes in 0 blocks
==16920==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16920== 
==16920== All heap blocks were freed -- no leaks are possible
==16920== 
==16920== For counts of detected and suppressed errors, rerun with: -v
==16920== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test372 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test372/assignment_3Vars_test372.c)
The Valgrind memory detector as below:
==16936== Memcheck, a memory error detector
==16936== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16936== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16936== Command: ./impl/assignment_3Vars_test372/assignment_3Vars_test372.out
==16936== Parent PID: 12124
==16936== 
==16936== 
==16936== HEAP SUMMARY:
==16936==     in use at exit: 0 bytes in 0 blocks
==16936==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16936== 
==16936== All heap blocks were freed -- no leaks are possible
==16936== 
==16936== For counts of detected and suppressed errors, rerun with: -v
==16936== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test373 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test373/assignment_3Vars_test373.c)
The Valgrind memory detector as below:
==16951== Memcheck, a memory error detector
==16951== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16951== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16951== Command: ./impl/assignment_3Vars_test373/assignment_3Vars_test373.out
==16951== Parent PID: 12124
==16951== 
==16951== 
==16951== HEAP SUMMARY:
==16951==     in use at exit: 0 bytes in 0 blocks
==16951==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16951== 
==16951== All heap blocks were freed -- no leaks are possible
==16951== 
==16951== For counts of detected and suppressed errors, rerun with: -v
==16951== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test374 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test374/assignment_3Vars_test374.c)
The Valgrind memory detector as below:
==16966== Memcheck, a memory error detector
==16966== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16966== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16966== Command: ./impl/assignment_3Vars_test374/assignment_3Vars_test374.out
==16966== Parent PID: 12124
==16966== 
==16966== 
==16966== HEAP SUMMARY:
==16966==     in use at exit: 0 bytes in 0 blocks
==16966==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16966== 
==16966== All heap blocks were freed -- no leaks are possible
==16966== 
==16966== For counts of detected and suppressed errors, rerun with: -v
==16966== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test375 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test375/assignment_3Vars_test375.c)
The Valgrind memory detector as below:
==16982== Memcheck, a memory error detector
==16982== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16982== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16982== Command: ./impl/assignment_3Vars_test375/assignment_3Vars_test375.out
==16982== Parent PID: 12124
==16982== 
==16982== 
==16982== HEAP SUMMARY:
==16982==     in use at exit: 0 bytes in 0 blocks
==16982==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16982== 
==16982== All heap blocks were freed -- no leaks are possible
==16982== 
==16982== For counts of detected and suppressed errors, rerun with: -v
==16982== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test376 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test376/assignment_3Vars_test376.c)
The Valgrind memory detector as below:
==16997== Memcheck, a memory error detector
==16997== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16997== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16997== Command: ./impl/assignment_3Vars_test376/assignment_3Vars_test376.out
==16997== Parent PID: 12124
==16997== 
==16997== 
==16997== HEAP SUMMARY:
==16997==     in use at exit: 0 bytes in 0 blocks
==16997==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==16997== 
==16997== All heap blocks were freed -- no leaks are possible
==16997== 
==16997== For counts of detected and suppressed errors, rerun with: -v
==16997== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test377 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test377/assignment_3Vars_test377.c)
The Valgrind memory detector as below:
==17012== Memcheck, a memory error detector
==17012== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17012== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17012== Command: ./impl/assignment_3Vars_test377/assignment_3Vars_test377.out
==17012== Parent PID: 12124
==17012== 
==17012== 
==17012== HEAP SUMMARY:
==17012==     in use at exit: 0 bytes in 0 blocks
==17012==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17012== 
==17012== All heap blocks were freed -- no leaks are possible
==17012== 
==17012== For counts of detected and suppressed errors, rerun with: -v
==17012== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test378 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test378/assignment_3Vars_test378.c)
The Valgrind memory detector as below:
==17027== Memcheck, a memory error detector
==17027== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17027== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17027== Command: ./impl/assignment_3Vars_test378/assignment_3Vars_test378.out
==17027== Parent PID: 12124
==17027== 
==17027== 
==17027== HEAP SUMMARY:
==17027==     in use at exit: 0 bytes in 0 blocks
==17027==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17027== 
==17027== All heap blocks were freed -- no leaks are possible
==17027== 
==17027== For counts of detected and suppressed errors, rerun with: -v
==17027== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test379 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test379/assignment_3Vars_test379.c)
The Valgrind memory detector as below:
==17043== Memcheck, a memory error detector
==17043== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17043== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17043== Command: ./impl/assignment_3Vars_test379/assignment_3Vars_test379.out
==17043== Parent PID: 12124
==17043== 
==17043== 
==17043== HEAP SUMMARY:
==17043==     in use at exit: 0 bytes in 0 blocks
==17043==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17043== 
==17043== All heap blocks were freed -- no leaks are possible
==17043== 
==17043== For counts of detected and suppressed errors, rerun with: -v
==17043== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test38 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test38/assignment_3Vars_test38.c)
The Valgrind memory detector as below:
==17058== Memcheck, a memory error detector
==17058== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17058== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17058== Command: ./impl/assignment_3Vars_test38/assignment_3Vars_test38.out
==17058== Parent PID: 12124
==17058== 
==17058== 
==17058== HEAP SUMMARY:
==17058==     in use at exit: 0 bytes in 0 blocks
==17058==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17058== 
==17058== All heap blocks were freed -- no leaks are possible
==17058== 
==17058== For counts of detected and suppressed errors, rerun with: -v
==17058== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test380 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test380/assignment_3Vars_test380.c)
The Valgrind memory detector as below:
==17074== Memcheck, a memory error detector
==17074== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17074== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17074== Command: ./impl/assignment_3Vars_test380/assignment_3Vars_test380.out
==17074== Parent PID: 12124
==17074== 
==17074== 
==17074== HEAP SUMMARY:
==17074==     in use at exit: 0 bytes in 0 blocks
==17074==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17074== 
==17074== All heap blocks were freed -- no leaks are possible
==17074== 
==17074== For counts of detected and suppressed errors, rerun with: -v
==17074== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test381 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test381/assignment_3Vars_test381.c)
The Valgrind memory detector as below:
==17089== Memcheck, a memory error detector
==17089== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17089== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17089== Command: ./impl/assignment_3Vars_test381/assignment_3Vars_test381.out
==17089== Parent PID: 12124
==17089== 
==17089== 
==17089== HEAP SUMMARY:
==17089==     in use at exit: 0 bytes in 0 blocks
==17089==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17089== 
==17089== All heap blocks were freed -- no leaks are possible
==17089== 
==17089== For counts of detected and suppressed errors, rerun with: -v
==17089== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test382 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test382/assignment_3Vars_test382.c)
The Valgrind memory detector as below:
==17105== Memcheck, a memory error detector
==17105== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17105== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17105== Command: ./impl/assignment_3Vars_test382/assignment_3Vars_test382.out
==17105== Parent PID: 12124
==17105== 
==17105== 
==17105== HEAP SUMMARY:
==17105==     in use at exit: 0 bytes in 0 blocks
==17105==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17105== 
==17105== All heap blocks were freed -- no leaks are possible
==17105== 
==17105== For counts of detected and suppressed errors, rerun with: -v
==17105== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test383 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test383/assignment_3Vars_test383.c)
The Valgrind memory detector as below:
==17120== Memcheck, a memory error detector
==17120== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17120== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17120== Command: ./impl/assignment_3Vars_test383/assignment_3Vars_test383.out
==17120== Parent PID: 12124
==17120== 
==17120== 
==17120== HEAP SUMMARY:
==17120==     in use at exit: 0 bytes in 0 blocks
==17120==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17120== 
==17120== All heap blocks were freed -- no leaks are possible
==17120== 
==17120== For counts of detected and suppressed errors, rerun with: -v
==17120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test384 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test384/assignment_3Vars_test384.c)
The Valgrind memory detector as below:
==17135== Memcheck, a memory error detector
==17135== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17135== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17135== Command: ./impl/assignment_3Vars_test384/assignment_3Vars_test384.out
==17135== Parent PID: 12124
==17135== 
==17135== 
==17135== HEAP SUMMARY:
==17135==     in use at exit: 0 bytes in 0 blocks
==17135==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17135== 
==17135== All heap blocks were freed -- no leaks are possible
==17135== 
==17135== For counts of detected and suppressed errors, rerun with: -v
==17135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test385 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test385/assignment_3Vars_test385.c)
The Valgrind memory detector as below:
==17153== Memcheck, a memory error detector
==17153== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17153== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17153== Command: ./impl/assignment_3Vars_test385/assignment_3Vars_test385.out
==17153== Parent PID: 12124
==17153== 
==17153== 
==17153== HEAP SUMMARY:
==17153==     in use at exit: 0 bytes in 0 blocks
==17153==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17153== 
==17153== All heap blocks were freed -- no leaks are possible
==17153== 
==17153== For counts of detected and suppressed errors, rerun with: -v
==17153== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test386 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test386/assignment_3Vars_test386.c)
The Valgrind memory detector as below:
==17168== Memcheck, a memory error detector
==17168== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17168== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17168== Command: ./impl/assignment_3Vars_test386/assignment_3Vars_test386.out
==17168== Parent PID: 12124
==17168== 
==17168== 
==17168== HEAP SUMMARY:
==17168==     in use at exit: 0 bytes in 0 blocks
==17168==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17168== 
==17168== All heap blocks were freed -- no leaks are possible
==17168== 
==17168== For counts of detected and suppressed errors, rerun with: -v
==17168== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test387 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test387/assignment_3Vars_test387.c)
The Valgrind memory detector as below:
==17183== Memcheck, a memory error detector
==17183== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17183== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17183== Command: ./impl/assignment_3Vars_test387/assignment_3Vars_test387.out
==17183== Parent PID: 12124
==17183== 
==17183== 
==17183== HEAP SUMMARY:
==17183==     in use at exit: 0 bytes in 0 blocks
==17183==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17183== 
==17183== All heap blocks were freed -- no leaks are possible
==17183== 
==17183== For counts of detected and suppressed errors, rerun with: -v
==17183== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test388 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test388/assignment_3Vars_test388.c)
The Valgrind memory detector as below:
==17198== Memcheck, a memory error detector
==17198== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17198== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17198== Command: ./impl/assignment_3Vars_test388/assignment_3Vars_test388.out
==17198== Parent PID: 12124
==17198== 
==17198== 
==17198== HEAP SUMMARY:
==17198==     in use at exit: 0 bytes in 0 blocks
==17198==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17198== 
==17198== All heap blocks were freed -- no leaks are possible
==17198== 
==17198== For counts of detected and suppressed errors, rerun with: -v
==17198== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test389 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test389/assignment_3Vars_test389.c)
The Valgrind memory detector as below:
==17214== Memcheck, a memory error detector
==17214== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17214== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17214== Command: ./impl/assignment_3Vars_test389/assignment_3Vars_test389.out
==17214== Parent PID: 12124
==17214== 
==17214== 
==17214== HEAP SUMMARY:
==17214==     in use at exit: 0 bytes in 0 blocks
==17214==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17214== 
==17214== All heap blocks were freed -- no leaks are possible
==17214== 
==17214== For counts of detected and suppressed errors, rerun with: -v
==17214== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test39 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test39/assignment_3Vars_test39.c)
The Valgrind memory detector as below:
==17229== Memcheck, a memory error detector
==17229== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17229== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17229== Command: ./impl/assignment_3Vars_test39/assignment_3Vars_test39.out
==17229== Parent PID: 12124
==17229== 
==17229== 
==17229== HEAP SUMMARY:
==17229==     in use at exit: 0 bytes in 0 blocks
==17229==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17229== 
==17229== All heap blocks were freed -- no leaks are possible
==17229== 
==17229== For counts of detected and suppressed errors, rerun with: -v
==17229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test390 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test390/assignment_3Vars_test390.c)
The Valgrind memory detector as below:
==17244== Memcheck, a memory error detector
==17244== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17244== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17244== Command: ./impl/assignment_3Vars_test390/assignment_3Vars_test390.out
==17244== Parent PID: 12124
==17244== 
==17244== 
==17244== HEAP SUMMARY:
==17244==     in use at exit: 0 bytes in 0 blocks
==17244==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17244== 
==17244== All heap blocks were freed -- no leaks are possible
==17244== 
==17244== For counts of detected and suppressed errors, rerun with: -v
==17244== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test391 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test391/assignment_3Vars_test391.c)
The Valgrind memory detector as below:
==17259== Memcheck, a memory error detector
==17259== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17259== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17259== Command: ./impl/assignment_3Vars_test391/assignment_3Vars_test391.out
==17259== Parent PID: 12124
==17259== 
==17259== 
==17259== HEAP SUMMARY:
==17259==     in use at exit: 0 bytes in 0 blocks
==17259==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17259== 
==17259== All heap blocks were freed -- no leaks are possible
==17259== 
==17259== For counts of detected and suppressed errors, rerun with: -v
==17259== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test392 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test392/assignment_3Vars_test392.c)
The Valgrind memory detector as below:
==17274== Memcheck, a memory error detector
==17274== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17274== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17274== Command: ./impl/assignment_3Vars_test392/assignment_3Vars_test392.out
==17274== Parent PID: 12124
==17274== 
==17274== 
==17274== HEAP SUMMARY:
==17274==     in use at exit: 0 bytes in 0 blocks
==17274==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17274== 
==17274== All heap blocks were freed -- no leaks are possible
==17274== 
==17274== For counts of detected and suppressed errors, rerun with: -v
==17274== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test393 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test393/assignment_3Vars_test393.c)
The Valgrind memory detector as below:
==17290== Memcheck, a memory error detector
==17290== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17290== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17290== Command: ./impl/assignment_3Vars_test393/assignment_3Vars_test393.out
==17290== Parent PID: 12124
==17290== 
==17290== 
==17290== HEAP SUMMARY:
==17290==     in use at exit: 0 bytes in 0 blocks
==17290==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17290== 
==17290== All heap blocks were freed -- no leaks are possible
==17290== 
==17290== For counts of detected and suppressed errors, rerun with: -v
==17290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test394 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test394/assignment_3Vars_test394.c)
The Valgrind memory detector as below:
==17305== Memcheck, a memory error detector
==17305== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17305== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17305== Command: ./impl/assignment_3Vars_test394/assignment_3Vars_test394.out
==17305== Parent PID: 12124
==17305== 
==17305== 
==17305== HEAP SUMMARY:
==17305==     in use at exit: 0 bytes in 0 blocks
==17305==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17305== 
==17305== All heap blocks were freed -- no leaks are possible
==17305== 
==17305== For counts of detected and suppressed errors, rerun with: -v
==17305== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test395 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test395/assignment_3Vars_test395.c)
The Valgrind memory detector as below:
==17320== Memcheck, a memory error detector
==17320== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17320== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17320== Command: ./impl/assignment_3Vars_test395/assignment_3Vars_test395.out
==17320== Parent PID: 12124
==17320== 
==17320== 
==17320== HEAP SUMMARY:
==17320==     in use at exit: 0 bytes in 0 blocks
==17320==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17320== 
==17320== All heap blocks were freed -- no leaks are possible
==17320== 
==17320== For counts of detected and suppressed errors, rerun with: -v
==17320== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test396 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test396/assignment_3Vars_test396.c)
The Valgrind memory detector as below:
==17335== Memcheck, a memory error detector
==17335== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17335== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17335== Command: ./impl/assignment_3Vars_test396/assignment_3Vars_test396.out
==17335== Parent PID: 12124
==17335== 
==17335== 
==17335== HEAP SUMMARY:
==17335==     in use at exit: 0 bytes in 0 blocks
==17335==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17335== 
==17335== All heap blocks were freed -- no leaks are possible
==17335== 
==17335== For counts of detected and suppressed errors, rerun with: -v
==17335== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test397 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test397/assignment_3Vars_test397.c)
The Valgrind memory detector as below:
==17351== Memcheck, a memory error detector
==17351== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17351== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17351== Command: ./impl/assignment_3Vars_test397/assignment_3Vars_test397.out
==17351== Parent PID: 12124
==17351== 
==17351== 
==17351== HEAP SUMMARY:
==17351==     in use at exit: 0 bytes in 0 blocks
==17351==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17351== 
==17351== All heap blocks were freed -- no leaks are possible
==17351== 
==17351== For counts of detected and suppressed errors, rerun with: -v
==17351== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test398 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test398/assignment_3Vars_test398.c)
The Valgrind memory detector as below:
==17366== Memcheck, a memory error detector
==17366== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17366== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17366== Command: ./impl/assignment_3Vars_test398/assignment_3Vars_test398.out
==17366== Parent PID: 12124
==17366== 
==17366== 
==17366== HEAP SUMMARY:
==17366==     in use at exit: 0 bytes in 0 blocks
==17366==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17366== 
==17366== All heap blocks were freed -- no leaks are possible
==17366== 
==17366== For counts of detected and suppressed errors, rerun with: -v
==17366== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test399 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test399/assignment_3Vars_test399.c)
The Valgrind memory detector as below:
==17381== Memcheck, a memory error detector
==17381== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17381== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17381== Command: ./impl/assignment_3Vars_test399/assignment_3Vars_test399.out
==17381== Parent PID: 12124
==17381== 
==17381== 
==17381== HEAP SUMMARY:
==17381==     in use at exit: 0 bytes in 0 blocks
==17381==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17381== 
==17381== All heap blocks were freed -- no leaks are possible
==17381== 
==17381== For counts of detected and suppressed errors, rerun with: -v
==17381== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test4 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test4/assignment_3Vars_test4.c)
The Valgrind memory detector as below:
==17396== Memcheck, a memory error detector
==17396== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17396== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17396== Command: ./impl/assignment_3Vars_test4/assignment_3Vars_test4.out
==17396== Parent PID: 12124
==17396== 
==17396== 
==17396== HEAP SUMMARY:
==17396==     in use at exit: 0 bytes in 0 blocks
==17396==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17396== 
==17396== All heap blocks were freed -- no leaks are possible
==17396== 
==17396== For counts of detected and suppressed errors, rerun with: -v
==17396== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test40 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test40/assignment_3Vars_test40.c)
The Valgrind memory detector as below:
==17412== Memcheck, a memory error detector
==17412== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17412== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17412== Command: ./impl/assignment_3Vars_test40/assignment_3Vars_test40.out
==17412== Parent PID: 12124
==17412== 
==17412== 
==17412== HEAP SUMMARY:
==17412==     in use at exit: 0 bytes in 0 blocks
==17412==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17412== 
==17412== All heap blocks were freed -- no leaks are possible
==17412== 
==17412== For counts of detected and suppressed errors, rerun with: -v
==17412== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test400 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test400/assignment_3Vars_test400.c)
The Valgrind memory detector as below:
==17428== Memcheck, a memory error detector
==17428== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17428== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17428== Command: ./impl/assignment_3Vars_test400/assignment_3Vars_test400.out
==17428== Parent PID: 12124
==17428== 
==17428== 
==17428== HEAP SUMMARY:
==17428==     in use at exit: 0 bytes in 0 blocks
==17428==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17428== 
==17428== All heap blocks were freed -- no leaks are possible
==17428== 
==17428== For counts of detected and suppressed errors, rerun with: -v
==17428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test401 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test401/assignment_3Vars_test401.c)
The Valgrind memory detector as below:
==17443== Memcheck, a memory error detector
==17443== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17443== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17443== Command: ./impl/assignment_3Vars_test401/assignment_3Vars_test401.out
==17443== Parent PID: 12124
==17443== 
==17443== 
==17443== HEAP SUMMARY:
==17443==     in use at exit: 0 bytes in 0 blocks
==17443==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17443== 
==17443== All heap blocks were freed -- no leaks are possible
==17443== 
==17443== For counts of detected and suppressed errors, rerun with: -v
==17443== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test402 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test402/assignment_3Vars_test402.c)
The Valgrind memory detector as below:
==17459== Memcheck, a memory error detector
==17459== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17459== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17459== Command: ./impl/assignment_3Vars_test402/assignment_3Vars_test402.out
==17459== Parent PID: 12124
==17459== 
==17459== 
==17459== HEAP SUMMARY:
==17459==     in use at exit: 0 bytes in 0 blocks
==17459==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17459== 
==17459== All heap blocks were freed -- no leaks are possible
==17459== 
==17459== For counts of detected and suppressed errors, rerun with: -v
==17459== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test403 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test403/assignment_3Vars_test403.c)
The Valgrind memory detector as below:
==17476== Memcheck, a memory error detector
==17476== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17476== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17476== Command: ./impl/assignment_3Vars_test403/assignment_3Vars_test403.out
==17476== Parent PID: 12124
==17476== 
==17476== 
==17476== HEAP SUMMARY:
==17476==     in use at exit: 0 bytes in 0 blocks
==17476==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17476== 
==17476== All heap blocks were freed -- no leaks are possible
==17476== 
==17476== For counts of detected and suppressed errors, rerun with: -v
==17476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test404 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test404/assignment_3Vars_test404.c)
The Valgrind memory detector as below:
==17491== Memcheck, a memory error detector
==17491== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17491== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17491== Command: ./impl/assignment_3Vars_test404/assignment_3Vars_test404.out
==17491== Parent PID: 12124
==17491== 
==17491== 
==17491== HEAP SUMMARY:
==17491==     in use at exit: 0 bytes in 0 blocks
==17491==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17491== 
==17491== All heap blocks were freed -- no leaks are possible
==17491== 
==17491== For counts of detected and suppressed errors, rerun with: -v
==17491== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test405 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test405/assignment_3Vars_test405.c)
The Valgrind memory detector as below:
==17506== Memcheck, a memory error detector
==17506== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17506== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17506== Command: ./impl/assignment_3Vars_test405/assignment_3Vars_test405.out
==17506== Parent PID: 12124
==17506== 
==17506== 
==17506== HEAP SUMMARY:
==17506==     in use at exit: 0 bytes in 0 blocks
==17506==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17506== 
==17506== All heap blocks were freed -- no leaks are possible
==17506== 
==17506== For counts of detected and suppressed errors, rerun with: -v
==17506== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test406 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test406/assignment_3Vars_test406.c)
The Valgrind memory detector as below:
==17523== Memcheck, a memory error detector
==17523== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17523== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17523== Command: ./impl/assignment_3Vars_test406/assignment_3Vars_test406.out
==17523== Parent PID: 12124
==17523== 
==17523== 
==17523== HEAP SUMMARY:
==17523==     in use at exit: 0 bytes in 0 blocks
==17523==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17523== 
==17523== All heap blocks were freed -- no leaks are possible
==17523== 
==17523== For counts of detected and suppressed errors, rerun with: -v
==17523== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test407 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test407/assignment_3Vars_test407.c)
The Valgrind memory detector as below:
==17541== Memcheck, a memory error detector
==17541== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17541== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17541== Command: ./impl/assignment_3Vars_test407/assignment_3Vars_test407.out
==17541== Parent PID: 12124
==17541== 
==17541== 
==17541== HEAP SUMMARY:
==17541==     in use at exit: 0 bytes in 0 blocks
==17541==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17541== 
==17541== All heap blocks were freed -- no leaks are possible
==17541== 
==17541== For counts of detected and suppressed errors, rerun with: -v
==17541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test408 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test408/assignment_3Vars_test408.c)
The Valgrind memory detector as below:
==17556== Memcheck, a memory error detector
==17556== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17556== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17556== Command: ./impl/assignment_3Vars_test408/assignment_3Vars_test408.out
==17556== Parent PID: 12124
==17556== 
==17556== 
==17556== HEAP SUMMARY:
==17556==     in use at exit: 0 bytes in 0 blocks
==17556==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17556== 
==17556== All heap blocks were freed -- no leaks are possible
==17556== 
==17556== For counts of detected and suppressed errors, rerun with: -v
==17556== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test409 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test409/assignment_3Vars_test409.c)
The Valgrind memory detector as below:
==17571== Memcheck, a memory error detector
==17571== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17571== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17571== Command: ./impl/assignment_3Vars_test409/assignment_3Vars_test409.out
==17571== Parent PID: 12124
==17571== 
==17571== 
==17571== HEAP SUMMARY:
==17571==     in use at exit: 0 bytes in 0 blocks
==17571==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17571== 
==17571== All heap blocks were freed -- no leaks are possible
==17571== 
==17571== For counts of detected and suppressed errors, rerun with: -v
==17571== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test41 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test41/assignment_3Vars_test41.c)
The Valgrind memory detector as below:
==17587== Memcheck, a memory error detector
==17587== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17587== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17587== Command: ./impl/assignment_3Vars_test41/assignment_3Vars_test41.out
==17587== Parent PID: 12124
==17587== 
==17587== 
==17587== HEAP SUMMARY:
==17587==     in use at exit: 0 bytes in 0 blocks
==17587==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17587== 
==17587== All heap blocks were freed -- no leaks are possible
==17587== 
==17587== For counts of detected and suppressed errors, rerun with: -v
==17587== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test410 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test410/assignment_3Vars_test410.c)
The Valgrind memory detector as below:
==17603== Memcheck, a memory error detector
==17603== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17603== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17603== Command: ./impl/assignment_3Vars_test410/assignment_3Vars_test410.out
==17603== Parent PID: 12124
==17603== 
==17603== 
==17603== HEAP SUMMARY:
==17603==     in use at exit: 0 bytes in 0 blocks
==17603==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17603== 
==17603== All heap blocks were freed -- no leaks are possible
==17603== 
==17603== For counts of detected and suppressed errors, rerun with: -v
==17603== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test411 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test411/assignment_3Vars_test411.c)
The Valgrind memory detector as below:
==17618== Memcheck, a memory error detector
==17618== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17618== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17618== Command: ./impl/assignment_3Vars_test411/assignment_3Vars_test411.out
==17618== Parent PID: 12124
==17618== 
==17618== 
==17618== HEAP SUMMARY:
==17618==     in use at exit: 0 bytes in 0 blocks
==17618==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17618== 
==17618== All heap blocks were freed -- no leaks are possible
==17618== 
==17618== For counts of detected and suppressed errors, rerun with: -v
==17618== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test412 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test412/assignment_3Vars_test412.c)
The Valgrind memory detector as below:
==17633== Memcheck, a memory error detector
==17633== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17633== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17633== Command: ./impl/assignment_3Vars_test412/assignment_3Vars_test412.out
==17633== Parent PID: 12124
==17633== 
==17633== 
==17633== HEAP SUMMARY:
==17633==     in use at exit: 0 bytes in 0 blocks
==17633==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17633== 
==17633== All heap blocks were freed -- no leaks are possible
==17633== 
==17633== For counts of detected and suppressed errors, rerun with: -v
==17633== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test413 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test413/assignment_3Vars_test413.c)
The Valgrind memory detector as below:
==17648== Memcheck, a memory error detector
==17648== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17648== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17648== Command: ./impl/assignment_3Vars_test413/assignment_3Vars_test413.out
==17648== Parent PID: 12124
==17648== 
==17648== 
==17648== HEAP SUMMARY:
==17648==     in use at exit: 0 bytes in 0 blocks
==17648==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17648== 
==17648== All heap blocks were freed -- no leaks are possible
==17648== 
==17648== For counts of detected and suppressed errors, rerun with: -v
==17648== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test414 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test414/assignment_3Vars_test414.c)
The Valgrind memory detector as below:
==17665== Memcheck, a memory error detector
==17665== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17665== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17665== Command: ./impl/assignment_3Vars_test414/assignment_3Vars_test414.out
==17665== Parent PID: 12124
==17665== 
==17665== 
==17665== HEAP SUMMARY:
==17665==     in use at exit: 0 bytes in 0 blocks
==17665==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17665== 
==17665== All heap blocks were freed -- no leaks are possible
==17665== 
==17665== For counts of detected and suppressed errors, rerun with: -v
==17665== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test415 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test415/assignment_3Vars_test415.c)
The Valgrind memory detector as below:
==17680== Memcheck, a memory error detector
==17680== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17680== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17680== Command: ./impl/assignment_3Vars_test415/assignment_3Vars_test415.out
==17680== Parent PID: 12124
==17680== 
==17680== 
==17680== HEAP SUMMARY:
==17680==     in use at exit: 0 bytes in 0 blocks
==17680==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17680== 
==17680== All heap blocks were freed -- no leaks are possible
==17680== 
==17680== For counts of detected and suppressed errors, rerun with: -v
==17680== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test416 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test416/assignment_3Vars_test416.c)
The Valgrind memory detector as below:
==17695== Memcheck, a memory error detector
==17695== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17695== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17695== Command: ./impl/assignment_3Vars_test416/assignment_3Vars_test416.out
==17695== Parent PID: 12124
==17695== 
==17695== 
==17695== HEAP SUMMARY:
==17695==     in use at exit: 0 bytes in 0 blocks
==17695==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17695== 
==17695== All heap blocks were freed -- no leaks are possible
==17695== 
==17695== For counts of detected and suppressed errors, rerun with: -v
==17695== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test417 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test417/assignment_3Vars_test417.c)
The Valgrind memory detector as below:
==17710== Memcheck, a memory error detector
==17710== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17710== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17710== Command: ./impl/assignment_3Vars_test417/assignment_3Vars_test417.out
==17710== Parent PID: 12124
==17710== 
==17710== 
==17710== HEAP SUMMARY:
==17710==     in use at exit: 0 bytes in 0 blocks
==17710==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17710== 
==17710== All heap blocks were freed -- no leaks are possible
==17710== 
==17710== For counts of detected and suppressed errors, rerun with: -v
==17710== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test418 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test418/assignment_3Vars_test418.c)
The Valgrind memory detector as below:
==17726== Memcheck, a memory error detector
==17726== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17726== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17726== Command: ./impl/assignment_3Vars_test418/assignment_3Vars_test418.out
==17726== Parent PID: 12124
==17726== 
==17726== 
==17726== HEAP SUMMARY:
==17726==     in use at exit: 0 bytes in 0 blocks
==17726==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17726== 
==17726== All heap blocks were freed -- no leaks are possible
==17726== 
==17726== For counts of detected and suppressed errors, rerun with: -v
==17726== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test419 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test419/assignment_3Vars_test419.c)
The Valgrind memory detector as below:
==17741== Memcheck, a memory error detector
==17741== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17741== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17741== Command: ./impl/assignment_3Vars_test419/assignment_3Vars_test419.out
==17741== Parent PID: 12124
==17741== 
==17741== 
==17741== HEAP SUMMARY:
==17741==     in use at exit: 0 bytes in 0 blocks
==17741==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17741== 
==17741== All heap blocks were freed -- no leaks are possible
==17741== 
==17741== For counts of detected and suppressed errors, rerun with: -v
==17741== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test42 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test42/assignment_3Vars_test42.c)
The Valgrind memory detector as below:
==17757== Memcheck, a memory error detector
==17757== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17757== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17757== Command: ./impl/assignment_3Vars_test42/assignment_3Vars_test42.out
==17757== Parent PID: 12124
==17757== 
==17757== 
==17757== HEAP SUMMARY:
==17757==     in use at exit: 0 bytes in 0 blocks
==17757==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17757== 
==17757== All heap blocks were freed -- no leaks are possible
==17757== 
==17757== For counts of detected and suppressed errors, rerun with: -v
==17757== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test420 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test420/assignment_3Vars_test420.c)
The Valgrind memory detector as below:
==17772== Memcheck, a memory error detector
==17772== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17772== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17772== Command: ./impl/assignment_3Vars_test420/assignment_3Vars_test420.out
==17772== Parent PID: 12124
==17772== 
==17772== 
==17772== HEAP SUMMARY:
==17772==     in use at exit: 0 bytes in 0 blocks
==17772==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17772== 
==17772== All heap blocks were freed -- no leaks are possible
==17772== 
==17772== For counts of detected and suppressed errors, rerun with: -v
==17772== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test421 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test421/assignment_3Vars_test421.c)
The Valgrind memory detector as below:
==17789== Memcheck, a memory error detector
==17789== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17789== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17789== Command: ./impl/assignment_3Vars_test421/assignment_3Vars_test421.out
==17789== Parent PID: 12124
==17789== 
==17789== 
==17789== HEAP SUMMARY:
==17789==     in use at exit: 0 bytes in 0 blocks
==17789==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17789== 
==17789== All heap blocks were freed -- no leaks are possible
==17789== 
==17789== For counts of detected and suppressed errors, rerun with: -v
==17789== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test422 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test422/assignment_3Vars_test422.c)
The Valgrind memory detector as below:
==17804== Memcheck, a memory error detector
==17804== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17804== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17804== Command: ./impl/assignment_3Vars_test422/assignment_3Vars_test422.out
==17804== Parent PID: 12124
==17804== 
==17804== 
==17804== HEAP SUMMARY:
==17804==     in use at exit: 0 bytes in 0 blocks
==17804==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17804== 
==17804== All heap blocks were freed -- no leaks are possible
==17804== 
==17804== For counts of detected and suppressed errors, rerun with: -v
==17804== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test423 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test423/assignment_3Vars_test423.c)
The Valgrind memory detector as below:
==17819== Memcheck, a memory error detector
==17819== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17819== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17819== Command: ./impl/assignment_3Vars_test423/assignment_3Vars_test423.out
==17819== Parent PID: 12124
==17819== 
==17819== 
==17819== HEAP SUMMARY:
==17819==     in use at exit: 0 bytes in 0 blocks
==17819==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17819== 
==17819== All heap blocks were freed -- no leaks are possible
==17819== 
==17819== For counts of detected and suppressed errors, rerun with: -v
==17819== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test424 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test424/assignment_3Vars_test424.c)
The Valgrind memory detector as below:
==17834== Memcheck, a memory error detector
==17834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17834== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17834== Command: ./impl/assignment_3Vars_test424/assignment_3Vars_test424.out
==17834== Parent PID: 12124
==17834== 
==17834== 
==17834== HEAP SUMMARY:
==17834==     in use at exit: 0 bytes in 0 blocks
==17834==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17834== 
==17834== All heap blocks were freed -- no leaks are possible
==17834== 
==17834== For counts of detected and suppressed errors, rerun with: -v
==17834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test425 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test425/assignment_3Vars_test425.c)
The Valgrind memory detector as below:
==17850== Memcheck, a memory error detector
==17850== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17850== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17850== Command: ./impl/assignment_3Vars_test425/assignment_3Vars_test425.out
==17850== Parent PID: 12124
==17850== 
==17850== 
==17850== HEAP SUMMARY:
==17850==     in use at exit: 0 bytes in 0 blocks
==17850==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17850== 
==17850== All heap blocks were freed -- no leaks are possible
==17850== 
==17850== For counts of detected and suppressed errors, rerun with: -v
==17850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test426 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test426/assignment_3Vars_test426.c)
The Valgrind memory detector as below:
==17865== Memcheck, a memory error detector
==17865== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17865== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17865== Command: ./impl/assignment_3Vars_test426/assignment_3Vars_test426.out
==17865== Parent PID: 12124
==17865== 
==17865== 
==17865== HEAP SUMMARY:
==17865==     in use at exit: 0 bytes in 0 blocks
==17865==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17865== 
==17865== All heap blocks were freed -- no leaks are possible
==17865== 
==17865== For counts of detected and suppressed errors, rerun with: -v
==17865== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test427 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test427/assignment_3Vars_test427.c)
The Valgrind memory detector as below:
==17881== Memcheck, a memory error detector
==17881== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17881== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17881== Command: ./impl/assignment_3Vars_test427/assignment_3Vars_test427.out
==17881== Parent PID: 12124
==17881== 
==17881== 
==17881== HEAP SUMMARY:
==17881==     in use at exit: 0 bytes in 0 blocks
==17881==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17881== 
==17881== All heap blocks were freed -- no leaks are possible
==17881== 
==17881== For counts of detected and suppressed errors, rerun with: -v
==17881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test428 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test428/assignment_3Vars_test428.c)
The Valgrind memory detector as below:
==17896== Memcheck, a memory error detector
==17896== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17896== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17896== Command: ./impl/assignment_3Vars_test428/assignment_3Vars_test428.out
==17896== Parent PID: 12124
==17896== 
==17896== 
==17896== HEAP SUMMARY:
==17896==     in use at exit: 0 bytes in 0 blocks
==17896==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17896== 
==17896== All heap blocks were freed -- no leaks are possible
==17896== 
==17896== For counts of detected and suppressed errors, rerun with: -v
==17896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test429 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test429/assignment_3Vars_test429.c)
The Valgrind memory detector as below:
==17912== Memcheck, a memory error detector
==17912== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17912== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17912== Command: ./impl/assignment_3Vars_test429/assignment_3Vars_test429.out
==17912== Parent PID: 12124
==17912== 
==17912== 
==17912== HEAP SUMMARY:
==17912==     in use at exit: 0 bytes in 0 blocks
==17912==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17912== 
==17912== All heap blocks were freed -- no leaks are possible
==17912== 
==17912== For counts of detected and suppressed errors, rerun with: -v
==17912== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test43 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test43/assignment_3Vars_test43.c)
The Valgrind memory detector as below:
==17927== Memcheck, a memory error detector
==17927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17927== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17927== Command: ./impl/assignment_3Vars_test43/assignment_3Vars_test43.out
==17927== Parent PID: 12124
==17927== 
==17927== 
==17927== HEAP SUMMARY:
==17927==     in use at exit: 0 bytes in 0 blocks
==17927==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17927== 
==17927== All heap blocks were freed -- no leaks are possible
==17927== 
==17927== For counts of detected and suppressed errors, rerun with: -v
==17927== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test430 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test430/assignment_3Vars_test430.c)
The Valgrind memory detector as below:
==17942== Memcheck, a memory error detector
==17942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17942== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17942== Command: ./impl/assignment_3Vars_test430/assignment_3Vars_test430.out
==17942== Parent PID: 12124
==17942== 
==17942== 
==17942== HEAP SUMMARY:
==17942==     in use at exit: 0 bytes in 0 blocks
==17942==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17942== 
==17942== All heap blocks were freed -- no leaks are possible
==17942== 
==17942== For counts of detected and suppressed errors, rerun with: -v
==17942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test431 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test431/assignment_3Vars_test431.c)
The Valgrind memory detector as below:
==17957== Memcheck, a memory error detector
==17957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17957== Command: ./impl/assignment_3Vars_test431/assignment_3Vars_test431.out
==17957== Parent PID: 12124
==17957== 
==17957== 
==17957== HEAP SUMMARY:
==17957==     in use at exit: 0 bytes in 0 blocks
==17957==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17957== 
==17957== All heap blocks were freed -- no leaks are possible
==17957== 
==17957== For counts of detected and suppressed errors, rerun with: -v
==17957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test432 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test432/assignment_3Vars_test432.c)
The Valgrind memory detector as below:
==17988== Memcheck, a memory error detector
==17988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==17988== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==17988== Command: ./impl/assignment_3Vars_test432/assignment_3Vars_test432.out
==17988== Parent PID: 12124
==17988== 
==17988== 
==17988== HEAP SUMMARY:
==17988==     in use at exit: 0 bytes in 0 blocks
==17988==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==17988== 
==17988== All heap blocks were freed -- no leaks are possible
==17988== 
==17988== For counts of detected and suppressed errors, rerun with: -v
==17988== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test433 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test433/assignment_3Vars_test433.c)
The Valgrind memory detector as below:
==18003== Memcheck, a memory error detector
==18003== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18003== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18003== Command: ./impl/assignment_3Vars_test433/assignment_3Vars_test433.out
==18003== Parent PID: 12124
==18003== 
==18003== 
==18003== HEAP SUMMARY:
==18003==     in use at exit: 0 bytes in 0 blocks
==18003==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18003== 
==18003== All heap blocks were freed -- no leaks are possible
==18003== 
==18003== For counts of detected and suppressed errors, rerun with: -v
==18003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test434 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test434/assignment_3Vars_test434.c)
The Valgrind memory detector as below:
==18018== Memcheck, a memory error detector
==18018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18018== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18018== Command: ./impl/assignment_3Vars_test434/assignment_3Vars_test434.out
==18018== Parent PID: 12124
==18018== 
==18018== 
==18018== HEAP SUMMARY:
==18018==     in use at exit: 0 bytes in 0 blocks
==18018==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18018== 
==18018== All heap blocks were freed -- no leaks are possible
==18018== 
==18018== For counts of detected and suppressed errors, rerun with: -v
==18018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test435 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test435/assignment_3Vars_test435.c)
The Valgrind memory detector as below:
==18033== Memcheck, a memory error detector
==18033== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18033== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18033== Command: ./impl/assignment_3Vars_test435/assignment_3Vars_test435.out
==18033== Parent PID: 12124
==18033== 
==18033== 
==18033== HEAP SUMMARY:
==18033==     in use at exit: 0 bytes in 0 blocks
==18033==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18033== 
==18033== All heap blocks were freed -- no leaks are possible
==18033== 
==18033== For counts of detected and suppressed errors, rerun with: -v
==18033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test436 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test436/assignment_3Vars_test436.c)
The Valgrind memory detector as below:
==18049== Memcheck, a memory error detector
==18049== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18049== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18049== Command: ./impl/assignment_3Vars_test436/assignment_3Vars_test436.out
==18049== Parent PID: 12124
==18049== 
==18049== 
==18049== HEAP SUMMARY:
==18049==     in use at exit: 0 bytes in 0 blocks
==18049==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18049== 
==18049== All heap blocks were freed -- no leaks are possible
==18049== 
==18049== For counts of detected and suppressed errors, rerun with: -v
==18049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test437 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test437/assignment_3Vars_test437.c)
The Valgrind memory detector as below:
==18064== Memcheck, a memory error detector
==18064== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18064== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18064== Command: ./impl/assignment_3Vars_test437/assignment_3Vars_test437.out
==18064== Parent PID: 12124
==18064== 
==18064== 
==18064== HEAP SUMMARY:
==18064==     in use at exit: 0 bytes in 0 blocks
==18064==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18064== 
==18064== All heap blocks were freed -- no leaks are possible
==18064== 
==18064== For counts of detected and suppressed errors, rerun with: -v
==18064== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test438 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test438/assignment_3Vars_test438.c)
The Valgrind memory detector as below:
==18081== Memcheck, a memory error detector
==18081== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18081== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18081== Command: ./impl/assignment_3Vars_test438/assignment_3Vars_test438.out
==18081== Parent PID: 12124
==18081== 
==18081== 
==18081== HEAP SUMMARY:
==18081==     in use at exit: 0 bytes in 0 blocks
==18081==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18081== 
==18081== All heap blocks were freed -- no leaks are possible
==18081== 
==18081== For counts of detected and suppressed errors, rerun with: -v
==18081== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test439 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test439/assignment_3Vars_test439.c)
The Valgrind memory detector as below:
==18098== Memcheck, a memory error detector
==18098== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18098== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18098== Command: ./impl/assignment_3Vars_test439/assignment_3Vars_test439.out
==18098== Parent PID: 12124
==18098== 
==18098== 
==18098== HEAP SUMMARY:
==18098==     in use at exit: 0 bytes in 0 blocks
==18098==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18098== 
==18098== All heap blocks were freed -- no leaks are possible
==18098== 
==18098== For counts of detected and suppressed errors, rerun with: -v
==18098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test44 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test44/assignment_3Vars_test44.c)
The Valgrind memory detector as below:
==18113== Memcheck, a memory error detector
==18113== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18113== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18113== Command: ./impl/assignment_3Vars_test44/assignment_3Vars_test44.out
==18113== Parent PID: 12124
==18113== 
==18113== 
==18113== HEAP SUMMARY:
==18113==     in use at exit: 0 bytes in 0 blocks
==18113==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18113== 
==18113== All heap blocks were freed -- no leaks are possible
==18113== 
==18113== For counts of detected and suppressed errors, rerun with: -v
==18113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test440 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test440/assignment_3Vars_test440.c)
The Valgrind memory detector as below:
==18129== Memcheck, a memory error detector
==18129== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18129== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18129== Command: ./impl/assignment_3Vars_test440/assignment_3Vars_test440.out
==18129== Parent PID: 12124
==18129== 
==18129== 
==18129== HEAP SUMMARY:
==18129==     in use at exit: 0 bytes in 0 blocks
==18129==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18129== 
==18129== All heap blocks were freed -- no leaks are possible
==18129== 
==18129== For counts of detected and suppressed errors, rerun with: -v
==18129== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test441 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test441/assignment_3Vars_test441.c)
The Valgrind memory detector as below:
==18144== Memcheck, a memory error detector
==18144== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18144== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18144== Command: ./impl/assignment_3Vars_test441/assignment_3Vars_test441.out
==18144== Parent PID: 12124
==18144== 
==18144== 
==18144== HEAP SUMMARY:
==18144==     in use at exit: 0 bytes in 0 blocks
==18144==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18144== 
==18144== All heap blocks were freed -- no leaks are possible
==18144== 
==18144== For counts of detected and suppressed errors, rerun with: -v
==18144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test442 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test442/assignment_3Vars_test442.c)
The Valgrind memory detector as below:
==18159== Memcheck, a memory error detector
==18159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18159== Command: ./impl/assignment_3Vars_test442/assignment_3Vars_test442.out
==18159== Parent PID: 12124
==18159== 
==18159== 
==18159== HEAP SUMMARY:
==18159==     in use at exit: 0 bytes in 0 blocks
==18159==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18159== 
==18159== All heap blocks were freed -- no leaks are possible
==18159== 
==18159== For counts of detected and suppressed errors, rerun with: -v
==18159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test443 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test443/assignment_3Vars_test443.c)
The Valgrind memory detector as below:
==18175== Memcheck, a memory error detector
==18175== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18175== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18175== Command: ./impl/assignment_3Vars_test443/assignment_3Vars_test443.out
==18175== Parent PID: 12124
==18175== 
==18175== 
==18175== HEAP SUMMARY:
==18175==     in use at exit: 0 bytes in 0 blocks
==18175==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18175== 
==18175== All heap blocks were freed -- no leaks are possible
==18175== 
==18175== For counts of detected and suppressed errors, rerun with: -v
==18175== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test444 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test444/assignment_3Vars_test444.c)
The Valgrind memory detector as below:
==18191== Memcheck, a memory error detector
==18191== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18191== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18191== Command: ./impl/assignment_3Vars_test444/assignment_3Vars_test444.out
==18191== Parent PID: 12124
==18191== 
==18191== 
==18191== HEAP SUMMARY:
==18191==     in use at exit: 0 bytes in 0 blocks
==18191==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18191== 
==18191== All heap blocks were freed -- no leaks are possible
==18191== 
==18191== For counts of detected and suppressed errors, rerun with: -v
==18191== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test445 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test445/assignment_3Vars_test445.c)
The Valgrind memory detector as below:
==18206== Memcheck, a memory error detector
==18206== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18206== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18206== Command: ./impl/assignment_3Vars_test445/assignment_3Vars_test445.out
==18206== Parent PID: 12124
==18206== 
==18206== 
==18206== HEAP SUMMARY:
==18206==     in use at exit: 0 bytes in 0 blocks
==18206==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18206== 
==18206== All heap blocks were freed -- no leaks are possible
==18206== 
==18206== For counts of detected and suppressed errors, rerun with: -v
==18206== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test446 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test446/assignment_3Vars_test446.c)
The Valgrind memory detector as below:
==18221== Memcheck, a memory error detector
==18221== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18221== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18221== Command: ./impl/assignment_3Vars_test446/assignment_3Vars_test446.out
==18221== Parent PID: 12124
==18221== 
==18221== 
==18221== HEAP SUMMARY:
==18221==     in use at exit: 0 bytes in 0 blocks
==18221==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18221== 
==18221== All heap blocks were freed -- no leaks are possible
==18221== 
==18221== For counts of detected and suppressed errors, rerun with: -v
==18221== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test447 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test447/assignment_3Vars_test447.c)
The Valgrind memory detector as below:
==18237== Memcheck, a memory error detector
==18237== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18237== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18237== Command: ./impl/assignment_3Vars_test447/assignment_3Vars_test447.out
==18237== Parent PID: 12124
==18237== 
==18237== 
==18237== HEAP SUMMARY:
==18237==     in use at exit: 0 bytes in 0 blocks
==18237==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18237== 
==18237== All heap blocks were freed -- no leaks are possible
==18237== 
==18237== For counts of detected and suppressed errors, rerun with: -v
==18237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test448 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test448/assignment_3Vars_test448.c)
The Valgrind memory detector as below:
==18252== Memcheck, a memory error detector
==18252== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18252== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18252== Command: ./impl/assignment_3Vars_test448/assignment_3Vars_test448.out
==18252== Parent PID: 12124
==18252== 
==18252== 
==18252== HEAP SUMMARY:
==18252==     in use at exit: 0 bytes in 0 blocks
==18252==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18252== 
==18252== All heap blocks were freed -- no leaks are possible
==18252== 
==18252== For counts of detected and suppressed errors, rerun with: -v
==18252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test449 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test449/assignment_3Vars_test449.c)
The Valgrind memory detector as below:
==18267== Memcheck, a memory error detector
==18267== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18267== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18267== Command: ./impl/assignment_3Vars_test449/assignment_3Vars_test449.out
==18267== Parent PID: 12124
==18267== 
==18267== 
==18267== HEAP SUMMARY:
==18267==     in use at exit: 0 bytes in 0 blocks
==18267==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18267== 
==18267== All heap blocks were freed -- no leaks are possible
==18267== 
==18267== For counts of detected and suppressed errors, rerun with: -v
==18267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test45 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test45/assignment_3Vars_test45.c)
The Valgrind memory detector as below:
==18282== Memcheck, a memory error detector
==18282== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18282== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18282== Command: ./impl/assignment_3Vars_test45/assignment_3Vars_test45.out
==18282== Parent PID: 12124
==18282== 
==18282== 
==18282== HEAP SUMMARY:
==18282==     in use at exit: 0 bytes in 0 blocks
==18282==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18282== 
==18282== All heap blocks were freed -- no leaks are possible
==18282== 
==18282== For counts of detected and suppressed errors, rerun with: -v
==18282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test450 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test450/assignment_3Vars_test450.c)
The Valgrind memory detector as below:
==18298== Memcheck, a memory error detector
==18298== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18298== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18298== Command: ./impl/assignment_3Vars_test450/assignment_3Vars_test450.out
==18298== Parent PID: 12124
==18298== 
==18298== 
==18298== HEAP SUMMARY:
==18298==     in use at exit: 0 bytes in 0 blocks
==18298==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18298== 
==18298== All heap blocks were freed -- no leaks are possible
==18298== 
==18298== For counts of detected and suppressed errors, rerun with: -v
==18298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test451 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test451/assignment_3Vars_test451.c)
The Valgrind memory detector as below:
==18313== Memcheck, a memory error detector
==18313== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18313== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18313== Command: ./impl/assignment_3Vars_test451/assignment_3Vars_test451.out
==18313== Parent PID: 12124
==18313== 
==18313== 
==18313== HEAP SUMMARY:
==18313==     in use at exit: 0 bytes in 0 blocks
==18313==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18313== 
==18313== All heap blocks were freed -- no leaks are possible
==18313== 
==18313== For counts of detected and suppressed errors, rerun with: -v
==18313== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test452 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test452/assignment_3Vars_test452.c)
The Valgrind memory detector as below:
==18328== Memcheck, a memory error detector
==18328== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18328== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18328== Command: ./impl/assignment_3Vars_test452/assignment_3Vars_test452.out
==18328== Parent PID: 12124
==18328== 
==18328== 
==18328== HEAP SUMMARY:
==18328==     in use at exit: 0 bytes in 0 blocks
==18328==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18328== 
==18328== All heap blocks were freed -- no leaks are possible
==18328== 
==18328== For counts of detected and suppressed errors, rerun with: -v
==18328== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test453 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test453/assignment_3Vars_test453.c)
The Valgrind memory detector as below:
==18343== Memcheck, a memory error detector
==18343== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18343== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18343== Command: ./impl/assignment_3Vars_test453/assignment_3Vars_test453.out
==18343== Parent PID: 12124
==18343== 
==18343== 
==18343== HEAP SUMMARY:
==18343==     in use at exit: 0 bytes in 0 blocks
==18343==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18343== 
==18343== All heap blocks were freed -- no leaks are possible
==18343== 
==18343== For counts of detected and suppressed errors, rerun with: -v
==18343== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test454 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test454/assignment_3Vars_test454.c)
The Valgrind memory detector as below:
==18359== Memcheck, a memory error detector
==18359== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18359== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18359== Command: ./impl/assignment_3Vars_test454/assignment_3Vars_test454.out
==18359== Parent PID: 12124
==18359== 
==18359== 
==18359== HEAP SUMMARY:
==18359==     in use at exit: 0 bytes in 0 blocks
==18359==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18359== 
==18359== All heap blocks were freed -- no leaks are possible
==18359== 
==18359== For counts of detected and suppressed errors, rerun with: -v
==18359== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test455 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test455/assignment_3Vars_test455.c)
The Valgrind memory detector as below:
==18374== Memcheck, a memory error detector
==18374== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18374== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18374== Command: ./impl/assignment_3Vars_test455/assignment_3Vars_test455.out
==18374== Parent PID: 12124
==18374== 
==18374== 
==18374== HEAP SUMMARY:
==18374==     in use at exit: 0 bytes in 0 blocks
==18374==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18374== 
==18374== All heap blocks were freed -- no leaks are possible
==18374== 
==18374== For counts of detected and suppressed errors, rerun with: -v
==18374== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test456 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test456/assignment_3Vars_test456.c)
The Valgrind memory detector as below:
==18389== Memcheck, a memory error detector
==18389== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18389== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18389== Command: ./impl/assignment_3Vars_test456/assignment_3Vars_test456.out
==18389== Parent PID: 12124
==18389== 
==18389== 
==18389== HEAP SUMMARY:
==18389==     in use at exit: 0 bytes in 0 blocks
==18389==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18389== 
==18389== All heap blocks were freed -- no leaks are possible
==18389== 
==18389== For counts of detected and suppressed errors, rerun with: -v
==18389== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test457 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test457/assignment_3Vars_test457.c)
The Valgrind memory detector as below:
==18404== Memcheck, a memory error detector
==18404== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18404== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18404== Command: ./impl/assignment_3Vars_test457/assignment_3Vars_test457.out
==18404== Parent PID: 12124
==18404== 
==18404== 
==18404== HEAP SUMMARY:
==18404==     in use at exit: 0 bytes in 0 blocks
==18404==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18404== 
==18404== All heap blocks were freed -- no leaks are possible
==18404== 
==18404== For counts of detected and suppressed errors, rerun with: -v
==18404== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test458 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test458/assignment_3Vars_test458.c)
The Valgrind memory detector as below:
==18421== Memcheck, a memory error detector
==18421== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18421== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18421== Command: ./impl/assignment_3Vars_test458/assignment_3Vars_test458.out
==18421== Parent PID: 12124
==18421== 
==18421== 
==18421== HEAP SUMMARY:
==18421==     in use at exit: 0 bytes in 0 blocks
==18421==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18421== 
==18421== All heap blocks were freed -- no leaks are possible
==18421== 
==18421== For counts of detected and suppressed errors, rerun with: -v
==18421== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test459 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test459/assignment_3Vars_test459.c)
The Valgrind memory detector as below:
==18436== Memcheck, a memory error detector
==18436== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18436== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18436== Command: ./impl/assignment_3Vars_test459/assignment_3Vars_test459.out
==18436== Parent PID: 12124
==18436== 
==18436== 
==18436== HEAP SUMMARY:
==18436==     in use at exit: 0 bytes in 0 blocks
==18436==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18436== 
==18436== All heap blocks were freed -- no leaks are possible
==18436== 
==18436== For counts of detected and suppressed errors, rerun with: -v
==18436== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test46 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test46/assignment_3Vars_test46.c)
The Valgrind memory detector as below:
==18451== Memcheck, a memory error detector
==18451== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18451== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18451== Command: ./impl/assignment_3Vars_test46/assignment_3Vars_test46.out
==18451== Parent PID: 12124
==18451== 
==18451== 
==18451== HEAP SUMMARY:
==18451==     in use at exit: 0 bytes in 0 blocks
==18451==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18451== 
==18451== All heap blocks were freed -- no leaks are possible
==18451== 
==18451== For counts of detected and suppressed errors, rerun with: -v
==18451== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test460 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test460/assignment_3Vars_test460.c)
The Valgrind memory detector as below:
==18467== Memcheck, a memory error detector
==18467== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18467== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18467== Command: ./impl/assignment_3Vars_test460/assignment_3Vars_test460.out
==18467== Parent PID: 12124
==18467== 
==18467== 
==18467== HEAP SUMMARY:
==18467==     in use at exit: 0 bytes in 0 blocks
==18467==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18467== 
==18467== All heap blocks were freed -- no leaks are possible
==18467== 
==18467== For counts of detected and suppressed errors, rerun with: -v
==18467== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test461 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test461/assignment_3Vars_test461.c)
The Valgrind memory detector as below:
==18483== Memcheck, a memory error detector
==18483== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18483== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18483== Command: ./impl/assignment_3Vars_test461/assignment_3Vars_test461.out
==18483== Parent PID: 12124
==18483== 
==18483== 
==18483== HEAP SUMMARY:
==18483==     in use at exit: 0 bytes in 0 blocks
==18483==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18483== 
==18483== All heap blocks were freed -- no leaks are possible
==18483== 
==18483== For counts of detected and suppressed errors, rerun with: -v
==18483== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test462 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test462/assignment_3Vars_test462.c)
The Valgrind memory detector as below:
==18498== Memcheck, a memory error detector
==18498== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18498== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18498== Command: ./impl/assignment_3Vars_test462/assignment_3Vars_test462.out
==18498== Parent PID: 12124
==18498== 
==18498== 
==18498== HEAP SUMMARY:
==18498==     in use at exit: 0 bytes in 0 blocks
==18498==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18498== 
==18498== All heap blocks were freed -- no leaks are possible
==18498== 
==18498== For counts of detected and suppressed errors, rerun with: -v
==18498== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test463 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test463/assignment_3Vars_test463.c)
The Valgrind memory detector as below:
==18513== Memcheck, a memory error detector
==18513== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18513== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18513== Command: ./impl/assignment_3Vars_test463/assignment_3Vars_test463.out
==18513== Parent PID: 12124
==18513== 
==18513== 
==18513== HEAP SUMMARY:
==18513==     in use at exit: 0 bytes in 0 blocks
==18513==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18513== 
==18513== All heap blocks were freed -- no leaks are possible
==18513== 
==18513== For counts of detected and suppressed errors, rerun with: -v
==18513== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test464 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test464/assignment_3Vars_test464.c)
The Valgrind memory detector as below:
==18528== Memcheck, a memory error detector
==18528== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18528== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18528== Command: ./impl/assignment_3Vars_test464/assignment_3Vars_test464.out
==18528== Parent PID: 12124
==18528== 
==18528== 
==18528== HEAP SUMMARY:
==18528==     in use at exit: 0 bytes in 0 blocks
==18528==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18528== 
==18528== All heap blocks were freed -- no leaks are possible
==18528== 
==18528== For counts of detected and suppressed errors, rerun with: -v
==18528== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test465 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test465/assignment_3Vars_test465.c)
The Valgrind memory detector as below:
==18544== Memcheck, a memory error detector
==18544== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18544== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18544== Command: ./impl/assignment_3Vars_test465/assignment_3Vars_test465.out
==18544== Parent PID: 12124
==18544== 
==18544== 
==18544== HEAP SUMMARY:
==18544==     in use at exit: 0 bytes in 0 blocks
==18544==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18544== 
==18544== All heap blocks were freed -- no leaks are possible
==18544== 
==18544== For counts of detected and suppressed errors, rerun with: -v
==18544== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test466 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test466/assignment_3Vars_test466.c)
The Valgrind memory detector as below:
==18559== Memcheck, a memory error detector
==18559== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18559== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18559== Command: ./impl/assignment_3Vars_test466/assignment_3Vars_test466.out
==18559== Parent PID: 12124
==18559== 
==18559== 
==18559== HEAP SUMMARY:
==18559==     in use at exit: 0 bytes in 0 blocks
==18559==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18559== 
==18559== All heap blocks were freed -- no leaks are possible
==18559== 
==18559== For counts of detected and suppressed errors, rerun with: -v
==18559== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test467 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test467/assignment_3Vars_test467.c)
The Valgrind memory detector as below:
==18574== Memcheck, a memory error detector
==18574== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18574== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18574== Command: ./impl/assignment_3Vars_test467/assignment_3Vars_test467.out
==18574== Parent PID: 12124
==18574== 
==18574== 
==18574== HEAP SUMMARY:
==18574==     in use at exit: 0 bytes in 0 blocks
==18574==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18574== 
==18574== All heap blocks were freed -- no leaks are possible
==18574== 
==18574== For counts of detected and suppressed errors, rerun with: -v
==18574== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test468 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test468/assignment_3Vars_test468.c)
The Valgrind memory detector as below:
==18589== Memcheck, a memory error detector
==18589== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18589== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18589== Command: ./impl/assignment_3Vars_test468/assignment_3Vars_test468.out
==18589== Parent PID: 12124
==18589== 
==18589== 
==18589== HEAP SUMMARY:
==18589==     in use at exit: 0 bytes in 0 blocks
==18589==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18589== 
==18589== All heap blocks were freed -- no leaks are possible
==18589== 
==18589== For counts of detected and suppressed errors, rerun with: -v
==18589== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test469 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test469/assignment_3Vars_test469.c)
The Valgrind memory detector as below:
==18606== Memcheck, a memory error detector
==18606== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18606== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18606== Command: ./impl/assignment_3Vars_test469/assignment_3Vars_test469.out
==18606== Parent PID: 12124
==18606== 
==18606== 
==18606== HEAP SUMMARY:
==18606==     in use at exit: 0 bytes in 0 blocks
==18606==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18606== 
==18606== All heap blocks were freed -- no leaks are possible
==18606== 
==18606== For counts of detected and suppressed errors, rerun with: -v
==18606== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test47 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test47/assignment_3Vars_test47.c)
The Valgrind memory detector as below:
==18621== Memcheck, a memory error detector
==18621== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18621== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18621== Command: ./impl/assignment_3Vars_test47/assignment_3Vars_test47.out
==18621== Parent PID: 12124
==18621== 
==18621== 
==18621== HEAP SUMMARY:
==18621==     in use at exit: 0 bytes in 0 blocks
==18621==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18621== 
==18621== All heap blocks were freed -- no leaks are possible
==18621== 
==18621== For counts of detected and suppressed errors, rerun with: -v
==18621== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test470 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test470/assignment_3Vars_test470.c)
The Valgrind memory detector as below:
==18636== Memcheck, a memory error detector
==18636== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18636== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18636== Command: ./impl/assignment_3Vars_test470/assignment_3Vars_test470.out
==18636== Parent PID: 12124
==18636== 
==18636== 
==18636== HEAP SUMMARY:
==18636==     in use at exit: 0 bytes in 0 blocks
==18636==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18636== 
==18636== All heap blocks were freed -- no leaks are possible
==18636== 
==18636== For counts of detected and suppressed errors, rerun with: -v
==18636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test471 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test471/assignment_3Vars_test471.c)
The Valgrind memory detector as below:
==18651== Memcheck, a memory error detector
==18651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18651== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18651== Command: ./impl/assignment_3Vars_test471/assignment_3Vars_test471.out
==18651== Parent PID: 12124
==18651== 
==18651== 
==18651== HEAP SUMMARY:
==18651==     in use at exit: 0 bytes in 0 blocks
==18651==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18651== 
==18651== All heap blocks were freed -- no leaks are possible
==18651== 
==18651== For counts of detected and suppressed errors, rerun with: -v
==18651== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test472 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test472/assignment_3Vars_test472.c)
The Valgrind memory detector as below:
==18667== Memcheck, a memory error detector
==18667== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18667== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18667== Command: ./impl/assignment_3Vars_test472/assignment_3Vars_test472.out
==18667== Parent PID: 12124
==18667== 
==18667== 
==18667== HEAP SUMMARY:
==18667==     in use at exit: 0 bytes in 0 blocks
==18667==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18667== 
==18667== All heap blocks were freed -- no leaks are possible
==18667== 
==18667== For counts of detected and suppressed errors, rerun with: -v
==18667== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test473 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test473/assignment_3Vars_test473.c)
The Valgrind memory detector as below:
==18682== Memcheck, a memory error detector
==18682== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18682== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18682== Command: ./impl/assignment_3Vars_test473/assignment_3Vars_test473.out
==18682== Parent PID: 12124
==18682== 
==18682== 
==18682== HEAP SUMMARY:
==18682==     in use at exit: 0 bytes in 0 blocks
==18682==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18682== 
==18682== All heap blocks were freed -- no leaks are possible
==18682== 
==18682== For counts of detected and suppressed errors, rerun with: -v
==18682== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test474 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test474/assignment_3Vars_test474.c)
The Valgrind memory detector as below:
==18697== Memcheck, a memory error detector
==18697== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18697== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18697== Command: ./impl/assignment_3Vars_test474/assignment_3Vars_test474.out
==18697== Parent PID: 12124
==18697== 
==18697== 
==18697== HEAP SUMMARY:
==18697==     in use at exit: 0 bytes in 0 blocks
==18697==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18697== 
==18697== All heap blocks were freed -- no leaks are possible
==18697== 
==18697== For counts of detected and suppressed errors, rerun with: -v
==18697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test475 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test475/assignment_3Vars_test475.c)
The Valgrind memory detector as below:
==18712== Memcheck, a memory error detector
==18712== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18712== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18712== Command: ./impl/assignment_3Vars_test475/assignment_3Vars_test475.out
==18712== Parent PID: 12124
==18712== 
==18712== 
==18712== HEAP SUMMARY:
==18712==     in use at exit: 0 bytes in 0 blocks
==18712==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18712== 
==18712== All heap blocks were freed -- no leaks are possible
==18712== 
==18712== For counts of detected and suppressed errors, rerun with: -v
==18712== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test476 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test476/assignment_3Vars_test476.c)
The Valgrind memory detector as below:
==18729== Memcheck, a memory error detector
==18729== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18729== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18729== Command: ./impl/assignment_3Vars_test476/assignment_3Vars_test476.out
==18729== Parent PID: 12124
==18729== 
==18729== 
==18729== HEAP SUMMARY:
==18729==     in use at exit: 0 bytes in 0 blocks
==18729==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18729== 
==18729== All heap blocks were freed -- no leaks are possible
==18729== 
==18729== For counts of detected and suppressed errors, rerun with: -v
==18729== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test477 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test477/assignment_3Vars_test477.c)
The Valgrind memory detector as below:
==18744== Memcheck, a memory error detector
==18744== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18744== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18744== Command: ./impl/assignment_3Vars_test477/assignment_3Vars_test477.out
==18744== Parent PID: 12124
==18744== 
==18744== 
==18744== HEAP SUMMARY:
==18744==     in use at exit: 0 bytes in 0 blocks
==18744==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18744== 
==18744== All heap blocks were freed -- no leaks are possible
==18744== 
==18744== For counts of detected and suppressed errors, rerun with: -v
==18744== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test478 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test478/assignment_3Vars_test478.c)
The Valgrind memory detector as below:
==18759== Memcheck, a memory error detector
==18759== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18759== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18759== Command: ./impl/assignment_3Vars_test478/assignment_3Vars_test478.out
==18759== Parent PID: 12124
==18759== 
==18759== 
==18759== HEAP SUMMARY:
==18759==     in use at exit: 0 bytes in 0 blocks
==18759==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18759== 
==18759== All heap blocks were freed -- no leaks are possible
==18759== 
==18759== For counts of detected and suppressed errors, rerun with: -v
==18759== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test479 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test479/assignment_3Vars_test479.c)
The Valgrind memory detector as below:
==18774== Memcheck, a memory error detector
==18774== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18774== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18774== Command: ./impl/assignment_3Vars_test479/assignment_3Vars_test479.out
==18774== Parent PID: 12124
==18774== 
==18774== 
==18774== HEAP SUMMARY:
==18774==     in use at exit: 0 bytes in 0 blocks
==18774==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18774== 
==18774== All heap blocks were freed -- no leaks are possible
==18774== 
==18774== For counts of detected and suppressed errors, rerun with: -v
==18774== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test48 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test48/assignment_3Vars_test48.c)
The Valgrind memory detector as below:
==18789== Memcheck, a memory error detector
==18789== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18789== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18789== Command: ./impl/assignment_3Vars_test48/assignment_3Vars_test48.out
==18789== Parent PID: 12124
==18789== 
==18789== 
==18789== HEAP SUMMARY:
==18789==     in use at exit: 0 bytes in 0 blocks
==18789==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18789== 
==18789== All heap blocks were freed -- no leaks are possible
==18789== 
==18789== For counts of detected and suppressed errors, rerun with: -v
==18789== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test480 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:64 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test480/assignment_3Vars_test480.c)
The Valgrind memory detector as below:
==18805== Memcheck, a memory error detector
==18805== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18805== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18805== Command: ./impl/assignment_3Vars_test480/assignment_3Vars_test480.out
==18805== Parent PID: 12124
==18805== 
==18805== 
==18805== HEAP SUMMARY:
==18805==     in use at exit: 0 bytes in 0 blocks
==18805==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18805== 
==18805== All heap blocks were freed -- no leaks are possible
==18805== 
==18805== For counts of detected and suppressed errors, rerun with: -v
==18805== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test481 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test481/assignment_3Vars_test481.c)
The Valgrind memory detector as below:
==18820== Memcheck, a memory error detector
==18820== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18820== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18820== Command: ./impl/assignment_3Vars_test481/assignment_3Vars_test481.out
==18820== Parent PID: 12124
==18820== 
==18820== 
==18820== HEAP SUMMARY:
==18820==     in use at exit: 0 bytes in 0 blocks
==18820==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18820== 
==18820== All heap blocks were freed -- no leaks are possible
==18820== 
==18820== For counts of detected and suppressed errors, rerun with: -v
==18820== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test482 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test482/assignment_3Vars_test482.c)
The Valgrind memory detector as below:
==18835== Memcheck, a memory error detector
==18835== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18835== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18835== Command: ./impl/assignment_3Vars_test482/assignment_3Vars_test482.out
==18835== Parent PID: 12124
==18835== 
==18835== 
==18835== HEAP SUMMARY:
==18835==     in use at exit: 0 bytes in 0 blocks
==18835==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18835== 
==18835== All heap blocks were freed -- no leaks are possible
==18835== 
==18835== For counts of detected and suppressed errors, rerun with: -v
==18835== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test483 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test483/assignment_3Vars_test483.c)
The Valgrind memory detector as below:
==18851== Memcheck, a memory error detector
==18851== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18851== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18851== Command: ./impl/assignment_3Vars_test483/assignment_3Vars_test483.out
==18851== Parent PID: 12124
==18851== 
==18851== 
==18851== HEAP SUMMARY:
==18851==     in use at exit: 0 bytes in 0 blocks
==18851==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18851== 
==18851== All heap blocks were freed -- no leaks are possible
==18851== 
==18851== For counts of detected and suppressed errors, rerun with: -v
==18851== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test484 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test484/assignment_3Vars_test484.c)
The Valgrind memory detector as below:
==18867== Memcheck, a memory error detector
==18867== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18867== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18867== Command: ./impl/assignment_3Vars_test484/assignment_3Vars_test484.out
==18867== Parent PID: 12124
==18867== 
==18867== 
==18867== HEAP SUMMARY:
==18867==     in use at exit: 0 bytes in 0 blocks
==18867==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18867== 
==18867== All heap blocks were freed -- no leaks are possible
==18867== 
==18867== For counts of detected and suppressed errors, rerun with: -v
==18867== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test485 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test485/assignment_3Vars_test485.c)
The Valgrind memory detector as below:
==18882== Memcheck, a memory error detector
==18882== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18882== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18882== Command: ./impl/assignment_3Vars_test485/assignment_3Vars_test485.out
==18882== Parent PID: 12124
==18882== 
==18882== 
==18882== HEAP SUMMARY:
==18882==     in use at exit: 0 bytes in 0 blocks
==18882==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18882== 
==18882== All heap blocks were freed -- no leaks are possible
==18882== 
==18882== For counts of detected and suppressed errors, rerun with: -v
==18882== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test486 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test486/assignment_3Vars_test486.c)
The Valgrind memory detector as below:
==18897== Memcheck, a memory error detector
==18897== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18897== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18897== Command: ./impl/assignment_3Vars_test486/assignment_3Vars_test486.out
==18897== Parent PID: 12124
==18897== 
==18897== 
==18897== HEAP SUMMARY:
==18897==     in use at exit: 0 bytes in 0 blocks
==18897==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18897== 
==18897== All heap blocks were freed -- no leaks are possible
==18897== 
==18897== For counts of detected and suppressed errors, rerun with: -v
==18897== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test487 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test487/assignment_3Vars_test487.c)
The Valgrind memory detector as below:
==18913== Memcheck, a memory error detector
==18913== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18913== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18913== Command: ./impl/assignment_3Vars_test487/assignment_3Vars_test487.out
==18913== Parent PID: 12124
==18913== 
==18913== 
==18913== HEAP SUMMARY:
==18913==     in use at exit: 0 bytes in 0 blocks
==18913==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18913== 
==18913== All heap blocks were freed -- no leaks are possible
==18913== 
==18913== For counts of detected and suppressed errors, rerun with: -v
==18913== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test488 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test488/assignment_3Vars_test488.c)
The Valgrind memory detector as below:
==18928== Memcheck, a memory error detector
==18928== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18928== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18928== Command: ./impl/assignment_3Vars_test488/assignment_3Vars_test488.out
==18928== Parent PID: 12124
==18928== 
==18928== 
==18928== HEAP SUMMARY:
==18928==     in use at exit: 0 bytes in 0 blocks
==18928==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18928== 
==18928== All heap blocks were freed -- no leaks are possible
==18928== 
==18928== For counts of detected and suppressed errors, rerun with: -v
==18928== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test489 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test489/assignment_3Vars_test489.c)
The Valgrind memory detector as below:
==18943== Memcheck, a memory error detector
==18943== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18943== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18943== Command: ./impl/assignment_3Vars_test489/assignment_3Vars_test489.out
==18943== Parent PID: 12124
==18943== 
==18943== 
==18943== HEAP SUMMARY:
==18943==     in use at exit: 0 bytes in 0 blocks
==18943==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18943== 
==18943== All heap blocks were freed -- no leaks are possible
==18943== 
==18943== For counts of detected and suppressed errors, rerun with: -v
==18943== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test49 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test49/assignment_3Vars_test49.c)
The Valgrind memory detector as below:
==18958== Memcheck, a memory error detector
==18958== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18958== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18958== Command: ./impl/assignment_3Vars_test49/assignment_3Vars_test49.out
==18958== Parent PID: 12124
==18958== 
==18958== 
==18958== HEAP SUMMARY:
==18958==     in use at exit: 0 bytes in 0 blocks
==18958==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18958== 
==18958== All heap blocks were freed -- no leaks are possible
==18958== 
==18958== For counts of detected and suppressed errors, rerun with: -v
==18958== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test490 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test490/assignment_3Vars_test490.c)
The Valgrind memory detector as below:
==18974== Memcheck, a memory error detector
==18974== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18974== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18974== Command: ./impl/assignment_3Vars_test490/assignment_3Vars_test490.out
==18974== Parent PID: 12124
==18974== 
==18974== 
==18974== HEAP SUMMARY:
==18974==     in use at exit: 0 bytes in 0 blocks
==18974==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18974== 
==18974== All heap blocks were freed -- no leaks are possible
==18974== 
==18974== For counts of detected and suppressed errors, rerun with: -v
==18974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test491 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test491/assignment_3Vars_test491.c)
The Valgrind memory detector as below:
==18989== Memcheck, a memory error detector
==18989== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18989== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==18989== Command: ./impl/assignment_3Vars_test491/assignment_3Vars_test491.out
==18989== Parent PID: 12124
==18989== 
==18989== 
==18989== HEAP SUMMARY:
==18989==     in use at exit: 0 bytes in 0 blocks
==18989==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==18989== 
==18989== All heap blocks were freed -- no leaks are possible
==18989== 
==18989== For counts of detected and suppressed errors, rerun with: -v
==18989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test492 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test492/assignment_3Vars_test492.c)
The Valgrind memory detector as below:
==19004== Memcheck, a memory error detector
==19004== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19004== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19004== Command: ./impl/assignment_3Vars_test492/assignment_3Vars_test492.out
==19004== Parent PID: 12124
==19004== 
==19004== 
==19004== HEAP SUMMARY:
==19004==     in use at exit: 0 bytes in 0 blocks
==19004==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19004== 
==19004== All heap blocks were freed -- no leaks are possible
==19004== 
==19004== For counts of detected and suppressed errors, rerun with: -v
==19004== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test493 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test493/assignment_3Vars_test493.c)
The Valgrind memory detector as below:
==19019== Memcheck, a memory error detector
==19019== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19019== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19019== Command: ./impl/assignment_3Vars_test493/assignment_3Vars_test493.out
==19019== Parent PID: 12124
==19019== 
==19019== 
==19019== HEAP SUMMARY:
==19019==     in use at exit: 0 bytes in 0 blocks
==19019==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19019== 
==19019== All heap blocks were freed -- no leaks are possible
==19019== 
==19019== For counts of detected and suppressed errors, rerun with: -v
==19019== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test494 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test494/assignment_3Vars_test494.c)
The Valgrind memory detector as below:
==19036== Memcheck, a memory error detector
==19036== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19036== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19036== Command: ./impl/assignment_3Vars_test494/assignment_3Vars_test494.out
==19036== Parent PID: 12124
==19036== 
==19036== 
==19036== HEAP SUMMARY:
==19036==     in use at exit: 0 bytes in 0 blocks
==19036==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19036== 
==19036== All heap blocks were freed -- no leaks are possible
==19036== 
==19036== For counts of detected and suppressed errors, rerun with: -v
==19036== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test495 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test495/assignment_3Vars_test495.c)
The Valgrind memory detector as below:
==19051== Memcheck, a memory error detector
==19051== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19051== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19051== Command: ./impl/assignment_3Vars_test495/assignment_3Vars_test495.out
==19051== Parent PID: 12124
==19051== 
==19051== 
==19051== HEAP SUMMARY:
==19051==     in use at exit: 0 bytes in 0 blocks
==19051==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19051== 
==19051== All heap blocks were freed -- no leaks are possible
==19051== 
==19051== For counts of detected and suppressed errors, rerun with: -v
==19051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test496 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test496/assignment_3Vars_test496.c)
The Valgrind memory detector as below:
==19066== Memcheck, a memory error detector
==19066== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19066== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19066== Command: ./impl/assignment_3Vars_test496/assignment_3Vars_test496.out
==19066== Parent PID: 12124
==19066== 
==19066== 
==19066== HEAP SUMMARY:
==19066==     in use at exit: 0 bytes in 0 blocks
==19066==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19066== 
==19066== All heap blocks were freed -- no leaks are possible
==19066== 
==19066== For counts of detected and suppressed errors, rerun with: -v
==19066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test497 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test497/assignment_3Vars_test497.c)
The Valgrind memory detector as below:
==19082== Memcheck, a memory error detector
==19082== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19082== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19082== Command: ./impl/assignment_3Vars_test497/assignment_3Vars_test497.out
==19082== Parent PID: 12124
==19082== 
==19082== 
==19082== HEAP SUMMARY:
==19082==     in use at exit: 0 bytes in 0 blocks
==19082==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19082== 
==19082== All heap blocks were freed -- no leaks are possible
==19082== 
==19082== For counts of detected and suppressed errors, rerun with: -v
==19082== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test498 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test498/assignment_3Vars_test498.c)
The Valgrind memory detector as below:
==19097== Memcheck, a memory error detector
==19097== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19097== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19097== Command: ./impl/assignment_3Vars_test498/assignment_3Vars_test498.out
==19097== Parent PID: 12124
==19097== 
==19097== 
==19097== HEAP SUMMARY:
==19097==     in use at exit: 0 bytes in 0 blocks
==19097==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19097== 
==19097== All heap blocks were freed -- no leaks are possible
==19097== 
==19097== For counts of detected and suppressed errors, rerun with: -v
==19097== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test499 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test499/assignment_3Vars_test499.c)
The Valgrind memory detector as below:
==19112== Memcheck, a memory error detector
==19112== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19112== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19112== Command: ./impl/assignment_3Vars_test499/assignment_3Vars_test499.out
==19112== Parent PID: 12124
==19112== 
==19112== 
==19112== HEAP SUMMARY:
==19112==     in use at exit: 0 bytes in 0 blocks
==19112==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19112== 
==19112== All heap blocks were freed -- no leaks are possible
==19112== 
==19112== For counts of detected and suppressed errors, rerun with: -v
==19112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test5 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test5/assignment_3Vars_test5.c)
The Valgrind memory detector as below:
==19127== Memcheck, a memory error detector
==19127== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19127== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19127== Command: ./impl/assignment_3Vars_test5/assignment_3Vars_test5.out
==19127== Parent PID: 12124
==19127== 
==19127== 
==19127== HEAP SUMMARY:
==19127==     in use at exit: 0 bytes in 0 blocks
==19127==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19127== 
==19127== All heap blocks were freed -- no leaks are possible
==19127== 
==19127== For counts of detected and suppressed errors, rerun with: -v
==19127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test50 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test50/assignment_3Vars_test50.c)
The Valgrind memory detector as below:
==19142== Memcheck, a memory error detector
==19142== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19142== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19142== Command: ./impl/assignment_3Vars_test50/assignment_3Vars_test50.out
==19142== Parent PID: 12124
==19142== 
==19142== 
==19142== HEAP SUMMARY:
==19142==     in use at exit: 0 bytes in 0 blocks
==19142==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19142== 
==19142== All heap blocks were freed -- no leaks are possible
==19142== 
==19142== For counts of detected and suppressed errors, rerun with: -v
==19142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test500 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test500/assignment_3Vars_test500.c)
The Valgrind memory detector as below:
==19158== Memcheck, a memory error detector
==19158== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19158== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19158== Command: ./impl/assignment_3Vars_test500/assignment_3Vars_test500.out
==19158== Parent PID: 12124
==19158== 
==19158== 
==19158== HEAP SUMMARY:
==19158==     in use at exit: 0 bytes in 0 blocks
==19158==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19158== 
==19158== All heap blocks were freed -- no leaks are possible
==19158== 
==19158== For counts of detected and suppressed errors, rerun with: -v
==19158== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test501 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test501/assignment_3Vars_test501.c)
The Valgrind memory detector as below:
==19173== Memcheck, a memory error detector
==19173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19173== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19173== Command: ./impl/assignment_3Vars_test501/assignment_3Vars_test501.out
==19173== Parent PID: 12124
==19173== 
==19173== 
==19173== HEAP SUMMARY:
==19173==     in use at exit: 0 bytes in 0 blocks
==19173==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19173== 
==19173== All heap blocks were freed -- no leaks are possible
==19173== 
==19173== For counts of detected and suppressed errors, rerun with: -v
==19173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test502 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test502/assignment_3Vars_test502.c)
The Valgrind memory detector as below:
==19188== Memcheck, a memory error detector
==19188== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19188== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19188== Command: ./impl/assignment_3Vars_test502/assignment_3Vars_test502.out
==19188== Parent PID: 12124
==19188== 
==19188== 
==19188== HEAP SUMMARY:
==19188==     in use at exit: 0 bytes in 0 blocks
==19188==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19188== 
==19188== All heap blocks were freed -- no leaks are possible
==19188== 
==19188== For counts of detected and suppressed errors, rerun with: -v
==19188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test503 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test503/assignment_3Vars_test503.c)
The Valgrind memory detector as below:
==19203== Memcheck, a memory error detector
==19203== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19203== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19203== Command: ./impl/assignment_3Vars_test503/assignment_3Vars_test503.out
==19203== Parent PID: 12124
==19203== 
==19203== 
==19203== HEAP SUMMARY:
==19203==     in use at exit: 0 bytes in 0 blocks
==19203==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19203== 
==19203== All heap blocks were freed -- no leaks are possible
==19203== 
==19203== For counts of detected and suppressed errors, rerun with: -v
==19203== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test504 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test504/assignment_3Vars_test504.c)
The Valgrind memory detector as below:
==19220== Memcheck, a memory error detector
==19220== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19220== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19220== Command: ./impl/assignment_3Vars_test504/assignment_3Vars_test504.out
==19220== Parent PID: 12124
==19220== 
==19220== 
==19220== HEAP SUMMARY:
==19220==     in use at exit: 0 bytes in 0 blocks
==19220==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19220== 
==19220== All heap blocks were freed -- no leaks are possible
==19220== 
==19220== For counts of detected and suppressed errors, rerun with: -v
==19220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test505 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test505/assignment_3Vars_test505.c)
The Valgrind memory detector as below:
==19235== Memcheck, a memory error detector
==19235== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19235== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19235== Command: ./impl/assignment_3Vars_test505/assignment_3Vars_test505.out
==19235== Parent PID: 12124
==19235== 
==19235== 
==19235== HEAP SUMMARY:
==19235==     in use at exit: 0 bytes in 0 blocks
==19235==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19235== 
==19235== All heap blocks were freed -- no leaks are possible
==19235== 
==19235== For counts of detected and suppressed errors, rerun with: -v
==19235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test506 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test506/assignment_3Vars_test506.c)
The Valgrind memory detector as below:
==19250== Memcheck, a memory error detector
==19250== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19250== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19250== Command: ./impl/assignment_3Vars_test506/assignment_3Vars_test506.out
==19250== Parent PID: 12124
==19250== 
==19250== 
==19250== HEAP SUMMARY:
==19250==     in use at exit: 0 bytes in 0 blocks
==19250==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19250== 
==19250== All heap blocks were freed -- no leaks are possible
==19250== 
==19250== For counts of detected and suppressed errors, rerun with: -v
==19250== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test507 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test507/assignment_3Vars_test507.c)
The Valgrind memory detector as below:
==19265== Memcheck, a memory error detector
==19265== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19265== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19265== Command: ./impl/assignment_3Vars_test507/assignment_3Vars_test507.out
==19265== Parent PID: 12124
==19265== 
==19265== 
==19265== HEAP SUMMARY:
==19265==     in use at exit: 0 bytes in 0 blocks
==19265==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19265== 
==19265== All heap blocks were freed -- no leaks are possible
==19265== 
==19265== For counts of detected and suppressed errors, rerun with: -v
==19265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test508 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test508/assignment_3Vars_test508.c)
The Valgrind memory detector as below:
==19282== Memcheck, a memory error detector
==19282== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19282== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19282== Command: ./impl/assignment_3Vars_test508/assignment_3Vars_test508.out
==19282== Parent PID: 12124
==19282== 
==19282== 
==19282== HEAP SUMMARY:
==19282==     in use at exit: 0 bytes in 0 blocks
==19282==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19282== 
==19282== All heap blocks were freed -- no leaks are possible
==19282== 
==19282== For counts of detected and suppressed errors, rerun with: -v
==19282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test509 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test509/assignment_3Vars_test509.c)
The Valgrind memory detector as below:
==19297== Memcheck, a memory error detector
==19297== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19297== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19297== Command: ./impl/assignment_3Vars_test509/assignment_3Vars_test509.out
==19297== Parent PID: 12124
==19297== 
==19297== 
==19297== HEAP SUMMARY:
==19297==     in use at exit: 0 bytes in 0 blocks
==19297==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19297== 
==19297== All heap blocks were freed -- no leaks are possible
==19297== 
==19297== For counts of detected and suppressed errors, rerun with: -v
==19297== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test51 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test51/assignment_3Vars_test51.c)
The Valgrind memory detector as below:
==19312== Memcheck, a memory error detector
==19312== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19312== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19312== Command: ./impl/assignment_3Vars_test51/assignment_3Vars_test51.out
==19312== Parent PID: 12124
==19312== 
==19312== 
==19312== HEAP SUMMARY:
==19312==     in use at exit: 0 bytes in 0 blocks
==19312==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19312== 
==19312== All heap blocks were freed -- no leaks are possible
==19312== 
==19312== For counts of detected and suppressed errors, rerun with: -v
==19312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test510 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test510/assignment_3Vars_test510.c)
The Valgrind memory detector as below:
==19327== Memcheck, a memory error detector
==19327== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19327== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19327== Command: ./impl/assignment_3Vars_test510/assignment_3Vars_test510.out
==19327== Parent PID: 12124
==19327== 
==19327== 
==19327== HEAP SUMMARY:
==19327==     in use at exit: 0 bytes in 0 blocks
==19327==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19327== 
==19327== All heap blocks were freed -- no leaks are possible
==19327== 
==19327== For counts of detected and suppressed errors, rerun with: -v
==19327== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test511 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test511/assignment_3Vars_test511.c)
The Valgrind memory detector as below:
==19344== Memcheck, a memory error detector
==19344== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19344== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19344== Command: ./impl/assignment_3Vars_test511/assignment_3Vars_test511.out
==19344== Parent PID: 12124
==19344== 
==19344== 
==19344== HEAP SUMMARY:
==19344==     in use at exit: 0 bytes in 0 blocks
==19344==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19344== 
==19344== All heap blocks were freed -- no leaks are possible
==19344== 
==19344== For counts of detected and suppressed errors, rerun with: -v
==19344== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test512 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test512/assignment_3Vars_test512.c)
The Valgrind memory detector as below:
==19366== Memcheck, a memory error detector
==19366== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19366== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19366== Command: ./impl/assignment_3Vars_test512/assignment_3Vars_test512.out
==19366== Parent PID: 12124
==19366== 
==19366== 
==19366== HEAP SUMMARY:
==19366==     in use at exit: 0 bytes in 0 blocks
==19366==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19366== 
==19366== All heap blocks were freed -- no leaks are possible
==19366== 
==19366== For counts of detected and suppressed errors, rerun with: -v
==19366== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test513 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test513/assignment_3Vars_test513.c)
The Valgrind memory detector as below:
==19381== Memcheck, a memory error detector
==19381== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19381== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19381== Command: ./impl/assignment_3Vars_test513/assignment_3Vars_test513.out
==19381== Parent PID: 12124
==19381== 
==19381== 
==19381== HEAP SUMMARY:
==19381==     in use at exit: 0 bytes in 0 blocks
==19381==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19381== 
==19381== All heap blocks were freed -- no leaks are possible
==19381== 
==19381== For counts of detected and suppressed errors, rerun with: -v
==19381== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test514 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test514/assignment_3Vars_test514.c)
The Valgrind memory detector as below:
==19396== Memcheck, a memory error detector
==19396== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19396== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19396== Command: ./impl/assignment_3Vars_test514/assignment_3Vars_test514.out
==19396== Parent PID: 12124
==19396== 
==19396== 
==19396== HEAP SUMMARY:
==19396==     in use at exit: 0 bytes in 0 blocks
==19396==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19396== 
==19396== All heap blocks were freed -- no leaks are possible
==19396== 
==19396== For counts of detected and suppressed errors, rerun with: -v
==19396== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test515 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test515/assignment_3Vars_test515.c)
The Valgrind memory detector as below:
==19412== Memcheck, a memory error detector
==19412== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19412== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19412== Command: ./impl/assignment_3Vars_test515/assignment_3Vars_test515.out
==19412== Parent PID: 12124
==19412== 
==19412== 
==19412== HEAP SUMMARY:
==19412==     in use at exit: 0 bytes in 0 blocks
==19412==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19412== 
==19412== All heap blocks were freed -- no leaks are possible
==19412== 
==19412== For counts of detected and suppressed errors, rerun with: -v
==19412== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test516 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test516/assignment_3Vars_test516.c)
The Valgrind memory detector as below:
==19427== Memcheck, a memory error detector
==19427== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19427== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19427== Command: ./impl/assignment_3Vars_test516/assignment_3Vars_test516.out
==19427== Parent PID: 12124
==19427== 
==19427== 
==19427== HEAP SUMMARY:
==19427==     in use at exit: 0 bytes in 0 blocks
==19427==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19427== 
==19427== All heap blocks were freed -- no leaks are possible
==19427== 
==19427== For counts of detected and suppressed errors, rerun with: -v
==19427== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test517 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test517/assignment_3Vars_test517.c)
The Valgrind memory detector as below:
==19442== Memcheck, a memory error detector
==19442== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19442== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19442== Command: ./impl/assignment_3Vars_test517/assignment_3Vars_test517.out
==19442== Parent PID: 12124
==19442== 
==19442== 
==19442== HEAP SUMMARY:
==19442==     in use at exit: 0 bytes in 0 blocks
==19442==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19442== 
==19442== All heap blocks were freed -- no leaks are possible
==19442== 
==19442== For counts of detected and suppressed errors, rerun with: -v
==19442== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test518 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test518/assignment_3Vars_test518.c)
The Valgrind memory detector as below:
==19457== Memcheck, a memory error detector
==19457== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19457== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19457== Command: ./impl/assignment_3Vars_test518/assignment_3Vars_test518.out
==19457== Parent PID: 12124
==19457== 
==19457== 
==19457== HEAP SUMMARY:
==19457==     in use at exit: 0 bytes in 0 blocks
==19457==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19457== 
==19457== All heap blocks were freed -- no leaks are possible
==19457== 
==19457== For counts of detected and suppressed errors, rerun with: -v
==19457== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test519 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test519/assignment_3Vars_test519.c)
The Valgrind memory detector as below:
==19473== Memcheck, a memory error detector
==19473== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19473== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19473== Command: ./impl/assignment_3Vars_test519/assignment_3Vars_test519.out
==19473== Parent PID: 12124
==19473== 
==19473== 
==19473== HEAP SUMMARY:
==19473==     in use at exit: 0 bytes in 0 blocks
==19473==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19473== 
==19473== All heap blocks were freed -- no leaks are possible
==19473== 
==19473== For counts of detected and suppressed errors, rerun with: -v
==19473== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test52 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test52/assignment_3Vars_test52.c)
The Valgrind memory detector as below:
==19489== Memcheck, a memory error detector
==19489== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19489== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19489== Command: ./impl/assignment_3Vars_test52/assignment_3Vars_test52.out
==19489== Parent PID: 12124
==19489== 
==19489== 
==19489== HEAP SUMMARY:
==19489==     in use at exit: 0 bytes in 0 blocks
==19489==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19489== 
==19489== All heap blocks were freed -- no leaks are possible
==19489== 
==19489== For counts of detected and suppressed errors, rerun with: -v
==19489== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test520 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test520/assignment_3Vars_test520.c)
The Valgrind memory detector as below:
==19504== Memcheck, a memory error detector
==19504== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19504== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19504== Command: ./impl/assignment_3Vars_test520/assignment_3Vars_test520.out
==19504== Parent PID: 12124
==19504== 
==19504== 
==19504== HEAP SUMMARY:
==19504==     in use at exit: 0 bytes in 0 blocks
==19504==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19504== 
==19504== All heap blocks were freed -- no leaks are possible
==19504== 
==19504== For counts of detected and suppressed errors, rerun with: -v
==19504== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test521 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test521/assignment_3Vars_test521.c)
The Valgrind memory detector as below:
==19519== Memcheck, a memory error detector
==19519== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19519== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19519== Command: ./impl/assignment_3Vars_test521/assignment_3Vars_test521.out
==19519== Parent PID: 12124
==19519== 
==19519== 
==19519== HEAP SUMMARY:
==19519==     in use at exit: 0 bytes in 0 blocks
==19519==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19519== 
==19519== All heap blocks were freed -- no leaks are possible
==19519== 
==19519== For counts of detected and suppressed errors, rerun with: -v
==19519== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test522 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test522/assignment_3Vars_test522.c)
The Valgrind memory detector as below:
==19535== Memcheck, a memory error detector
==19535== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19535== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19535== Command: ./impl/assignment_3Vars_test522/assignment_3Vars_test522.out
==19535== Parent PID: 12124
==19535== 
==19535== 
==19535== HEAP SUMMARY:
==19535==     in use at exit: 0 bytes in 0 blocks
==19535==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19535== 
==19535== All heap blocks were freed -- no leaks are possible
==19535== 
==19535== For counts of detected and suppressed errors, rerun with: -v
==19535== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test523 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test523/assignment_3Vars_test523.c)
The Valgrind memory detector as below:
==19550== Memcheck, a memory error detector
==19550== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19550== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19550== Command: ./impl/assignment_3Vars_test523/assignment_3Vars_test523.out
==19550== Parent PID: 12124
==19550== 
==19550== 
==19550== HEAP SUMMARY:
==19550==     in use at exit: 0 bytes in 0 blocks
==19550==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19550== 
==19550== All heap blocks were freed -- no leaks are possible
==19550== 
==19550== For counts of detected and suppressed errors, rerun with: -v
==19550== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test524 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test524/assignment_3Vars_test524.c)
The Valgrind memory detector as below:
==19565== Memcheck, a memory error detector
==19565== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19565== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19565== Command: ./impl/assignment_3Vars_test524/assignment_3Vars_test524.out
==19565== Parent PID: 12124
==19565== 
==19565== 
==19565== HEAP SUMMARY:
==19565==     in use at exit: 0 bytes in 0 blocks
==19565==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19565== 
==19565== All heap blocks were freed -- no leaks are possible
==19565== 
==19565== For counts of detected and suppressed errors, rerun with: -v
==19565== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test525 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test525/assignment_3Vars_test525.c)
The Valgrind memory detector as below:
==19580== Memcheck, a memory error detector
==19580== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19580== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19580== Command: ./impl/assignment_3Vars_test525/assignment_3Vars_test525.out
==19580== Parent PID: 12124
==19580== 
==19580== 
==19580== HEAP SUMMARY:
==19580==     in use at exit: 0 bytes in 0 blocks
==19580==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19580== 
==19580== All heap blocks were freed -- no leaks are possible
==19580== 
==19580== For counts of detected and suppressed errors, rerun with: -v
==19580== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test526 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test526/assignment_3Vars_test526.c)
The Valgrind memory detector as below:
==19596== Memcheck, a memory error detector
==19596== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19596== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19596== Command: ./impl/assignment_3Vars_test526/assignment_3Vars_test526.out
==19596== Parent PID: 12124
==19596== 
==19596== 
==19596== HEAP SUMMARY:
==19596==     in use at exit: 0 bytes in 0 blocks
==19596==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19596== 
==19596== All heap blocks were freed -- no leaks are possible
==19596== 
==19596== For counts of detected and suppressed errors, rerun with: -v
==19596== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test527 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test527/assignment_3Vars_test527.c)
The Valgrind memory detector as below:
==19611== Memcheck, a memory error detector
==19611== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19611== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19611== Command: ./impl/assignment_3Vars_test527/assignment_3Vars_test527.out
==19611== Parent PID: 12124
==19611== 
==19611== 
==19611== HEAP SUMMARY:
==19611==     in use at exit: 0 bytes in 0 blocks
==19611==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19611== 
==19611== All heap blocks were freed -- no leaks are possible
==19611== 
==19611== For counts of detected and suppressed errors, rerun with: -v
==19611== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test528 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test528/assignment_3Vars_test528.c)
The Valgrind memory detector as below:
==19627== Memcheck, a memory error detector
==19627== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19627== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19627== Command: ./impl/assignment_3Vars_test528/assignment_3Vars_test528.out
==19627== Parent PID: 12124
==19627== 
==19627== 
==19627== HEAP SUMMARY:
==19627==     in use at exit: 0 bytes in 0 blocks
==19627==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19627== 
==19627== All heap blocks were freed -- no leaks are possible
==19627== 
==19627== For counts of detected and suppressed errors, rerun with: -v
==19627== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test529 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test529/assignment_3Vars_test529.c)
The Valgrind memory detector as below:
==19643== Memcheck, a memory error detector
==19643== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19643== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19643== Command: ./impl/assignment_3Vars_test529/assignment_3Vars_test529.out
==19643== Parent PID: 12124
==19643== 
==19643== 
==19643== HEAP SUMMARY:
==19643==     in use at exit: 0 bytes in 0 blocks
==19643==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19643== 
==19643== All heap blocks were freed -- no leaks are possible
==19643== 
==19643== For counts of detected and suppressed errors, rerun with: -v
==19643== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test53 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test53/assignment_3Vars_test53.c)
The Valgrind memory detector as below:
==19660== Memcheck, a memory error detector
==19660== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19660== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19660== Command: ./impl/assignment_3Vars_test53/assignment_3Vars_test53.out
==19660== Parent PID: 12124
==19660== 
==19660== 
==19660== HEAP SUMMARY:
==19660==     in use at exit: 0 bytes in 0 blocks
==19660==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19660== 
==19660== All heap blocks were freed -- no leaks are possible
==19660== 
==19660== For counts of detected and suppressed errors, rerun with: -v
==19660== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test530 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test530/assignment_3Vars_test530.c)
The Valgrind memory detector as below:
==19675== Memcheck, a memory error detector
==19675== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19675== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19675== Command: ./impl/assignment_3Vars_test530/assignment_3Vars_test530.out
==19675== Parent PID: 12124
==19675== 
==19675== 
==19675== HEAP SUMMARY:
==19675==     in use at exit: 0 bytes in 0 blocks
==19675==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19675== 
==19675== All heap blocks were freed -- no leaks are possible
==19675== 
==19675== For counts of detected and suppressed errors, rerun with: -v
==19675== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test531 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test531/assignment_3Vars_test531.c)
The Valgrind memory detector as below:
==19690== Memcheck, a memory error detector
==19690== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19690== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19690== Command: ./impl/assignment_3Vars_test531/assignment_3Vars_test531.out
==19690== Parent PID: 12124
==19690== 
==19690== 
==19690== HEAP SUMMARY:
==19690==     in use at exit: 0 bytes in 0 blocks
==19690==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19690== 
==19690== All heap blocks were freed -- no leaks are possible
==19690== 
==19690== For counts of detected and suppressed errors, rerun with: -v
==19690== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test532 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test532/assignment_3Vars_test532.c)
The Valgrind memory detector as below:
==19705== Memcheck, a memory error detector
==19705== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19705== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19705== Command: ./impl/assignment_3Vars_test532/assignment_3Vars_test532.out
==19705== Parent PID: 12124
==19705== 
==19705== 
==19705== HEAP SUMMARY:
==19705==     in use at exit: 0 bytes in 0 blocks
==19705==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19705== 
==19705== All heap blocks were freed -- no leaks are possible
==19705== 
==19705== For counts of detected and suppressed errors, rerun with: -v
==19705== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test533 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test533/assignment_3Vars_test533.c)
The Valgrind memory detector as below:
==19721== Memcheck, a memory error detector
==19721== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19721== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19721== Command: ./impl/assignment_3Vars_test533/assignment_3Vars_test533.out
==19721== Parent PID: 12124
==19721== 
==19721== 
==19721== HEAP SUMMARY:
==19721==     in use at exit: 0 bytes in 0 blocks
==19721==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19721== 
==19721== All heap blocks were freed -- no leaks are possible
==19721== 
==19721== For counts of detected and suppressed errors, rerun with: -v
==19721== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test534 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test534/assignment_3Vars_test534.c)
The Valgrind memory detector as below:
==19736== Memcheck, a memory error detector
==19736== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19736== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19736== Command: ./impl/assignment_3Vars_test534/assignment_3Vars_test534.out
==19736== Parent PID: 12124
==19736== 
==19736== 
==19736== HEAP SUMMARY:
==19736==     in use at exit: 0 bytes in 0 blocks
==19736==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19736== 
==19736== All heap blocks were freed -- no leaks are possible
==19736== 
==19736== For counts of detected and suppressed errors, rerun with: -v
==19736== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test535 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test535/assignment_3Vars_test535.c)
The Valgrind memory detector as below:
==19751== Memcheck, a memory error detector
==19751== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19751== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19751== Command: ./impl/assignment_3Vars_test535/assignment_3Vars_test535.out
==19751== Parent PID: 12124
==19751== 
==19751== 
==19751== HEAP SUMMARY:
==19751==     in use at exit: 0 bytes in 0 blocks
==19751==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19751== 
==19751== All heap blocks were freed -- no leaks are possible
==19751== 
==19751== For counts of detected and suppressed errors, rerun with: -v
==19751== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test536 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test536/assignment_3Vars_test536.c)
The Valgrind memory detector as below:
==19766== Memcheck, a memory error detector
==19766== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19766== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19766== Command: ./impl/assignment_3Vars_test536/assignment_3Vars_test536.out
==19766== Parent PID: 12124
==19766== 
==19766== 
==19766== HEAP SUMMARY:
==19766==     in use at exit: 0 bytes in 0 blocks
==19766==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19766== 
==19766== All heap blocks were freed -- no leaks are possible
==19766== 
==19766== For counts of detected and suppressed errors, rerun with: -v
==19766== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test537 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test537/assignment_3Vars_test537.c)
The Valgrind memory detector as below:
==19782== Memcheck, a memory error detector
==19782== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19782== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19782== Command: ./impl/assignment_3Vars_test537/assignment_3Vars_test537.out
==19782== Parent PID: 12124
==19782== 
==19782== 
==19782== HEAP SUMMARY:
==19782==     in use at exit: 0 bytes in 0 blocks
==19782==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19782== 
==19782== All heap blocks were freed -- no leaks are possible
==19782== 
==19782== For counts of detected and suppressed errors, rerun with: -v
==19782== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test538 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test538/assignment_3Vars_test538.c)
The Valgrind memory detector as below:
==19797== Memcheck, a memory error detector
==19797== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19797== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19797== Command: ./impl/assignment_3Vars_test538/assignment_3Vars_test538.out
==19797== Parent PID: 12124
==19797== 
==19797== 
==19797== HEAP SUMMARY:
==19797==     in use at exit: 0 bytes in 0 blocks
==19797==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19797== 
==19797== All heap blocks were freed -- no leaks are possible
==19797== 
==19797== For counts of detected and suppressed errors, rerun with: -v
==19797== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test539 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test539/assignment_3Vars_test539.c)
The Valgrind memory detector as below:
==19812== Memcheck, a memory error detector
==19812== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19812== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19812== Command: ./impl/assignment_3Vars_test539/assignment_3Vars_test539.out
==19812== Parent PID: 12124
==19812== 
==19812== 
==19812== HEAP SUMMARY:
==19812==     in use at exit: 0 bytes in 0 blocks
==19812==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19812== 
==19812== All heap blocks were freed -- no leaks are possible
==19812== 
==19812== For counts of detected and suppressed errors, rerun with: -v
==19812== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test54 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test54/assignment_3Vars_test54.c)
The Valgrind memory detector as below:
==19827== Memcheck, a memory error detector
==19827== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19827== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19827== Command: ./impl/assignment_3Vars_test54/assignment_3Vars_test54.out
==19827== Parent PID: 12124
==19827== 
==19827== 
==19827== HEAP SUMMARY:
==19827==     in use at exit: 0 bytes in 0 blocks
==19827==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19827== 
==19827== All heap blocks were freed -- no leaks are possible
==19827== 
==19827== For counts of detected and suppressed errors, rerun with: -v
==19827== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test540 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test540/assignment_3Vars_test540.c)
The Valgrind memory detector as below:
==19843== Memcheck, a memory error detector
==19843== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19843== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19843== Command: ./impl/assignment_3Vars_test540/assignment_3Vars_test540.out
==19843== Parent PID: 12124
==19843== 
==19843== 
==19843== HEAP SUMMARY:
==19843==     in use at exit: 0 bytes in 0 blocks
==19843==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19843== 
==19843== All heap blocks were freed -- no leaks are possible
==19843== 
==19843== For counts of detected and suppressed errors, rerun with: -v
==19843== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test541 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test541/assignment_3Vars_test541.c)
The Valgrind memory detector as below:
==19858== Memcheck, a memory error detector
==19858== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19858== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19858== Command: ./impl/assignment_3Vars_test541/assignment_3Vars_test541.out
==19858== Parent PID: 12124
==19858== 
==19858== 
==19858== HEAP SUMMARY:
==19858==     in use at exit: 0 bytes in 0 blocks
==19858==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19858== 
==19858== All heap blocks were freed -- no leaks are possible
==19858== 
==19858== For counts of detected and suppressed errors, rerun with: -v
==19858== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test542 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test542/assignment_3Vars_test542.c)
The Valgrind memory detector as below:
==19873== Memcheck, a memory error detector
==19873== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19873== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19873== Command: ./impl/assignment_3Vars_test542/assignment_3Vars_test542.out
==19873== Parent PID: 12124
==19873== 
==19873== 
==19873== HEAP SUMMARY:
==19873==     in use at exit: 0 bytes in 0 blocks
==19873==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19873== 
==19873== All heap blocks were freed -- no leaks are possible
==19873== 
==19873== For counts of detected and suppressed errors, rerun with: -v
==19873== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test543 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test543/assignment_3Vars_test543.c)
The Valgrind memory detector as below:
==19888== Memcheck, a memory error detector
==19888== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19888== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19888== Command: ./impl/assignment_3Vars_test543/assignment_3Vars_test543.out
==19888== Parent PID: 12124
==19888== 
==19888== 
==19888== HEAP SUMMARY:
==19888==     in use at exit: 0 bytes in 0 blocks
==19888==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19888== 
==19888== All heap blocks were freed -- no leaks are possible
==19888== 
==19888== For counts of detected and suppressed errors, rerun with: -v
==19888== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test544 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test544/assignment_3Vars_test544.c)
The Valgrind memory detector as below:
==19904== Memcheck, a memory error detector
==19904== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19904== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19904== Command: ./impl/assignment_3Vars_test544/assignment_3Vars_test544.out
==19904== Parent PID: 12124
==19904== 
==19904== 
==19904== HEAP SUMMARY:
==19904==     in use at exit: 0 bytes in 0 blocks
==19904==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19904== 
==19904== All heap blocks were freed -- no leaks are possible
==19904== 
==19904== For counts of detected and suppressed errors, rerun with: -v
==19904== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test545 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test545/assignment_3Vars_test545.c)
The Valgrind memory detector as below:
==19920== Memcheck, a memory error detector
==19920== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19920== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19920== Command: ./impl/assignment_3Vars_test545/assignment_3Vars_test545.out
==19920== Parent PID: 12124
==19920== 
==19920== 
==19920== HEAP SUMMARY:
==19920==     in use at exit: 0 bytes in 0 blocks
==19920==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19920== 
==19920== All heap blocks were freed -- no leaks are possible
==19920== 
==19920== For counts of detected and suppressed errors, rerun with: -v
==19920== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test546 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test546/assignment_3Vars_test546.c)
The Valgrind memory detector as below:
==19937== Memcheck, a memory error detector
==19937== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19937== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19937== Command: ./impl/assignment_3Vars_test546/assignment_3Vars_test546.out
==19937== Parent PID: 12124
==19937== 
==19937== 
==19937== HEAP SUMMARY:
==19937==     in use at exit: 0 bytes in 0 blocks
==19937==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19937== 
==19937== All heap blocks were freed -- no leaks are possible
==19937== 
==19937== For counts of detected and suppressed errors, rerun with: -v
==19937== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test547 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test547/assignment_3Vars_test547.c)
The Valgrind memory detector as below:
==19955== Memcheck, a memory error detector
==19955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19955== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19955== Command: ./impl/assignment_3Vars_test547/assignment_3Vars_test547.out
==19955== Parent PID: 12124
==19955== 
==19955== 
==19955== HEAP SUMMARY:
==19955==     in use at exit: 0 bytes in 0 blocks
==19955==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19955== 
==19955== All heap blocks were freed -- no leaks are possible
==19955== 
==19955== For counts of detected and suppressed errors, rerun with: -v
==19955== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test548 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test548/assignment_3Vars_test548.c)
The Valgrind memory detector as below:
==19978== Memcheck, a memory error detector
==19978== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19978== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19978== Command: ./impl/assignment_3Vars_test548/assignment_3Vars_test548.out
==19978== Parent PID: 12124
==19978== 
==19978== 
==19978== HEAP SUMMARY:
==19978==     in use at exit: 0 bytes in 0 blocks
==19978==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19978== 
==19978== All heap blocks were freed -- no leaks are possible
==19978== 
==19978== For counts of detected and suppressed errors, rerun with: -v
==19978== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test549 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test549/assignment_3Vars_test549.c)
The Valgrind memory detector as below:
==19993== Memcheck, a memory error detector
==19993== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19993== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==19993== Command: ./impl/assignment_3Vars_test549/assignment_3Vars_test549.out
==19993== Parent PID: 12124
==19993== 
==19993== 
==19993== HEAP SUMMARY:
==19993==     in use at exit: 0 bytes in 0 blocks
==19993==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==19993== 
==19993== All heap blocks were freed -- no leaks are possible
==19993== 
==19993== For counts of detected and suppressed errors, rerun with: -v
==19993== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test55 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test55/assignment_3Vars_test55.c)
The Valgrind memory detector as below:
==20008== Memcheck, a memory error detector
==20008== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20008== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20008== Command: ./impl/assignment_3Vars_test55/assignment_3Vars_test55.out
==20008== Parent PID: 12124
==20008== 
==20008== 
==20008== HEAP SUMMARY:
==20008==     in use at exit: 0 bytes in 0 blocks
==20008==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20008== 
==20008== All heap blocks were freed -- no leaks are possible
==20008== 
==20008== For counts of detected and suppressed errors, rerun with: -v
==20008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test550 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test550/assignment_3Vars_test550.c)
The Valgrind memory detector as below:
==20024== Memcheck, a memory error detector
==20024== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20024== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20024== Command: ./impl/assignment_3Vars_test550/assignment_3Vars_test550.out
==20024== Parent PID: 12124
==20024== 
==20024== 
==20024== HEAP SUMMARY:
==20024==     in use at exit: 0 bytes in 0 blocks
==20024==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20024== 
==20024== All heap blocks were freed -- no leaks are possible
==20024== 
==20024== For counts of detected and suppressed errors, rerun with: -v
==20024== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test551 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test551/assignment_3Vars_test551.c)
The Valgrind memory detector as below:
==20039== Memcheck, a memory error detector
==20039== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20039== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20039== Command: ./impl/assignment_3Vars_test551/assignment_3Vars_test551.out
==20039== Parent PID: 12124
==20039== 
==20039== 
==20039== HEAP SUMMARY:
==20039==     in use at exit: 0 bytes in 0 blocks
==20039==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20039== 
==20039== All heap blocks were freed -- no leaks are possible
==20039== 
==20039== For counts of detected and suppressed errors, rerun with: -v
==20039== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test552 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test552/assignment_3Vars_test552.c)
The Valgrind memory detector as below:
==20054== Memcheck, a memory error detector
==20054== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20054== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20054== Command: ./impl/assignment_3Vars_test552/assignment_3Vars_test552.out
==20054== Parent PID: 12124
==20054== 
==20054== 
==20054== HEAP SUMMARY:
==20054==     in use at exit: 0 bytes in 0 blocks
==20054==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20054== 
==20054== All heap blocks were freed -- no leaks are possible
==20054== 
==20054== For counts of detected and suppressed errors, rerun with: -v
==20054== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test553 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test553/assignment_3Vars_test553.c)
The Valgrind memory detector as below:
==20070== Memcheck, a memory error detector
==20070== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20070== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20070== Command: ./impl/assignment_3Vars_test553/assignment_3Vars_test553.out
==20070== Parent PID: 12124
==20070== 
==20070== 
==20070== HEAP SUMMARY:
==20070==     in use at exit: 0 bytes in 0 blocks
==20070==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20070== 
==20070== All heap blocks were freed -- no leaks are possible
==20070== 
==20070== For counts of detected and suppressed errors, rerun with: -v
==20070== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test554 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test554/assignment_3Vars_test554.c)
The Valgrind memory detector as below:
==20086== Memcheck, a memory error detector
==20086== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20086== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20086== Command: ./impl/assignment_3Vars_test554/assignment_3Vars_test554.out
==20086== Parent PID: 12124
==20086== 
==20086== 
==20086== HEAP SUMMARY:
==20086==     in use at exit: 0 bytes in 0 blocks
==20086==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20086== 
==20086== All heap blocks were freed -- no leaks are possible
==20086== 
==20086== For counts of detected and suppressed errors, rerun with: -v
==20086== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test555 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test555/assignment_3Vars_test555.c)
The Valgrind memory detector as below:
==20101== Memcheck, a memory error detector
==20101== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20101== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20101== Command: ./impl/assignment_3Vars_test555/assignment_3Vars_test555.out
==20101== Parent PID: 12124
==20101== 
==20101== 
==20101== HEAP SUMMARY:
==20101==     in use at exit: 0 bytes in 0 blocks
==20101==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20101== 
==20101== All heap blocks were freed -- no leaks are possible
==20101== 
==20101== For counts of detected and suppressed errors, rerun with: -v
==20101== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test556 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test556/assignment_3Vars_test556.c)
The Valgrind memory detector as below:
==20116== Memcheck, a memory error detector
==20116== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20116== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20116== Command: ./impl/assignment_3Vars_test556/assignment_3Vars_test556.out
==20116== Parent PID: 12124
==20116== 
==20116== 
==20116== HEAP SUMMARY:
==20116==     in use at exit: 0 bytes in 0 blocks
==20116==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20116== 
==20116== All heap blocks were freed -- no leaks are possible
==20116== 
==20116== For counts of detected and suppressed errors, rerun with: -v
==20116== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test557 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test557/assignment_3Vars_test557.c)
The Valgrind memory detector as below:
==20131== Memcheck, a memory error detector
==20131== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20131== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20131== Command: ./impl/assignment_3Vars_test557/assignment_3Vars_test557.out
==20131== Parent PID: 12124
==20131== 
==20131== 
==20131== HEAP SUMMARY:
==20131==     in use at exit: 0 bytes in 0 blocks
==20131==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20131== 
==20131== All heap blocks were freed -- no leaks are possible
==20131== 
==20131== For counts of detected and suppressed errors, rerun with: -v
==20131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test558 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test558/assignment_3Vars_test558.c)
The Valgrind memory detector as below:
==20147== Memcheck, a memory error detector
==20147== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20147== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20147== Command: ./impl/assignment_3Vars_test558/assignment_3Vars_test558.out
==20147== Parent PID: 12124
==20147== 
==20147== 
==20147== HEAP SUMMARY:
==20147==     in use at exit: 0 bytes in 0 blocks
==20147==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20147== 
==20147== All heap blocks were freed -- no leaks are possible
==20147== 
==20147== For counts of detected and suppressed errors, rerun with: -v
==20147== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test559 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test559/assignment_3Vars_test559.c)
The Valgrind memory detector as below:
==20162== Memcheck, a memory error detector
==20162== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20162== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20162== Command: ./impl/assignment_3Vars_test559/assignment_3Vars_test559.out
==20162== Parent PID: 12124
==20162== 
==20162== 
==20162== HEAP SUMMARY:
==20162==     in use at exit: 0 bytes in 0 blocks
==20162==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20162== 
==20162== All heap blocks were freed -- no leaks are possible
==20162== 
==20162== For counts of detected and suppressed errors, rerun with: -v
==20162== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test56 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test56/assignment_3Vars_test56.c)
The Valgrind memory detector as below:
==20177== Memcheck, a memory error detector
==20177== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20177== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20177== Command: ./impl/assignment_3Vars_test56/assignment_3Vars_test56.out
==20177== Parent PID: 12124
==20177== 
==20177== 
==20177== HEAP SUMMARY:
==20177==     in use at exit: 0 bytes in 0 blocks
==20177==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20177== 
==20177== All heap blocks were freed -- no leaks are possible
==20177== 
==20177== For counts of detected and suppressed errors, rerun with: -v
==20177== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test560 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test560/assignment_3Vars_test560.c)
The Valgrind memory detector as below:
==20192== Memcheck, a memory error detector
==20192== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20192== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20192== Command: ./impl/assignment_3Vars_test560/assignment_3Vars_test560.out
==20192== Parent PID: 12124
==20192== 
==20192== 
==20192== HEAP SUMMARY:
==20192==     in use at exit: 0 bytes in 0 blocks
==20192==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20192== 
==20192== All heap blocks were freed -- no leaks are possible
==20192== 
==20192== For counts of detected and suppressed errors, rerun with: -v
==20192== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test561 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test561/assignment_3Vars_test561.c)
The Valgrind memory detector as below:
==20208== Memcheck, a memory error detector
==20208== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20208== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20208== Command: ./impl/assignment_3Vars_test561/assignment_3Vars_test561.out
==20208== Parent PID: 12124
==20208== 
==20208== 
==20208== HEAP SUMMARY:
==20208==     in use at exit: 0 bytes in 0 blocks
==20208==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20208== 
==20208== All heap blocks were freed -- no leaks are possible
==20208== 
==20208== For counts of detected and suppressed errors, rerun with: -v
==20208== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test562 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test562/assignment_3Vars_test562.c)
The Valgrind memory detector as below:
==20224== Memcheck, a memory error detector
==20224== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20224== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20224== Command: ./impl/assignment_3Vars_test562/assignment_3Vars_test562.out
==20224== Parent PID: 12124
==20224== 
==20224== 
==20224== HEAP SUMMARY:
==20224==     in use at exit: 0 bytes in 0 blocks
==20224==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20224== 
==20224== All heap blocks were freed -- no leaks are possible
==20224== 
==20224== For counts of detected and suppressed errors, rerun with: -v
==20224== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test563 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test563/assignment_3Vars_test563.c)
The Valgrind memory detector as below:
==20239== Memcheck, a memory error detector
==20239== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20239== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20239== Command: ./impl/assignment_3Vars_test563/assignment_3Vars_test563.out
==20239== Parent PID: 12124
==20239== 
==20239== 
==20239== HEAP SUMMARY:
==20239==     in use at exit: 0 bytes in 0 blocks
==20239==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20239== 
==20239== All heap blocks were freed -- no leaks are possible
==20239== 
==20239== For counts of detected and suppressed errors, rerun with: -v
==20239== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test564 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test564/assignment_3Vars_test564.c)
The Valgrind memory detector as below:
==20256== Memcheck, a memory error detector
==20256== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20256== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20256== Command: ./impl/assignment_3Vars_test564/assignment_3Vars_test564.out
==20256== Parent PID: 12124
==20256== 
==20256== 
==20256== HEAP SUMMARY:
==20256==     in use at exit: 0 bytes in 0 blocks
==20256==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20256== 
==20256== All heap blocks were freed -- no leaks are possible
==20256== 
==20256== For counts of detected and suppressed errors, rerun with: -v
==20256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test565 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test565/assignment_3Vars_test565.c)
The Valgrind memory detector as below:
==20274== Memcheck, a memory error detector
==20274== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20274== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20274== Command: ./impl/assignment_3Vars_test565/assignment_3Vars_test565.out
==20274== Parent PID: 12124
==20274== 
==20274== 
==20274== HEAP SUMMARY:
==20274==     in use at exit: 0 bytes in 0 blocks
==20274==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20274== 
==20274== All heap blocks were freed -- no leaks are possible
==20274== 
==20274== For counts of detected and suppressed errors, rerun with: -v
==20274== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test566 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test566/assignment_3Vars_test566.c)
The Valgrind memory detector as below:
==20289== Memcheck, a memory error detector
==20289== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20289== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20289== Command: ./impl/assignment_3Vars_test566/assignment_3Vars_test566.out
==20289== Parent PID: 12124
==20289== 
==20289== 
==20289== HEAP SUMMARY:
==20289==     in use at exit: 0 bytes in 0 blocks
==20289==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20289== 
==20289== All heap blocks were freed -- no leaks are possible
==20289== 
==20289== For counts of detected and suppressed errors, rerun with: -v
==20289== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test567 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test567/assignment_3Vars_test567.c)
The Valgrind memory detector as below:
==20304== Memcheck, a memory error detector
==20304== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20304== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20304== Command: ./impl/assignment_3Vars_test567/assignment_3Vars_test567.out
==20304== Parent PID: 12124
==20304== 
==20304== 
==20304== HEAP SUMMARY:
==20304==     in use at exit: 0 bytes in 0 blocks
==20304==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20304== 
==20304== All heap blocks were freed -- no leaks are possible
==20304== 
==20304== For counts of detected and suppressed errors, rerun with: -v
==20304== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test568 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test568/assignment_3Vars_test568.c)
The Valgrind memory detector as below:
==20319== Memcheck, a memory error detector
==20319== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20319== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20319== Command: ./impl/assignment_3Vars_test568/assignment_3Vars_test568.out
==20319== Parent PID: 12124
==20319== 
==20319== 
==20319== HEAP SUMMARY:
==20319==     in use at exit: 0 bytes in 0 blocks
==20319==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20319== 
==20319== All heap blocks were freed -- no leaks are possible
==20319== 
==20319== For counts of detected and suppressed errors, rerun with: -v
==20319== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test569 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test569/assignment_3Vars_test569.c)
The Valgrind memory detector as below:
==20335== Memcheck, a memory error detector
==20335== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20335== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20335== Command: ./impl/assignment_3Vars_test569/assignment_3Vars_test569.out
==20335== Parent PID: 12124
==20335== 
==20335== 
==20335== HEAP SUMMARY:
==20335==     in use at exit: 0 bytes in 0 blocks
==20335==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20335== 
==20335== All heap blocks were freed -- no leaks are possible
==20335== 
==20335== For counts of detected and suppressed errors, rerun with: -v
==20335== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test57 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test57/assignment_3Vars_test57.c)
The Valgrind memory detector as below:
==20350== Memcheck, a memory error detector
==20350== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20350== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20350== Command: ./impl/assignment_3Vars_test57/assignment_3Vars_test57.out
==20350== Parent PID: 12124
==20350== 
==20350== 
==20350== HEAP SUMMARY:
==20350==     in use at exit: 0 bytes in 0 blocks
==20350==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20350== 
==20350== All heap blocks were freed -- no leaks are possible
==20350== 
==20350== For counts of detected and suppressed errors, rerun with: -v
==20350== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test570 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test570/assignment_3Vars_test570.c)
The Valgrind memory detector as below:
==20365== Memcheck, a memory error detector
==20365== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20365== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20365== Command: ./impl/assignment_3Vars_test570/assignment_3Vars_test570.out
==20365== Parent PID: 12124
==20365== 
==20365== 
==20365== HEAP SUMMARY:
==20365==     in use at exit: 0 bytes in 0 blocks
==20365==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20365== 
==20365== All heap blocks were freed -- no leaks are possible
==20365== 
==20365== For counts of detected and suppressed errors, rerun with: -v
==20365== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test571 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test571/assignment_3Vars_test571.c)
The Valgrind memory detector as below:
==20380== Memcheck, a memory error detector
==20380== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20380== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20380== Command: ./impl/assignment_3Vars_test571/assignment_3Vars_test571.out
==20380== Parent PID: 12124
==20380== 
==20380== 
==20380== HEAP SUMMARY:
==20380==     in use at exit: 0 bytes in 0 blocks
==20380==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20380== 
==20380== All heap blocks were freed -- no leaks are possible
==20380== 
==20380== For counts of detected and suppressed errors, rerun with: -v
==20380== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test572 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test572/assignment_3Vars_test572.c)
The Valgrind memory detector as below:
==20395== Memcheck, a memory error detector
==20395== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20395== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20395== Command: ./impl/assignment_3Vars_test572/assignment_3Vars_test572.out
==20395== Parent PID: 12124
==20395== 
==20395== 
==20395== HEAP SUMMARY:
==20395==     in use at exit: 0 bytes in 0 blocks
==20395==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20395== 
==20395== All heap blocks were freed -- no leaks are possible
==20395== 
==20395== For counts of detected and suppressed errors, rerun with: -v
==20395== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test573 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test573/assignment_3Vars_test573.c)
The Valgrind memory detector as below:
==20411== Memcheck, a memory error detector
==20411== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20411== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20411== Command: ./impl/assignment_3Vars_test573/assignment_3Vars_test573.out
==20411== Parent PID: 12124
==20411== 
==20411== 
==20411== HEAP SUMMARY:
==20411==     in use at exit: 0 bytes in 0 blocks
==20411==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20411== 
==20411== All heap blocks were freed -- no leaks are possible
==20411== 
==20411== For counts of detected and suppressed errors, rerun with: -v
==20411== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test574 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test574/assignment_3Vars_test574.c)
The Valgrind memory detector as below:
==20426== Memcheck, a memory error detector
==20426== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20426== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20426== Command: ./impl/assignment_3Vars_test574/assignment_3Vars_test574.out
==20426== Parent PID: 12124
==20426== 
==20426== 
==20426== HEAP SUMMARY:
==20426==     in use at exit: 0 bytes in 0 blocks
==20426==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20426== 
==20426== All heap blocks were freed -- no leaks are possible
==20426== 
==20426== For counts of detected and suppressed errors, rerun with: -v
==20426== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test575 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test575/assignment_3Vars_test575.c)
The Valgrind memory detector as below:
==20441== Memcheck, a memory error detector
==20441== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20441== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20441== Command: ./impl/assignment_3Vars_test575/assignment_3Vars_test575.out
==20441== Parent PID: 12124
==20441== 
==20441== 
==20441== HEAP SUMMARY:
==20441==     in use at exit: 0 bytes in 0 blocks
==20441==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20441== 
==20441== All heap blocks were freed -- no leaks are possible
==20441== 
==20441== For counts of detected and suppressed errors, rerun with: -v
==20441== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test576 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test576/assignment_3Vars_test576.c)
The Valgrind memory detector as below:
==20457== Memcheck, a memory error detector
==20457== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20457== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20457== Command: ./impl/assignment_3Vars_test576/assignment_3Vars_test576.out
==20457== Parent PID: 12124
==20457== 
==20457== 
==20457== HEAP SUMMARY:
==20457==     in use at exit: 0 bytes in 0 blocks
==20457==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20457== 
==20457== All heap blocks were freed -- no leaks are possible
==20457== 
==20457== For counts of detected and suppressed errors, rerun with: -v
==20457== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test577 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test577/assignment_3Vars_test577.c)
The Valgrind memory detector as below:
==20473== Memcheck, a memory error detector
==20473== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20473== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20473== Command: ./impl/assignment_3Vars_test577/assignment_3Vars_test577.out
==20473== Parent PID: 12124
==20473== 
==20473== 
==20473== HEAP SUMMARY:
==20473==     in use at exit: 0 bytes in 0 blocks
==20473==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20473== 
==20473== All heap blocks were freed -- no leaks are possible
==20473== 
==20473== For counts of detected and suppressed errors, rerun with: -v
==20473== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test578 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test578/assignment_3Vars_test578.c)
The Valgrind memory detector as below:
==20488== Memcheck, a memory error detector
==20488== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20488== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20488== Command: ./impl/assignment_3Vars_test578/assignment_3Vars_test578.out
==20488== Parent PID: 12124
==20488== 
==20488== 
==20488== HEAP SUMMARY:
==20488==     in use at exit: 0 bytes in 0 blocks
==20488==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20488== 
==20488== All heap blocks were freed -- no leaks are possible
==20488== 
==20488== For counts of detected and suppressed errors, rerun with: -v
==20488== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test579 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test579/assignment_3Vars_test579.c)
The Valgrind memory detector as below:
==20503== Memcheck, a memory error detector
==20503== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20503== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20503== Command: ./impl/assignment_3Vars_test579/assignment_3Vars_test579.out
==20503== Parent PID: 12124
==20503== 
==20503== 
==20503== HEAP SUMMARY:
==20503==     in use at exit: 0 bytes in 0 blocks
==20503==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20503== 
==20503== All heap blocks were freed -- no leaks are possible
==20503== 
==20503== For counts of detected and suppressed errors, rerun with: -v
==20503== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test58 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test58/assignment_3Vars_test58.c)
The Valgrind memory detector as below:
==20518== Memcheck, a memory error detector
==20518== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20518== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20518== Command: ./impl/assignment_3Vars_test58/assignment_3Vars_test58.out
==20518== Parent PID: 12124
==20518== 
==20518== 
==20518== HEAP SUMMARY:
==20518==     in use at exit: 0 bytes in 0 blocks
==20518==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20518== 
==20518== All heap blocks were freed -- no leaks are possible
==20518== 
==20518== For counts of detected and suppressed errors, rerun with: -v
==20518== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test580 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test580/assignment_3Vars_test580.c)
The Valgrind memory detector as below:
==20534== Memcheck, a memory error detector
==20534== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20534== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20534== Command: ./impl/assignment_3Vars_test580/assignment_3Vars_test580.out
==20534== Parent PID: 12124
==20534== 
==20534== 
==20534== HEAP SUMMARY:
==20534==     in use at exit: 0 bytes in 0 blocks
==20534==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20534== 
==20534== All heap blocks were freed -- no leaks are possible
==20534== 
==20534== For counts of detected and suppressed errors, rerun with: -v
==20534== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test581 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test581/assignment_3Vars_test581.c)
The Valgrind memory detector as below:
==20549== Memcheck, a memory error detector
==20549== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20549== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20549== Command: ./impl/assignment_3Vars_test581/assignment_3Vars_test581.out
==20549== Parent PID: 12124
==20549== 
==20549== 
==20549== HEAP SUMMARY:
==20549==     in use at exit: 0 bytes in 0 blocks
==20549==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20549== 
==20549== All heap blocks were freed -- no leaks are possible
==20549== 
==20549== For counts of detected and suppressed errors, rerun with: -v
==20549== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test582 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test582/assignment_3Vars_test582.c)
The Valgrind memory detector as below:
==20564== Memcheck, a memory error detector
==20564== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20564== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20564== Command: ./impl/assignment_3Vars_test582/assignment_3Vars_test582.out
==20564== Parent PID: 12124
==20564== 
==20564== 
==20564== HEAP SUMMARY:
==20564==     in use at exit: 0 bytes in 0 blocks
==20564==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20564== 
==20564== All heap blocks were freed -- no leaks are possible
==20564== 
==20564== For counts of detected and suppressed errors, rerun with: -v
==20564== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test583 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test583/assignment_3Vars_test583.c)
The Valgrind memory detector as below:
==20579== Memcheck, a memory error detector
==20579== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20579== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20579== Command: ./impl/assignment_3Vars_test583/assignment_3Vars_test583.out
==20579== Parent PID: 12124
==20579== 
==20579== 
==20579== HEAP SUMMARY:
==20579==     in use at exit: 0 bytes in 0 blocks
==20579==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20579== 
==20579== All heap blocks were freed -- no leaks are possible
==20579== 
==20579== For counts of detected and suppressed errors, rerun with: -v
==20579== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test584 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test584/assignment_3Vars_test584.c)
The Valgrind memory detector as below:
==20596== Memcheck, a memory error detector
==20596== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20596== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20596== Command: ./impl/assignment_3Vars_test584/assignment_3Vars_test584.out
==20596== Parent PID: 12124
==20596== 
==20596== 
==20596== HEAP SUMMARY:
==20596==     in use at exit: 0 bytes in 0 blocks
==20596==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20596== 
==20596== All heap blocks were freed -- no leaks are possible
==20596== 
==20596== For counts of detected and suppressed errors, rerun with: -v
==20596== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test585 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test585/assignment_3Vars_test585.c)
The Valgrind memory detector as below:
==20611== Memcheck, a memory error detector
==20611== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20611== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20611== Command: ./impl/assignment_3Vars_test585/assignment_3Vars_test585.out
==20611== Parent PID: 12124
==20611== 
==20611== 
==20611== HEAP SUMMARY:
==20611==     in use at exit: 0 bytes in 0 blocks
==20611==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20611== 
==20611== All heap blocks were freed -- no leaks are possible
==20611== 
==20611== For counts of detected and suppressed errors, rerun with: -v
==20611== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test586 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test586/assignment_3Vars_test586.c)
The Valgrind memory detector as below:
==20626== Memcheck, a memory error detector
==20626== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20626== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20626== Command: ./impl/assignment_3Vars_test586/assignment_3Vars_test586.out
==20626== Parent PID: 12124
==20626== 
==20626== 
==20626== HEAP SUMMARY:
==20626==     in use at exit: 0 bytes in 0 blocks
==20626==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20626== 
==20626== All heap blocks were freed -- no leaks are possible
==20626== 
==20626== For counts of detected and suppressed errors, rerun with: -v
==20626== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test587 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test587/assignment_3Vars_test587.c)
The Valgrind memory detector as below:
==20641== Memcheck, a memory error detector
==20641== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20641== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20641== Command: ./impl/assignment_3Vars_test587/assignment_3Vars_test587.out
==20641== Parent PID: 12124
==20641== 
==20641== 
==20641== HEAP SUMMARY:
==20641==     in use at exit: 0 bytes in 0 blocks
==20641==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20641== 
==20641== All heap blocks were freed -- no leaks are possible
==20641== 
==20641== For counts of detected and suppressed errors, rerun with: -v
==20641== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test588 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test588/assignment_3Vars_test588.c)
The Valgrind memory detector as below:
==20657== Memcheck, a memory error detector
==20657== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20657== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20657== Command: ./impl/assignment_3Vars_test588/assignment_3Vars_test588.out
==20657== Parent PID: 12124
==20657== 
==20657== 
==20657== HEAP SUMMARY:
==20657==     in use at exit: 0 bytes in 0 blocks
==20657==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20657== 
==20657== All heap blocks were freed -- no leaks are possible
==20657== 
==20657== For counts of detected and suppressed errors, rerun with: -v
==20657== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test589 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test589/assignment_3Vars_test589.c)
The Valgrind memory detector as below:
==20672== Memcheck, a memory error detector
==20672== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20672== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20672== Command: ./impl/assignment_3Vars_test589/assignment_3Vars_test589.out
==20672== Parent PID: 12124
==20672== 
==20672== 
==20672== HEAP SUMMARY:
==20672==     in use at exit: 0 bytes in 0 blocks
==20672==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20672== 
==20672== All heap blocks were freed -- no leaks are possible
==20672== 
==20672== For counts of detected and suppressed errors, rerun with: -v
==20672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test59 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test59/assignment_3Vars_test59.c)
The Valgrind memory detector as below:
==20687== Memcheck, a memory error detector
==20687== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20687== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20687== Command: ./impl/assignment_3Vars_test59/assignment_3Vars_test59.out
==20687== Parent PID: 12124
==20687== 
==20687== 
==20687== HEAP SUMMARY:
==20687==     in use at exit: 0 bytes in 0 blocks
==20687==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20687== 
==20687== All heap blocks were freed -- no leaks are possible
==20687== 
==20687== For counts of detected and suppressed errors, rerun with: -v
==20687== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test590 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test590/assignment_3Vars_test590.c)
The Valgrind memory detector as below:
==20702== Memcheck, a memory error detector
==20702== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20702== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20702== Command: ./impl/assignment_3Vars_test590/assignment_3Vars_test590.out
==20702== Parent PID: 12124
==20702== 
==20702== 
==20702== HEAP SUMMARY:
==20702==     in use at exit: 0 bytes in 0 blocks
==20702==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20702== 
==20702== All heap blocks were freed -- no leaks are possible
==20702== 
==20702== For counts of detected and suppressed errors, rerun with: -v
==20702== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test591 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test591/assignment_3Vars_test591.c)
The Valgrind memory detector as below:
==20718== Memcheck, a memory error detector
==20718== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20718== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20718== Command: ./impl/assignment_3Vars_test591/assignment_3Vars_test591.out
==20718== Parent PID: 12124
==20718== 
==20718== 
==20718== HEAP SUMMARY:
==20718==     in use at exit: 0 bytes in 0 blocks
==20718==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20718== 
==20718== All heap blocks were freed -- no leaks are possible
==20718== 
==20718== For counts of detected and suppressed errors, rerun with: -v
==20718== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test592 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test592/assignment_3Vars_test592.c)
The Valgrind memory detector as below:
==20733== Memcheck, a memory error detector
==20733== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20733== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20733== Command: ./impl/assignment_3Vars_test592/assignment_3Vars_test592.out
==20733== Parent PID: 12124
==20733== 
==20733== 
==20733== HEAP SUMMARY:
==20733==     in use at exit: 0 bytes in 0 blocks
==20733==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20733== 
==20733== All heap blocks were freed -- no leaks are possible
==20733== 
==20733== For counts of detected and suppressed errors, rerun with: -v
==20733== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test593 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test593/assignment_3Vars_test593.c)
The Valgrind memory detector as below:
==20748== Memcheck, a memory error detector
==20748== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20748== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20748== Command: ./impl/assignment_3Vars_test593/assignment_3Vars_test593.out
==20748== Parent PID: 12124
==20748== 
==20748== 
==20748== HEAP SUMMARY:
==20748==     in use at exit: 0 bytes in 0 blocks
==20748==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20748== 
==20748== All heap blocks were freed -- no leaks are possible
==20748== 
==20748== For counts of detected and suppressed errors, rerun with: -v
==20748== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test594 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test594/assignment_3Vars_test594.c)
The Valgrind memory detector as below:
==20763== Memcheck, a memory error detector
==20763== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20763== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20763== Command: ./impl/assignment_3Vars_test594/assignment_3Vars_test594.out
==20763== Parent PID: 12124
==20763== 
==20763== 
==20763== HEAP SUMMARY:
==20763==     in use at exit: 0 bytes in 0 blocks
==20763==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20763== 
==20763== All heap blocks were freed -- no leaks are possible
==20763== 
==20763== For counts of detected and suppressed errors, rerun with: -v
==20763== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test595 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test595/assignment_3Vars_test595.c)
The Valgrind memory detector as below:
==20779== Memcheck, a memory error detector
==20779== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20779== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20779== Command: ./impl/assignment_3Vars_test595/assignment_3Vars_test595.out
==20779== Parent PID: 12124
==20779== 
==20779== 
==20779== HEAP SUMMARY:
==20779==     in use at exit: 0 bytes in 0 blocks
==20779==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20779== 
==20779== All heap blocks were freed -- no leaks are possible
==20779== 
==20779== For counts of detected and suppressed errors, rerun with: -v
==20779== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test596 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test596/assignment_3Vars_test596.c)
The Valgrind memory detector as below:
==20794== Memcheck, a memory error detector
==20794== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20794== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20794== Command: ./impl/assignment_3Vars_test596/assignment_3Vars_test596.out
==20794== Parent PID: 12124
==20794== 
==20794== 
==20794== HEAP SUMMARY:
==20794==     in use at exit: 0 bytes in 0 blocks
==20794==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20794== 
==20794== All heap blocks were freed -- no leaks are possible
==20794== 
==20794== For counts of detected and suppressed errors, rerun with: -v
==20794== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test597 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test597/assignment_3Vars_test597.c)
The Valgrind memory detector as below:
==20809== Memcheck, a memory error detector
==20809== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20809== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20809== Command: ./impl/assignment_3Vars_test597/assignment_3Vars_test597.out
==20809== Parent PID: 12124
==20809== 
==20809== 
==20809== HEAP SUMMARY:
==20809==     in use at exit: 0 bytes in 0 blocks
==20809==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20809== 
==20809== All heap blocks were freed -- no leaks are possible
==20809== 
==20809== For counts of detected and suppressed errors, rerun with: -v
==20809== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test598 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test598/assignment_3Vars_test598.c)
The Valgrind memory detector as below:
==20824== Memcheck, a memory error detector
==20824== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20824== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20824== Command: ./impl/assignment_3Vars_test598/assignment_3Vars_test598.out
==20824== Parent PID: 12124
==20824== 
==20824== 
==20824== HEAP SUMMARY:
==20824==     in use at exit: 0 bytes in 0 blocks
==20824==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20824== 
==20824== All heap blocks were freed -- no leaks are possible
==20824== 
==20824== For counts of detected and suppressed errors, rerun with: -v
==20824== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test599 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test599/assignment_3Vars_test599.c)
The Valgrind memory detector as below:
==20840== Memcheck, a memory error detector
==20840== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20840== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20840== Command: ./impl/assignment_3Vars_test599/assignment_3Vars_test599.out
==20840== Parent PID: 12124
==20840== 
==20840== 
==20840== HEAP SUMMARY:
==20840==     in use at exit: 0 bytes in 0 blocks
==20840==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20840== 
==20840== All heap blocks were freed -- no leaks are possible
==20840== 
==20840== For counts of detected and suppressed errors, rerun with: -v
==20840== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test6 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test6/assignment_3Vars_test6.c)
The Valgrind memory detector as below:
==20855== Memcheck, a memory error detector
==20855== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20855== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20855== Command: ./impl/assignment_3Vars_test6/assignment_3Vars_test6.out
==20855== Parent PID: 12124
==20855== 
==20855== 
==20855== HEAP SUMMARY:
==20855==     in use at exit: 0 bytes in 0 blocks
==20855==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20855== 
==20855== All heap blocks were freed -- no leaks are possible
==20855== 
==20855== For counts of detected and suppressed errors, rerun with: -v
==20855== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test60 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test60/assignment_3Vars_test60.c)
The Valgrind memory detector as below:
==20870== Memcheck, a memory error detector
==20870== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20870== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20870== Command: ./impl/assignment_3Vars_test60/assignment_3Vars_test60.out
==20870== Parent PID: 12124
==20870== 
==20870== 
==20870== HEAP SUMMARY:
==20870==     in use at exit: 0 bytes in 0 blocks
==20870==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20870== 
==20870== All heap blocks were freed -- no leaks are possible
==20870== 
==20870== For counts of detected and suppressed errors, rerun with: -v
==20870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test600 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:64 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test600/assignment_3Vars_test600.c)
The Valgrind memory detector as below:
==20885== Memcheck, a memory error detector
==20885== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20885== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20885== Command: ./impl/assignment_3Vars_test600/assignment_3Vars_test600.out
==20885== Parent PID: 12124
==20885== 
==20885== 
==20885== HEAP SUMMARY:
==20885==     in use at exit: 0 bytes in 0 blocks
==20885==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20885== 
==20885== All heap blocks were freed -- no leaks are possible
==20885== 
==20885== For counts of detected and suppressed errors, rerun with: -v
==20885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test601 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test601/assignment_3Vars_test601.c)
The Valgrind memory detector as below:
==20902== Memcheck, a memory error detector
==20902== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20902== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20902== Command: ./impl/assignment_3Vars_test601/assignment_3Vars_test601.out
==20902== Parent PID: 12124
==20902== 
==20902== 
==20902== HEAP SUMMARY:
==20902==     in use at exit: 0 bytes in 0 blocks
==20902==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20902== 
==20902== All heap blocks were freed -- no leaks are possible
==20902== 
==20902== For counts of detected and suppressed errors, rerun with: -v
==20902== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test602 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test602/assignment_3Vars_test602.c)
The Valgrind memory detector as below:
==20917== Memcheck, a memory error detector
==20917== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20917== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20917== Command: ./impl/assignment_3Vars_test602/assignment_3Vars_test602.out
==20917== Parent PID: 12124
==20917== 
==20917== 
==20917== HEAP SUMMARY:
==20917==     in use at exit: 0 bytes in 0 blocks
==20917==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20917== 
==20917== All heap blocks were freed -- no leaks are possible
==20917== 
==20917== For counts of detected and suppressed errors, rerun with: -v
==20917== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test603 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test603/assignment_3Vars_test603.c)
The Valgrind memory detector as below:
==20932== Memcheck, a memory error detector
==20932== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20932== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20932== Command: ./impl/assignment_3Vars_test603/assignment_3Vars_test603.out
==20932== Parent PID: 12124
==20932== 
==20932== 
==20932== HEAP SUMMARY:
==20932==     in use at exit: 0 bytes in 0 blocks
==20932==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20932== 
==20932== All heap blocks were freed -- no leaks are possible
==20932== 
==20932== For counts of detected and suppressed errors, rerun with: -v
==20932== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test604 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test604/assignment_3Vars_test604.c)
The Valgrind memory detector as below:
==20947== Memcheck, a memory error detector
==20947== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20947== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20947== Command: ./impl/assignment_3Vars_test604/assignment_3Vars_test604.out
==20947== Parent PID: 12124
==20947== 
==20947== 
==20947== HEAP SUMMARY:
==20947==     in use at exit: 0 bytes in 0 blocks
==20947==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20947== 
==20947== All heap blocks were freed -- no leaks are possible
==20947== 
==20947== For counts of detected and suppressed errors, rerun with: -v
==20947== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test605 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test605/assignment_3Vars_test605.c)
The Valgrind memory detector as below:
==20963== Memcheck, a memory error detector
==20963== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20963== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20963== Command: ./impl/assignment_3Vars_test605/assignment_3Vars_test605.out
==20963== Parent PID: 12124
==20963== 
==20963== 
==20963== HEAP SUMMARY:
==20963==     in use at exit: 0 bytes in 0 blocks
==20963==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20963== 
==20963== All heap blocks were freed -- no leaks are possible
==20963== 
==20963== For counts of detected and suppressed errors, rerun with: -v
==20963== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test606 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test606/assignment_3Vars_test606.c)
The Valgrind memory detector as below:
==20978== Memcheck, a memory error detector
==20978== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20978== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20978== Command: ./impl/assignment_3Vars_test606/assignment_3Vars_test606.out
==20978== Parent PID: 12124
==20978== 
==20978== 
==20978== HEAP SUMMARY:
==20978==     in use at exit: 0 bytes in 0 blocks
==20978==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20978== 
==20978== All heap blocks were freed -- no leaks are possible
==20978== 
==20978== For counts of detected and suppressed errors, rerun with: -v
==20978== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test607 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test607/assignment_3Vars_test607.c)
The Valgrind memory detector as below:
==20993== Memcheck, a memory error detector
==20993== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20993== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==20993== Command: ./impl/assignment_3Vars_test607/assignment_3Vars_test607.out
==20993== Parent PID: 12124
==20993== 
==20993== 
==20993== HEAP SUMMARY:
==20993==     in use at exit: 0 bytes in 0 blocks
==20993==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==20993== 
==20993== All heap blocks were freed -- no leaks are possible
==20993== 
==20993== For counts of detected and suppressed errors, rerun with: -v
==20993== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test608 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test608/assignment_3Vars_test608.c)
The Valgrind memory detector as below:
==21008== Memcheck, a memory error detector
==21008== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21008== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21008== Command: ./impl/assignment_3Vars_test608/assignment_3Vars_test608.out
==21008== Parent PID: 12124
==21008== 
==21008== 
==21008== HEAP SUMMARY:
==21008==     in use at exit: 0 bytes in 0 blocks
==21008==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21008== 
==21008== All heap blocks were freed -- no leaks are possible
==21008== 
==21008== For counts of detected and suppressed errors, rerun with: -v
==21008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test609 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test609/assignment_3Vars_test609.c)
The Valgrind memory detector as below:
==21023== Memcheck, a memory error detector
==21023== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21023== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21023== Command: ./impl/assignment_3Vars_test609/assignment_3Vars_test609.out
==21023== Parent PID: 12124
==21023== 
==21023== 
==21023== HEAP SUMMARY:
==21023==     in use at exit: 0 bytes in 0 blocks
==21023==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21023== 
==21023== All heap blocks were freed -- no leaks are possible
==21023== 
==21023== For counts of detected and suppressed errors, rerun with: -v
==21023== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test61 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test61/assignment_3Vars_test61.c)
The Valgrind memory detector as below:
==21039== Memcheck, a memory error detector
==21039== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21039== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21039== Command: ./impl/assignment_3Vars_test61/assignment_3Vars_test61.out
==21039== Parent PID: 12124
==21039== 
==21039== 
==21039== HEAP SUMMARY:
==21039==     in use at exit: 0 bytes in 0 blocks
==21039==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21039== 
==21039== All heap blocks were freed -- no leaks are possible
==21039== 
==21039== For counts of detected and suppressed errors, rerun with: -v
==21039== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test610 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test610/assignment_3Vars_test610.c)
The Valgrind memory detector as below:
==21054== Memcheck, a memory error detector
==21054== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21054== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21054== Command: ./impl/assignment_3Vars_test610/assignment_3Vars_test610.out
==21054== Parent PID: 12124
==21054== 
==21054== 
==21054== HEAP SUMMARY:
==21054==     in use at exit: 0 bytes in 0 blocks
==21054==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21054== 
==21054== All heap blocks were freed -- no leaks are possible
==21054== 
==21054== For counts of detected and suppressed errors, rerun with: -v
==21054== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test611 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test611/assignment_3Vars_test611.c)
The Valgrind memory detector as below:
==21069== Memcheck, a memory error detector
==21069== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21069== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21069== Command: ./impl/assignment_3Vars_test611/assignment_3Vars_test611.out
==21069== Parent PID: 12124
==21069== 
==21069== 
==21069== HEAP SUMMARY:
==21069==     in use at exit: 0 bytes in 0 blocks
==21069==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21069== 
==21069== All heap blocks were freed -- no leaks are possible
==21069== 
==21069== For counts of detected and suppressed errors, rerun with: -v
==21069== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test612 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test612/assignment_3Vars_test612.c)
The Valgrind memory detector as below:
==21085== Memcheck, a memory error detector
==21085== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21085== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21085== Command: ./impl/assignment_3Vars_test612/assignment_3Vars_test612.out
==21085== Parent PID: 12124
==21085== 
==21085== 
==21085== HEAP SUMMARY:
==21085==     in use at exit: 0 bytes in 0 blocks
==21085==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21085== 
==21085== All heap blocks were freed -- no leaks are possible
==21085== 
==21085== For counts of detected and suppressed errors, rerun with: -v
==21085== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test613 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test613/assignment_3Vars_test613.c)
The Valgrind memory detector as below:
==21100== Memcheck, a memory error detector
==21100== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21100== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21100== Command: ./impl/assignment_3Vars_test613/assignment_3Vars_test613.out
==21100== Parent PID: 12124
==21100== 
==21100== 
==21100== HEAP SUMMARY:
==21100==     in use at exit: 0 bytes in 0 blocks
==21100==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21100== 
==21100== All heap blocks were freed -- no leaks are possible
==21100== 
==21100== For counts of detected and suppressed errors, rerun with: -v
==21100== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test614 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test614/assignment_3Vars_test614.c)
The Valgrind memory detector as below:
==21115== Memcheck, a memory error detector
==21115== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21115== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21115== Command: ./impl/assignment_3Vars_test614/assignment_3Vars_test614.out
==21115== Parent PID: 12124
==21115== 
==21115== 
==21115== HEAP SUMMARY:
==21115==     in use at exit: 0 bytes in 0 blocks
==21115==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21115== 
==21115== All heap blocks were freed -- no leaks are possible
==21115== 
==21115== For counts of detected and suppressed errors, rerun with: -v
==21115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test615 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test615/assignment_3Vars_test615.c)
The Valgrind memory detector as below:
==21130== Memcheck, a memory error detector
==21130== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21130== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21130== Command: ./impl/assignment_3Vars_test615/assignment_3Vars_test615.out
==21130== Parent PID: 12124
==21130== 
==21130== 
==21130== HEAP SUMMARY:
==21130==     in use at exit: 0 bytes in 0 blocks
==21130==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21130== 
==21130== All heap blocks were freed -- no leaks are possible
==21130== 
==21130== For counts of detected and suppressed errors, rerun with: -v
==21130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test616 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test616/assignment_3Vars_test616.c)
The Valgrind memory detector as below:
==21147== Memcheck, a memory error detector
==21147== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21147== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21147== Command: ./impl/assignment_3Vars_test616/assignment_3Vars_test616.out
==21147== Parent PID: 12124
==21147== 
==21147== 
==21147== HEAP SUMMARY:
==21147==     in use at exit: 0 bytes in 0 blocks
==21147==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21147== 
==21147== All heap blocks were freed -- no leaks are possible
==21147== 
==21147== For counts of detected and suppressed errors, rerun with: -v
==21147== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test617 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test617/assignment_3Vars_test617.c)
The Valgrind memory detector as below:
==21162== Memcheck, a memory error detector
==21162== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21162== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21162== Command: ./impl/assignment_3Vars_test617/assignment_3Vars_test617.out
==21162== Parent PID: 12124
==21162== 
==21162== 
==21162== HEAP SUMMARY:
==21162==     in use at exit: 0 bytes in 0 blocks
==21162==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21162== 
==21162== All heap blocks were freed -- no leaks are possible
==21162== 
==21162== For counts of detected and suppressed errors, rerun with: -v
==21162== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test618 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test618/assignment_3Vars_test618.c)
The Valgrind memory detector as below:
==21177== Memcheck, a memory error detector
==21177== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21177== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21177== Command: ./impl/assignment_3Vars_test618/assignment_3Vars_test618.out
==21177== Parent PID: 12124
==21177== 
==21177== 
==21177== HEAP SUMMARY:
==21177==     in use at exit: 0 bytes in 0 blocks
==21177==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21177== 
==21177== All heap blocks were freed -- no leaks are possible
==21177== 
==21177== For counts of detected and suppressed errors, rerun with: -v
==21177== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test619 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test619/assignment_3Vars_test619.c)
The Valgrind memory detector as below:
==21194== Memcheck, a memory error detector
==21194== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21194== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21194== Command: ./impl/assignment_3Vars_test619/assignment_3Vars_test619.out
==21194== Parent PID: 12124
==21194== 
==21194== 
==21194== HEAP SUMMARY:
==21194==     in use at exit: 0 bytes in 0 blocks
==21194==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21194== 
==21194== All heap blocks were freed -- no leaks are possible
==21194== 
==21194== For counts of detected and suppressed errors, rerun with: -v
==21194== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test62 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test62/assignment_3Vars_test62.c)
The Valgrind memory detector as below:
==21209== Memcheck, a memory error detector
==21209== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21209== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21209== Command: ./impl/assignment_3Vars_test62/assignment_3Vars_test62.out
==21209== Parent PID: 12124
==21209== 
==21209== 
==21209== HEAP SUMMARY:
==21209==     in use at exit: 0 bytes in 0 blocks
==21209==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21209== 
==21209== All heap blocks were freed -- no leaks are possible
==21209== 
==21209== For counts of detected and suppressed errors, rerun with: -v
==21209== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test620 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test620/assignment_3Vars_test620.c)
The Valgrind memory detector as below:
==21226== Memcheck, a memory error detector
==21226== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21226== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21226== Command: ./impl/assignment_3Vars_test620/assignment_3Vars_test620.out
==21226== Parent PID: 12124
==21226== 
==21226== 
==21226== HEAP SUMMARY:
==21226==     in use at exit: 0 bytes in 0 blocks
==21226==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21226== 
==21226== All heap blocks were freed -- no leaks are possible
==21226== 
==21226== For counts of detected and suppressed errors, rerun with: -v
==21226== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test621 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test621/assignment_3Vars_test621.c)
The Valgrind memory detector as below:
==21241== Memcheck, a memory error detector
==21241== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21241== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21241== Command: ./impl/assignment_3Vars_test621/assignment_3Vars_test621.out
==21241== Parent PID: 12124
==21241== 
==21241== 
==21241== HEAP SUMMARY:
==21241==     in use at exit: 0 bytes in 0 blocks
==21241==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21241== 
==21241== All heap blocks were freed -- no leaks are possible
==21241== 
==21241== For counts of detected and suppressed errors, rerun with: -v
==21241== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test622 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test622/assignment_3Vars_test622.c)
The Valgrind memory detector as below:
==21256== Memcheck, a memory error detector
==21256== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21256== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21256== Command: ./impl/assignment_3Vars_test622/assignment_3Vars_test622.out
==21256== Parent PID: 12124
==21256== 
==21256== 
==21256== HEAP SUMMARY:
==21256==     in use at exit: 0 bytes in 0 blocks
==21256==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21256== 
==21256== All heap blocks were freed -- no leaks are possible
==21256== 
==21256== For counts of detected and suppressed errors, rerun with: -v
==21256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test623 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test623/assignment_3Vars_test623.c)
The Valgrind memory detector as below:
==21271== Memcheck, a memory error detector
==21271== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21271== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21271== Command: ./impl/assignment_3Vars_test623/assignment_3Vars_test623.out
==21271== Parent PID: 12124
==21271== 
==21271== 
==21271== HEAP SUMMARY:
==21271==     in use at exit: 0 bytes in 0 blocks
==21271==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21271== 
==21271== All heap blocks were freed -- no leaks are possible
==21271== 
==21271== For counts of detected and suppressed errors, rerun with: -v
==21271== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test624 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test624/assignment_3Vars_test624.c)
The Valgrind memory detector as below:
==21287== Memcheck, a memory error detector
==21287== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21287== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21287== Command: ./impl/assignment_3Vars_test624/assignment_3Vars_test624.out
==21287== Parent PID: 12124
==21287== 
==21287== 
==21287== HEAP SUMMARY:
==21287==     in use at exit: 0 bytes in 0 blocks
==21287==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21287== 
==21287== All heap blocks were freed -- no leaks are possible
==21287== 
==21287== For counts of detected and suppressed errors, rerun with: -v
==21287== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test625 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test625/assignment_3Vars_test625.c)
The Valgrind memory detector as below:
==21302== Memcheck, a memory error detector
==21302== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21302== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21302== Command: ./impl/assignment_3Vars_test625/assignment_3Vars_test625.out
==21302== Parent PID: 12124
==21302== 
==21302== 
==21302== HEAP SUMMARY:
==21302==     in use at exit: 0 bytes in 0 blocks
==21302==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21302== 
==21302== All heap blocks were freed -- no leaks are possible
==21302== 
==21302== For counts of detected and suppressed errors, rerun with: -v
==21302== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test626 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test626/assignment_3Vars_test626.c)
The Valgrind memory detector as below:
==21317== Memcheck, a memory error detector
==21317== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21317== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21317== Command: ./impl/assignment_3Vars_test626/assignment_3Vars_test626.out
==21317== Parent PID: 12124
==21317== 
==21317== 
==21317== HEAP SUMMARY:
==21317==     in use at exit: 0 bytes in 0 blocks
==21317==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21317== 
==21317== All heap blocks were freed -- no leaks are possible
==21317== 
==21317== For counts of detected and suppressed errors, rerun with: -v
==21317== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test627 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test627/assignment_3Vars_test627.c)
The Valgrind memory detector as below:
==21332== Memcheck, a memory error detector
==21332== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21332== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21332== Command: ./impl/assignment_3Vars_test627/assignment_3Vars_test627.out
==21332== Parent PID: 12124
==21332== 
==21332== 
==21332== HEAP SUMMARY:
==21332==     in use at exit: 0 bytes in 0 blocks
==21332==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21332== 
==21332== All heap blocks were freed -- no leaks are possible
==21332== 
==21332== For counts of detected and suppressed errors, rerun with: -v
==21332== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test628 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test628/assignment_3Vars_test628.c)
The Valgrind memory detector as below:
==21348== Memcheck, a memory error detector
==21348== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21348== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21348== Command: ./impl/assignment_3Vars_test628/assignment_3Vars_test628.out
==21348== Parent PID: 12124
==21348== 
==21348== 
==21348== HEAP SUMMARY:
==21348==     in use at exit: 0 bytes in 0 blocks
==21348==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21348== 
==21348== All heap blocks were freed -- no leaks are possible
==21348== 
==21348== For counts of detected and suppressed errors, rerun with: -v
==21348== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test629 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test629/assignment_3Vars_test629.c)
The Valgrind memory detector as below:
==21363== Memcheck, a memory error detector
==21363== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21363== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21363== Command: ./impl/assignment_3Vars_test629/assignment_3Vars_test629.out
==21363== Parent PID: 12124
==21363== 
==21363== 
==21363== HEAP SUMMARY:
==21363==     in use at exit: 0 bytes in 0 blocks
==21363==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21363== 
==21363== All heap blocks were freed -- no leaks are possible
==21363== 
==21363== For counts of detected and suppressed errors, rerun with: -v
==21363== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test63 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test63/assignment_3Vars_test63.c)
The Valgrind memory detector as below:
==21378== Memcheck, a memory error detector
==21378== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21378== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21378== Command: ./impl/assignment_3Vars_test63/assignment_3Vars_test63.out
==21378== Parent PID: 12124
==21378== 
==21378== 
==21378== HEAP SUMMARY:
==21378==     in use at exit: 0 bytes in 0 blocks
==21378==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21378== 
==21378== All heap blocks were freed -- no leaks are possible
==21378== 
==21378== For counts of detected and suppressed errors, rerun with: -v
==21378== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test630 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test630/assignment_3Vars_test630.c)
The Valgrind memory detector as below:
==21393== Memcheck, a memory error detector
==21393== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21393== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21393== Command: ./impl/assignment_3Vars_test630/assignment_3Vars_test630.out
==21393== Parent PID: 12124
==21393== 
==21393== 
==21393== HEAP SUMMARY:
==21393==     in use at exit: 0 bytes in 0 blocks
==21393==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21393== 
==21393== All heap blocks were freed -- no leaks are possible
==21393== 
==21393== For counts of detected and suppressed errors, rerun with: -v
==21393== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test631 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test631/assignment_3Vars_test631.c)
The Valgrind memory detector as below:
==21409== Memcheck, a memory error detector
==21409== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21409== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21409== Command: ./impl/assignment_3Vars_test631/assignment_3Vars_test631.out
==21409== Parent PID: 12124
==21409== 
==21409== 
==21409== HEAP SUMMARY:
==21409==     in use at exit: 0 bytes in 0 blocks
==21409==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21409== 
==21409== All heap blocks were freed -- no leaks are possible
==21409== 
==21409== For counts of detected and suppressed errors, rerun with: -v
==21409== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test632 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test632/assignment_3Vars_test632.c)
The Valgrind memory detector as below:
==21424== Memcheck, a memory error detector
==21424== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21424== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21424== Command: ./impl/assignment_3Vars_test632/assignment_3Vars_test632.out
==21424== Parent PID: 12124
==21424== 
==21424== 
==21424== HEAP SUMMARY:
==21424==     in use at exit: 0 bytes in 0 blocks
==21424==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21424== 
==21424== All heap blocks were freed -- no leaks are possible
==21424== 
==21424== For counts of detected and suppressed errors, rerun with: -v
==21424== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test633 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test633/assignment_3Vars_test633.c)
The Valgrind memory detector as below:
==21439== Memcheck, a memory error detector
==21439== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21439== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21439== Command: ./impl/assignment_3Vars_test633/assignment_3Vars_test633.out
==21439== Parent PID: 12124
==21439== 
==21439== 
==21439== HEAP SUMMARY:
==21439==     in use at exit: 0 bytes in 0 blocks
==21439==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21439== 
==21439== All heap blocks were freed -- no leaks are possible
==21439== 
==21439== For counts of detected and suppressed errors, rerun with: -v
==21439== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test634 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test634/assignment_3Vars_test634.c)
The Valgrind memory detector as below:
==21454== Memcheck, a memory error detector
==21454== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21454== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21454== Command: ./impl/assignment_3Vars_test634/assignment_3Vars_test634.out
==21454== Parent PID: 12124
==21454== 
==21454== 
==21454== HEAP SUMMARY:
==21454==     in use at exit: 0 bytes in 0 blocks
==21454==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21454== 
==21454== All heap blocks were freed -- no leaks are possible
==21454== 
==21454== For counts of detected and suppressed errors, rerun with: -v
==21454== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test635 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test635/assignment_3Vars_test635.c)
The Valgrind memory detector as below:
==21470== Memcheck, a memory error detector
==21470== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21470== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21470== Command: ./impl/assignment_3Vars_test635/assignment_3Vars_test635.out
==21470== Parent PID: 12124
==21470== 
==21470== 
==21470== HEAP SUMMARY:
==21470==     in use at exit: 0 bytes in 0 blocks
==21470==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21470== 
==21470== All heap blocks were freed -- no leaks are possible
==21470== 
==21470== For counts of detected and suppressed errors, rerun with: -v
==21470== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test636 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test636/assignment_3Vars_test636.c)
The Valgrind memory detector as below:
==21485== Memcheck, a memory error detector
==21485== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21485== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21485== Command: ./impl/assignment_3Vars_test636/assignment_3Vars_test636.out
==21485== Parent PID: 12124
==21485== 
==21485== 
==21485== HEAP SUMMARY:
==21485==     in use at exit: 0 bytes in 0 blocks
==21485==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21485== 
==21485== All heap blocks were freed -- no leaks are possible
==21485== 
==21485== For counts of detected and suppressed errors, rerun with: -v
==21485== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test637 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test637/assignment_3Vars_test637.c)
The Valgrind memory detector as below:
==21501== Memcheck, a memory error detector
==21501== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21501== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21501== Command: ./impl/assignment_3Vars_test637/assignment_3Vars_test637.out
==21501== Parent PID: 12124
==21501== 
==21501== 
==21501== HEAP SUMMARY:
==21501==     in use at exit: 0 bytes in 0 blocks
==21501==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21501== 
==21501== All heap blocks were freed -- no leaks are possible
==21501== 
==21501== For counts of detected and suppressed errors, rerun with: -v
==21501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test638 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test638/assignment_3Vars_test638.c)
The Valgrind memory detector as below:
==21516== Memcheck, a memory error detector
==21516== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21516== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21516== Command: ./impl/assignment_3Vars_test638/assignment_3Vars_test638.out
==21516== Parent PID: 12124
==21516== 
==21516== 
==21516== HEAP SUMMARY:
==21516==     in use at exit: 0 bytes in 0 blocks
==21516==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21516== 
==21516== All heap blocks were freed -- no leaks are possible
==21516== 
==21516== For counts of detected and suppressed errors, rerun with: -v
==21516== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test639 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test639/assignment_3Vars_test639.c)
The Valgrind memory detector as below:
==21533== Memcheck, a memory error detector
==21533== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21533== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21533== Command: ./impl/assignment_3Vars_test639/assignment_3Vars_test639.out
==21533== Parent PID: 12124
==21533== 
==21533== 
==21533== HEAP SUMMARY:
==21533==     in use at exit: 0 bytes in 0 blocks
==21533==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21533== 
==21533== All heap blocks were freed -- no leaks are possible
==21533== 
==21533== For counts of detected and suppressed errors, rerun with: -v
==21533== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test64 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test64/assignment_3Vars_test64.c)
The Valgrind memory detector as below:
==21548== Memcheck, a memory error detector
==21548== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21548== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21548== Command: ./impl/assignment_3Vars_test64/assignment_3Vars_test64.out
==21548== Parent PID: 12124
==21548== 
==21548== 
==21548== HEAP SUMMARY:
==21548==     in use at exit: 0 bytes in 0 blocks
==21548==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21548== 
==21548== All heap blocks were freed -- no leaks are possible
==21548== 
==21548== For counts of detected and suppressed errors, rerun with: -v
==21548== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test640 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test640/assignment_3Vars_test640.c)
The Valgrind memory detector as below:
==21563== Memcheck, a memory error detector
==21563== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21563== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21563== Command: ./impl/assignment_3Vars_test640/assignment_3Vars_test640.out
==21563== Parent PID: 12124
==21563== 
==21563== 
==21563== HEAP SUMMARY:
==21563==     in use at exit: 0 bytes in 0 blocks
==21563==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21563== 
==21563== All heap blocks were freed -- no leaks are possible
==21563== 
==21563== For counts of detected and suppressed errors, rerun with: -v
==21563== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test641 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test641/assignment_3Vars_test641.c)
The Valgrind memory detector as below:
==21578== Memcheck, a memory error detector
==21578== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21578== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21578== Command: ./impl/assignment_3Vars_test641/assignment_3Vars_test641.out
==21578== Parent PID: 12124
==21578== 
==21578== 
==21578== HEAP SUMMARY:
==21578==     in use at exit: 0 bytes in 0 blocks
==21578==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21578== 
==21578== All heap blocks were freed -- no leaks are possible
==21578== 
==21578== For counts of detected and suppressed errors, rerun with: -v
==21578== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test642 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test642/assignment_3Vars_test642.c)
The Valgrind memory detector as below:
==21594== Memcheck, a memory error detector
==21594== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21594== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21594== Command: ./impl/assignment_3Vars_test642/assignment_3Vars_test642.out
==21594== Parent PID: 12124
==21594== 
==21594== 
==21594== HEAP SUMMARY:
==21594==     in use at exit: 0 bytes in 0 blocks
==21594==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21594== 
==21594== All heap blocks were freed -- no leaks are possible
==21594== 
==21594== For counts of detected and suppressed errors, rerun with: -v
==21594== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test643 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test643/assignment_3Vars_test643.c)
The Valgrind memory detector as below:
==21609== Memcheck, a memory error detector
==21609== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21609== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21609== Command: ./impl/assignment_3Vars_test643/assignment_3Vars_test643.out
==21609== Parent PID: 12124
==21609== 
==21609== 
==21609== HEAP SUMMARY:
==21609==     in use at exit: 0 bytes in 0 blocks
==21609==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21609== 
==21609== All heap blocks were freed -- no leaks are possible
==21609== 
==21609== For counts of detected and suppressed errors, rerun with: -v
==21609== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test644 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test644/assignment_3Vars_test644.c)
The Valgrind memory detector as below:
==21624== Memcheck, a memory error detector
==21624== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21624== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21624== Command: ./impl/assignment_3Vars_test644/assignment_3Vars_test644.out
==21624== Parent PID: 12124
==21624== 
==21624== 
==21624== HEAP SUMMARY:
==21624==     in use at exit: 0 bytes in 0 blocks
==21624==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21624== 
==21624== All heap blocks were freed -- no leaks are possible
==21624== 
==21624== For counts of detected and suppressed errors, rerun with: -v
==21624== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test645 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test645/assignment_3Vars_test645.c)
The Valgrind memory detector as below:
==21639== Memcheck, a memory error detector
==21639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21639== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21639== Command: ./impl/assignment_3Vars_test645/assignment_3Vars_test645.out
==21639== Parent PID: 12124
==21639== 
==21639== 
==21639== HEAP SUMMARY:
==21639==     in use at exit: 0 bytes in 0 blocks
==21639==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21639== 
==21639== All heap blocks were freed -- no leaks are possible
==21639== 
==21639== For counts of detected and suppressed errors, rerun with: -v
==21639== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test646 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test646/assignment_3Vars_test646.c)
The Valgrind memory detector as below:
==21655== Memcheck, a memory error detector
==21655== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21655== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21655== Command: ./impl/assignment_3Vars_test646/assignment_3Vars_test646.out
==21655== Parent PID: 12124
==21655== 
==21655== 
==21655== HEAP SUMMARY:
==21655==     in use at exit: 0 bytes in 0 blocks
==21655==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21655== 
==21655== All heap blocks were freed -- no leaks are possible
==21655== 
==21655== For counts of detected and suppressed errors, rerun with: -v
==21655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test647 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test647/assignment_3Vars_test647.c)
The Valgrind memory detector as below:
==21670== Memcheck, a memory error detector
==21670== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21670== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21670== Command: ./impl/assignment_3Vars_test647/assignment_3Vars_test647.out
==21670== Parent PID: 12124
==21670== 
==21670== 
==21670== HEAP SUMMARY:
==21670==     in use at exit: 0 bytes in 0 blocks
==21670==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21670== 
==21670== All heap blocks were freed -- no leaks are possible
==21670== 
==21670== For counts of detected and suppressed errors, rerun with: -v
==21670== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test648 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:69 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test648/assignment_3Vars_test648.c)
The Valgrind memory detector as below:
==21685== Memcheck, a memory error detector
==21685== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21685== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21685== Command: ./impl/assignment_3Vars_test648/assignment_3Vars_test648.out
==21685== Parent PID: 12124
==21685== 
==21685== 
==21685== HEAP SUMMARY:
==21685==     in use at exit: 0 bytes in 0 blocks
==21685==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21685== 
==21685== All heap blocks were freed -- no leaks are possible
==21685== 
==21685== For counts of detected and suppressed errors, rerun with: -v
==21685== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test649 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test649/assignment_3Vars_test649.c)
The Valgrind memory detector as below:
==21700== Memcheck, a memory error detector
==21700== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21700== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21700== Command: ./impl/assignment_3Vars_test649/assignment_3Vars_test649.out
==21700== Parent PID: 12124
==21700== 
==21700== 
==21700== HEAP SUMMARY:
==21700==     in use at exit: 0 bytes in 0 blocks
==21700==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21700== 
==21700== All heap blocks were freed -- no leaks are possible
==21700== 
==21700== For counts of detected and suppressed errors, rerun with: -v
==21700== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test65 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test65/assignment_3Vars_test65.c)
The Valgrind memory detector as below:
==21716== Memcheck, a memory error detector
==21716== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21716== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21716== Command: ./impl/assignment_3Vars_test65/assignment_3Vars_test65.out
==21716== Parent PID: 12124
==21716== 
==21716== 
==21716== HEAP SUMMARY:
==21716==     in use at exit: 0 bytes in 0 blocks
==21716==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21716== 
==21716== All heap blocks were freed -- no leaks are possible
==21716== 
==21716== For counts of detected and suppressed errors, rerun with: -v
==21716== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test650 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test650/assignment_3Vars_test650.c)
The Valgrind memory detector as below:
==21731== Memcheck, a memory error detector
==21731== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21731== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21731== Command: ./impl/assignment_3Vars_test650/assignment_3Vars_test650.out
==21731== Parent PID: 12124
==21731== 
==21731== 
==21731== HEAP SUMMARY:
==21731==     in use at exit: 0 bytes in 0 blocks
==21731==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21731== 
==21731== All heap blocks were freed -- no leaks are possible
==21731== 
==21731== For counts of detected and suppressed errors, rerun with: -v
==21731== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test651 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test651/assignment_3Vars_test651.c)
The Valgrind memory detector as below:
==21746== Memcheck, a memory error detector
==21746== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21746== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21746== Command: ./impl/assignment_3Vars_test651/assignment_3Vars_test651.out
==21746== Parent PID: 12124
==21746== 
==21746== 
==21746== HEAP SUMMARY:
==21746==     in use at exit: 0 bytes in 0 blocks
==21746==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21746== 
==21746== All heap blocks were freed -- no leaks are possible
==21746== 
==21746== For counts of detected and suppressed errors, rerun with: -v
==21746== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test652 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test652/assignment_3Vars_test652.c)
The Valgrind memory detector as below:
==21761== Memcheck, a memory error detector
==21761== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21761== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21761== Command: ./impl/assignment_3Vars_test652/assignment_3Vars_test652.out
==21761== Parent PID: 12124
==21761== 
==21761== 
==21761== HEAP SUMMARY:
==21761==     in use at exit: 0 bytes in 0 blocks
==21761==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21761== 
==21761== All heap blocks were freed -- no leaks are possible
==21761== 
==21761== For counts of detected and suppressed errors, rerun with: -v
==21761== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test653 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test653/assignment_3Vars_test653.c)
The Valgrind memory detector as below:
==21777== Memcheck, a memory error detector
==21777== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21777== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21777== Command: ./impl/assignment_3Vars_test653/assignment_3Vars_test653.out
==21777== Parent PID: 12124
==21777== 
==21777== 
==21777== HEAP SUMMARY:
==21777==     in use at exit: 0 bytes in 0 blocks
==21777==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21777== 
==21777== All heap blocks were freed -- no leaks are possible
==21777== 
==21777== For counts of detected and suppressed errors, rerun with: -v
==21777== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test654 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test654/assignment_3Vars_test654.c)
The Valgrind memory detector as below:
==21792== Memcheck, a memory error detector
==21792== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21792== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21792== Command: ./impl/assignment_3Vars_test654/assignment_3Vars_test654.out
==21792== Parent PID: 12124
==21792== 
==21792== 
==21792== HEAP SUMMARY:
==21792==     in use at exit: 0 bytes in 0 blocks
==21792==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21792== 
==21792== All heap blocks were freed -- no leaks are possible
==21792== 
==21792== For counts of detected and suppressed errors, rerun with: -v
==21792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test655 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test655/assignment_3Vars_test655.c)
The Valgrind memory detector as below:
==21809== Memcheck, a memory error detector
==21809== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21809== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21809== Command: ./impl/assignment_3Vars_test655/assignment_3Vars_test655.out
==21809== Parent PID: 12124
==21809== 
==21809== 
==21809== HEAP SUMMARY:
==21809==     in use at exit: 0 bytes in 0 blocks
==21809==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21809== 
==21809== All heap blocks were freed -- no leaks are possible
==21809== 
==21809== For counts of detected and suppressed errors, rerun with: -v
==21809== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test656 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test656/assignment_3Vars_test656.c)
The Valgrind memory detector as below:
==21825== Memcheck, a memory error detector
==21825== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21825== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21825== Command: ./impl/assignment_3Vars_test656/assignment_3Vars_test656.out
==21825== Parent PID: 12124
==21825== 
==21825== 
==21825== HEAP SUMMARY:
==21825==     in use at exit: 0 bytes in 0 blocks
==21825==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21825== 
==21825== All heap blocks were freed -- no leaks are possible
==21825== 
==21825== For counts of detected and suppressed errors, rerun with: -v
==21825== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test657 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test657/assignment_3Vars_test657.c)
The Valgrind memory detector as below:
==21841== Memcheck, a memory error detector
==21841== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21841== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21841== Command: ./impl/assignment_3Vars_test657/assignment_3Vars_test657.out
==21841== Parent PID: 12124
==21841== 
==21841== 
==21841== HEAP SUMMARY:
==21841==     in use at exit: 0 bytes in 0 blocks
==21841==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21841== 
==21841== All heap blocks were freed -- no leaks are possible
==21841== 
==21841== For counts of detected and suppressed errors, rerun with: -v
==21841== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test658 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test658/assignment_3Vars_test658.c)
The Valgrind memory detector as below:
==21856== Memcheck, a memory error detector
==21856== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21856== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21856== Command: ./impl/assignment_3Vars_test658/assignment_3Vars_test658.out
==21856== Parent PID: 12124
==21856== 
==21856== 
==21856== HEAP SUMMARY:
==21856==     in use at exit: 0 bytes in 0 blocks
==21856==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21856== 
==21856== All heap blocks were freed -- no leaks are possible
==21856== 
==21856== For counts of detected and suppressed errors, rerun with: -v
==21856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test659 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test659/assignment_3Vars_test659.c)
The Valgrind memory detector as below:
==21875== Memcheck, a memory error detector
==21875== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21875== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21875== Command: ./impl/assignment_3Vars_test659/assignment_3Vars_test659.out
==21875== Parent PID: 12124
==21875== 
==21875== 
==21875== HEAP SUMMARY:
==21875==     in use at exit: 0 bytes in 0 blocks
==21875==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21875== 
==21875== All heap blocks were freed -- no leaks are possible
==21875== 
==21875== For counts of detected and suppressed errors, rerun with: -v
==21875== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test66 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test66/assignment_3Vars_test66.c)
The Valgrind memory detector as below:
==21890== Memcheck, a memory error detector
==21890== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21890== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21890== Command: ./impl/assignment_3Vars_test66/assignment_3Vars_test66.out
==21890== Parent PID: 12124
==21890== 
==21890== 
==21890== HEAP SUMMARY:
==21890==     in use at exit: 0 bytes in 0 blocks
==21890==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21890== 
==21890== All heap blocks were freed -- no leaks are possible
==21890== 
==21890== For counts of detected and suppressed errors, rerun with: -v
==21890== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test660 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test660/assignment_3Vars_test660.c)
The Valgrind memory detector as below:
==21907== Memcheck, a memory error detector
==21907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21907== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21907== Command: ./impl/assignment_3Vars_test660/assignment_3Vars_test660.out
==21907== Parent PID: 12124
==21907== 
==21907== 
==21907== HEAP SUMMARY:
==21907==     in use at exit: 0 bytes in 0 blocks
==21907==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21907== 
==21907== All heap blocks were freed -- no leaks are possible
==21907== 
==21907== For counts of detected and suppressed errors, rerun with: -v
==21907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test661 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test661/assignment_3Vars_test661.c)
The Valgrind memory detector as below:
==21922== Memcheck, a memory error detector
==21922== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21922== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21922== Command: ./impl/assignment_3Vars_test661/assignment_3Vars_test661.out
==21922== Parent PID: 12124
==21922== 
==21922== 
==21922== HEAP SUMMARY:
==21922==     in use at exit: 0 bytes in 0 blocks
==21922==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21922== 
==21922== All heap blocks were freed -- no leaks are possible
==21922== 
==21922== For counts of detected and suppressed errors, rerun with: -v
==21922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test662 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test662/assignment_3Vars_test662.c)
The Valgrind memory detector as below:
==21937== Memcheck, a memory error detector
==21937== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21937== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21937== Command: ./impl/assignment_3Vars_test662/assignment_3Vars_test662.out
==21937== Parent PID: 12124
==21937== 
==21937== 
==21937== HEAP SUMMARY:
==21937==     in use at exit: 0 bytes in 0 blocks
==21937==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21937== 
==21937== All heap blocks were freed -- no leaks are possible
==21937== 
==21937== For counts of detected and suppressed errors, rerun with: -v
==21937== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test663 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test663/assignment_3Vars_test663.c)
The Valgrind memory detector as below:
==21953== Memcheck, a memory error detector
==21953== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21953== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21953== Command: ./impl/assignment_3Vars_test663/assignment_3Vars_test663.out
==21953== Parent PID: 12124
==21953== 
==21953== 
==21953== HEAP SUMMARY:
==21953==     in use at exit: 0 bytes in 0 blocks
==21953==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21953== 
==21953== All heap blocks were freed -- no leaks are possible
==21953== 
==21953== For counts of detected and suppressed errors, rerun with: -v
==21953== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test664 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test664/assignment_3Vars_test664.c)
The Valgrind memory detector as below:
==21968== Memcheck, a memory error detector
==21968== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21968== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21968== Command: ./impl/assignment_3Vars_test664/assignment_3Vars_test664.out
==21968== Parent PID: 12124
==21968== 
==21968== 
==21968== HEAP SUMMARY:
==21968==     in use at exit: 0 bytes in 0 blocks
==21968==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21968== 
==21968== All heap blocks were freed -- no leaks are possible
==21968== 
==21968== For counts of detected and suppressed errors, rerun with: -v
==21968== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test665 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test665/assignment_3Vars_test665.c)
The Valgrind memory detector as below:
==21983== Memcheck, a memory error detector
==21983== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21983== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21983== Command: ./impl/assignment_3Vars_test665/assignment_3Vars_test665.out
==21983== Parent PID: 12124
==21983== 
==21983== 
==21983== HEAP SUMMARY:
==21983==     in use at exit: 0 bytes in 0 blocks
==21983==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21983== 
==21983== All heap blocks were freed -- no leaks are possible
==21983== 
==21983== For counts of detected and suppressed errors, rerun with: -v
==21983== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test666 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test666/assignment_3Vars_test666.c)
The Valgrind memory detector as below:
==21999== Memcheck, a memory error detector
==21999== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21999== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==21999== Command: ./impl/assignment_3Vars_test666/assignment_3Vars_test666.out
==21999== Parent PID: 12124
==21999== 
==21999== 
==21999== HEAP SUMMARY:
==21999==     in use at exit: 0 bytes in 0 blocks
==21999==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==21999== 
==21999== All heap blocks were freed -- no leaks are possible
==21999== 
==21999== For counts of detected and suppressed errors, rerun with: -v
==21999== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test667 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test667/assignment_3Vars_test667.c)
The Valgrind memory detector as below:
==22015== Memcheck, a memory error detector
==22015== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22015== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22015== Command: ./impl/assignment_3Vars_test667/assignment_3Vars_test667.out
==22015== Parent PID: 12124
==22015== 
==22015== 
==22015== HEAP SUMMARY:
==22015==     in use at exit: 0 bytes in 0 blocks
==22015==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22015== 
==22015== All heap blocks were freed -- no leaks are possible
==22015== 
==22015== For counts of detected and suppressed errors, rerun with: -v
==22015== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test668 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test668/assignment_3Vars_test668.c)
The Valgrind memory detector as below:
==22030== Memcheck, a memory error detector
==22030== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22030== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22030== Command: ./impl/assignment_3Vars_test668/assignment_3Vars_test668.out
==22030== Parent PID: 12124
==22030== 
==22030== 
==22030== HEAP SUMMARY:
==22030==     in use at exit: 0 bytes in 0 blocks
==22030==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22030== 
==22030== All heap blocks were freed -- no leaks are possible
==22030== 
==22030== For counts of detected and suppressed errors, rerun with: -v
==22030== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test669 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test669/assignment_3Vars_test669.c)
The Valgrind memory detector as below:
==22046== Memcheck, a memory error detector
==22046== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22046== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22046== Command: ./impl/assignment_3Vars_test669/assignment_3Vars_test669.out
==22046== Parent PID: 12124
==22046== 
==22046== 
==22046== HEAP SUMMARY:
==22046==     in use at exit: 0 bytes in 0 blocks
==22046==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22046== 
==22046== All heap blocks were freed -- no leaks are possible
==22046== 
==22046== For counts of detected and suppressed errors, rerun with: -v
==22046== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test67 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test67/assignment_3Vars_test67.c)
The Valgrind memory detector as below:
==22061== Memcheck, a memory error detector
==22061== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22061== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22061== Command: ./impl/assignment_3Vars_test67/assignment_3Vars_test67.out
==22061== Parent PID: 12124
==22061== 
==22061== 
==22061== HEAP SUMMARY:
==22061==     in use at exit: 0 bytes in 0 blocks
==22061==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22061== 
==22061== All heap blocks were freed -- no leaks are possible
==22061== 
==22061== For counts of detected and suppressed errors, rerun with: -v
==22061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test670 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test670/assignment_3Vars_test670.c)
The Valgrind memory detector as below:
==22076== Memcheck, a memory error detector
==22076== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22076== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22076== Command: ./impl/assignment_3Vars_test670/assignment_3Vars_test670.out
==22076== Parent PID: 12124
==22076== 
==22076== 
==22076== HEAP SUMMARY:
==22076==     in use at exit: 0 bytes in 0 blocks
==22076==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22076== 
==22076== All heap blocks were freed -- no leaks are possible
==22076== 
==22076== For counts of detected and suppressed errors, rerun with: -v
==22076== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test671 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test671/assignment_3Vars_test671.c)
The Valgrind memory detector as below:
==22092== Memcheck, a memory error detector
==22092== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22092== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22092== Command: ./impl/assignment_3Vars_test671/assignment_3Vars_test671.out
==22092== Parent PID: 12124
==22092== 
==22092== 
==22092== HEAP SUMMARY:
==22092==     in use at exit: 0 bytes in 0 blocks
==22092==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22092== 
==22092== All heap blocks were freed -- no leaks are possible
==22092== 
==22092== For counts of detected and suppressed errors, rerun with: -v
==22092== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test672 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test672/assignment_3Vars_test672.c)
The Valgrind memory detector as below:
==22107== Memcheck, a memory error detector
==22107== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22107== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22107== Command: ./impl/assignment_3Vars_test672/assignment_3Vars_test672.out
==22107== Parent PID: 12124
==22107== 
==22107== 
==22107== HEAP SUMMARY:
==22107==     in use at exit: 0 bytes in 0 blocks
==22107==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22107== 
==22107== All heap blocks were freed -- no leaks are possible
==22107== 
==22107== For counts of detected and suppressed errors, rerun with: -v
==22107== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test673 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test673/assignment_3Vars_test673.c)
The Valgrind memory detector as below:
==22122== Memcheck, a memory error detector
==22122== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22122== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22122== Command: ./impl/assignment_3Vars_test673/assignment_3Vars_test673.out
==22122== Parent PID: 12124
==22122== 
==22122== 
==22122== HEAP SUMMARY:
==22122==     in use at exit: 0 bytes in 0 blocks
==22122==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22122== 
==22122== All heap blocks were freed -- no leaks are possible
==22122== 
==22122== For counts of detected and suppressed errors, rerun with: -v
==22122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test674 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test674/assignment_3Vars_test674.c)
The Valgrind memory detector as below:
==22137== Memcheck, a memory error detector
==22137== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22137== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22137== Command: ./impl/assignment_3Vars_test674/assignment_3Vars_test674.out
==22137== Parent PID: 12124
==22137== 
==22137== 
==22137== HEAP SUMMARY:
==22137==     in use at exit: 0 bytes in 0 blocks
==22137==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22137== 
==22137== All heap blocks were freed -- no leaks are possible
==22137== 
==22137== For counts of detected and suppressed errors, rerun with: -v
==22137== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test675 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test675/assignment_3Vars_test675.c)
The Valgrind memory detector as below:
==22154== Memcheck, a memory error detector
==22154== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22154== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22154== Command: ./impl/assignment_3Vars_test675/assignment_3Vars_test675.out
==22154== Parent PID: 12124
==22154== 
==22154== 
==22154== HEAP SUMMARY:
==22154==     in use at exit: 0 bytes in 0 blocks
==22154==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22154== 
==22154== All heap blocks were freed -- no leaks are possible
==22154== 
==22154== For counts of detected and suppressed errors, rerun with: -v
==22154== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test676 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test676/assignment_3Vars_test676.c)
The Valgrind memory detector as below:
==22169== Memcheck, a memory error detector
==22169== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22169== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22169== Command: ./impl/assignment_3Vars_test676/assignment_3Vars_test676.out
==22169== Parent PID: 12124
==22169== 
==22169== 
==22169== HEAP SUMMARY:
==22169==     in use at exit: 0 bytes in 0 blocks
==22169==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22169== 
==22169== All heap blocks were freed -- no leaks are possible
==22169== 
==22169== For counts of detected and suppressed errors, rerun with: -v
==22169== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test677 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test677/assignment_3Vars_test677.c)
The Valgrind memory detector as below:
==22184== Memcheck, a memory error detector
==22184== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22184== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22184== Command: ./impl/assignment_3Vars_test677/assignment_3Vars_test677.out
==22184== Parent PID: 12124
==22184== 
==22184== 
==22184== HEAP SUMMARY:
==22184==     in use at exit: 0 bytes in 0 blocks
==22184==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22184== 
==22184== All heap blocks were freed -- no leaks are possible
==22184== 
==22184== For counts of detected and suppressed errors, rerun with: -v
==22184== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test678 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test678/assignment_3Vars_test678.c)
The Valgrind memory detector as below:
==22199== Memcheck, a memory error detector
==22199== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22199== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22199== Command: ./impl/assignment_3Vars_test678/assignment_3Vars_test678.out
==22199== Parent PID: 12124
==22199== 
==22199== 
==22199== HEAP SUMMARY:
==22199==     in use at exit: 0 bytes in 0 blocks
==22199==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22199== 
==22199== All heap blocks were freed -- no leaks are possible
==22199== 
==22199== For counts of detected and suppressed errors, rerun with: -v
==22199== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test679 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test679/assignment_3Vars_test679.c)
The Valgrind memory detector as below:
==22219== Memcheck, a memory error detector
==22219== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22219== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22219== Command: ./impl/assignment_3Vars_test679/assignment_3Vars_test679.out
==22219== Parent PID: 12124
==22219== 
==22219== 
==22219== HEAP SUMMARY:
==22219==     in use at exit: 0 bytes in 0 blocks
==22219==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22219== 
==22219== All heap blocks were freed -- no leaks are possible
==22219== 
==22219== For counts of detected and suppressed errors, rerun with: -v
==22219== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test68 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test68/assignment_3Vars_test68.c)
The Valgrind memory detector as below:
==22234== Memcheck, a memory error detector
==22234== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22234== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22234== Command: ./impl/assignment_3Vars_test68/assignment_3Vars_test68.out
==22234== Parent PID: 12124
==22234== 
==22234== 
==22234== HEAP SUMMARY:
==22234==     in use at exit: 0 bytes in 0 blocks
==22234==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22234== 
==22234== All heap blocks were freed -- no leaks are possible
==22234== 
==22234== For counts of detected and suppressed errors, rerun with: -v
==22234== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test680 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test680/assignment_3Vars_test680.c)
The Valgrind memory detector as below:
==22249== Memcheck, a memory error detector
==22249== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22249== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22249== Command: ./impl/assignment_3Vars_test680/assignment_3Vars_test680.out
==22249== Parent PID: 12124
==22249== 
==22249== 
==22249== HEAP SUMMARY:
==22249==     in use at exit: 0 bytes in 0 blocks
==22249==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22249== 
==22249== All heap blocks were freed -- no leaks are possible
==22249== 
==22249== For counts of detected and suppressed errors, rerun with: -v
==22249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test681 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test681/assignment_3Vars_test681.c)
The Valgrind memory detector as below:
==22264== Memcheck, a memory error detector
==22264== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22264== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22264== Command: ./impl/assignment_3Vars_test681/assignment_3Vars_test681.out
==22264== Parent PID: 12124
==22264== 
==22264== 
==22264== HEAP SUMMARY:
==22264==     in use at exit: 0 bytes in 0 blocks
==22264==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22264== 
==22264== All heap blocks were freed -- no leaks are possible
==22264== 
==22264== For counts of detected and suppressed errors, rerun with: -v
==22264== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test682 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test682/assignment_3Vars_test682.c)
The Valgrind memory detector as below:
==22280== Memcheck, a memory error detector
==22280== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22280== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22280== Command: ./impl/assignment_3Vars_test682/assignment_3Vars_test682.out
==22280== Parent PID: 12124
==22280== 
==22280== 
==22280== HEAP SUMMARY:
==22280==     in use at exit: 0 bytes in 0 blocks
==22280==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22280== 
==22280== All heap blocks were freed -- no leaks are possible
==22280== 
==22280== For counts of detected and suppressed errors, rerun with: -v
==22280== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test683 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test683/assignment_3Vars_test683.c)
The Valgrind memory detector as below:
==22295== Memcheck, a memory error detector
==22295== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22295== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22295== Command: ./impl/assignment_3Vars_test683/assignment_3Vars_test683.out
==22295== Parent PID: 12124
==22295== 
==22295== 
==22295== HEAP SUMMARY:
==22295==     in use at exit: 0 bytes in 0 blocks
==22295==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22295== 
==22295== All heap blocks were freed -- no leaks are possible
==22295== 
==22295== For counts of detected and suppressed errors, rerun with: -v
==22295== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test684 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test684/assignment_3Vars_test684.c)
The Valgrind memory detector as below:
==22344== Memcheck, a memory error detector
==22344== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22344== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22344== Command: ./impl/assignment_3Vars_test684/assignment_3Vars_test684.out
==22344== Parent PID: 12124
==22344== 
==22344== 
==22344== HEAP SUMMARY:
==22344==     in use at exit: 0 bytes in 0 blocks
==22344==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22344== 
==22344== All heap blocks were freed -- no leaks are possible
==22344== 
==22344== For counts of detected and suppressed errors, rerun with: -v
==22344== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test685 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test685/assignment_3Vars_test685.c)
The Valgrind memory detector as below:
==22364== Memcheck, a memory error detector
==22364== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22364== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22364== Command: ./impl/assignment_3Vars_test685/assignment_3Vars_test685.out
==22364== Parent PID: 12124
==22364== 
==22364== 
==22364== HEAP SUMMARY:
==22364==     in use at exit: 0 bytes in 0 blocks
==22364==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22364== 
==22364== All heap blocks were freed -- no leaks are possible
==22364== 
==22364== For counts of detected and suppressed errors, rerun with: -v
==22364== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test686 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test686/assignment_3Vars_test686.c)
The Valgrind memory detector as below:
==22385== Memcheck, a memory error detector
==22385== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22385== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22385== Command: ./impl/assignment_3Vars_test686/assignment_3Vars_test686.out
==22385== Parent PID: 12124
==22385== 
==22385== 
==22385== HEAP SUMMARY:
==22385==     in use at exit: 0 bytes in 0 blocks
==22385==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22385== 
==22385== All heap blocks were freed -- no leaks are possible
==22385== 
==22385== For counts of detected and suppressed errors, rerun with: -v
==22385== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test687 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:89 FILE: impl/assignment_3Vars_test687/assignment_3Vars_test687.c)
The Valgrind memory detector as below:
==22400== Memcheck, a memory error detector
==22400== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22400== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22400== Command: ./impl/assignment_3Vars_test687/assignment_3Vars_test687.out
==22400== Parent PID: 12124
==22400== 
==22400== 
==22400== HEAP SUMMARY:
==22400==     in use at exit: 0 bytes in 0 blocks
==22400==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22400== 
==22400== All heap blocks were freed -- no leaks are possible
==22400== 
==22400== For counts of detected and suppressed errors, rerun with: -v
==22400== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test688 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:84 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test688/assignment_3Vars_test688.c)
The Valgrind memory detector as below:
==22415== Memcheck, a memory error detector
==22415== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22415== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22415== Command: ./impl/assignment_3Vars_test688/assignment_3Vars_test688.out
==22415== Parent PID: 12124
==22415== 
==22415== 
==22415== HEAP SUMMARY:
==22415==     in use at exit: 0 bytes in 0 blocks
==22415==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22415== 
==22415== All heap blocks were freed -- no leaks are possible
==22415== 
==22415== For counts of detected and suppressed errors, rerun with: -v
==22415== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test689 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test689/assignment_3Vars_test689.c)
The Valgrind memory detector as below:
==22430== Memcheck, a memory error detector
==22430== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22430== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22430== Command: ./impl/assignment_3Vars_test689/assignment_3Vars_test689.out
==22430== Parent PID: 12124
==22430== 
==22430== 
==22430== HEAP SUMMARY:
==22430==     in use at exit: 0 bytes in 0 blocks
==22430==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22430== 
==22430== All heap blocks were freed -- no leaks are possible
==22430== 
==22430== For counts of detected and suppressed errors, rerun with: -v
==22430== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test69 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test69/assignment_3Vars_test69.c)
The Valgrind memory detector as below:
==22446== Memcheck, a memory error detector
==22446== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22446== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22446== Command: ./impl/assignment_3Vars_test69/assignment_3Vars_test69.out
==22446== Parent PID: 12124
==22446== 
==22446== 
==22446== HEAP SUMMARY:
==22446==     in use at exit: 0 bytes in 0 blocks
==22446==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22446== 
==22446== All heap blocks were freed -- no leaks are possible
==22446== 
==22446== For counts of detected and suppressed errors, rerun with: -v
==22446== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test690 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:79 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test690/assignment_3Vars_test690.c)
The Valgrind memory detector as below:
==22462== Memcheck, a memory error detector
==22462== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22462== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22462== Command: ./impl/assignment_3Vars_test690/assignment_3Vars_test690.out
==22462== Parent PID: 12124
==22462== 
==22462== 
==22462== HEAP SUMMARY:
==22462==     in use at exit: 0 bytes in 0 blocks
==22462==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22462== 
==22462== All heap blocks were freed -- no leaks are possible
==22462== 
==22462== For counts of detected and suppressed errors, rerun with: -v
==22462== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test691 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test691/assignment_3Vars_test691.c)
The Valgrind memory detector as below:
==22477== Memcheck, a memory error detector
==22477== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22477== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22477== Command: ./impl/assignment_3Vars_test691/assignment_3Vars_test691.out
==22477== Parent PID: 12124
==22477== 
==22477== 
==22477== HEAP SUMMARY:
==22477==     in use at exit: 0 bytes in 0 blocks
==22477==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22477== 
==22477== All heap blocks were freed -- no leaks are possible
==22477== 
==22477== For counts of detected and suppressed errors, rerun with: -v
==22477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test692 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test692/assignment_3Vars_test692.c)
The Valgrind memory detector as below:
==22492== Memcheck, a memory error detector
==22492== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22492== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22492== Command: ./impl/assignment_3Vars_test692/assignment_3Vars_test692.out
==22492== Parent PID: 12124
==22492== 
==22492== 
==22492== HEAP SUMMARY:
==22492==     in use at exit: 0 bytes in 0 blocks
==22492==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22492== 
==22492== All heap blocks were freed -- no leaks are possible
==22492== 
==22492== For counts of detected and suppressed errors, rerun with: -v
==22492== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test693 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test693/assignment_3Vars_test693.c)
The Valgrind memory detector as below:
==22509== Memcheck, a memory error detector
==22509== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22509== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22509== Command: ./impl/assignment_3Vars_test693/assignment_3Vars_test693.out
==22509== Parent PID: 12124
==22509== 
==22509== 
==22509== HEAP SUMMARY:
==22509==     in use at exit: 0 bytes in 0 blocks
==22509==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22509== 
==22509== All heap blocks were freed -- no leaks are possible
==22509== 
==22509== For counts of detected and suppressed errors, rerun with: -v
==22509== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test694 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test694/assignment_3Vars_test694.c)
The Valgrind memory detector as below:
==22524== Memcheck, a memory error detector
==22524== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22524== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22524== Command: ./impl/assignment_3Vars_test694/assignment_3Vars_test694.out
==22524== Parent PID: 12124
==22524== 
==22524== 
==22524== HEAP SUMMARY:
==22524==     in use at exit: 0 bytes in 0 blocks
==22524==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22524== 
==22524== All heap blocks were freed -- no leaks are possible
==22524== 
==22524== For counts of detected and suppressed errors, rerun with: -v
==22524== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test695 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test695/assignment_3Vars_test695.c)
The Valgrind memory detector as below:
==22539== Memcheck, a memory error detector
==22539== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22539== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22539== Command: ./impl/assignment_3Vars_test695/assignment_3Vars_test695.out
==22539== Parent PID: 12124
==22539== 
==22539== 
==22539== HEAP SUMMARY:
==22539==     in use at exit: 0 bytes in 0 blocks
==22539==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22539== 
==22539== All heap blocks were freed -- no leaks are possible
==22539== 
==22539== For counts of detected and suppressed errors, rerun with: -v
==22539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test696 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:74 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test696/assignment_3Vars_test696.c)
The Valgrind memory detector as below:
==22554== Memcheck, a memory error detector
==22554== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22554== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22554== Command: ./impl/assignment_3Vars_test696/assignment_3Vars_test696.out
==22554== Parent PID: 12124
==22554== 
==22554== 
==22554== HEAP SUMMARY:
==22554==     in use at exit: 0 bytes in 0 blocks
==22554==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22554== 
==22554== All heap blocks were freed -- no leaks are possible
==22554== 
==22554== For counts of detected and suppressed errors, rerun with: -v
==22554== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test697 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test697/assignment_3Vars_test697.c)
The Valgrind memory detector as below:
==22570== Memcheck, a memory error detector
==22570== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22570== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22570== Command: ./impl/assignment_3Vars_test697/assignment_3Vars_test697.out
==22570== Parent PID: 12124
==22570== 
==22570== 
==22570== HEAP SUMMARY:
==22570==     in use at exit: 0 bytes in 0 blocks
==22570==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22570== 
==22570== All heap blocks were freed -- no leaks are possible
==22570== 
==22570== For counts of detected and suppressed errors, rerun with: -v
==22570== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test698 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test698/assignment_3Vars_test698.c)
The Valgrind memory detector as below:
==22585== Memcheck, a memory error detector
==22585== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22585== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22585== Command: ./impl/assignment_3Vars_test698/assignment_3Vars_test698.out
==22585== Parent PID: 12124
==22585== 
==22585== 
==22585== HEAP SUMMARY:
==22585==     in use at exit: 0 bytes in 0 blocks
==22585==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22585== 
==22585== All heap blocks were freed -- no leaks are possible
==22585== 
==22585== For counts of detected and suppressed errors, rerun with: -v
==22585== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test699 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test699/assignment_3Vars_test699.c)
The Valgrind memory detector as below:
==22600== Memcheck, a memory error detector
==22600== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22600== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22600== Command: ./impl/assignment_3Vars_test699/assignment_3Vars_test699.out
==22600== Parent PID: 12124
==22600== 
==22600== 
==22600== HEAP SUMMARY:
==22600==     in use at exit: 0 bytes in 0 blocks
==22600==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22600== 
==22600== All heap blocks were freed -- no leaks are possible
==22600== 
==22600== For counts of detected and suppressed errors, rerun with: -v
==22600== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test7 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test7/assignment_3Vars_test7.c)
The Valgrind memory detector as below:
==22616== Memcheck, a memory error detector
==22616== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22616== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22616== Command: ./impl/assignment_3Vars_test7/assignment_3Vars_test7.out
==22616== Parent PID: 12124
==22616== 
==22616== 
==22616== HEAP SUMMARY:
==22616==     in use at exit: 0 bytes in 0 blocks
==22616==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22616== 
==22616== All heap blocks were freed -- no leaks are possible
==22616== 
==22616== For counts of detected and suppressed errors, rerun with: -v
==22616== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test70 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test70/assignment_3Vars_test70.c)
The Valgrind memory detector as below:
==22631== Memcheck, a memory error detector
==22631== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22631== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22631== Command: ./impl/assignment_3Vars_test70/assignment_3Vars_test70.out
==22631== Parent PID: 12124
==22631== 
==22631== 
==22631== HEAP SUMMARY:
==22631==     in use at exit: 0 bytes in 0 blocks
==22631==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22631== 
==22631== All heap blocks were freed -- no leaks are possible
==22631== 
==22631== For counts of detected and suppressed errors, rerun with: -v
==22631== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test700 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test700/assignment_3Vars_test700.c)
The Valgrind memory detector as below:
==22647== Memcheck, a memory error detector
==22647== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22647== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22647== Command: ./impl/assignment_3Vars_test700/assignment_3Vars_test700.out
==22647== Parent PID: 12124
==22647== 
==22647== 
==22647== HEAP SUMMARY:
==22647==     in use at exit: 0 bytes in 0 blocks
==22647==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22647== 
==22647== All heap blocks were freed -- no leaks are possible
==22647== 
==22647== For counts of detected and suppressed errors, rerun with: -v
==22647== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test701 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test701/assignment_3Vars_test701.c)
The Valgrind memory detector as below:
==22662== Memcheck, a memory error detector
==22662== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22662== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22662== Command: ./impl/assignment_3Vars_test701/assignment_3Vars_test701.out
==22662== Parent PID: 12124
==22662== 
==22662== 
==22662== HEAP SUMMARY:
==22662==     in use at exit: 0 bytes in 0 blocks
==22662==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22662== 
==22662== All heap blocks were freed -- no leaks are possible
==22662== 
==22662== For counts of detected and suppressed errors, rerun with: -v
==22662== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test702 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test702/assignment_3Vars_test702.c)
The Valgrind memory detector as below:
==22677== Memcheck, a memory error detector
==22677== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22677== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22677== Command: ./impl/assignment_3Vars_test702/assignment_3Vars_test702.out
==22677== Parent PID: 12124
==22677== 
==22677== 
==22677== HEAP SUMMARY:
==22677==     in use at exit: 0 bytes in 0 blocks
==22677==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22677== 
==22677== All heap blocks were freed -- no leaks are possible
==22677== 
==22677== For counts of detected and suppressed errors, rerun with: -v
==22677== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test703 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test703/assignment_3Vars_test703.c)
The Valgrind memory detector as below:
==22693== Memcheck, a memory error detector
==22693== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22693== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22693== Command: ./impl/assignment_3Vars_test703/assignment_3Vars_test703.out
==22693== Parent PID: 12124
==22693== 
==22693== 
==22693== HEAP SUMMARY:
==22693==     in use at exit: 0 bytes in 0 blocks
==22693==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22693== 
==22693== All heap blocks were freed -- no leaks are possible
==22693== 
==22693== For counts of detected and suppressed errors, rerun with: -v
==22693== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test704 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test704/assignment_3Vars_test704.c)
The Valgrind memory detector as below:
==22708== Memcheck, a memory error detector
==22708== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22708== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22708== Command: ./impl/assignment_3Vars_test704/assignment_3Vars_test704.out
==22708== Parent PID: 12124
==22708== 
==22708== 
==22708== HEAP SUMMARY:
==22708==     in use at exit: 0 bytes in 0 blocks
==22708==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22708== 
==22708== All heap blocks were freed -- no leaks are possible
==22708== 
==22708== For counts of detected and suppressed errors, rerun with: -v
==22708== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test705 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test705/assignment_3Vars_test705.c)
The Valgrind memory detector as below:
==22723== Memcheck, a memory error detector
==22723== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22723== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22723== Command: ./impl/assignment_3Vars_test705/assignment_3Vars_test705.out
==22723== Parent PID: 12124
==22723== 
==22723== 
==22723== HEAP SUMMARY:
==22723==     in use at exit: 0 bytes in 0 blocks
==22723==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22723== 
==22723== All heap blocks were freed -- no leaks are possible
==22723== 
==22723== For counts of detected and suppressed errors, rerun with: -v
==22723== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test706 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test706/assignment_3Vars_test706.c)
The Valgrind memory detector as below:
==22738== Memcheck, a memory error detector
==22738== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22738== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22738== Command: ./impl/assignment_3Vars_test706/assignment_3Vars_test706.out
==22738== Parent PID: 12124
==22738== 
==22738== 
==22738== HEAP SUMMARY:
==22738==     in use at exit: 0 bytes in 0 blocks
==22738==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22738== 
==22738== All heap blocks were freed -- no leaks are possible
==22738== 
==22738== For counts of detected and suppressed errors, rerun with: -v
==22738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test707 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test707/assignment_3Vars_test707.c)
The Valgrind memory detector as below:
==22753== Memcheck, a memory error detector
==22753== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22753== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22753== Command: ./impl/assignment_3Vars_test707/assignment_3Vars_test707.out
==22753== Parent PID: 12124
==22753== 
==22753== 
==22753== HEAP SUMMARY:
==22753==     in use at exit: 0 bytes in 0 blocks
==22753==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22753== 
==22753== All heap blocks were freed -- no leaks are possible
==22753== 
==22753== For counts of detected and suppressed errors, rerun with: -v
==22753== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test708 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test708/assignment_3Vars_test708.c)
The Valgrind memory detector as below:
==22769== Memcheck, a memory error detector
==22769== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22769== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22769== Command: ./impl/assignment_3Vars_test708/assignment_3Vars_test708.out
==22769== Parent PID: 12124
==22769== 
==22769== 
==22769== HEAP SUMMARY:
==22769==     in use at exit: 0 bytes in 0 blocks
==22769==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22769== 
==22769== All heap blocks were freed -- no leaks are possible
==22769== 
==22769== For counts of detected and suppressed errors, rerun with: -v
==22769== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test709 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test709/assignment_3Vars_test709.c)
The Valgrind memory detector as below:
==22784== Memcheck, a memory error detector
==22784== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22784== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22784== Command: ./impl/assignment_3Vars_test709/assignment_3Vars_test709.out
==22784== Parent PID: 12124
==22784== 
==22784== 
==22784== HEAP SUMMARY:
==22784==     in use at exit: 0 bytes in 0 blocks
==22784==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22784== 
==22784== All heap blocks were freed -- no leaks are possible
==22784== 
==22784== For counts of detected and suppressed errors, rerun with: -v
==22784== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test71 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test71/assignment_3Vars_test71.c)
The Valgrind memory detector as below:
==22799== Memcheck, a memory error detector
==22799== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22799== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22799== Command: ./impl/assignment_3Vars_test71/assignment_3Vars_test71.out
==22799== Parent PID: 12124
==22799== 
==22799== 
==22799== HEAP SUMMARY:
==22799==     in use at exit: 0 bytes in 0 blocks
==22799==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22799== 
==22799== All heap blocks were freed -- no leaks are possible
==22799== 
==22799== For counts of detected and suppressed errors, rerun with: -v
==22799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test710 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test710/assignment_3Vars_test710.c)
The Valgrind memory detector as below:
==22814== Memcheck, a memory error detector
==22814== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22814== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22814== Command: ./impl/assignment_3Vars_test710/assignment_3Vars_test710.out
==22814== Parent PID: 12124
==22814== 
==22814== 
==22814== HEAP SUMMARY:
==22814==     in use at exit: 0 bytes in 0 blocks
==22814==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22814== 
==22814== All heap blocks were freed -- no leaks are possible
==22814== 
==22814== For counts of detected and suppressed errors, rerun with: -v
==22814== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test711 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test711/assignment_3Vars_test711.c)
The Valgrind memory detector as below:
==22831== Memcheck, a memory error detector
==22831== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22831== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22831== Command: ./impl/assignment_3Vars_test711/assignment_3Vars_test711.out
==22831== Parent PID: 12124
==22831== 
==22831== 
==22831== HEAP SUMMARY:
==22831==     in use at exit: 0 bytes in 0 blocks
==22831==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22831== 
==22831== All heap blocks were freed -- no leaks are possible
==22831== 
==22831== For counts of detected and suppressed errors, rerun with: -v
==22831== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test712 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test712/assignment_3Vars_test712.c)
The Valgrind memory detector as below:
==22847== Memcheck, a memory error detector
==22847== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22847== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22847== Command: ./impl/assignment_3Vars_test712/assignment_3Vars_test712.out
==22847== Parent PID: 12124
==22847== 
==22847== 
==22847== HEAP SUMMARY:
==22847==     in use at exit: 0 bytes in 0 blocks
==22847==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22847== 
==22847== All heap blocks were freed -- no leaks are possible
==22847== 
==22847== For counts of detected and suppressed errors, rerun with: -v
==22847== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test713 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test713/assignment_3Vars_test713.c)
The Valgrind memory detector as below:
==22862== Memcheck, a memory error detector
==22862== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22862== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22862== Command: ./impl/assignment_3Vars_test713/assignment_3Vars_test713.out
==22862== Parent PID: 12124
==22862== 
==22862== 
==22862== HEAP SUMMARY:
==22862==     in use at exit: 0 bytes in 0 blocks
==22862==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22862== 
==22862== All heap blocks were freed -- no leaks are possible
==22862== 
==22862== For counts of detected and suppressed errors, rerun with: -v
==22862== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test714 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:74 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test714/assignment_3Vars_test714.c)
The Valgrind memory detector as below:
==22878== Memcheck, a memory error detector
==22878== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22878== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22878== Command: ./impl/assignment_3Vars_test714/assignment_3Vars_test714.out
==22878== Parent PID: 12124
==22878== 
==22878== 
==22878== HEAP SUMMARY:
==22878==     in use at exit: 0 bytes in 0 blocks
==22878==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22878== 
==22878== All heap blocks were freed -- no leaks are possible
==22878== 
==22878== For counts of detected and suppressed errors, rerun with: -v
==22878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test715 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test715/assignment_3Vars_test715.c)
The Valgrind memory detector as below:
==22893== Memcheck, a memory error detector
==22893== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22893== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22893== Command: ./impl/assignment_3Vars_test715/assignment_3Vars_test715.out
==22893== Parent PID: 12124
==22893== 
==22893== 
==22893== HEAP SUMMARY:
==22893==     in use at exit: 0 bytes in 0 blocks
==22893==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22893== 
==22893== All heap blocks were freed -- no leaks are possible
==22893== 
==22893== For counts of detected and suppressed errors, rerun with: -v
==22893== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test716 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test716/assignment_3Vars_test716.c)
The Valgrind memory detector as below:
==22908== Memcheck, a memory error detector
==22908== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22908== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22908== Command: ./impl/assignment_3Vars_test716/assignment_3Vars_test716.out
==22908== Parent PID: 12124
==22908== 
==22908== 
==22908== HEAP SUMMARY:
==22908==     in use at exit: 0 bytes in 0 blocks
==22908==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22908== 
==22908== All heap blocks were freed -- no leaks are possible
==22908== 
==22908== For counts of detected and suppressed errors, rerun with: -v
==22908== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test717 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test717/assignment_3Vars_test717.c)
The Valgrind memory detector as below:
==22923== Memcheck, a memory error detector
==22923== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22923== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22923== Command: ./impl/assignment_3Vars_test717/assignment_3Vars_test717.out
==22923== Parent PID: 12124
==22923== 
==22923== 
==22923== HEAP SUMMARY:
==22923==     in use at exit: 0 bytes in 0 blocks
==22923==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22923== 
==22923== All heap blocks were freed -- no leaks are possible
==22923== 
==22923== For counts of detected and suppressed errors, rerun with: -v
==22923== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test718 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test718/assignment_3Vars_test718.c)
The Valgrind memory detector as below:
==22939== Memcheck, a memory error detector
==22939== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22939== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22939== Command: ./impl/assignment_3Vars_test718/assignment_3Vars_test718.out
==22939== Parent PID: 12124
==22939== 
==22939== 
==22939== HEAP SUMMARY:
==22939==     in use at exit: 0 bytes in 0 blocks
==22939==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22939== 
==22939== All heap blocks were freed -- no leaks are possible
==22939== 
==22939== For counts of detected and suppressed errors, rerun with: -v
==22939== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test719 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test719/assignment_3Vars_test719.c)
The Valgrind memory detector as below:
==22954== Memcheck, a memory error detector
==22954== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22954== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22954== Command: ./impl/assignment_3Vars_test719/assignment_3Vars_test719.out
==22954== Parent PID: 12124
==22954== 
==22954== 
==22954== HEAP SUMMARY:
==22954==     in use at exit: 0 bytes in 0 blocks
==22954==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22954== 
==22954== All heap blocks were freed -- no leaks are possible
==22954== 
==22954== For counts of detected and suppressed errors, rerun with: -v
==22954== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test72 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:69 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test72/assignment_3Vars_test72.c)
The Valgrind memory detector as below:
==22969== Memcheck, a memory error detector
==22969== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22969== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22969== Command: ./impl/assignment_3Vars_test72/assignment_3Vars_test72.out
==22969== Parent PID: 12124
==22969== 
==22969== 
==22969== HEAP SUMMARY:
==22969==     in use at exit: 0 bytes in 0 blocks
==22969==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22969== 
==22969== All heap blocks were freed -- no leaks are possible
==22969== 
==22969== For counts of detected and suppressed errors, rerun with: -v
==22969== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test720 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:64 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:69 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test720/assignment_3Vars_test720.c)
The Valgrind memory detector as below:
==22984== Memcheck, a memory error detector
==22984== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==22984== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==22984== Command: ./impl/assignment_3Vars_test720/assignment_3Vars_test720.out
==22984== Parent PID: 12124
==22984== 
==22984== 
==22984== HEAP SUMMARY:
==22984==     in use at exit: 0 bytes in 0 blocks
==22984==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==22984== 
==22984== All heap blocks were freed -- no leaks are possible
==22984== 
==22984== For counts of detected and suppressed errors, rerun with: -v
==22984== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test73 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test73/assignment_3Vars_test73.c)
The Valgrind memory detector as below:
==23000== Memcheck, a memory error detector
==23000== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23000== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23000== Command: ./impl/assignment_3Vars_test73/assignment_3Vars_test73.out
==23000== Parent PID: 12124
==23000== 
==23000== 
==23000== HEAP SUMMARY:
==23000==     in use at exit: 0 bytes in 0 blocks
==23000==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23000== 
==23000== All heap blocks were freed -- no leaks are possible
==23000== 
==23000== For counts of detected and suppressed errors, rerun with: -v
==23000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test74 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test74/assignment_3Vars_test74.c)
The Valgrind memory detector as below:
==23015== Memcheck, a memory error detector
==23015== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23015== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23015== Command: ./impl/assignment_3Vars_test74/assignment_3Vars_test74.out
==23015== Parent PID: 12124
==23015== 
==23015== 
==23015== HEAP SUMMARY:
==23015==     in use at exit: 0 bytes in 0 blocks
==23015==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23015== 
==23015== All heap blocks were freed -- no leaks are possible
==23015== 
==23015== For counts of detected and suppressed errors, rerun with: -v
==23015== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test75 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test75/assignment_3Vars_test75.c)
The Valgrind memory detector as below:
==23030== Memcheck, a memory error detector
==23030== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23030== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23030== Command: ./impl/assignment_3Vars_test75/assignment_3Vars_test75.out
==23030== Parent PID: 12124
==23030== 
==23030== 
==23030== HEAP SUMMARY:
==23030==     in use at exit: 0 bytes in 0 blocks
==23030==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23030== 
==23030== All heap blocks were freed -- no leaks are possible
==23030== 
==23030== For counts of detected and suppressed errors, rerun with: -v
==23030== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test76 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test76/assignment_3Vars_test76.c)
The Valgrind memory detector as below:
==23045== Memcheck, a memory error detector
==23045== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23045== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23045== Command: ./impl/assignment_3Vars_test76/assignment_3Vars_test76.out
==23045== Parent PID: 12124
==23045== 
==23045== 
==23045== HEAP SUMMARY:
==23045==     in use at exit: 0 bytes in 0 blocks
==23045==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23045== 
==23045== All heap blocks were freed -- no leaks are possible
==23045== 
==23045== For counts of detected and suppressed errors, rerun with: -v
==23045== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test77 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test77/assignment_3Vars_test77.c)
The Valgrind memory detector as below:
==23061== Memcheck, a memory error detector
==23061== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23061== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23061== Command: ./impl/assignment_3Vars_test77/assignment_3Vars_test77.out
==23061== Parent PID: 12124
==23061== 
==23061== 
==23061== HEAP SUMMARY:
==23061==     in use at exit: 0 bytes in 0 blocks
==23061==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23061== 
==23061== All heap blocks were freed -- no leaks are possible
==23061== 
==23061== For counts of detected and suppressed errors, rerun with: -v
==23061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test78 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test78/assignment_3Vars_test78.c)
The Valgrind memory detector as below:
==23076== Memcheck, a memory error detector
==23076== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23076== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23076== Command: ./impl/assignment_3Vars_test78/assignment_3Vars_test78.out
==23076== Parent PID: 12124
==23076== 
==23076== 
==23076== HEAP SUMMARY:
==23076==     in use at exit: 0 bytes in 0 blocks
==23076==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23076== 
==23076== All heap blocks were freed -- no leaks are possible
==23076== 
==23076== For counts of detected and suppressed errors, rerun with: -v
==23076== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test79 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test79/assignment_3Vars_test79.c)
The Valgrind memory detector as below:
==23091== Memcheck, a memory error detector
==23091== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23091== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23091== Command: ./impl/assignment_3Vars_test79/assignment_3Vars_test79.out
==23091== Parent PID: 12124
==23091== 
==23091== 
==23091== HEAP SUMMARY:
==23091==     in use at exit: 0 bytes in 0 blocks
==23091==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23091== 
==23091== All heap blocks were freed -- no leaks are possible
==23091== 
==23091== For counts of detected and suppressed errors, rerun with: -v
==23091== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test8 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test8/assignment_3Vars_test8.c)
The Valgrind memory detector as below:
==23106== Memcheck, a memory error detector
==23106== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23106== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23106== Command: ./impl/assignment_3Vars_test8/assignment_3Vars_test8.out
==23106== Parent PID: 12124
==23106== 
==23106== 
==23106== HEAP SUMMARY:
==23106==     in use at exit: 0 bytes in 0 blocks
==23106==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23106== 
==23106== All heap blocks were freed -- no leaks are possible
==23106== 
==23106== For counts of detected and suppressed errors, rerun with: -v
==23106== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test80 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test80/assignment_3Vars_test80.c)
The Valgrind memory detector as below:
==23123== Memcheck, a memory error detector
==23123== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23123== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23123== Command: ./impl/assignment_3Vars_test80/assignment_3Vars_test80.out
==23123== Parent PID: 12124
==23123== 
==23123== 
==23123== HEAP SUMMARY:
==23123==     in use at exit: 0 bytes in 0 blocks
==23123==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23123== 
==23123== All heap blocks were freed -- no leaks are possible
==23123== 
==23123== For counts of detected and suppressed errors, rerun with: -v
==23123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test81 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test81/assignment_3Vars_test81.c)
The Valgrind memory detector as below:
==23144== Memcheck, a memory error detector
==23144== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23144== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23144== Command: ./impl/assignment_3Vars_test81/assignment_3Vars_test81.out
==23144== Parent PID: 12124
==23144== 
==23144== 
==23144== HEAP SUMMARY:
==23144==     in use at exit: 0 bytes in 0 blocks
==23144==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23144== 
==23144== All heap blocks were freed -- no leaks are possible
==23144== 
==23144== For counts of detected and suppressed errors, rerun with: -v
==23144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test82 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test82/assignment_3Vars_test82.c)
The Valgrind memory detector as below:
==23159== Memcheck, a memory error detector
==23159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23159== Command: ./impl/assignment_3Vars_test82/assignment_3Vars_test82.out
==23159== Parent PID: 12124
==23159== 
==23159== 
==23159== HEAP SUMMARY:
==23159==     in use at exit: 0 bytes in 0 blocks
==23159==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23159== 
==23159== All heap blocks were freed -- no leaks are possible
==23159== 
==23159== For counts of detected and suppressed errors, rerun with: -v
==23159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test83 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test83/assignment_3Vars_test83.c)
The Valgrind memory detector as below:
==23174== Memcheck, a memory error detector
==23174== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23174== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23174== Command: ./impl/assignment_3Vars_test83/assignment_3Vars_test83.out
==23174== Parent PID: 12124
==23174== 
==23174== 
==23174== HEAP SUMMARY:
==23174==     in use at exit: 0 bytes in 0 blocks
==23174==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23174== 
==23174== All heap blocks were freed -- no leaks are possible
==23174== 
==23174== For counts of detected and suppressed errors, rerun with: -v
==23174== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test84 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test84/assignment_3Vars_test84.c)
The Valgrind memory detector as below:
==23190== Memcheck, a memory error detector
==23190== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23190== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23190== Command: ./impl/assignment_3Vars_test84/assignment_3Vars_test84.out
==23190== Parent PID: 12124
==23190== 
==23190== 
==23190== HEAP SUMMARY:
==23190==     in use at exit: 0 bytes in 0 blocks
==23190==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23190== 
==23190== All heap blocks were freed -- no leaks are possible
==23190== 
==23190== For counts of detected and suppressed errors, rerun with: -v
==23190== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test85 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test85/assignment_3Vars_test85.c)
The Valgrind memory detector as below:
==23205== Memcheck, a memory error detector
==23205== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23205== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23205== Command: ./impl/assignment_3Vars_test85/assignment_3Vars_test85.out
==23205== Parent PID: 12124
==23205== 
==23205== 
==23205== HEAP SUMMARY:
==23205==     in use at exit: 0 bytes in 0 blocks
==23205==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23205== 
==23205== All heap blocks were freed -- no leaks are possible
==23205== 
==23205== For counts of detected and suppressed errors, rerun with: -v
==23205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test86 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test86/assignment_3Vars_test86.c)
The Valgrind memory detector as below:
==23220== Memcheck, a memory error detector
==23220== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23220== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23220== Command: ./impl/assignment_3Vars_test86/assignment_3Vars_test86.out
==23220== Parent PID: 12124
==23220== 
==23220== 
==23220== HEAP SUMMARY:
==23220==     in use at exit: 0 bytes in 0 blocks
==23220==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23220== 
==23220== All heap blocks were freed -- no leaks are possible
==23220== 
==23220== For counts of detected and suppressed errors, rerun with: -v
==23220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test87 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test87/assignment_3Vars_test87.c)
The Valgrind memory detector as below:
==23236== Memcheck, a memory error detector
==23236== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23236== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23236== Command: ./impl/assignment_3Vars_test87/assignment_3Vars_test87.out
==23236== Parent PID: 12124
==23236== 
==23236== 
==23236== HEAP SUMMARY:
==23236==     in use at exit: 0 bytes in 0 blocks
==23236==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23236== 
==23236== All heap blocks were freed -- no leaks are possible
==23236== 
==23236== For counts of detected and suppressed errors, rerun with: -v
==23236== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test88 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:84 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test88/assignment_3Vars_test88.c)
The Valgrind memory detector as below:
==23251== Memcheck, a memory error detector
==23251== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23251== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23251== Command: ./impl/assignment_3Vars_test88/assignment_3Vars_test88.out
==23251== Parent PID: 12124
==23251== 
==23251== 
==23251== HEAP SUMMARY:
==23251==     in use at exit: 0 bytes in 0 blocks
==23251==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23251== 
==23251== All heap blocks were freed -- no leaks are possible
==23251== 
==23251== For counts of detected and suppressed errors, rerun with: -v
==23251== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test89 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test89/assignment_3Vars_test89.c)
The Valgrind memory detector as below:
==23266== Memcheck, a memory error detector
==23266== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23266== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23266== Command: ./impl/assignment_3Vars_test89/assignment_3Vars_test89.out
==23266== Parent PID: 12124
==23266== 
==23266== 
==23266== HEAP SUMMARY:
==23266==     in use at exit: 0 bytes in 0 blocks
==23266==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23266== 
==23266== All heap blocks were freed -- no leaks are possible
==23266== 
==23266== For counts of detected and suppressed errors, rerun with: -v
==23266== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test9 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:69 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:74 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:89 FILE: impl/assignment_3Vars_test9/assignment_3Vars_test9.c)
The Valgrind memory detector as below:
==23282== Memcheck, a memory error detector
==23282== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23282== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23282== Command: ./impl/assignment_3Vars_test9/assignment_3Vars_test9.out
==23282== Parent PID: 12124
==23282== 
==23282== 
==23282== HEAP SUMMARY:
==23282==     in use at exit: 0 bytes in 0 blocks
==23282==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23282== 
==23282== All heap blocks were freed -- no leaks are possible
==23282== 
==23282== For counts of detected and suppressed errors, rerun with: -v
==23282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test90 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:74 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:79 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test90/assignment_3Vars_test90.c)
The Valgrind memory detector as below:
==23298== Memcheck, a memory error detector
==23298== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23298== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23298== Command: ./impl/assignment_3Vars_test90/assignment_3Vars_test90.out
==23298== Parent PID: 12124
==23298== 
==23298== 
==23298== HEAP SUMMARY:
==23298==     in use at exit: 0 bytes in 0 blocks
==23298==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23298== 
==23298== All heap blocks were freed -- no leaks are possible
==23298== 
==23298== For counts of detected and suppressed errors, rerun with: -v
==23298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test91 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test91/assignment_3Vars_test91.c)
The Valgrind memory detector as below:
==23313== Memcheck, a memory error detector
==23313== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23313== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23313== Command: ./impl/assignment_3Vars_test91/assignment_3Vars_test91.out
==23313== Parent PID: 12124
==23313== 
==23313== 
==23313== HEAP SUMMARY:
==23313==     in use at exit: 0 bytes in 0 blocks
==23313==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23313== 
==23313== All heap blocks were freed -- no leaks are possible
==23313== 
==23313== For counts of detected and suppressed errors, rerun with: -v
==23313== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test92 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test92/assignment_3Vars_test92.c)
The Valgrind memory detector as below:
==23328== Memcheck, a memory error detector
==23328== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23328== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23328== Command: ./impl/assignment_3Vars_test92/assignment_3Vars_test92.out
==23328== Parent PID: 12124
==23328== 
==23328== 
==23328== HEAP SUMMARY:
==23328==     in use at exit: 0 bytes in 0 blocks
==23328==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23328== 
==23328== All heap blocks were freed -- no leaks are possible
==23328== 
==23328== For counts of detected and suppressed errors, rerun with: -v
==23328== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test93 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:89 FILE: impl/assignment_3Vars_test93/assignment_3Vars_test93.c)
The Valgrind memory detector as below:
==23343== Memcheck, a memory error detector
==23343== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23343== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23343== Command: ./impl/assignment_3Vars_test93/assignment_3Vars_test93.out
==23343== Parent PID: 12124
==23343== 
==23343== 
==23343== HEAP SUMMARY:
==23343==     in use at exit: 0 bytes in 0 blocks
==23343==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23343== 
==23343== All heap blocks were freed -- no leaks are possible
==23343== 
==23343== For counts of detected and suppressed errors, rerun with: -v
==23343== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test94 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:79 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:84 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test94/assignment_3Vars_test94.c)
The Valgrind memory detector as below:
==23360== Memcheck, a memory error detector
==23360== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23360== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23360== Command: ./impl/assignment_3Vars_test94/assignment_3Vars_test94.out
==23360== Parent PID: 12124
==23360== 
==23360== 
==23360== HEAP SUMMARY:
==23360==     in use at exit: 0 bytes in 0 blocks
==23360==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23360== 
==23360== All heap blocks were freed -- no leaks are possible
==23360== 
==23360== For counts of detected and suppressed errors, rerun with: -v
==23360== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test95 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:89 FILE: impl/assignment_3Vars_test95/assignment_3Vars_test95.c)
The Valgrind memory detector as below:
==23375== Memcheck, a memory error detector
==23375== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23375== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23375== Command: ./impl/assignment_3Vars_test95/assignment_3Vars_test95.out
==23375== Parent PID: 12124
==23375== 
==23375== 
==23375== HEAP SUMMARY:
==23375==     in use at exit: 0 bytes in 0 blocks
==23375==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23375== 
==23375== All heap blocks were freed -- no leaks are possible
==23375== 
==23375== For counts of detected and suppressed errors, rerun with: -v
==23375== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test96 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:69 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:74 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:79 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test96/assignment_3Vars_test96.c)
The Valgrind memory detector as below:
==23390== Memcheck, a memory error detector
==23390== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23390== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23390== Command: ./impl/assignment_3Vars_test96/assignment_3Vars_test96.out
==23390== Parent PID: 12124
==23390== 
==23390== 
==23390== HEAP SUMMARY:
==23390==     in use at exit: 0 bytes in 0 blocks
==23390==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23390== 
==23390== All heap blocks were freed -- no leaks are possible
==23390== 
==23390== For counts of detected and suppressed errors, rerun with: -v
==23390== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test97 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:84 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test97/assignment_3Vars_test97.c)
The Valgrind memory detector as below:
==23405== Memcheck, a memory error detector
==23405== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23405== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23405== Command: ./impl/assignment_3Vars_test97/assignment_3Vars_test97.out
==23405== Parent PID: 12124
==23405== 
==23405== 
==23405== HEAP SUMMARY:
==23405==     in use at exit: 0 bytes in 0 blocks
==23405==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23405== 
==23405== All heap blocks were freed -- no leaks are possible
==23405== 
==23405== For counts of detected and suppressed errors, rerun with: -v
==23405== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test98 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:79 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:84 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:89 FILE: impl/assignment_3Vars_test98/assignment_3Vars_test98.c)
The Valgrind memory detector as below:
==23423== Memcheck, a memory error detector
==23423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23423== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23423== Command: ./impl/assignment_3Vars_test98/assignment_3Vars_test98.out
==23423== Parent PID: 12124
==23423== 
==23423== 
==23423== HEAP SUMMARY:
==23423==     in use at exit: 0 bytes in 0 blocks
==23423==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23423== 
==23423== All heap blocks were freed -- no leaks are possible
==23423== 
==23423== For counts of detected and suppressed errors, rerun with: -v
==23423== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



=== Test report for assignment_3Vars_test99 ===
The deallocation macros are as below:
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _6 ) (LINE:28 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and _6 ) (LINE:33 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _9 ) (LINE:41 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and _9 ) (LINE:46 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _NEW1DARRAY_DEALLOC macro on  ( _12 ) (LINE:54 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and _12 ) (LINE:59 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and b ) (LINE:64 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and b ) (LINE:69 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and a ) (LINE:74 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( c and a ) (LINE:79 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( b and c ) (LINE:84 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
	DEBUG: _TRANSFER_DEALLOC macro on  ( a and c ) (LINE:89 FILE: impl/assignment_3Vars_test99/assignment_3Vars_test99.c)
The Valgrind memory detector as below:
==23438== Memcheck, a memory error detector
==23438== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==23438== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==23438== Command: ./impl/assignment_3Vars_test99/assignment_3Vars_test99.out
==23438== Parent PID: 12124
==23438== 
==23438== 
==23438== HEAP SUMMARY:
==23438==     in use at exit: 0 bytes in 0 blocks
==23438==   total heap usage: 4 allocs, 4 frees, 8,312 bytes allocated
==23438== 
==23438== All heap blocks were freed -- no leaks are possible
==23438== 
==23438== For counts of detected and suppressed errors, rerun with: -v
==23438== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



