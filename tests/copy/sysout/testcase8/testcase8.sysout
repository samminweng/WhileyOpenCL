root->main
main.0 [const %5 = 0 : int]
main.1 [const %6 = 5 : int]
main.2 [arraygen %7 = [5; 6] : int[]]
main.3 [assign %1 = %7  : int[]]
main.4 [const %8 = 1 : int]
main.5 [const %9 = 5 : int]
main.6 [arraygen %10 = [8; 9] : int[]]
main.7 [assign %2 = %10  : int[]]
main.8 [assign %1 = %2  : int[]]
main.9 [assign %3 = %2  : int[]]
main.10 [assign %4 = %2  : int[]]
main.11 [const %11 = 2 : int]
main.12 [const %12 = 5 : int]
main.13 [arraygen %13 = [11; 12] : int[]]
main.14 [assign %2 = %13  : int[]]
main.15 [assert]
main.16 [assert]
main.17 [assert]
main.18 [assert]
main.19 [fieldload %26 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.20 [fieldload %27 = %26 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.21 [const %28 = [97,91,48,93,32,61,32] : int[]]
main.22 [indirectinvoke () = %27 (%28) : method(int[])->()]
main.23 [fieldload %29 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.24 [fieldload %30 = %29 println : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.25 [const %31 = 0 : int]
main.26 [indexof %32 = %1, %31 : int[]]
main.27 [indirectinvoke () = %30 (%32) : method(any)->()]
main.28 [fieldload %33 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.29 [fieldload %34 = %33 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.30 [const %35 = [98,91,48,93,32,61,32] : int[]]
main.31 [indirectinvoke () = %34 (%35) : method(int[])->()]
main.32 [fieldload %36 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.33 [fieldload %37 = %36 println : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.34 [const %38 = 0 : int]
main.35 [indexof %39 = %2, %38 : int[]]
main.36 [indirectinvoke () = %37 (%39) : method(any)->()]
main.37 [fieldload %40 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.38 [fieldload %41 = %40 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.39 [const %42 = [99,91,48,93,32,61,32] : int[]]
main.40 [indirectinvoke () = %41 (%42) : method(int[])->()]
main.41 [fieldload %43 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.42 [fieldload %44 = %43 println : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.43 [const %45 = 0 : int]
main.44 [indexof %46 = %3, %45 : int[]]
main.45 [indirectinvoke () = %44 (%46) : method(any)->()]
main.46 [fieldload %47 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.47 [fieldload %48 = %47 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.48 [const %49 = [100,91,48,93,32,61,32] : int[]]
main.49 [indirectinvoke () = %48 (%49) : method(int[])->()]
main.50 [fieldload %50 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.51 [fieldload %51 = %50 println : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.52 [const %52 = 0 : int]
main.53 [indexof %53 = %4, %52 : int[]]
main.54 [indirectinvoke () = %51 (%53) : method(any)->()]
main.55 [fieldload %54 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}]
main.56 [fieldload %55 = %54 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}]
main.57 [const %56 = [80,97,115,115,32,108,105,118,101,99,104,101,99,107,32,116,101,115,116,32,99,97,115,101] : int[]]
main.58 [indirectinvoke () = %55 (%56) : method(int[])->()]
main.59 [return]
//End of main function
[main.3 a = _7] //assign %1 = %7  : int[]
	 liveness: _7 = false
[main.7 b = _10] //assign %2 = %10  : int[]
	 liveness: _10 = false
[main.8 a = b] //assign %1 = %2  : int[]
	 liveness: b = true
[main.9 c = b] //assign %3 = %2  : int[]
	 liveness: b = true
[main.10 d = b] //assign %4 = %2  : int[]
	 liveness: b = false
[main.14 b = _13] //assign %2 = %13  : int[]
	 liveness: _13 = false

Copy elimination analysis completed. File: testcase8.wyil
