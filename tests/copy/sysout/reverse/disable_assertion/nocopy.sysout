root->reverse
root->main
###### Live variables for reverse function. ######
In:{ls}
entry [ENTRY] 
Out:{ls}

In:{ls}
code [BLOCK] 
-------------------------------
l.0:lengthof %5 = %0 : int[]
l.1:assign %2 = %5  : int
l.2:const %6 = 0 : int
l.3:lengthof %7 = %0 : int[]
l.4:arraygen %8 = [6; 7] : int[]
l.5:assign %3 = %8  : int[]
-------------------------------
Out:{ls, i, r}

In:{ls, i, r}
blklab0 [LOOP_HEADER] 
Out:{ls, i, r}

In:{ls, i, r}
blklab0 [LOOP_BODY] 
-------------------------------
l.0:invariant
l.1:const %12 = 0 : int
l.2:ifle %2, %12 goto blklab0 : int
l.3:lengthof %13 = %0 : int[]
l.4:sub %14 = %13, %2 : int
l.5:indexof %15 = %0, %14 : int[]
l.6:assign %4 = %15  : int
l.7:const %16 = 1 : int
l.8:sub %17 = %2, %16 : int
l.9:assign %2 = %17  : int
-------------------------------
Out:{ls, i, r}

In:{r}
blklab0 [LOOP_EXIT] 
Out:{r}

In:{ls, i, r}
Update18 [UPDATE] 
-------------------------------
l.0:update %3[%2] = %4 : int[] -> int[]
-------------------------------
Out:{ls, i, r}

In:{ls, i, r}
Update18 [BLOCK] 
Out:{ls, i, r}

In:{ls, i, r}
blklab1 [BLOCK] 
Out:{ls, i, r}

In:{r}
return_3 [RETURN] 
-------------------------------
l.0:return %3
-------------------------------
Out:{r}

In:{}
exit [EXIT] 
Out:{}

###### Live variables for main function. ######
In:{}
entry [ENTRY] 
Out:{}

In:{}
code [BLOCK] 
-------------------------------
l.0:const %5 = 0 : int
l.1:const %6 = 10 : int
l.2:arraygen %7 = [5; 6] : int[]
l.3:assign %1 = %7  : int[]
l.4:const %8 = 0 : int
l.5:assign %2 = %8  : int
-------------------------------
Out:{input, index}

In:{input, index}
blklab4 [LOOP_HEADER] 
Out:{input, index}

In:{input, index}
blklab4 [LOOP_BODY] 
-------------------------------
l.0:const %9 = 10 : int
l.1:ifge %2, %9 goto blklab4 : int
l.2:const %10 = 10 : int
l.3:sub %11 = %10, %2 : int
-------------------------------
Out:{input, index}

In:{input}
blklab4 [LOOP_EXIT] 
Out:{input}

In:{input, index}
Update12 [UPDATE] 
-------------------------------
l.0:update %1[%2] = %11 : int[] -> int[]
-------------------------------
Out:{input, index}

In:{input, index}
Update12 [BLOCK] 
-------------------------------
l.0:const %12 = 1 : int
l.1:add %13 = %2, %12 : int
l.2:assign %2 = %13  : int
-------------------------------
Out:{input, index}

In:{input, index}
blklab5 [BLOCK] 
Out:{input, index}

In:{input}
reverse18 [INVOKE] 
-------------------------------
l.0:invoke (%14) = (%1) reverse:reverse : function(int[])->(int[])
-------------------------------
Out:{_14}

In:{_14}
reverse18 [BLOCK] 
-------------------------------
l.0:assign %3 = %14  : int[]
l.1:assert
l.2:assign %4 = %3  : int[]
l.3:assert
-------------------------------
Out:{}

In:{}
exit [EXIT] 
Out:{}


Copy elimination analysis completed. File: reverse.wyil
