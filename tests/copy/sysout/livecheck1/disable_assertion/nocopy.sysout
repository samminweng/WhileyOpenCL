root->main
###### Live variables for main function. ######
In:{sys}
entry [ENTRY] 
Out:{sys}

In:{sys}
code [BLOCK] 
-------------------------------
l.0:const %3 = 0 : int
l.1:const %4 = 5 : int
l.2:arraygen %5 = [3; 4] : int[]
l.3:assign %1 = %5  : int[]
l.4:assign %2 = %1  : int[]
l.5:const %6 = 1 : int
l.6:const %7 = 0 : int
-------------------------------
Out:{sys, a, b}

In:{sys, a, b}
Update8 [UPDATE] 
-------------------------------
l.0:update %2[%7] = %6 : int[] -> int[]
-------------------------------
Out:{sys, a, b}

In:{sys, a, b}
Update8 [BLOCK] 
-------------------------------
l.0:assert
l.1:assert
l.2:fieldload %14 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}
l.3:fieldload %15 = %14 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}
l.4:const %16 = [97,91,48,93,32,61,32] : int[]
l.5:indirectinvoke () = %15 (%16) : method(int[])->()
l.6:fieldload %17 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}
l.7:fieldload %18 = %17 println : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}
l.8:const %19 = 0 : int
l.9:indexof %20 = %1, %19 : int[]
l.10:indirectinvoke () = %18 (%20) : method(any)->()
l.11:fieldload %21 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}
l.12:fieldload %22 = %21 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}
l.13:const %23 = [98,91,48,93,32,61,32] : int[]
l.14:indirectinvoke () = %22 (%23) : method(int[])->()
l.15:fieldload %24 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}
l.16:fieldload %25 = %24 println : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}
l.17:const %26 = 0 : int
l.18:indexof %27 = %2, %26 : int[]
l.19:indirectinvoke () = %25 (%27) : method(any)->()
l.20:fieldload %28 = %0 out : {int[][] args,{method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s} out}
l.21:fieldload %29 = %28 print_s : {method(any)->() print,method(int[])->() print_s,method(any)->() println,method(int[])->() println_s}
l.22:const %30 = [80,97,115,115,32,108,105,118,101,99,104,101,99,107,49,32,116,101,115,116,32,99,97,115,101] : int[]
l.23:indirectinvoke () = %29 (%30) : method(int[])->()
-------------------------------
Out:{}

In:{}
exit [EXIT] 
Out:{}


Copy elimination analysis completed. File: livecheck1.wyil
