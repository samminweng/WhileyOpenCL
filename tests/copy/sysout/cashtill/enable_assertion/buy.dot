digraph buy{
"entry [ENTRY]"[shape=box];
"code [BLOCK]"[shape=box];
"toString23 [INVOKE]"[shape=box];
"toString23 [BLOCK]"[shape=box];
"total25 [INVOKE]"[shape=box];
"total25 [BLOCK]"[shape=box];
"blklab36 [CONDITION]"[shape=diamond];
"blklab36 [IF]"[shape=box];
"blklab36 [ELSE]"[shape=box];
"blklab37 [BLOCK]"[shape=box];
"total33 [INVOKE]"[shape=box];
"total33 [BLOCK]"[shape=box];
"calculateChange35 [INVOKE]"[shape=box];
"calculateChange35 [BLOCK]"[shape=box];
"blklab38 [BLOCK]"[shape=box];
"blklab40 [BLOCK]"[shape=box];
"blklab39 [BLOCK]"[shape=box];
"toString52 [INVOKE]"[shape=box];
"toString52 [BLOCK]"[shape=box];
"add54 [INVOKE]"[shape=box];
"add54 [BLOCK]"[shape=box];
"subtract56 [INVOKE]"[shape=box];
"subtract56 [BLOCK]"[shape=box];
"toString64 [INVOKE]"[shape=box];
"toString64 [BLOCK]"[shape=box];
"return_1 [RETURN]"[shape=box];
"exit [EXIT]"[shape=box];
"entry [ENTRY]"->"code [BLOCK]";
"code [BLOCK]"->"toString23 [INVOKE]";
"toString23 [INVOKE]"->"toString23 [BLOCK]";
"toString23 [BLOCK]"->"total25 [INVOKE]";
"total25 [INVOKE]"->"total25 [BLOCK]";
"total25 [BLOCK]"->"blklab36 [CONDITION]";
"blklab36 [CONDITION]"->"blklab36 [IF]";
"blklab36 [CONDITION]"->"blklab36 [ELSE]";
"blklab36 [IF]"->"blklab37 [BLOCK]";
"blklab36 [ELSE]"->"total33 [INVOKE]";
"blklab37 [BLOCK]"->"return_1 [RETURN]";
"total33 [INVOKE]"->"total33 [BLOCK]";
"total33 [BLOCK]"->"calculateChange35 [INVOKE]";
"calculateChange35 [INVOKE]"->"calculateChange35 [BLOCK]";
"calculateChange35 [BLOCK]"->"blklab38 [BLOCK]";
"blklab38 [BLOCK]"->"toString52 [INVOKE]";
"blklab40 [BLOCK]"->"blklab39 [BLOCK]";
"blklab39 [BLOCK]"->"blklab37 [BLOCK]";
"toString52 [INVOKE]"->"toString52 [BLOCK]";
"toString52 [BLOCK]"->"add54 [INVOKE]";
"add54 [INVOKE]"->"add54 [BLOCK]";
"add54 [BLOCK]"->"subtract56 [INVOKE]";
"subtract56 [INVOKE]"->"subtract56 [BLOCK]";
"subtract56 [BLOCK]"->"toString64 [INVOKE]";
"toString64 [INVOKE]"->"toString64 [BLOCK]";
"toString64 [BLOCK]"->"blklab39 [BLOCK]";
"return_1 [RETURN]"->"exit [EXIT]";

}
