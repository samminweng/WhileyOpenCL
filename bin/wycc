#!/bin/bash
#!/bin/sh

# This file is part of the Whiley Development Kit (WDK).
#
# The Whiley Development Kit is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public 
# License as published by the Free Software Foundation; either 
# version 3 of the License, or (at your option) any later version.
#
# The Whiley Development Kit is distributed in the hope that it 
# will be useful, but WITHOUT ANY WARRANTY; without even the 
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public 
# License along with the Whiley Development Kit. If not, see 
# <http://www.gnu.org/licenses/>
#
# Copyright 2010, David James Pearce. 
# modified 2012,	Art Protin <protin2art@gmail.com>

################
# CONFIGURATION
################

DIR=`dirname "$0"`/..
MyName=${0##*/}
LIBDIR=$DIR/lib
LIBS="wyc wyil wybs wycs wyrl wycc"
INCDIR=$DIR/modules/wycc/include

. $DIR/bin/wy_common.bash


WYCC="java -server -Xmx128M -cp $WHILEY_CLASSPATH wycc.WyccMain -bp $WHILEY_BOOTPATH"
WYCC_OPTS=
WYCC_LIB=${LIBDIR}/wycc_lib.a
WYCC_GCC_OPTS="-I $INCDIR"
SYS_LIB=-lm

usage() {
    if [ -n "$1" ]
    then
	echo $@
	xsts=-1
    fi
    cat <<EOF
 $MyName \$options \$mainfile \$otherfiles
	where options are one or more of the following:
	-W	only compile whiley to generate C
	-B	skip the whiley compilation and build from the .c
	-C	Compile Whiley and compile c to .o file
	-S	Compile Whiley and compile c to .s file
	-D	Sprinkle the .c file with diagnostic comments (default)
	-E	Execute the program after compiling & building
	-m	use the Gnu Multiple Precsion library
	-g	generate debugging information (for gdb)
	-v	be even more verbose
	-x	use .c file line numbers instead of .whiley ones
	-i	use flags to generate IndirectInvoke instead of Invoke
	-o	use single object form of library (.o)
	-a	assume a .whiley extension of the filename
	-q	quiet == suppress as much stderr, stdout as possible
	-h	display this usage message

only the main file will be processed by the Whiley compiler
other files are assumed to be .c, .s, .o, or libraries
Any executable will be named with the basename of $mainfile
EOF
    exit ${xsts:0}
}

two=:
FileName=
Other=
Opts=
SaveOpt="$@"
ToO=:
ToB=:
ToX=false
#BuildOnly=false
ToS='-c'
Debug=false
Decho=:
Vecho=:
Necho=echo
Abbrev=
gmp=false
Sleep=:

while [[ $# -gt 0 ]]
do
    case "$1" in
    -B)		# skip the whiley compilation and build from the .c
	    #BuildOnly=:
	    WYCC=:
	    ;;
    -W)		# only do whiley compilation
	    ToO=false
	    ;;
    -C)		# Compile Whiley and compile c to .o file
	    ToB=false
	    ;;
    -S)		# Compile Whiley and compile c to .s file
	    ToB=false
	    ToS='-s'
	    ;;
    -D)		# Compile Whiley with gobs of diagnostic comments
	    Debug=:
	    ;;
    -h)		# Give the usage message
	    two="usage"
	    ;;
    -k)		# delay the exit to allow readers to read; not needed
	    Sleep="sleep 1"
	    ;;
    -q)		# quiet the whole process
	    Necho=:
	    ;;
    -g)		# we want debugging info
	    Necho=:
	    # WYCC_GCC_OPTS="-fbounds-checking $WYCC_GCC_OPTS"
	    WYCC_GCC_OPTS="-ggdb $WYCC_GCC_OPTS"
	    ;;
    -E)		# continue with the execution of the built
	    ToX=:
	    ;;
    -x)		# tell the compiler backend to not use source line numbers
	    WYCC_OPTS="${WYCC_OPTS} -no_numbers"
	    ;;
    -i)		# tell the compiler backend to use IndirectInvoke for Invoke
	    WYCC_OPTS="${WYCC_OPTS} -only_indirect_calls"
	    ;;
    -v)		# be more verbose
	    Vecho=echo
	    ;;
    -a)		# assume a .whiley extension if needed
	    Abbrev=:
	    ;;
    -m)		# provide support for unbounded integers & ratios
	    gmp=:
	    WYCC_OPTS="${WYCC_OPTS} -no_floats"
	    ;;
    -o)		# use archive version of library
	    WYCC_LIB=${LIBDIR}/wycc_lib.o
	    ;;
    -*)
	    #Opts="$Opts $1"
	    #echo "unknown option '$1'"
	    two="usage unknown option '$1' "
	    ;;
    *)
	    if [[ -z "$FileName" ]]
	    then
		FileName="$1"
	    else
		Other="$Other $1"
	    fi
    esac
    shift
done

if $Debug
then
    Decho=echo
fi

case ${FileName##*/} in
*.*)	;;
*)
	if [[ -n "$Abbrev" && -f "${FileName}.whiley" ]]
	then
	    FileName=${FileName}.whiley
	fi
	;;
esac
BaseName=${FileName%%.*}
CName=${BaseName}.c
$Decho "wjcc  filename is '$FileName', Opts is '$Opts', Other is '$Other'"
$Decho "Basename is $BaseName and CName is $CName"

$two

# if [ "$WYCC" = ':' ]
# then

# java -server -Xmx128M -cp "$WHILEY_CLASSPATH" wycc.WyccMain -bp "$WHILEY_BOOTPATH" "$FileName"
$Vecho $WYCC $WYCC_OPTS "$FileName"
$WYCC $WYCC_OPTS "$FileName"

xit=$?
if [[ $xit != 0 ]]
then
    echo "wycc compiler failed"
    exit $xit
fi

$Necho "wycc succeeded"
$ToO || exit 0

$Vecho gcc $WYCC_GCC_OPTS $ToS $CName 
gcc $WYCC_GCC_OPTS $ToS $CName 

$ToB || exit 0

if $gmp
then
    WYCC_LIB="${LIBDIR}/wycc_math_gmp.o $WYCC_LIB"
    SYS_LIB="${SYS_LIB} -lgmp"
fi
$Vecho gcc -o $BaseName $BaseName.o $WYCC_LIB $SYS_LIB
gcc -o $BaseName $BaseName.o $WYCC_LIB $SYS_LIB

$ToX || exit 0

./$BaseName

$Sleep
