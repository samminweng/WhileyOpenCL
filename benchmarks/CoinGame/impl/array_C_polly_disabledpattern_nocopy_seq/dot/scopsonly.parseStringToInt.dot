digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xd2f4b60 [shape=record,label="{entry}"];
	Node0xd2f4b60 -> Node0xd306ab0;
	Node0xd306ab0 [shape=record,label="{entry.split}"];
	Node0xd306ab0 -> Node0xd331220;
	Node0xd306ab0 -> Node0xd342030;
	Node0xd331220 [shape=record,label="{while.body.lr.ph}"];
	Node0xd331220 -> Node0xd10c450;
	Node0xd10c450 [shape=record,label="{while.body}"];
	Node0xd10c450 -> Node0xd10c450[constraint=false];
	Node0xd10c450 -> Node0xd305ec0;
	Node0xd305ec0 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xd305ec0 -> Node0xd342030;
	Node0xd342030 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xd2f79e0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd3312b0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xd2f94c0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xd10c450;
            }
            Node0xd306ab0;
            Node0xd331220;
            Node0xd305ec0;
          }
          Node0xd2f4b60;
          Node0xd342030;
        }
}
