digraph "Scop Graph for 'optimized_append' function" {
	label="Scop Graph for 'optimized_append' function";

	Node0xd3e7260 [shape=record,label="{entry}"];
	Node0xd3e7260 -> Node0xd3a5ce0;
	Node0xd3a5ce0 [shape=record,label="{entry.split}"];
	Node0xd3a5ce0 -> Node0xd3be350;
	Node0xd3a5ce0 -> Node0xd3be980;
	Node0xd3be350 [shape=record,label="{if.end6}"];
	Node0xd3be350 -> Node0xd3bb130;
	Node0xd3be350 -> Node0xd3c62a0;
	Node0xd3bb130 [shape=record,label="{for.cond.cleanup}"];
	Node0xd3c62a0 [shape=record,label="{for.body.lr.ph}"];
	Node0xd3c62a0 -> Node0xd3b9620;
	Node0xd3b9620 [shape=record,label="{for.body}"];
	Node0xd3b9620 -> Node0xd3b9620[constraint=false];
	Node0xd3b9620 -> Node0xd3db6b0;
	Node0xd3db6b0 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge}"];
	Node0xd3db6b0 -> Node0xd3bb130;
	Node0xd3be980 [shape=record,label="{while.cond.preheader}"];
	Node0xd3be980 -> Node0xd41e9e0;
	Node0xd41e9e0 [shape=record,label="{while.cond}"];
	Node0xd41e9e0 -> Node0xd41e9e0[constraint=false];
	Node0xd41e9e0 -> Node0xd3e32f0;
	Node0xd3e32f0 [shape=record,label="{while.end}"];
	Node0xd3e32f0 -> Node0xd3e7220;
	Node0xd3e32f0 -> Node0xd3be350;
	Node0xd3e7220 [shape=record,label="{if.then4}"];
	colorscheme = "paired12"
        subgraph cluster_0xd4189e0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd3d3de0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xd418a60 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xd3b9620;
            }
            Node0xd3be350;
            Node0xd3c62a0;
            Node0xd3db6b0;
          }
          subgraph cluster_0xd3d3e60 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            Node0xd41e9e0;
          }
          Node0xd3e7260;
          Node0xd3a5ce0;
          Node0xd3bb130;
          Node0xd3be980;
          Node0xd3e32f0;
          Node0xd3e7220;
        }
}
