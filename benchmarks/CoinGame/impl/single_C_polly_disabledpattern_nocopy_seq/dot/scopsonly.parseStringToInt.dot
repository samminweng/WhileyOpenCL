digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xc2823f0 [shape=record,label="{entry}"];
	Node0xc2823f0 -> Node0xc2cb950;
	Node0xc2cb950 [shape=record,label="{entry.split}"];
	Node0xc2cb950 -> Node0xc295360;
	Node0xc2cb950 -> Node0xc2e4e10;
	Node0xc295360 [shape=record,label="{while.body.lr.ph}"];
	Node0xc295360 -> Node0xc2a1080;
	Node0xc2a1080 [shape=record,label="{while.body}"];
	Node0xc2a1080 -> Node0xc2a1080[constraint=false];
	Node0xc2a1080 -> Node0xc2a0d30;
	Node0xc2a0d30 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xc2a0d30 -> Node0xc2e4e10;
	Node0xc2e4e10 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xc281be0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc287cf0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xc2a9550 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xc2a1080;
            }
            Node0xc2cb950;
            Node0xc295360;
            Node0xc2a0d30;
          }
          Node0xc2823f0;
          Node0xc2e4e10;
        }
}
