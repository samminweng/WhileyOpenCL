digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xca05de0 [shape=record,label="{entry}"];
	Node0xca05de0 -> Node0xca25080;
	Node0xca25080 [shape=record,label="{entry.split}"];
	Node0xca25080 -> Node0xca38520;
	Node0xca25080 -> Node0xca70310;
	Node0xca38520 [shape=record,label="{while.body.lr.ph}"];
	Node0xca38520 -> Node0xca65830;
	Node0xca65830 [shape=record,label="{while.body}"];
	Node0xca65830 -> Node0xca65830[constraint=false];
	Node0xca65830 -> Node0xca370f0;
	Node0xca370f0 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xca370f0 -> Node0xca70310;
	Node0xca70310 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xca72870 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xca6c9c0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xca48ac0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xca65830;
            }
            Node0xca25080;
            Node0xca38520;
            Node0xca370f0;
          }
          Node0xca05de0;
          Node0xca70310;
        }
}
