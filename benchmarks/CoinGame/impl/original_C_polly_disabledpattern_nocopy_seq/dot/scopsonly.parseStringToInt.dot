digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xbe54180 [shape=record,label="{entry}"];
	Node0xbe54180 -> Node0xbe43670;
	Node0xbe43670 [shape=record,label="{entry.split}"];
	Node0xbe43670 -> Node0xbe61d30;
	Node0xbe43670 -> Node0xbe62080;
	Node0xbe61d30 [shape=record,label="{while.body.lr.ph}"];
	Node0xbe61d30 -> Node0xbe55610;
	Node0xbe55610 [shape=record,label="{while.body}"];
	Node0xbe55610 -> Node0xbe55610[constraint=false];
	Node0xbe55610 -> Node0xbe618b0;
	Node0xbe618b0 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xbe618b0 -> Node0xbe62080;
	Node0xbe62080 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xbe94cb0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbe48420 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xbe529b0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xbe55610;
            }
            Node0xbe43670;
            Node0xbe61d30;
            Node0xbe618b0;
          }
          Node0xbe54180;
          Node0xbe62080;
        }
}
