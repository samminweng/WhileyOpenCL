digraph "Scop Graph for 'isArrayEqual_BYTE' function" {
	label="Scop Graph for 'isArrayEqual_BYTE' function";

	Node0xdc57240 [shape=record,label="{entry}"];
	Node0xdc57240 -> Node0xdc11830;
	Node0xdc11830 [shape=record,label="{entry.split}"];
	Node0xdc11830 -> Node0xdbf1340;
	Node0xdc11830 -> Node0xdbdb670;
	Node0xdbf1340 [shape=record,label="{for.cond.preheader}"];
	Node0xdbf1340 -> Node0xdc13250;
	Node0xdbf1340 -> Node0xdbfd790;
	Node0xdc13250 [shape=record,label="{cleanup}"];
	Node0xdbfd790 [shape=record,label="{for.body.lr.ph}"];
	Node0xdbfd790 -> Node0xdaeacb0;
	Node0xdaeacb0 [shape=record,label="{for.body}"];
	Node0xdaeacb0 -> Node0xdc1c720;
	Node0xdaeacb0 -> Node0xdad4d00;
	Node0xdc1c720 [shape=record,label="{for.cond}"];
	Node0xdc1c720 -> Node0xdaeacb0[constraint=false];
	Node0xdc1c720 -> Node0xdbd3440;
	Node0xdbd3440 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xdbd3440 -> Node0xdc13250;
	Node0xdad4d00 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xdad4d00 -> Node0xdc13250;
	Node0xdbdb670 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xdbf6da0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xdbd8c20 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xdc37fc0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xdaeacb0;
              Node0xdc1c720;
              Node0xdbd3440;
              Node0xdad4d00;
            }
            Node0xdbf1340;
            Node0xdbfd790;
          }
          Node0xdc57240;
          Node0xdc11830;
          Node0xdc13250;
          Node0xdbdb670;
        }
}
