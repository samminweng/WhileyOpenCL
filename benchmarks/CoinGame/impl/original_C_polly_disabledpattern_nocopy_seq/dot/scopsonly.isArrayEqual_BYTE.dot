digraph "Scop Graph for 'isArrayEqual_BYTE' function" {
	label="Scop Graph for 'isArrayEqual_BYTE' function";

	Node0xbea6980 [shape=record,label="{entry}"];
	Node0xbea6980 -> Node0xbe6fef0;
	Node0xbe6fef0 [shape=record,label="{entry.split}"];
	Node0xbe6fef0 -> Node0xbe36670;
	Node0xbe6fef0 -> Node0xbe53370;
	Node0xbe36670 [shape=record,label="{for.cond.preheader}"];
	Node0xbe36670 -> Node0xbe764e0;
	Node0xbe36670 -> Node0xbe65f30;
	Node0xbe764e0 [shape=record,label="{cleanup}"];
	Node0xbe65f30 [shape=record,label="{for.body.lr.ph}"];
	Node0xbe65f30 -> Node0xbe618b0;
	Node0xbe618b0 [shape=record,label="{for.body}"];
	Node0xbe618b0 -> Node0xbe960d0;
	Node0xbe618b0 -> Node0xbe32400;
	Node0xbe960d0 [shape=record,label="{for.cond}"];
	Node0xbe960d0 -> Node0xbe618b0[constraint=false];
	Node0xbe960d0 -> Node0xbe4d8f0;
	Node0xbe4d8f0 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xbe4d8f0 -> Node0xbe764e0;
	Node0xbe32400 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xbe32400 -> Node0xbe764e0;
	Node0xbe53370 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xbe33d80 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbc75530 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xbe34750 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xbe618b0;
              Node0xbe960d0;
              Node0xbe4d8f0;
              Node0xbe32400;
            }
            Node0xbe36670;
            Node0xbe65f30;
          }
          Node0xbea6980;
          Node0xbe6fef0;
          Node0xbe764e0;
          Node0xbe53370;
        }
}
