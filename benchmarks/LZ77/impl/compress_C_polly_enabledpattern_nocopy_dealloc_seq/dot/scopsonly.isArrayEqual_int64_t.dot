digraph "Scop Graph for 'isArrayEqual_int64_t' function" {
	label="Scop Graph for 'isArrayEqual_int64_t' function";

	Node0xc0973e0 [shape=record,label="{entry}"];
	Node0xc0973e0 -> Node0xc0bea60;
	Node0xc0bea60 [shape=record,label="{entry.split}"];
	Node0xc0bea60 -> Node0xc082330;
	Node0xc0bea60 -> Node0xc0bf660;
	Node0xc082330 [shape=record,label="{for.cond.preheader}"];
	Node0xc082330 -> Node0xc0737f0;
	Node0xc082330 -> Node0xc0b1e10;
	Node0xc0737f0 [shape=record,label="{cleanup}"];
	Node0xc0b1e10 [shape=record,label="{for.body.lr.ph}"];
	Node0xc0b1e10 -> Node0xc0b12f0;
	Node0xc0b12f0 [shape=record,label="{for.body}"];
	Node0xc0b12f0 -> Node0xc0809a0;
	Node0xc0b12f0 -> Node0xc0736b0;
	Node0xc0809a0 [shape=record,label="{for.cond}"];
	Node0xc0809a0 -> Node0xc0b12f0[constraint=false];
	Node0xc0809a0 -> Node0xc0a1cd0;
	Node0xc0a1cd0 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc0a1cd0 -> Node0xc0737f0;
	Node0xc0736b0 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc0736b0 -> Node0xc0737f0;
	Node0xc0bf660 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc0d28d0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc0c1400 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc09f370 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc0b12f0;
              Node0xc0809a0;
              Node0xc0a1cd0;
              Node0xc0736b0;
            }
            Node0xc082330;
            Node0xc0b1e10;
          }
          Node0xc0973e0;
          Node0xc0bea60;
          Node0xc0737f0;
          Node0xc0bf660;
        }
}
