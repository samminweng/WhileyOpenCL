digraph "Scop Graph for '_decompress_' function" {
	label="Scop Graph for '_decompress_' function";

	Node0xd0ff470 [shape=record,label="{entry}"];
	Node0xd0ff470 -> Node0xd12a720;
	Node0xd12a720 [shape=record,label="{entry.split}"];
	Node0xd12a720 -> Node0xd12a7a0;
	Node0xd12a720 -> Node0xd0c1fa0;
	Node0xd12a7a0 [shape=record,label="{if.end21.lr.ph.lr.ph}"];
	Node0xd12a7a0 -> Node0xd0c2040;
	Node0xd0c2040 [shape=record,label="{if.end21.lr.ph}"];
	Node0xd0c2040 -> Node0xd111520;
	Node0xd111520 [shape=record,label="{if.end21}"];
	Node0xd111520 -> Node0xd111580;
	Node0xd111520 -> Node0xd1115e0;
	Node0xd111580 [shape=record,label="{if.end32}"];
	Node0xd111580 -> Node0xd111600;
	Node0xd111580 -> Node0xd0c7490;
	Node0xd111600 [shape=record,label="{while.cond.backedge}"];
	Node0xd111600 -> Node0xd111520;
	Node0xd111600 -> Node0xd1105f0;
	Node0xd1105f0 [shape=record,label="{while.cond.if.end84_crit_edge}"];
	Node0xd1105f0 -> Node0xd110610;
	Node0xd110610 [shape=record,label="{if.end84}"];
	Node0xd110610 -> Node0xd0c74f0;
	Node0xd110610 -> Node0xd12a780;
	Node0xd0c74f0 [shape=record,label="{if.then103}"];
	Node0xd0c74f0 -> Node0xd12a780;
	Node0xd12a780 [shape=record,label="{if.end104}"];
	Node0xd12a780 -> Node0xd123dd0;
	Node0xd12a780 -> Node0xd123df0;
	Node0xd123dd0 [shape=record,label="{if.end131}"];
	Node0xd123df0 [shape=record,label="{if.then106}"];
	Node0xd123df0 -> Node0xd123dd0;
	Node0xd0c7490 [shape=record,label="{if.then40}"];
	Node0xd0c7490 -> Node0xd111600;
	Node0xd1115e0 [shape=record,label="{blklab11}"];
	Node0xd1115e0 -> Node0xd12ba60;
	Node0xd1115e0 -> Node0xd12bac0;
	Node0xd12ba60 [shape=record,label="{while.cond.loopexit}"];
	Node0xd12ba60 -> Node0xd0c2040;
	Node0xd12ba60 -> Node0xd0feb90;
	Node0xd0feb90 [shape=record,label="{while.cond.outer.while.cond.outer.if.end84_crit_edge_crit_edge}"];
	Node0xd0feb90 -> Node0xd0c1fa0;
	Node0xd0c1fa0 [shape=record,label="{while.cond.outer.if.end84_crit_edge}"];
	Node0xd0c1fa0 -> Node0xd110610;
	Node0xd12bac0 [shape=record,label="{if.end58.lr.ph}"];
	Node0xd12bac0 -> Node0xd0febb0;
	Node0xd0febb0 [shape=record,label="{if.end58}"];
	Node0xd0febb0 -> Node0xd100820;
	Node0xd0febb0 -> Node0xd100840;
	Node0xd100820 [shape=record,label="{if.end78}"];
	Node0xd100820 -> Node0xd0febb0[constraint=false];
	Node0xd100820 -> Node0xd100860;
	Node0xd100860 [shape=record,label="{while.cond49.while.cond.loopexit_crit_edge}"];
	Node0xd100860 -> Node0xd12ba60;
	Node0xd100840 [shape=record,label="{if.then77}"];
	Node0xd100840 -> Node0xd100820;
	colorscheme = "paired12"
        subgraph cluster_0xd127db0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd0ffd20 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: if.end21.lr.ph";
            style = solid;
            color = 6
            subgraph cluster_0xd0fe1e0 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              Node0xd111580;
              Node0xd0c7490;
            }
            subgraph cluster_0xd1280e0 {
              label = "Non affine loop bound '(-1 + (zext i8 %.lcssa267 to i64) + (-1 * %7) + ((1 + (-1 * (zext i8 %.lcssa267 to i64))<nsw> + %7) smax ((zext i8 %.lcssa to i64) + (-1 * (zext i8 %.lcssa267 to i64))<nsw> + %7)))' in loop: if.end58";
              style = solid;
              color = 5
              subgraph cluster_0xd128060 {
                label = "Base address not invariant in current region:  %list.1248 = phi %struct.MyArrayList* [ %list.0241.lcssa, %if.end58.lr.ph ], [ %call70, %if.end78 ]";
                style = solid;
                color = 7
                subgraph cluster_0xd0fe260 {
                  label = "Region can not profitably be optimized!";
                  style = solid;
                  color = 9
                  Node0xd0febb0;
                  Node0xd100840;
                }
                Node0xd100820;
              }
              Node0xd1115e0;
              Node0xd12bac0;
              Node0xd100860;
            }
            Node0xd12a720;
            Node0xd12a7a0;
            Node0xd0c2040;
            Node0xd111520;
            Node0xd111600;
            Node0xd1105f0;
            Node0xd12ba60;
            Node0xd0feb90;
            Node0xd0c1fa0;
          }
          subgraph cluster_0xd0ff870 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            Node0xd110610;
            Node0xd0c74f0;
          }
          subgraph cluster_0xd0ff7f0 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            Node0xd12a780;
            Node0xd123df0;
          }
          Node0xd0ff470;
          Node0xd123dd0;
        }
}
