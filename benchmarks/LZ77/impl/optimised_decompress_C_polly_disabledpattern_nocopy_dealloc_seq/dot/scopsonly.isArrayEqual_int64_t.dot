digraph "Scop Graph for 'isArrayEqual_int64_t' function" {
	label="Scop Graph for 'isArrayEqual_int64_t' function";

	Node0xc6a9940 [shape=record,label="{entry}"];
	Node0xc6a9940 -> Node0xc6bd660;
	Node0xc6bd660 [shape=record,label="{entry.split}"];
	Node0xc6bd660 -> Node0xc6ab260;
	Node0xc6bd660 -> Node0xc6e4430;
	Node0xc6ab260 [shape=record,label="{for.cond.preheader}"];
	Node0xc6ab260 -> Node0xc6a84e0;
	Node0xc6ab260 -> Node0xc6b3820;
	Node0xc6a84e0 [shape=record,label="{cleanup}"];
	Node0xc6b3820 [shape=record,label="{for.body.lr.ph}"];
	Node0xc6b3820 -> Node0xc698880;
	Node0xc698880 [shape=record,label="{for.body}"];
	Node0xc698880 -> Node0xc4e2460;
	Node0xc698880 -> Node0xc6bb250;
	Node0xc4e2460 [shape=record,label="{for.cond}"];
	Node0xc4e2460 -> Node0xc698880[constraint=false];
	Node0xc4e2460 -> Node0xc69ced0;
	Node0xc69ced0 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc69ced0 -> Node0xc6a84e0;
	Node0xc6bb250 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc6bb250 -> Node0xc6a84e0;
	Node0xc6e4430 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc69dca0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc6c5940 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc6b1a30 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc698880;
              Node0xc4e2460;
              Node0xc69ced0;
              Node0xc6bb250;
            }
            Node0xc6ab260;
            Node0xc6b3820;
          }
          Node0xc6a9940;
          Node0xc6bd660;
          Node0xc6a84e0;
          Node0xc6e4430;
        }
}
