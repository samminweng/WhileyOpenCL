digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xcfbd9b0 [shape=record,label="{entry}"];
	Node0xcfbd9b0 -> Node0xcfc10b0;
	Node0xcfc10b0 [shape=record,label="{entry.split}"];
	Node0xcfc10b0 -> Node0xce49da0;
	Node0xcfc10b0 -> Node0xcfa0800;
	Node0xce49da0 [shape=record,label="{while.body.lr.ph}"];
	Node0xce49da0 -> Node0xcf7a4e0;
	Node0xcf7a4e0 [shape=record,label="{while.body}"];
	Node0xcf7a4e0 -> Node0xcf7a4e0[constraint=false];
	Node0xcf7a4e0 -> Node0xcf9e3b0;
	Node0xcf9e3b0 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xcf9e3b0 -> Node0xcfa0800;
	Node0xcfa0800 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xcfc3e90 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xcf86600 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xcf8faf0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xcf7a4e0;
            }
            Node0xcfc10b0;
            Node0xce49da0;
            Node0xcf9e3b0;
          }
          Node0xcfbd9b0;
          Node0xcfa0800;
        }
}
