digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xbf3ea60 [shape=record,label="{entry}"];
	Node0xbf3ea60 -> Node0xbec2770;
	Node0xbec2770 [shape=record,label="{entry.split}"];
	Node0xbec2770 -> Node0xbf17960;
	Node0xbec2770 -> Node0xbf1e520;
	Node0xbf17960 [shape=record,label="{while.body.lr.ph}"];
	Node0xbf17960 -> Node0xbf0d040;
	Node0xbf0d040 [shape=record,label="{while.body}"];
	Node0xbf0d040 -> Node0xbf0d040[constraint=false];
	Node0xbf0d040 -> Node0xbf37950;
	Node0xbf37950 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xbf37950 -> Node0xbf1e520;
	Node0xbf1e520 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xbfd18f0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbf36860 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xbf26450 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xbf0d040;
            }
            Node0xbec2770;
            Node0xbf17960;
            Node0xbf37950;
          }
          Node0xbf3ea60;
          Node0xbf1e520;
        }
}
