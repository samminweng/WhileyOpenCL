digraph "Scop Graph for 'optimized_append' function" {
	label="Scop Graph for 'optimized_append' function";

	Node0xd0a58d0 [shape=record,label="{entry}"];
	Node0xd0a58d0 -> Node0xd180bf0;
	Node0xd180bf0 [shape=record,label="{entry.split}"];
	Node0xd180bf0 -> Node0xd0bc7d0;
	Node0xd180bf0 -> Node0xd0b3120;
	Node0xd0bc7d0 [shape=record,label="{if.end6}"];
	Node0xd0bc7d0 -> Node0xd0b0f40;
	Node0xd0bc7d0 -> Node0xd0c3c70;
	Node0xd0b0f40 [shape=record,label="{for.cond.cleanup}"];
	Node0xd0c3c70 [shape=record,label="{for.body.lr.ph}"];
	Node0xd0c3c70 -> Node0xd0b0d40;
	Node0xd0b0d40 [shape=record,label="{for.body}"];
	Node0xd0b0d40 -> Node0xd0b0d40[constraint=false];
	Node0xd0b0d40 -> Node0xd08b390;
	Node0xd08b390 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge}"];
	Node0xd08b390 -> Node0xd0b0f40;
	Node0xd0b3120 [shape=record,label="{while.cond.preheader}"];
	Node0xd0b3120 -> Node0xd0a6710;
	Node0xd0a6710 [shape=record,label="{while.cond}"];
	Node0xd0a6710 -> Node0xd0a6710[constraint=false];
	Node0xd0a6710 -> Node0xd087b90;
	Node0xd087b90 [shape=record,label="{while.end}"];
	Node0xd087b90 -> Node0xd0935e0;
	Node0xd087b90 -> Node0xd0bc7d0;
	Node0xd0935e0 [shape=record,label="{if.then4}"];
	colorscheme = "paired12"
        subgraph cluster_0xd0cbbc0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd0cbc40 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xd087ae0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xd0b0d40;
            }
            Node0xd0bc7d0;
            Node0xd0c3c70;
            Node0xd08b390;
          }
          subgraph cluster_0xd0a21e0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            Node0xd0a6710;
          }
          Node0xd0a58d0;
          Node0xd180bf0;
          Node0xd0b0f40;
          Node0xd0b3120;
          Node0xd087b90;
          Node0xd0935e0;
        }
}
