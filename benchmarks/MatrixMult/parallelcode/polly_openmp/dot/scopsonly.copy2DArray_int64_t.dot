digraph "Scop Graph for 'copy2DArray_int64_t' function" {
	label="Scop Graph for 'copy2DArray_int64_t' function";

	Node0xd0a2840 [shape=record,label="{entry}"];
	Node0xd0a2840 -> Node0xd07a360;
	Node0xd07a360 [shape=record,label="{entry.split}"];
	Node0xd07a360 -> Node0xd0bb800;
	Node0xd07a360 -> Node0xd085c80;
	Node0xd0bb800 [shape=record,label="{return}"];
	Node0xd085c80 [shape=record,label="{if.end}"];
	Node0xd085c80 -> Node0xd0a1ee0;
	Node0xd085c80 -> Node0xd079650;
	Node0xd0a1ee0 [shape=record,label="{return.loopexit}"];
	Node0xd0a1ee0 -> Node0xd0bb800;
	Node0xd079650 [shape=record,label="{for.body.lr.ph}"];
	Node0xd079650 -> Node0xd0ae640;
	Node0xd0ae640 [shape=record,label="{for.body}"];
	Node0xd0ae640 -> Node0xd0ae640[constraint=false];
	Node0xd0ae640 -> Node0xd09aff0;
	Node0xd09aff0 [shape=record,label="{for.cond.return.loopexit_crit_edge}"];
	Node0xd09aff0 -> Node0xd0a1ee0;
	colorscheme = "paired12"
        subgraph cluster_0xd0a50d0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd0a5d50 {
            label = "";
            style = solid;
            color = 6
            subgraph cluster_0xd0a5cd0 {
              label = "Call instruction:   %call = tail call i64** @create2DArray_int64_t_empty(i64 %n, i64 %m)";
              style = solid;
              color = 5
              subgraph cluster_0xd0a5150 {
                label = "Possible aliasing: \"call\", \"arr\", \" <unknown> \"";
                style = solid;
                color = 7
                Node0xd0ae640;
              }
              Node0xd085c80;
              Node0xd079650;
              Node0xd09aff0;
            }
            Node0xd07a360;
            Node0xd0a1ee0;
          }
          Node0xd0a2840;
          Node0xd0bb800;
        }
}
