digraph "Scop Graph for 'printf2DArray_int64_t' function" {
	label="Scop Graph for 'printf2DArray_int64_t' function";

	Node0xd17a2f0 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0xd17a2f0 -> Node0xd153ad0;
	Node0xd153ad0 [shape=record,label="{entry.split:                                      \l  %putchar = tail call i32 @putchar(i32 91)\l  %cmp36 = icmp eq i64 %input_size, 0\l  br i1 %cmp36, label %if.end, label %while.body.lr.ph\l}"];
	Node0xd153ad0 -> Node0xd1649e0;
	Node0xd153ad0 -> Node0xd164a40;
	Node0xd1649e0 [shape=record,label="{if.end:                                           \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]*\l... @str.21, i64 0, i64 0))\l  ret void\l}"];
	Node0xd164a40 [shape=record,label="{while.body.lr.ph:                                 \l  %cmp5.i = icmp ugt i64 %input_size_size, 1024\l  %sub.i = add i64 %input_size_size, -1\l  switch i64 %input_size_size, label %while.body.lr.ph.split.split [\l    i64 0, label %while.body.lr.ph.split.us\l    i64 1, label %while.body.lr.ph.split.split.us\l  ]\l}"];
	Node0xd164a40 -> Node0xd165050;
	Node0xd164a40 -> Node0xd164b50;
	Node0xd164a40 -> Node0xd164bb0;
	Node0xd165050 [shape=record,label="{while.body.lr.ph.split.split:                     \l  br label %while.body\l}"];
	Node0xd165050 -> Node0xd164ce0;
	Node0xd164ce0 [shape=record,label="{while.body:                                       \l  %i.037 = phi i64 [ 0, %while.body.lr.ph.split.split ], [ %inc,\l... %printf1DArray_int64_t.exit ]\l  %arrayidx = getelementptr inbounds i64*, i64** %input, i64 %i.037\l  %4 = load i64*, i64** %arrayidx, align 8, !tbaa !2\l  %putchar.i = tail call i32 @putchar(i32 91) #7\l  %5 = load i64, i64* %4, align 8, !tbaa !6\l  %call2.peel.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds\l... ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 %5) #7\l  br label %if.end.i\l}"];
	Node0xd164ce0 -> Node0xd164aa0;
	Node0xd164aa0 [shape=record,label="{if.end.i:                                         \l  %i.021.i = phi i64 [ 1, %while.body ], [ %inc.i, %if.end.i ]\l  %arrayidx.i = getelementptr inbounds i64, i64* %4, i64 %i.021.i\l  %6 = load i64, i64* %arrayidx.i, align 8, !tbaa !6\l  %call4.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 %6) #7\l  %inc.i = add nuw nsw i64 %i.021.i, 1\l  %cmp.i = icmp ult i64 %inc.i, %input_size_size\l  %cmp1.i = icmp ult i64 %inc.i, 1024\l  %7 = and i1 %cmp.i, %cmp1.i\l  br i1 %7, label %if.end.i, label %while.end.i, !llvm.loop !8\l}"];
	Node0xd164aa0 -> Node0xd164aa0[constraint=false];
	Node0xd164aa0 -> Node0xd164b00;
	Node0xd164b00 [shape=record,label="{while.end.i:                                      \l  br i1 %cmp5.i, label %if.then6.i, label %printf1DArray_int64_t.exit\l}"];
	Node0xd164b00 -> Node0xd164b20;
	Node0xd164b00 -> Node0xd164c90;
	Node0xd164b20 [shape=record,label="{if.then6.i:                                       \l  %arrayidx7.i = getelementptr inbounds i64, i64* %4, i64 %sub.i\l  %8 = load i64, i64* %arrayidx7.i, align 8, !tbaa !6\l  %call8.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x\l... i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 %8) #7\l  br label %printf1DArray_int64_t.exit\l}"];
	Node0xd164b20 -> Node0xd164c90;
	Node0xd164c90 [shape=record,label="{printf1DArray_int64_t.exit:                       \l  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x\l... i8]* @str, i64 0, i64 0)) #7\l  %inc = add nuw nsw i64 %i.037, 1\l  %cmp = icmp ult i64 %inc, %input_size\l  %cmp1 = icmp ult i64 %inc, 1024\l  %9 = and i1 %cmp, %cmp1\l  br i1 %9, label %while.body, label %while.end\l}"];
	Node0xd164c90 -> Node0xd164ce0[constraint=false];
	Node0xd164c90 -> Node0xd164ed0;
	Node0xd164ed0 [shape=record,label="{while.end:                                        \l  %cmp2 = icmp ugt i64 %input_size, 1024\l  br i1 %cmp2, label %if.then, label %if.end\l}"];
	Node0xd164ed0 -> Node0xd164cb0;
	Node0xd164ed0 -> Node0xd1649e0;
	Node0xd164cb0 [shape=record,label="{if.then:                                          \l  %puts14 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x\l... i8]* @str.22, i64 0, i64 0))\l  %sub = add i64 %input_size, -1\l  %arrayidx4 = getelementptr inbounds i64*, i64** %input, i64 %sub\l  %10 = load i64*, i64** %arrayidx4, align 8, !tbaa !2\l  %putchar.i15 = tail call i32 @putchar(i32 91) #7\l  %cmp19.i16 = icmp eq i64 %input_size_size, 0\l  br i1 %cmp19.i16, label %printf1DArray_int64_t.exit35, label %if.end.peel.i19\l}"];
	Node0xd164cb0 -> Node0xd164f70;
	Node0xd164cb0 -> Node0xd164fd0;
	Node0xd164f70 [shape=record,label="{printf1DArray_int64_t.exit35:                     \l  %puts.i34 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x\l... i8]* @str, i64 0, i64 0)) #7\l  br label %if.end\l}"];
	Node0xd164f70 -> Node0xd1649e0;
	Node0xd164fd0 [shape=record,label="{if.end.peel.i19:                                  \l  %11 = load i64, i64* %10, align 8, !tbaa !6\l  %call2.peel.i17 = tail call i32 (i8*, ...) @printf(i8* getelementptr\l... inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 %11) #7\l  %cmp.peel.i18 = icmp eq i64 %input_size_size, 1\l  br i1 %cmp.peel.i18, label %printf1DArray_int64_t.exit35, label\l... %while.body.peel.next.i20\l}"];
	Node0xd164fd0 -> Node0xd164f70;
	Node0xd164fd0 -> Node0xd164ff0;
	Node0xd164ff0 [shape=record,label="{while.body.peel.next.i20:                         \l  br label %if.end.i27\l}"];
	Node0xd164ff0 -> Node0xd167d60;
	Node0xd167d60 [shape=record,label="{if.end.i27:                                       \l  %i.021.i21 = phi i64 [ 1, %while.body.peel.next.i20 ], [ %inc.i24,\l... %if.end.i27 ]\l  %arrayidx.i22 = getelementptr inbounds i64, i64* %10, i64 %i.021.i21\l  %12 = load i64, i64* %arrayidx.i22, align 8, !tbaa !6\l  %call4.i23 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5\l... x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 %12) #7\l  %inc.i24 = add nuw nsw i64 %i.021.i21, 1\l  %cmp.i25 = icmp ult i64 %inc.i24, %input_size_size\l  %cmp1.i26 = icmp ult i64 %inc.i24, 1024\l  %13 = and i1 %cmp.i25, %cmp1.i26\l  br i1 %13, label %if.end.i27, label %while.end.i29, !llvm.loop !8\l}"];
	Node0xd167d60 -> Node0xd167d60[constraint=false];
	Node0xd167d60 -> Node0xd167cf0;
	Node0xd167cf0 [shape=record,label="{while.end.i29:                                    \l  %cmp5.i28 = icmp ugt i64 %input_size_size, 1024\l  br i1 %cmp5.i28, label %if.then6.i33, label %printf1DArray_int64_t.exit35\l}"];
	Node0xd167cf0 -> Node0xd164dc0;
	Node0xd167cf0 -> Node0xd164f70;
	Node0xd164dc0 [shape=record,label="{if.then6.i33:                                     \l  %sub.i30 = add i64 %input_size_size, -1\l  %arrayidx7.i31 = getelementptr inbounds i64, i64* %10, i64 %sub.i30\l  %14 = load i64, i64* %arrayidx7.i31, align 8, !tbaa !6\l  %call8.i32 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9\l... x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 %14) #7\l  br label %printf1DArray_int64_t.exit35\l}"];
	Node0xd164dc0 -> Node0xd164f70;
	Node0xd164b50 [shape=record,label="{while.body.lr.ph.split.us:                        \l  br label %while.body.us\l}"];
	Node0xd164b50 -> Node0xd167e40;
	Node0xd167e40 [shape=record,label="{while.body.us:                                    \l  %i.037.us = phi i64 [ 0, %while.body.lr.ph.split.us ], [ %inc.us,\l... %while.body.us ]\l  %putchar.i.us = tail call i32 @putchar(i32 91) #7\l  %puts.i.us = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x\l... i8]* @str, i64 0, i64 0)) #7\l  %inc.us = add nuw nsw i64 %i.037.us, 1\l  %cmp.us = icmp ult i64 %inc.us, %input_size\l  %cmp1.us = icmp ult i64 %inc.us, 1024\l  %0 = and i1 %cmp.us, %cmp1.us\l  br i1 %0, label %while.body.us, label %while.end\l}"];
	Node0xd167e40 -> Node0xd167e40[constraint=false];
	Node0xd167e40 -> Node0xd164ed0;
	Node0xd164bb0 [shape=record,label="{while.body.lr.ph.split.split.us:                  \l  br label %while.body.us38\l}"];
	Node0xd164bb0 -> Node0xd167ee0;
	Node0xd167ee0 [shape=record,label="{while.body.us38:                                  \l  %i.037.us39 = phi i64 [ 0, %while.body.lr.ph.split.split.us ], [ %inc.us58,\l... %while.body.us38 ]\l  %arrayidx.us40 = getelementptr inbounds i64*, i64** %input, i64 %i.037.us39\l  %1 = load i64*, i64** %arrayidx.us40, align 8, !tbaa !2\l  %putchar.i.us41 = tail call i32 @putchar(i32 91) #7\l  %2 = load i64, i64* %1, align 8, !tbaa !6\l  %call2.peel.i.us43 = tail call i32 (i8*, ...) @printf(i8* getelementptr\l... inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 %2) #7\l  %puts.i.us57 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2\l... x i8]* @str, i64 0, i64 0)) #7\l  %inc.us58 = add nuw nsw i64 %i.037.us39, 1\l  %cmp.us59 = icmp ult i64 %inc.us58, %input_size\l  %cmp1.us60 = icmp ult i64 %inc.us58, 1024\l  %3 = and i1 %cmp.us59, %cmp1.us60\l  br i1 %3, label %while.body.us38, label %while.end\l}"];
	Node0xd167ee0 -> Node0xd167ee0[constraint=false];
	Node0xd167ee0 -> Node0xd164ed0;
	colorscheme = "paired12"
        subgraph cluster_0xd17a190 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd1655c0 {
            label = "";
            style = solid;
            color = 6
            subgraph cluster_0xd165540 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0xd165140 {
                label = "";
                style = solid;
                color = 7
                subgraph cluster_0xd1650c0 {
                  label = "";
                  style = solid;
                  color = 9
                  Node0xd164aa0;
                }
                subgraph cluster_0xd17a210 {
                  label = "";
                  style = solid;
                  color = 9
                  Node0xd164b00;
                  Node0xd164b20;
                }
                Node0xd164ce0;
                Node0xd164c90;
              }
              subgraph cluster_0xd165440 {
                label = "";
                style = solid;
                color = 7
                Node0xd167e40;
              }
              subgraph cluster_0xd1654c0 {
                label = "";
                style = solid;
                color = 7
                Node0xd167ee0;
              }
              Node0xd164a40;
              Node0xd165050;
              Node0xd164b50;
              Node0xd164bb0;
            }
            subgraph cluster_0xd1653c0 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0xd165340 {
                label = "";
                style = solid;
                color = 7
                subgraph cluster_0xd1652c0 {
                  label = "";
                  style = solid;
                  color = 9
                  subgraph cluster_0xd165240 {
                    label = "";
                    style = solid;
                    color = 11
                    Node0xd167d60;
                  }
                  subgraph cluster_0xd1651c0 {
                    label = "";
                    style = solid;
                    color = 11
                    Node0xd167cf0;
                    Node0xd164dc0;
                  }
                  Node0xd164fd0;
                  Node0xd164ff0;
                }
                Node0xd164cb0;
              }
              Node0xd164ed0;
              Node0xd164f70;
            }
            Node0xd153ad0;
          }
          Node0xd17a2f0;
          Node0xd1649e0;
        }
}
