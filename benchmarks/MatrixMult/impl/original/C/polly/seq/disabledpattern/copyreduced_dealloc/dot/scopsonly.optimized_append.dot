digraph "Scop Graph for 'optimized_append' function" {
	label="Scop Graph for 'optimized_append' function";

	Node0xc0e9cf0 [shape=record,label="{entry}"];
	Node0xc0e9cf0 -> Node0xc051a10;
	Node0xc051a10 [shape=record,label="{entry.split}"];
	Node0xc051a10 -> Node0xc0be650;
	Node0xc051a10 -> Node0xc0e81a0;
	Node0xc0be650 [shape=record,label="{if.end6}"];
	Node0xc0be650 -> Node0xc12d660;
	Node0xc0be650 -> Node0xc0f7e70;
	Node0xc12d660 [shape=record,label="{for.cond.cleanup}"];
	Node0xc0f7e70 [shape=record,label="{for.body.lr.ph}"];
	Node0xc0f7e70 -> Node0xc102110;
	Node0xc102110 [shape=record,label="{for.body}"];
	Node0xc102110 -> Node0xc102110[constraint=false];
	Node0xc102110 -> Node0xc131a60;
	Node0xc131a60 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge}"];
	Node0xc131a60 -> Node0xc12d660;
	Node0xc0e81a0 [shape=record,label="{while.cond.preheader}"];
	Node0xc0e81a0 -> Node0xc0ea6e0;
	Node0xc0ea6e0 [shape=record,label="{while.cond}"];
	Node0xc0ea6e0 -> Node0xc0ea6e0[constraint=false];
	Node0xc0ea6e0 -> Node0xc130500;
	Node0xc130500 [shape=record,label="{while.end}"];
	Node0xc130500 -> Node0xc0cacd0;
	Node0xc130500 -> Node0xc0be650;
	Node0xc0cacd0 [shape=record,label="{if.then4}"];
	colorscheme = "paired12"
        subgraph cluster_0xc0be9c0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbfbf2c0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc0f8150 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc102110;
            }
            Node0xc0be650;
            Node0xc0f7e70;
            Node0xc131a60;
          }
          subgraph cluster_0xbfbf340 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            Node0xc0ea6e0;
          }
          Node0xc0e9cf0;
          Node0xc051a10;
          Node0xc12d660;
          Node0xc0e81a0;
          Node0xc130500;
          Node0xc0cacd0;
        }
}
