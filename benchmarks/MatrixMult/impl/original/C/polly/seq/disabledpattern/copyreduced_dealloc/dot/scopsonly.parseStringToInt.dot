digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xc0de7e0 [shape=record,label="{entry}"];
	Node0xc0de7e0 -> Node0xc0c5580;
	Node0xc0c5580 [shape=record,label="{entry.split}"];
	Node0xc0c5580 -> Node0xc13cba0;
	Node0xc0c5580 -> Node0xc13c3a0;
	Node0xc13cba0 [shape=record,label="{while.body.lr.ph}"];
	Node0xc13cba0 -> Node0xc13d950;
	Node0xc13d950 [shape=record,label="{while.body}"];
	Node0xc13d950 -> Node0xc13d950[constraint=false];
	Node0xc13d950 -> Node0xc131610;
	Node0xc131610 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xc131610 -> Node0xc13c3a0;
	Node0xc13c3a0 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xc0c4cb0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc0f9390 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xc0f7fb0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xc13d950;
            }
            Node0xc0c5580;
            Node0xc13cba0;
            Node0xc131610;
          }
          Node0xc0de7e0;
          Node0xc13c3a0;
        }
}
