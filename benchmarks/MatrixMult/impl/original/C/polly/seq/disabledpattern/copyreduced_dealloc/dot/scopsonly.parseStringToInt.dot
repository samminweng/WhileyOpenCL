digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xc639170 [shape=record,label="{entry}"];
	Node0xc639170 -> Node0xc5ee1c0;
	Node0xc5ee1c0 [shape=record,label="{entry.split}"];
	Node0xc5ee1c0 -> Node0xc612950;
	Node0xc5ee1c0 -> Node0xc5e43d0;
	Node0xc612950 [shape=record,label="{while.body.lr.ph}"];
	Node0xc612950 -> Node0xc5e9ea0;
	Node0xc5e9ea0 [shape=record,label="{while.body}"];
	Node0xc5e9ea0 -> Node0xc5e9ea0[constraint=false];
	Node0xc5e9ea0 -> Node0xc5d1530;
	Node0xc5d1530 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xc5d1530 -> Node0xc5e43d0;
	Node0xc5e43d0 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xc5c9c30 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc5ce1e0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xc5f3d80 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xc5e9ea0;
            }
            Node0xc5ee1c0;
            Node0xc612950;
            Node0xc5d1530;
          }
          Node0xc639170;
          Node0xc5e43d0;
        }
}
