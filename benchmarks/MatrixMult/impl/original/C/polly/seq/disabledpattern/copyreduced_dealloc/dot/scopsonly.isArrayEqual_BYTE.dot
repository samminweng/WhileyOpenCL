digraph "Scop Graph for 'isArrayEqual_BYTE' function" {
	label="Scop Graph for 'isArrayEqual_BYTE' function";

	Node0xc0d9a30 [shape=record,label="{entry}"];
	Node0xc0d9a30 -> Node0xc0e1150;
	Node0xc0e1150 [shape=record,label="{entry.split}"];
	Node0xc0e1150 -> Node0xc0ddab0;
	Node0xc0e1150 -> Node0xc123780;
	Node0xc0ddab0 [shape=record,label="{for.cond.preheader}"];
	Node0xc0ddab0 -> Node0xc120490;
	Node0xc0ddab0 -> Node0xc0f7b40;
	Node0xc120490 [shape=record,label="{cleanup}"];
	Node0xc0f7b40 [shape=record,label="{for.body.lr.ph}"];
	Node0xc0f7b40 -> Node0xc0c36a0;
	Node0xc0c36a0 [shape=record,label="{for.body}"];
	Node0xc0c36a0 -> Node0xc0bec90;
	Node0xc0c36a0 -> Node0xc0ca560;
	Node0xc0bec90 [shape=record,label="{for.cond}"];
	Node0xc0bec90 -> Node0xc0c36a0[constraint=false];
	Node0xc0bec90 -> Node0xc1d2c50;
	Node0xc1d2c50 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc1d2c50 -> Node0xc120490;
	Node0xc0ca560 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc0ca560 -> Node0xc120490;
	Node0xc123780 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc1309a0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc121d00 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc0f4f40 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc0c36a0;
              Node0xc0bec90;
              Node0xc1d2c50;
              Node0xc0ca560;
            }
            Node0xc0ddab0;
            Node0xc0f7b40;
          }
          Node0xc0d9a30;
          Node0xc0e1150;
          Node0xc120490;
          Node0xc123780;
        }
}
