digraph "Scop Graph for 'isArrayEqual_BYTE' function" {
	label="Scop Graph for 'isArrayEqual_BYTE' function";

	Node0xc5f3de0 [shape=record,label="{entry}"];
	Node0xc5f3de0 -> Node0xc62fbd0;
	Node0xc62fbd0 [shape=record,label="{entry.split}"];
	Node0xc62fbd0 -> Node0xc5db2d0;
	Node0xc62fbd0 -> Node0xc631ad0;
	Node0xc5db2d0 [shape=record,label="{for.cond.preheader}"];
	Node0xc5db2d0 -> Node0xc4024f0;
	Node0xc5db2d0 -> Node0xc612950;
	Node0xc4024f0 [shape=record,label="{cleanup}"];
	Node0xc612950 [shape=record,label="{for.body.lr.ph}"];
	Node0xc612950 -> Node0xc5dd4a0;
	Node0xc5dd4a0 [shape=record,label="{for.body}"];
	Node0xc5dd4a0 -> Node0xc5e58d0;
	Node0xc5dd4a0 -> Node0xc5d3f10;
	Node0xc5e58d0 [shape=record,label="{for.cond}"];
	Node0xc5e58d0 -> Node0xc5dd4a0[constraint=false];
	Node0xc5e58d0 -> Node0xc5d3600;
	Node0xc5d3600 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc5d3600 -> Node0xc4024f0;
	Node0xc5d3f10 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc5d3f10 -> Node0xc4024f0;
	Node0xc631ad0 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc5c69f0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc605860 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc60eed0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc5dd4a0;
              Node0xc5e58d0;
              Node0xc5d3600;
              Node0xc5d3f10;
            }
            Node0xc5db2d0;
            Node0xc612950;
          }
          Node0xc5f3de0;
          Node0xc62fbd0;
          Node0xc4024f0;
          Node0xc631ad0;
        }
}
