digraph "Scop Graph for 'isArrayEqual_BYTE' function" {
	label="Scop Graph for 'isArrayEqual_BYTE' function";

	Node0xc4d9550 [shape=record,label="{entry}"];
	Node0xc4d9550 -> Node0xc515200;
	Node0xc515200 [shape=record,label="{entry.split}"];
	Node0xc515200 -> Node0xc4fc650;
	Node0xc515200 -> Node0xc4f6ab0;
	Node0xc4fc650 [shape=record,label="{for.cond.preheader}"];
	Node0xc4fc650 -> Node0xc320d70;
	Node0xc4fc650 -> Node0xc352e30;
	Node0xc320d70 [shape=record,label="{cleanup}"];
	Node0xc352e30 [shape=record,label="{for.body.lr.ph}"];
	Node0xc352e30 -> Node0xc4d33f0;
	Node0xc4d33f0 [shape=record,label="{for.body}"];
	Node0xc4d33f0 -> Node0xc551920;
	Node0xc4d33f0 -> Node0xc4e1ce0;
	Node0xc551920 [shape=record,label="{for.cond}"];
	Node0xc551920 -> Node0xc4d33f0[constraint=false];
	Node0xc551920 -> Node0xc4e1bc0;
	Node0xc4e1bc0 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc4e1bc0 -> Node0xc320d70;
	Node0xc4e1ce0 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc4e1ce0 -> Node0xc320d70;
	Node0xc4f6ab0 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc4d3820 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc53b9f0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc4edae0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc4d33f0;
              Node0xc551920;
              Node0xc4e1bc0;
              Node0xc4e1ce0;
            }
            Node0xc4fc650;
            Node0xc352e30;
          }
          Node0xc4d9550;
          Node0xc515200;
          Node0xc320d70;
          Node0xc4f6ab0;
        }
}
