digraph "Scop Graph for 'isArrayEqual_int64_t' function" {
	label="Scop Graph for 'isArrayEqual_int64_t' function";

	Node0xc4d9250 [shape=record,label="{entry}"];
	Node0xc4d9250 -> Node0xc4e55d0;
	Node0xc4e55d0 [shape=record,label="{entry.split}"];
	Node0xc4e55d0 -> Node0xc4d2630;
	Node0xc4e55d0 -> Node0xc4fc410;
	Node0xc4d2630 [shape=record,label="{for.cond.preheader}"];
	Node0xc4d2630 -> Node0xc4edfe0;
	Node0xc4d2630 -> Node0xc4deca0;
	Node0xc4edfe0 [shape=record,label="{cleanup}"];
	Node0xc4deca0 [shape=record,label="{for.body.lr.ph}"];
	Node0xc4deca0 -> Node0xc4e1ce0;
	Node0xc4e1ce0 [shape=record,label="{for.body}"];
	Node0xc4e1ce0 -> Node0xc4f1d00;
	Node0xc4e1ce0 -> Node0xc3a19f0;
	Node0xc4f1d00 [shape=record,label="{for.cond}"];
	Node0xc4f1d00 -> Node0xc4e1ce0[constraint=false];
	Node0xc4f1d00 -> Node0xc51d920;
	Node0xc51d920 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc51d920 -> Node0xc4edfe0;
	Node0xc3a19f0 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc3a19f0 -> Node0xc4edfe0;
	Node0xc4fc410 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc533010 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc4e82f0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc4edae0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc4e1ce0;
              Node0xc4f1d00;
              Node0xc51d920;
              Node0xc3a19f0;
            }
            Node0xc4d2630;
            Node0xc4deca0;
          }
          Node0xc4d9250;
          Node0xc4e55d0;
          Node0xc4edfe0;
          Node0xc4fc410;
        }
}
