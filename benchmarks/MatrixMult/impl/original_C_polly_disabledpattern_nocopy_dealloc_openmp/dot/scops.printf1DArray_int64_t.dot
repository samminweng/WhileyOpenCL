digraph "Scop Graph for 'printf1DArray_int64_t' function" {
	label="Scop Graph for 'printf1DArray_int64_t' function";

	Node0xbfaa160 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0xbfaa160 -> Node0xbfb0b30;
	Node0xbfb0b30 [shape=record,label="{entry.split:                                      \l  %putchar = tail call i32 @putchar(i32 91)\l  %cmp19 = icmp eq i64 %input_size, 0\l  br i1 %cmp19, label %while.end, label %while.body.lr.ph\l}"];
	Node0xbfb0b30 -> Node0xbfbac20;
	Node0xbfb0b30 -> Node0xbfd2190;
	Node0xbfbac20 [shape=record,label="{while.end:                                        \l  %cmp5 = icmp ugt i64 %input_size, 100\l  br i1 %cmp5, label %if.then6, label %if.end9\l}"];
	Node0xbfbac20 -> Node0xbfb4cb0;
	Node0xbfbac20 -> Node0xc014db0;
	Node0xbfb4cb0 [shape=record,label="{if.then6:                                         \l  %sub = add i64 %input_size, -1\l  %arrayidx7 = getelementptr inbounds i64, i64* %input, i64 %sub\l  %2 = load i64, i64* %arrayidx7, align 8, !tbaa !1\l  %call8 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x\l... i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 %2)\l  br label %if.end9\l}"];
	Node0xbfb4cb0 -> Node0xc014db0;
	Node0xc014db0 [shape=record,label="{if.end9:                                          \l  %puts = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]*\l... @str, i64 0, i64 0))\l  ret void\l}"];
	Node0xbfd2190 [shape=record,label="{while.body.lr.ph:                                 \l  br label %while.body\l}"];
	Node0xbfd2190 -> Node0xbfddd30;
	Node0xbfddd30 [shape=record,label="{while.body:                                       \l  %i.021 = phi i64 [ 0, %while.body.lr.ph ], [ %inc, %if.end ]\l  %isFirst.020 = phi i32 [ 1, %while.body.lr.ph ], [ %isFirst.1, %if.end ]\l  %tobool = icmp eq i32 %isFirst.020, 0\l  %arrayidx = getelementptr inbounds i64, i64* %input, i64 %i.021\l  %0 = load i64, i64* %arrayidx, align 8, !tbaa !1\l  br i1 %tobool, label %if.else, label %if.then\l}"];
	Node0xbfddd30 -> Node0xbfc3da0;
	Node0xbfddd30 -> Node0xbfbb560;
	Node0xbfc3da0 [shape=record,label="{if.else:                                          \l  %call4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 %0)\l  br label %if.end\l}"];
	Node0xbfc3da0 -> Node0xc021170;
	Node0xc021170 [shape=record,label="{if.end:                                           \l  %isFirst.1 = phi i32 [ 0, %if.then ], [ %isFirst.020, %if.else ]\l  %inc = add nuw nsw i64 %i.021, 1\l  %cmp = icmp ult i64 %inc, %input_size\l  %cmp1 = icmp ult i64 %inc, 100\l  %1 = and i1 %cmp, %cmp1\l  br i1 %1, label %while.body, label %while.cond.while.end_crit_edge\l}"];
	Node0xc021170 -> Node0xbfddd30[constraint=false];
	Node0xc021170 -> Node0xbfb1b30;
	Node0xbfb1b30 [shape=record,label="{while.cond.while.end_crit_edge:                   \l  br label %while.end\l}"];
	Node0xbfb1b30 -> Node0xbfbac20;
	Node0xbfbb560 [shape=record,label="{if.then:                                          \l  %call2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 %0)\l  br label %if.end\l}"];
	Node0xbfbb560 -> Node0xc021170;
	colorscheme = "paired12"
        subgraph cluster_0xbff6000 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbffa290 {
            label = "Call instruction:   %putchar = tail call i32 @putchar(i32 91)";
            style = solid;
            color = 6
            subgraph cluster_0xbfdf010 {
              label = "Call instruction:   %call4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 %0)";
              style = solid;
              color = 5
              subgraph cluster_0xc011660 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0xbfddd30;
                Node0xbfc3da0;
                Node0xbfbb560;
              }
              Node0xc021170;
            }
            Node0xbfb0b30;
            Node0xbfd2190;
            Node0xbfb1b30;
          }
          subgraph cluster_0xc030fe0 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            Node0xbfbac20;
            Node0xbfb4cb0;
          }
          Node0xbfaa160;
          Node0xc014db0;
        }
}
