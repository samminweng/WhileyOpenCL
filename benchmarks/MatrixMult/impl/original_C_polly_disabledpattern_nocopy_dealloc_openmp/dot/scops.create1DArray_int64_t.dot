digraph "Scop Graph for 'create1DArray_int64_t' function" {
	label="Scop Graph for 'create1DArray_int64_t' function";

	Node0xbff5790 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0xbff5790 -> Node0xc0214f0;
	Node0xc0214f0 [shape=record,label="{entry.split:                                      \l  %mul = shl i64 %arr_size, 3\l  %call = tail call noalias i8* @malloc(i64 %mul) #6\l  %0 = bitcast i8* %call to i64*\l  %cmp = icmp eq i8* %call, null\l  br i1 %cmp, label %if.then, label %for.cond.preheader\l}"];
	Node0xc0214f0 -> Node0xbfe1830;
	Node0xc0214f0 -> Node0xbff2220;
	Node0xbfe1830 [shape=record,label="{if.then:                                          \l  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !1\l  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([65 x i8], [65 x i8]*\l... @.str.1, i64 0, i64 0), i64 64, i64 1, %struct._IO_FILE* %1) #7\l  tail call void @exit(i32 -2) #8\l  unreachable\l}"];
	Node0xbff2220 [shape=record,label="{for.cond.preheader:                               \l  %cmp210 = icmp eq i64 %arr_size, 0\l  br i1 %cmp210, label %for.cond.cleanup, label %for.body.lr.ph\l}"];
	Node0xbff2220 -> Node0xbfed2b0;
	Node0xbff2220 -> Node0xbfe1810;
	Node0xbfed2b0 [shape=record,label="{for.cond.cleanup:                                 \l  ret i64* %0\l}"];
	Node0xbfe1810 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body\l}"];
	Node0xbfe1810 -> Node0xc017990;
	Node0xc017990 [shape=record,label="{for.body:                                         \l  %i.011 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]\l  %arrayidx = getelementptr inbounds i64, i64* %0, i64 %i.011\l  store i64 %value, i64* %arrayidx, align 8, !tbaa !5\l  %inc = add nuw i64 %i.011, 1\l  %exitcond = icmp ne i64 %inc, %arr_size\l  br i1 %exitcond, label %for.body, label %for.cond.for.cond.cleanup_crit_edge\l}"];
	Node0xc017990 -> Node0xc017990[constraint=false];
	Node0xc017990 -> Node0xc0179b0;
	Node0xc0179b0 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge:              \l  br label %for.cond.cleanup\l}"];
	Node0xc0179b0 -> Node0xbfed2b0;
	colorscheme = "paired12"
        subgraph cluster_0xc011e50 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc013500 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            subgraph cluster_0xbff1ab0 {
              label = "";
              style = solid;
              color = 5
              Node0xc017990;
            }
            Node0xbff2220;
            Node0xbfe1810;
            Node0xc0179b0;
          }
          Node0xbff5790;
          Node0xc0214f0;
          Node0xbfe1830;
          Node0xbfed2b0;
        }
}
