digraph "Scop Graph for 'fromBytes' function" {
	label="Scop Graph for 'fromBytes' function";

	Node0xc02e800 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0xc02e800 -> Node0xbffa970;
	Node0xbffa970 [shape=record,label="{entry.split:                                      \l  %mul = shl i64 %size, 3\l  %call = tail call noalias i8* @malloc(i64 %mul) #6\l  %0 = bitcast i8* %call to i64*\l  %cmp = icmp eq i8* %call, null\l  br i1 %cmp, label %if.then, label %for.cond.preheader\l}"];
	Node0xbffa970 -> Node0xbfc3250;
	Node0xbffa970 -> Node0xbfd2230;
	Node0xbfc3250 [shape=record,label="{if.then:                                          \l  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !1\l  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([61 x i8], [61 x i8]*\l... @.str.21, i64 0, i64 0), i64 60, i64 1, %struct._IO_FILE* %1) #7\l  tail call void @exit(i32 -2) #8\l  unreachable\l}"];
	Node0xbfd2230 [shape=record,label="{for.cond.preheader:                               \l  %cmp212 = icmp eq i64 %size, 0\l  br i1 %cmp212, label %for.cond.cleanup, label %for.body.lr.ph\l}"];
	Node0xbfd2230 -> Node0xc021420;
	Node0xbfd2230 -> Node0xbfbbcd0;
	Node0xc021420 [shape=record,label="{for.cond.cleanup:                                 \l  ret i64* %0\l}"];
	Node0xbfbbcd0 [shape=record,label="{for.body.lr.ph:                                   \l  br label %for.body\l}"];
	Node0xbfbbcd0 -> Node0xbfea030;
	Node0xbfea030 [shape=record,label="{for.body:                                         \l  %i.013 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]\l  %arrayidx = getelementptr inbounds i8, i8* %input, i64 %i.013\l  %3 = load i8, i8* %arrayidx, align 1, !tbaa !5\l  %conv = zext i8 %3 to i64\l  %arrayidx3 = getelementptr inbounds i64, i64* %0, i64 %i.013\l  store i64 %conv, i64* %arrayidx3, align 8, !tbaa !6\l  %inc = add nuw i64 %i.013, 1\l  %exitcond = icmp ne i64 %inc, %size\l  br i1 %exitcond, label %for.body, label %for.cond.for.cond.cleanup_crit_edge\l}"];
	Node0xbfea030 -> Node0xbfea030[constraint=false];
	Node0xbfea030 -> Node0xc01db90;
	Node0xc01db90 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge:              \l  br label %for.cond.cleanup\l}"];
	Node0xc01db90 -> Node0xc021420;
	colorscheme = "paired12"
        subgraph cluster_0xc012b40 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbfe9fb0 {
            label = "Region can not profitably be optimized!";
            style = solid;
            color = 6
            subgraph cluster_0xbfe9f30 {
              label = "";
              style = solid;
              color = 5
              Node0xbfea030;
            }
            Node0xbfd2230;
            Node0xbfbbcd0;
            Node0xc01db90;
          }
          Node0xc02e800;
          Node0xbffa970;
          Node0xbfc3250;
          Node0xc021420;
        }
}
