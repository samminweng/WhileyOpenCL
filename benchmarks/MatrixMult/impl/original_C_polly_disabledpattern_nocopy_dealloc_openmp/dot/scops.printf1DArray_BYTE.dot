digraph "Scop Graph for 'printf1DArray_BYTE' function" {
	label="Scop Graph for 'printf1DArray_BYTE' function";

	Node0xbfb0b30 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0xbfb0b30 -> Node0xbfddd30;
	Node0xbfddd30 [shape=record,label="{entry.split:                                      \l  %cmp5 = icmp eq i64 %input_size, 0\l  br i1 %cmp5, label %while.end, label %while.body.lr.ph\l}"];
	Node0xbfddd30 -> Node0xbfbb560;
	Node0xbfddd30 -> Node0xc01db90;
	Node0xbfbb560 [shape=record,label="{while.end:                                        \l  %putchar = tail call i32 @putchar(i32 10)\l  ret void\l}"];
	Node0xc01db90 [shape=record,label="{while.body.lr.ph:                                 \l  br label %while.body\l}"];
	Node0xc01db90 -> Node0xbfe56b0;
	Node0xbfe56b0 [shape=record,label="{while.body:                                       \l  %i.06 = phi i64 [ 0, %while.body.lr.ph ], [ %inc, %while.body ]\l  %arrayidx = getelementptr inbounds i8, i8* %input, i64 %i.06\l  %0 = load i8, i8* %arrayidx, align 1, !tbaa !1\l  %conv = zext i8 %0 to i32\l  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x\l... i8], [7 x i8]* @.str.15, i64 0, i64 0), i32 %conv)\l  %inc = add nuw i64 %i.06, 1\l  %exitcond = icmp ne i64 %inc, %input_size\l  br i1 %exitcond, label %while.body, label %while.cond.while.end_crit_edge\l}"];
	Node0xbfe56b0 -> Node0xbfe56b0[constraint=false];
	Node0xbfe56b0 -> Node0xbff2290;
	Node0xbff2290 [shape=record,label="{while.cond.while.end_crit_edge:                   \l  br label %while.end\l}"];
	Node0xbff2290 -> Node0xbfbb560;
	colorscheme = "paired12"
        subgraph cluster_0xbffa290 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc011660 {
            label = "Call instruction:   %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i32 %conv)";
            style = solid;
            color = 6
            subgraph cluster_0xbfdf010 {
              label = "Call instruction:   %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i32 %conv)";
              style = solid;
              color = 5
              Node0xbfe56b0;
            }
            Node0xbfddd30;
            Node0xc01db90;
            Node0xbff2290;
          }
          Node0xbfb0b30;
          Node0xbfbb560;
        }
}
