digraph "Scop Graph for 'Array_Append' function" {
	label="Scop Graph for 'Array_Append' function";

	Node0xd5d36d0 [shape=record,label="{entry:\l  br label %entry.split\l}"];
	Node0xd5d36d0 -> Node0xd5c6f90;
	Node0xd5c6f90 [shape=record,label="{entry.split:                                      \l  %add = add nsw i64 %rhs_size, %lhs_size\l  %call = tail call i64* @create1DArray_int64_t(i64 0, i64 %add) #4\l  %cmp769 = icmp slt i64 %lhs_size, 1\l  br i1 %cmp769, label %while.cond11.preheader, label %if.end9.lr.ph\l}"];
	Node0xd5c6f90 -> Node0xd5c6e20;
	Node0xd5c6f90 -> Node0xd5d3830;
	Node0xd5c6e20 [shape=record,label="{while.cond11.preheader:                           \l  %i.0.lcssa = phi i64 [ %sub.lcssa,\l... %while.cond.while.cond11.preheader_crit_edge ], [ %lhs_size, %entry.split ]\l  %cmp1367 = icmp slt i64 %i.0.lcssa, %rhs_size\l  br i1 %cmp1367, label %if.end15.lr.ph, label %if.end25\l}"];
	Node0xd5c6e20 -> Node0xd5bcd70;
	Node0xd5c6e20 -> Node0xd5c7fb0;
	Node0xd5bcd70 [shape=record,label="{if.end15.lr.ph:                                   \l  br label %if.end15\l}"];
	Node0xd5bcd70 -> Node0xd5c8010;
	Node0xd5c8010 [shape=record,label="{if.end15:                                         \l  %i.168 = phi i64 [ %i.0.lcssa, %if.end15.lr.ph ], [ %add19, %if.end15 ]\l  %arrayidx16 = getelementptr inbounds i64, i64* %rhs, i64 %i.168\l  %1 = load i64, i64* %arrayidx16, align 8, !tbaa !1\l  %add17 = add nsw i64 %i.168, %lhs_size\l  %arrayidx18 = getelementptr inbounds i64, i64* %call, i64 %add17\l  store i64 %1, i64* %arrayidx18, align 8, !tbaa !1\l  %add19 = add nsw i64 %i.168, 1\l  %exitcond = icmp ne i64 %add19, %rhs_size\l  br i1 %exitcond, label %if.end15, label %while.cond11.if.end25_crit_edge\l}"];
	Node0xd5c8010 -> Node0xd5c8010[constraint=false];
	Node0xd5c8010 -> Node0xd5d3730;
	Node0xd5d3730 [shape=record,label="{while.cond11.if.end25_crit_edge:                  \l  br label %if.end25\l}"];
	Node0xd5d3730 -> Node0xd5c7fb0;
	Node0xd5c7fb0 [shape=record,label="{if.end25:                                         \l  store i64 %add, i64* %_size_call_by_ref, align 8, !tbaa !1\l  ret i64* %call\l}"];
	Node0xd5d3830 [shape=record,label="{if.end9.lr.ph:                                    \l  br label %if.end9\l}"];
	Node0xd5d3830 -> Node0xd5c8160;
	Node0xd5c8160 [shape=record,label="{if.end9:                                          \l  %i.070 = phi i64 [ %lhs_size, %if.end9.lr.ph ], [ %sub, %if.end9 ]\l  %sub = add nsw i64 %i.070, -1\l  %arrayidx = getelementptr inbounds i64, i64* %lhs, i64 %sub\l  %0 = load i64, i64* %arrayidx, align 8, !tbaa !1\l  %arrayidx10 = getelementptr inbounds i64, i64* %call, i64 %sub\l  store i64 %0, i64* %arrayidx10, align 8, !tbaa !1\l  %cmp7 = icmp slt i64 %i.070, 2\l  br i1 %cmp7, label %while.cond.while.cond11.preheader_crit_edge, label\l... %if.end9\l}"];
	Node0xd5c8160 -> Node0xd5c8180;
	Node0xd5c8160 -> Node0xd5c8160[constraint=false];
	Node0xd5c8180 [shape=record,label="{while.cond.while.cond11.preheader_crit_edge:      \l  %sub.lcssa = phi i64 [ %sub, %if.end9 ]\l  br label %while.cond11.preheader\l}"];
	Node0xd5c8180 -> Node0xd5c6e20;
	colorscheme = "paired12"
        subgraph cluster_0xd664e30 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xd5c02c0 {
            label = "Call instruction:   %call = tail call i64* @create1DArray_int64_t(i64 0, i64 %add) #4";
            style = solid;
            color = 6
            subgraph cluster_0xd66ae00 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              subgraph cluster_0xd5cd450 {
                label = "";
                style = solid;
                color = 7
                Node0xd5c8160;
              }
              Node0xd5c8180;
            }
            Node0xd5c6f90;
            Node0xd5d3830;
          }
          subgraph cluster_0xd5cd3d0 {
            label = "Non affine loop bound '(-1 + (-1 * %i.0.lcssa) + %rhs_size)' in loop: if.end15";
            style = solid;
            color = 6
            subgraph cluster_0xd5c9000 {
              label = "Region can not profitably be optimized!";
              style = solid;
              color = 5
              subgraph cluster_0xd5ca880 {
                label = "";
                style = solid;
                color = 7
                Node0xd5c8010;
              }
              Node0xd5d3730;
            }
            Node0xd5c6e20;
            Node0xd5bcd70;
          }
          Node0xd5d36d0;
          Node0xd5c7fb0;
        }
}
