digraph "Scop Graph for 'optimized_append' function" {
	label="Scop Graph for 'optimized_append' function";

	Node0xbe8b800 [shape=record,label="{entry}"];
	Node0xbe8b800 -> Node0xbea4c80;
	Node0xbea4c80 [shape=record,label="{entry.split}"];
	Node0xbea4c80 -> Node0xbe8d2c0;
	Node0xbea4c80 -> Node0xbeb9200;
	Node0xbe8d2c0 [shape=record,label="{if.end6}"];
	Node0xbe8d2c0 -> Node0xbe93fb0;
	Node0xbe8d2c0 -> Node0xbee1d20;
	Node0xbe93fb0 [shape=record,label="{for.cond.cleanup}"];
	Node0xbee1d20 [shape=record,label="{for.body.lr.ph}"];
	Node0xbee1d20 -> Node0xbea9c80;
	Node0xbea9c80 [shape=record,label="{for.body}"];
	Node0xbea9c80 -> Node0xbea9c80[constraint=false];
	Node0xbea9c80 -> Node0xbe9d210;
	Node0xbe9d210 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge}"];
	Node0xbe9d210 -> Node0xbe93fb0;
	Node0xbeb9200 [shape=record,label="{while.cond.preheader}"];
	Node0xbeb9200 -> Node0xbefa2a0;
	Node0xbefa2a0 [shape=record,label="{while.cond}"];
	Node0xbefa2a0 -> Node0xbefa2a0[constraint=false];
	Node0xbefa2a0 -> Node0xbe9f780;
	Node0xbe9f780 [shape=record,label="{while.end}"];
	Node0xbe9f780 -> Node0xbe835e0;
	Node0xbe9f780 -> Node0xbe8d2c0;
	Node0xbe835e0 [shape=record,label="{if.then4}"];
	colorscheme = "paired12"
        subgraph cluster_0xbee6a20 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbee6aa0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xbe95ce0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xbea9c80;
            }
            Node0xbe8d2c0;
            Node0xbee1d20;
            Node0xbe9d210;
          }
          subgraph cluster_0xbe9b2a0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            Node0xbefa2a0;
          }
          Node0xbe8b800;
          Node0xbea4c80;
          Node0xbe93fb0;
          Node0xbeb9200;
          Node0xbe9f780;
          Node0xbe835e0;
        }
}
