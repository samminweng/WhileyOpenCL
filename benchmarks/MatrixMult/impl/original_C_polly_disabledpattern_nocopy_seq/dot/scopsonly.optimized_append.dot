digraph "Scop Graph for 'optimized_append' function" {
	label="Scop Graph for 'optimized_append' function";

	Node0xc5b0e10 [shape=record,label="{entry}"];
	Node0xc5b0e10 -> Node0xc603210;
	Node0xc603210 [shape=record,label="{entry.split}"];
	Node0xc603210 -> Node0xc595480;
	Node0xc603210 -> Node0xc5f8ce0;
	Node0xc595480 [shape=record,label="{if.end6}"];
	Node0xc595480 -> Node0xc58b1a0;
	Node0xc595480 -> Node0xc6029b0;
	Node0xc58b1a0 [shape=record,label="{for.cond.cleanup}"];
	Node0xc6029b0 [shape=record,label="{for.body.lr.ph}"];
	Node0xc6029b0 -> Node0xc590a10;
	Node0xc590a10 [shape=record,label="{for.body}"];
	Node0xc590a10 -> Node0xc590a10[constraint=false];
	Node0xc590a10 -> Node0xc599f60;
	Node0xc599f60 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge}"];
	Node0xc599f60 -> Node0xc58b1a0;
	Node0xc5f8ce0 [shape=record,label="{while.cond.preheader}"];
	Node0xc5f8ce0 -> Node0xc5f2250;
	Node0xc5f2250 [shape=record,label="{while.cond}"];
	Node0xc5f2250 -> Node0xc5f2250[constraint=false];
	Node0xc5f2250 -> Node0xc58f520;
	Node0xc58f520 [shape=record,label="{while.end}"];
	Node0xc58f520 -> Node0xc5a87d0;
	Node0xc58f520 -> Node0xc595480;
	Node0xc5a87d0 [shape=record,label="{if.then4}"];
	colorscheme = "paired12"
        subgraph cluster_0xc58acf0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc58d100 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc5aff30 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc590a10;
            }
            Node0xc595480;
            Node0xc6029b0;
            Node0xc599f60;
          }
          subgraph cluster_0xc58d180 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            Node0xc5f2250;
          }
          Node0xc5b0e10;
          Node0xc603210;
          Node0xc58b1a0;
          Node0xc5f8ce0;
          Node0xc58f520;
          Node0xc5a87d0;
        }
}
