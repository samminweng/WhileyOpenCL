digraph "Scop Graph for 'optimized_append' function" {
	label="Scop Graph for 'optimized_append' function";

	Node0xc67b650 [shape=record,label="{entry}"];
	Node0xc67b650 -> Node0xc6911f0;
	Node0xc6911f0 [shape=record,label="{entry.split}"];
	Node0xc6911f0 -> Node0xc6cb400;
	Node0xc6911f0 -> Node0xc6684f0;
	Node0xc6cb400 [shape=record,label="{if.end6}"];
	Node0xc6cb400 -> Node0xc69a000;
	Node0xc6cb400 -> Node0xc4db5f0;
	Node0xc69a000 [shape=record,label="{for.cond.cleanup}"];
	Node0xc4db5f0 [shape=record,label="{for.body.lr.ph}"];
	Node0xc4db5f0 -> Node0xc685d80;
	Node0xc685d80 [shape=record,label="{for.body}"];
	Node0xc685d80 -> Node0xc685d80[constraint=false];
	Node0xc685d80 -> Node0xc6db0c0;
	Node0xc6db0c0 [shape=record,label="{for.cond.for.cond.cleanup_crit_edge}"];
	Node0xc6db0c0 -> Node0xc69a000;
	Node0xc6684f0 [shape=record,label="{while.cond.preheader}"];
	Node0xc6684f0 -> Node0xc66bb70;
	Node0xc66bb70 [shape=record,label="{while.cond}"];
	Node0xc66bb70 -> Node0xc66bb70[constraint=false];
	Node0xc66bb70 -> Node0xc660fb0;
	Node0xc660fb0 [shape=record,label="{while.end}"];
	Node0xc660fb0 -> Node0xc6961d0;
	Node0xc660fb0 -> Node0xc6cb400;
	Node0xc6961d0 [shape=record,label="{if.then4}"];
	colorscheme = "paired12"
        subgraph cluster_0xc687120 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc695e70 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc687480 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc685d80;
            }
            Node0xc6cb400;
            Node0xc4db5f0;
            Node0xc6db0c0;
          }
          subgraph cluster_0xc6c9a50 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.cond";
            style = solid;
            color = 6
            Node0xc66bb70;
          }
          Node0xc67b650;
          Node0xc6911f0;
          Node0xc69a000;
          Node0xc6684f0;
          Node0xc660fb0;
          Node0xc6961d0;
        }
}
