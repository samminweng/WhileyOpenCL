digraph "Scop Graph for 'isArrayEqual_BYTE' function" {
	label="Scop Graph for 'isArrayEqual_BYTE' function";

	Node0xc466920 [shape=record,label="{entry}"];
	Node0xc466920 -> Node0xc4b7170;
	Node0xc4b7170 [shape=record,label="{entry.split}"];
	Node0xc4b7170 -> Node0xc523280;
	Node0xc4b7170 -> Node0xc466d10;
	Node0xc523280 [shape=record,label="{for.cond.preheader}"];
	Node0xc523280 -> Node0xc4b67e0;
	Node0xc523280 -> Node0xc4b6f60;
	Node0xc4b67e0 [shape=record,label="{cleanup}"];
	Node0xc4b6f60 [shape=record,label="{for.body.lr.ph}"];
	Node0xc4b6f60 -> Node0xc4eaf20;
	Node0xc4eaf20 [shape=record,label="{for.body}"];
	Node0xc4eaf20 -> Node0xc4d88a0;
	Node0xc4eaf20 -> Node0xc4db710;
	Node0xc4d88a0 [shape=record,label="{for.cond}"];
	Node0xc4d88a0 -> Node0xc4eaf20[constraint=false];
	Node0xc4d88a0 -> Node0xc4d4c60;
	Node0xc4d4c60 [shape=record,label="{for.cond.cleanup_crit_edge}"];
	Node0xc4d4c60 -> Node0xc4b67e0;
	Node0xc4db710 [shape=record,label="{for.body.cleanup_crit_edge}"];
	Node0xc4db710 -> Node0xc4b67e0;
	Node0xc466d10 [shape=record,label="{return}"];
	colorscheme = "paired12"
        subgraph cluster_0xc4ca710 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc4d0f00 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
            style = solid;
            color = 6
            subgraph cluster_0xc2fc550 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: for.body";
              style = solid;
              color = 5
              Node0xc4eaf20;
              Node0xc4d88a0;
              Node0xc4d4c60;
              Node0xc4db710;
            }
            Node0xc523280;
            Node0xc4b6f60;
          }
          Node0xc466920;
          Node0xc4b7170;
          Node0xc4b67e0;
          Node0xc466d10;
        }
}
