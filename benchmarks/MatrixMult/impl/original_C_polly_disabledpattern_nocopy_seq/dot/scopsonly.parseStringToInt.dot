digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xc5b2180 [shape=record,label="{entry}"];
	Node0xc5b2180 -> Node0xc5ae3d0;
	Node0xc5ae3d0 [shape=record,label="{entry.split}"];
	Node0xc5ae3d0 -> Node0xc5c6580;
	Node0xc5ae3d0 -> Node0xc5c81a0;
	Node0xc5c6580 [shape=record,label="{while.body.lr.ph}"];
	Node0xc5c6580 -> Node0xc5beec0;
	Node0xc5beec0 [shape=record,label="{while.body}"];
	Node0xc5beec0 -> Node0xc5beec0[constraint=false];
	Node0xc5beec0 -> Node0xc5d1690;
	Node0xc5d1690 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xc5d1690 -> Node0xc5c81a0;
	Node0xc5c81a0 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xc5afc00 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc5cbdc0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xc5f8b40 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xc5beec0;
            }
            Node0xc5ae3d0;
            Node0xc5c6580;
            Node0xc5d1690;
          }
          Node0xc5b2180;
          Node0xc5c81a0;
        }
}
