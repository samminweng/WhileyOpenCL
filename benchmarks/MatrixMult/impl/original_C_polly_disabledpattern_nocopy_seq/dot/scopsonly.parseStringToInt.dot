digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xc4eb2a0 [shape=record,label="{entry}"];
	Node0xc4eb2a0 -> Node0xc4eaf20;
	Node0xc4eaf20 [shape=record,label="{entry.split}"];
	Node0xc4eaf20 -> Node0xc4eb8e0;
	Node0xc4eaf20 -> Node0xc4d88a0;
	Node0xc4eb8e0 [shape=record,label="{while.body.lr.ph}"];
	Node0xc4eb8e0 -> Node0xc523a30;
	Node0xc523a30 [shape=record,label="{while.body}"];
	Node0xc523a30 -> Node0xc523a30[constraint=false];
	Node0xc523a30 -> Node0xc52d850;
	Node0xc52d850 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xc52d850 -> Node0xc4d88a0;
	Node0xc4d88a0 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xc4d9070 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc4b2010 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xc52fad0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xc523a30;
            }
            Node0xc4eaf20;
            Node0xc4eb8e0;
            Node0xc52d850;
          }
          Node0xc4eb2a0;
          Node0xc4d88a0;
        }
}
