digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xbec6f80 [shape=record,label="{entry}"];
	Node0xbec6f80 -> Node0xbeb7c60;
	Node0xbeb7c60 [shape=record,label="{entry.split}"];
	Node0xbeb7c60 -> Node0xbe970e0;
	Node0xbeb7c60 -> Node0xbeb3240;
	Node0xbe970e0 [shape=record,label="{while.body.lr.ph}"];
	Node0xbe970e0 -> Node0xbea4b60;
	Node0xbea4b60 [shape=record,label="{while.body}"];
	Node0xbea4b60 -> Node0xbea4b60[constraint=false];
	Node0xbea4b60 -> Node0xbe9c500;
	Node0xbe9c500 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xbe9c500 -> Node0xbeb3240;
	Node0xbeb3240 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xbe9b740 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xbebbfb0 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xbe80260 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xbea4b60;
            }
            Node0xbeb7c60;
            Node0xbe970e0;
            Node0xbe9c500;
          }
          Node0xbec6f80;
          Node0xbeb3240;
        }
}
