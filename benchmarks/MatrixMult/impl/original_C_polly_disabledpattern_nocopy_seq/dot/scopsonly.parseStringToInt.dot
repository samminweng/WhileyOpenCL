digraph "Scop Graph for 'parseStringToInt' function" {
	label="Scop Graph for 'parseStringToInt' function";

	Node0xc65a7a0 [shape=record,label="{entry}"];
	Node0xc65a7a0 -> Node0xc65b780;
	Node0xc65b780 [shape=record,label="{entry.split}"];
	Node0xc65b780 -> Node0xc67a9a0;
	Node0xc65b780 -> Node0xc4a96e0;
	Node0xc67a9a0 [shape=record,label="{while.body.lr.ph}"];
	Node0xc67a9a0 -> Node0xc686a40;
	Node0xc686a40 [shape=record,label="{while.body}"];
	Node0xc686a40 -> Node0xc686a40[constraint=false];
	Node0xc686a40 -> Node0xc687120;
	Node0xc687120 [shape=record,label="{while.cond.while.end_crit_edge}"];
	Node0xc687120 -> Node0xc4a96e0;
	Node0xc4a96e0 [shape=record,label="{while.end}"];
	colorscheme = "paired12"
        subgraph cluster_0xc6c9940 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0xc696170 {
            label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
            style = solid;
            color = 6
            subgraph cluster_0xc68e8f0 {
              label = "Non affine loop bound '***COULDNOTCOMPUTE***' in loop: while.body";
              style = solid;
              color = 5
              Node0xc686a40;
            }
            Node0xc65b780;
            Node0xc67a9a0;
            Node0xc687120;
          }
          Node0xc65a7a0;
          Node0xc4a96e0;
        }
}
